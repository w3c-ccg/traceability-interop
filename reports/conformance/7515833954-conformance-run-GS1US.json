{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "110a4185-4fad-4c23-9ff5-b1e8fdda0d55",
        "name": "Clear Cache",
        "item": [
          {
            "id": "dec21156-9664-446b-b9a1-2c109152f038",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64083f88-f698-49b2-b022-9b98780d11bc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ceb02ee1-65bf-4f98-b741-94d1adfd313f"
                }
              }
            ]
          },
          {
            "id": "b899c9d8-da04-46d5-8a00-40f3cb7c7066",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7cee2ce7-813f-469c-ac9c-d3f2056b63ce",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4390efb1-db00-4030-941b-172b03a86421"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4cd9fd1b-f155-4d6f-acc9-b6a8c6ec1d7b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5b0c0fc1-ea07-474b-92d3-90af9581778d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "999461fb-166b-4ea1-b1b3-e8e6b0096b46",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49f3948b-463e-4363-9543-409e0110bdb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6faf1fea-b32a-4f78-8d4b-f5ad2ff1ec03"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b63d0a1-59e4-4412-a070-b6435003d454",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8bced5a5-589a-47d3-8931-02017056d0b8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "825bb9b7-dc4b-4889-81c2-f5d291ce08c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e85edd7-3a76-479c-ad93-3db1dbb9d6d9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a1560e7-b3d6-4dfa-bc8d-d066c1620c1c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3b140fce-9640-4306-bbbe-ead9c238170e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d14f6fcd-17d4-4c86-9b0c-c92946aefa06",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29b1464f-c9c9-43e6-8efa-202f541b51e6"
            }
          }
        ]
      },
      {
        "id": "c5f8fca2-0b1c-4d80-979d-db6180a4d650",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3f3a610d-f557-4782-a4f8-62858128b092",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f639fbbd-01a9-4edb-aff5-db2990830e8f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f7be07ca-194a-4199-9f1b-304670ea9640",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6ad7f6-25c7-428d-8e8b-db5ba2a6de73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d3c901f-4d88-49ba-85b0-ec6bc90c28fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952b3bf1-e72b-4c04-bd89-344192751587",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa355e36-e119-4fb6-bc5b-186768e56d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29ba1b3d-a324-4f2f-a86b-690c28f1966a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc2ad98-3fa3-4dec-8ac3-12084a6163b5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758397c1-f031-428a-b515-f563745572f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8f63b88-2524-40e2-b767-3e8ae3b2d6b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b5a47082-e3c3-4191-bec0-616cf7325410",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc208366-e4ef-4b6b-a9d4-d044aaadf3dd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5155df1-7df7-409e-a75f-1eb6fbe9baee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22fb91bd-5e1b-4c0c-a2b0-baf05e60d726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41caeb0-535e-44de-8fcc-dfb6092c208b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5516df82-e544-4e33-9047-153262b97065"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cf4513a3-1f86-4c95-8f72-bb00f89641a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eb28d6fa-fe2b-4bf5-b585-d00123d4a262",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df7e751e-3501-4a85-8416-b600f742b0cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b196a1a1-b036-4115-8269-468c1588f913"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4550ca25-970c-4ea7-bba6-2b9c8e2e6305",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bd1cf6f8-1866-4c06-9d0e-620c218805b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2ee1004-87f2-4640-afec-ef681aa905b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "649663c0-6a54-4179-9858-3b55a33a5397"
            }
          }
        ]
      },
      {
        "id": "e3eea5a9-8349-43da-892c-b80c421aeb7b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1758ff8f-a968-4f20-a7d2-8311f7b3df71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac68e756-3fbe-4b14-a4f2-a5698d6dc75e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9195da3d-110a-4b6f-9493-4f89a7ca741e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f1f11e-7b72-4edc-a12e-75420fdf7456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a616c0-f399-4e53-b5c0-25860cfb3e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e70e09a-9986-4e5b-b9cd-b4814e70a24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3320fa5f-1f47-43a9-b9ef-d475c9ccef67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457a0fd0-080a-4a5a-8574-490c8f91b2fb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c4e8f3-966f-498c-b20c-4d6dcefcfbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b2f930-7279-4df0-a0ad-aa991536fc7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b690b572-e6a3-4f32-845a-ea54d0567bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2946eedb-5a28-46f3-ae92-8ff88c6c3de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b43372f-8e36-4a1c-b39f-11d0f1106377",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2845978b-61e9-497f-bee3-5bf17fc6e4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5c93f9-e40e-429f-b105-ea629114fcb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8be57ae-1c13-4387-8101-17de7b14491b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37df0c68-e433-4020-ae13-b21f954c4a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39286e4-ba5a-43b1-b2ad-4c5d3c619d4a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57b6fe4-0b44-4e61-9d93-00ae71826f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8947c3e-5b13-44fb-aabc-86a17e928804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359d9464-460b-45a3-9d2e-7cf6c80a6e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5303f5c8-eafa-49d6-8e7a-26aa10b9e41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba3e602-25a5-4390-985d-975847ff6b84",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2924ad6-d804-4270-bb2f-e239b170f096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6661bc37-27f6-460d-bd38-96ca50cb6a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b532cb7-1195-4833-8c1e-3dfc857efcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c406fb1-1fd9-4875-940e-617131f47351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0996c7ed-df73-4376-8c36-5b79da76b17f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f03aba-3452-45d0-a1e6-3316ea46352b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffcd3cb-60ca-4f82-a2ce-148946f7010c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa53219d-ab94-487b-a3c7-9812e1dc9fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b73eb58a-be4b-4344-9b57-72f9ddeede9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d704b24a-f00b-481f-a361-b8e4bf275464",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4720fe2-316e-46f3-99e0-016a8792e3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446c8049-9c7c-4a95-8901-87bc29579784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31580d03-d245-42da-99f2-d0fafd19670e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "158f5967-6038-4022-ba76-a8baf4f64fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a697f0-a7e3-4931-8d71-23684a8dd677",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8681efae-9e61-4ba3-a667-7a735759d331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86982ae-e2df-4763-a78a-53a178ea3db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f376c23b-40d5-4b72-acc1-551fc96cc8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "253815ea-1ed9-4fbd-9688-afbdf2f01a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2fef84-878f-4feb-85ab-b9d3661f01b2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772a5f8b-d7f8-49c1-90cc-19dacfca65e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a8ffa8-ce40-4225-9669-92a290714664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59608bfb-23e8-4591-80c1-6f0f2b3c9c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b380b86-d8dd-478a-ad67-9ce02ae3321a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c287f6-df9c-45d0-a160-4fea098310f6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fa6997-6482-42f2-ac0c-62e42575954c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "016a813f-e473-4366-843f-b46664e43968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcefd7eb-8a1e-4315-96ed-0672c8b1b2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31bd77f7-2d07-444f-b775-651343a02133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372e3756-5847-40c0-bdc9-f77868b9ab32",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba25c53-9697-49b8-9aad-a770389eb37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4610f006-da28-49a6-98eb-b9ec84f3b812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b2bda1-99fc-48f4-ac1a-f8180e300e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24f4730b-dc40-4605-b514-d2f4eaccbe32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d2e317-9dda-40c5-aa9f-c29bac991090",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20135baf-d540-4e58-8d0a-5a79c77b5e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a81ca8-dce0-4dbe-bffd-52601c9c95a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76372636-a2f3-4439-83ed-eee726c07976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9fdfcf7-0123-40a1-886e-4ffc4229ec08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ed5753-0c60-49ff-bf23-a94f46b43bda",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0005c9f4-6e94-45f8-b6fb-902e207cb989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb41281f-cb37-4ef8-89f2-77062ad81ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea83751-20db-49e6-83d9-ab70574239a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3544bd4-a216-42e9-aa93-0d83ea90b04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2359d2b3-b1d5-447d-a8e7-4e232ab3f239",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5dcadd-0db5-4cfd-b350-fa5a79ce8a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b0a4dd-5a9c-4df6-8e6d-a8abe6231293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e5e601-921c-4526-a546-1444fca46629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53155f5c-db3f-4045-8841-0d0170b2047d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251d4ab5-1f78-4ca7-add5-bf486abe85b8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ae8149-0e35-4869-92cf-670c83d512c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79992223-f388-45f7-9a83-6a51fc2a2454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18b8d10-272d-4aee-904e-9689dfd07400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1344065b-975e-4787-8827-080195fef268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400a5005-3384-44de-89c3-4446cda0552d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a7b523-c5d8-45fe-b193-628493fd0b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece0cde8-200a-478e-b550-b43bf4af8105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbbd6f9-1050-4a84-b2c8-7d8b4d9557a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3c44226-109c-4dc1-8fd4-ebcebfc697e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a9d1c7-75ca-44d3-bda4-4682c24fa30f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26bb329-9947-4234-834a-a9e863fb036c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7227595e-30bd-4295-88fb-8f8d1e4883f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4de42ef-16be-48c5-9cad-85b9b0c3278e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37dfcad6-e2af-45f5-a092-0460cb36b602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d03e09-9c73-44e5-a0e3-dc682ee519bd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369e7425-5226-4d59-a7e8-145a60a0fa08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835b1930-03ec-427e-8779-20816a1d8db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f175ec95-f72b-44e8-9cc1-0ca42368c3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9369b66-1dfe-417a-849e-bb08708b88d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9682c4-7a48-4d1e-83bb-1301aebf7f13",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7903032a-9187-43fc-8e39-99bd1416b887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09225a98-f50c-44e0-9f62-11f6fae4e031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d95b365-03f0-40e5-9080-74944695e2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7bcd032-d2a1-450e-9881-b66b65906280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407321e2-0cd9-47cf-943b-4f142ad02018",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434c495c-93f2-4a0a-aa43-4be56d1bde10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1c3861-b4ca-48f0-a36c-026053dd94ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afa541d-1ecb-4e20-ba88-827ace8c5118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceae549a-c73a-48ad-9388-24b5dbb678bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad08e18d-740b-4701-947b-69db3dd36b3d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a733d55-f72a-4542-b373-7784bf7ad06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e83bff-059d-4ad4-8b34-4fede56d52dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5ec485-9bbc-41ea-a95f-ee4bf9c63436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6f1455-3ecf-4644-9d5a-13dd7b4feccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bf8365-2623-4c8a-b50f-2e24e48db019",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ebe4f5-6958-4ed5-98e9-698219f2fa2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "982fcba6-4a23-4281-8b37-727d95d1ca48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e5996f-92ce-48a2-a680-ebbbc119f0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af16b601-d2f9-4408-b832-74c1a1f8cf70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4238bb1d-5835-444c-a367-351f9f1c042e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c3a1e5-b5e9-42d9-8275-d58c8fc28752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3297aa83-2831-41a2-a55d-45b196be8173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9a1258-3f3d-4d02-8d1e-46f5a0d96f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "818614a1-faa3-4be9-a448-71dcd9763ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15172c8-001d-47f5-bedf-ff1fba282f0d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2134fd-0b10-4efb-8227-99a81738c09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f4fa63-fe1b-40d0-8b5d-c72107253d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c7c109-a45c-4903-bbca-40318c2fa329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6f071d-8106-4210-ada5-3f023984bee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ec8d1e-94e3-47ea-958c-5394e69070d4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88067ca-f30c-4752-9e66-1cb9f6c85141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beaa49ee-e4b6-4ebc-9e90-b04295bf844a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83f4414-4f32-49e2-9779-9303fb4ca129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e89e87a-d7ce-4711-be1f-054a7ecdeb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5625336b-265d-4379-9207-fb6877d31192",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b22373-4442-47fb-aa5d-39030ff65f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb00e88-9659-4394-8f56-1a69e2c539c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdccfb7d-129c-4440-96d9-16819c886f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f9dd24-9829-49ee-a8d1-f12f7dab36a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5972bedb-0828-4097-b7c4-c325a35682dc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73430817-17f7-4cd9-97b2-4ccc0eaa575a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0052619e-2ac9-4ba1-828c-e4ae4e3832a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fef300-b25e-4714-9639-84bf9c4113a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4e6225-d53e-4863-9714-4e7e8c944081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643a55ab-01af-4ec9-9b63-efff6e069cb2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a077fb3d-9fae-4769-9d01-b04bd7aea8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f068a8-dde4-4cd9-9ff8-b955e4b652be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baffe32f-3104-4392-80b2-e7cccb766231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38aee8c9-b83f-48b9-85c3-d191adcc7e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be13e4e0-33ee-4ddb-8758-7888a8122e10",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d92db8a-ae79-4dc4-ae65-e75f30663c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ff010e-d077-41a7-9788-ae14d9bd6b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e99013-3522-4e3c-9a33-c0e08da163f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c57b68-fc8c-41e2-aa1b-769f29d1e884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ddbda3-6b22-4694-aee3-b1eecf02e095",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a62935f-e172-408b-ae52-8f67ee229b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3532e1-0988-4d04-aeb8-4bc6a1a66cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a5d2d4-67e3-40f1-9986-809e49c579bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "68cfb339-0cf1-4cb5-8867-5d80fabb6040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95775816-4cdd-440d-886a-ab389b7d6420",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021e4ed6-cb30-4303-b277-2b635ce90178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c039a1-3365-4f1b-adda-bb195793a549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa897aac-03e2-4048-bbd8-a4f48e2de677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "68bc493e-9376-4066-b9e0-0fb749880495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39cc966-ee40-45a1-9561-a05a8697b903",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa04804c-36ca-409b-ba0b-44e96c9f1fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312877ef-95cd-4711-ba7f-afc75c39b691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2263f686-77d9-4d37-8265-ac91b576581f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37a58ee4-6f53-48cc-99d0-6e97a63c0abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f644c21d-1d3e-4342-bb38-e7efb428711e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8bb86d-9298-42ae-ba89-49c4f2befe4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a5347e-b1bd-4d26-b686-2c3c2657fded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13816b5a-7558-407f-9d8c-74b6a8cd9cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44c7820b-e869-434d-82b3-d5067a9d5c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee963a9-2430-44b5-aaef-32f294bb78b5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fa07a5-1305-47c5-968a-417520fdc087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93db2bc-b3e8-4ee3-b28b-64a5ad55754c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e344728b-c048-41a0-b9b3-dd7dba397d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe95310d-1697-4ee8-8592-f0ed8002bdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e6ecf2-07f7-46e2-9b6f-c7d93a5ece67",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a6924b-bf38-4b3e-beeb-d8fc77306c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bb6e49-19cc-47a1-bb4b-a8f0832c1947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1f15bf-1662-4851-ad7a-7c06cfeb3219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d3be9b-7ab1-4106-9c03-ec6bb0e3dfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d24255-ee75-49a8-975b-4dae5877e183",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5e0fc1-0d91-4c5f-bc6b-409a611b421b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65181f58-95d4-4489-a4fa-56cecb83b2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520dea4d-9dfc-4abe-817f-598d295d5a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87015d2a-cab6-4f03-9c7c-ce2d3ec98059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667564d8-0080-4004-9748-47ab093151c8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "406ba795-249c-498c-b252-e7f03b1c71b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcad50af-9d29-4652-8a83-90dee4b6f16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3d97db-b99a-46a9-8281-fdff85e1c7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "605b5dd8-75d6-4659-8178-0c4327a08e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e157bee-0a48-4671-b8d0-1fb2373484c6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d6a3e4-af03-468d-aaed-3133c272ecd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af96317-7ccc-4a9b-b05f-8b4fe92c3908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194971f9-86d9-488c-a91a-4a3d9e5c9e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "59430fcb-0004-4af4-aeb6-c378bb458c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec85d63-9552-4e46-a627-2d58af65f65d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c195fe1b-9cbb-4a97-a611-e8f762245b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10dfa2e-4195-4754-9937-7a7b0c86ee9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f898b615-2faf-4ee6-ad15-99e5b2df0a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e81a1bf-949a-46c5-9fc1-ee8b71306c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc3265c-c172-457e-b7b4-f5675dd7c4d3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e805b2f-8b6d-431e-b246-33bb89a1843a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488bb7a7-b8c3-493c-84ae-547b67ffde39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ffe64f-66f9-4359-97a3-3c9c672f170b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "26d99014-81a6-4099-8b79-ad7ac04d4bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9805e77-e968-4da9-8ef8-00f39c7fdb13",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1315e0-8903-4c74-97ee-45370b517042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3677b097-f0dc-4df0-9a31-a18a4aadce64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c315e325-c725-4728-8a5b-ae21e7c5bfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bcce24f-e4e0-46a1-b5cb-21901c8750d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1bcf80-7eb3-43a5-a2b5-55d48b6cfd77",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a88086-868f-40ab-b9e8-278c33887f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc751e9c-4280-4fed-94c5-696bdee9973f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f31c266-285f-4cff-bfd9-d591236986ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "da2adf5f-6b38-4805-a213-d8abef3ec784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c7bdff-a129-4571-ac0a-3a83d37a1f39",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff98ee3-8cbf-4133-80cf-93e08cd5f81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e4105a-6a7a-487b-b282-f0a3f992666e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340b7fef-444d-493a-9d29-65c02d29236a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b422bb-285c-4b78-981e-ab7b4468ff5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac6a00f-8fca-4c72-94a6-7bcfb7c9d4b9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30fd3ab-7c05-416a-b74b-59cedbaf6ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442798b1-9b38-44e3-85ff-4f1b2e853bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa62c15f-0627-40e0-b489-6b47f825e6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b55378-c632-4ddf-b994-10a682d41bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2b994c-e443-4ace-840e-6cbbfeaa6925",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028bf89e-6860-4917-a2d9-01bb7094691a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912a87fd-390c-427c-89bb-9e43b3e3c45a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6e6caf-ec0f-48a2-ad6f-7f8b8cdcb4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aac3c214-aa5b-4053-848a-942797bde56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16a9478-e50d-4207-b5b2-341fde7c316c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7f28a7-e923-4894-a652-b5847792ae4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc37b0a-f9e2-4b1f-8ae4-04f21bb215da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c37473-0363-4df2-82ec-4fa88c17c22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b899215b-0821-4eba-a228-f233377dbae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281d2337-ebc9-4ce0-8a02-af65e37bf04e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455aeca9-58dc-424d-8021-9389f6b72473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ac0ed7-ca10-420e-8be8-0dd6d48fb7cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23aecdd-5308-41d1-af44-7f5b23c92639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "edbd43b9-a3d0-4be1-9f84-d455ad971caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da89b82e-af09-4cf4-923e-c2114d0d7451",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71400449-5414-4d4e-bcf2-109ece98e43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f656f71d-b652-46e8-99c5-c9a1b07e516c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e239d4b-3c66-4bf8-9bc2-2004a041ca7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "438b5aa0-faa3-48c6-8fe7-d2982876cd78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cedcd54-7bb4-41ab-8de8-a3522f616842",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5edbe7-7e40-4ab1-bce2-6f2c07a0deba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e539587-3f0c-437a-af99-5d7017e7d79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d141b7-5aa3-4bc6-85c7-3c10904b3749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8226fad4-89a6-40c1-8f90-1ffb73329bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abea9fc-65c2-493e-a218-3ae823e217e6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec546bf-cf5a-4e87-8cdf-391af674b179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08591889-8b60-4b17-9f56-e782ff5633ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edede415-7425-448c-b6ab-4841caf15e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d82d023-db31-4e75-b12d-573264a257b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93453da-e944-4455-9cc1-1bb25aac940d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccc7194-b032-4b74-b4a0-a250d5dc5e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94dc3314-3286-4c4a-a225-12133d0b1ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0639b4cb-fffa-4332-8d70-bc36db8e94c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6726d868-e992-4fe9-a5e1-4f55fe3ceff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac7178f-69d0-480a-8c5e-897cc0d7d630",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb63935-19ca-4bac-8716-5bbd38d1c5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2bc18ee-74c8-4a21-b2c6-b690a717a2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a843f4be-8be1-4c8e-946b-0015b35eb2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd05a6a1-b8ca-4346-81c1-415b69f39ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca838b1-2e05-470a-9f4b-7a9166ac1019",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b10596-63dd-4fcb-b113-b6dfb971c5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5cb3d2-97c2-4107-8720-d02faea34172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33926c6c-343a-4680-831d-23f5c7a276a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb529da6-fec8-48a1-a1f7-26459b6a52dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072f6c3e-a810-498c-938d-d56cf47c68f0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9ce21e-1472-47b4-8d8f-418e08028211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e446fb92-0728-48e8-8b83-e53e1cbe62e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f769f2-3e30-4ce5-a3af-f71642967d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc873bb-3cde-4981-986e-609063add5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d21251c-0f3b-44b2-94b4-129557660dd2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab67b4ac-3c4b-4dd2-87a7-bc942b40f48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e14628-150b-4687-9bc8-2fa734912cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106e0f88-ff45-48c4-9bdb-f3538ba88325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "593a988d-ebbd-4859-bad6-9ed05de6d639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3323f3-6b5e-4eea-a5b3-65faa1c57852",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a7c990-d006-4473-8288-22ce7e27bb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860301cc-3746-4b96-9e03-00b77f6216cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c1fc35-0579-4017-9574-028a7c8a0d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f402fe42-4250-4a9b-b8dd-05f34447d0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab74b5a4-d492-4e47-a194-f4ccc4f5d7a6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917a757d-d0eb-47ec-b16d-8e45a15d9c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0258eac0-8974-4fb1-9947-ad48c68fb0ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a809a77-fd40-4231-8685-05c5d4a805eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3d0473-7bb9-44f5-b882-6ac34405d328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a098e93e-84d7-4646-a033-7ae283435df6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055a3fd0-c4bc-4af9-ad59-ec0f041f8d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7128f234-14ad-4a8d-ad79-f0a0bc13abac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411ebdf0-73b7-43a9-86f3-336d4aae6aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "75cfda72-8a0b-4cf6-8c90-fe3f23e8b639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc18ed8-befd-4cd8-9237-45a1fdbb26e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90930a2e-6a9e-46c4-8bb5-7b52b27f43f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95aa0c6-01d8-4c77-a92e-534a9d56eeff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24149d94-83aa-407f-8d5a-2324c10b7f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebdc8c03-9154-4e6e-b4f6-d64207d29ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74c69c0-acab-4424-8995-4abcdf54658b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e188e7-dbd2-4595-b819-dce6d4d1f385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6efc5c85-b24b-423c-819a-099e0f4aba1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30db12c7-8e6a-490e-b28d-186420b04745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "74526008-7d6a-488f-abb0-d5711a68457c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40224e3f-be03-4e4e-916a-a8c2630947a5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441e92f7-8c95-487f-a7e7-640463238d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a702ff-a92f-4d95-b683-45f7e9953e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36557a38-1615-48b6-914c-b462b5287bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "624ae5fa-2d39-4674-8b77-49badcc38bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862b4062-d851-4e22-a4e6-09c6fe69c808",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221778c4-8bbc-4065-b02b-62ff331e6772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ee67ec-80d9-41d1-bae8-8638839e53f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674a0ebb-74c2-4c80-9786-8dee01832bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0f8d51-9d0d-4fb9-8cbf-4ffe7f04e759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f151ff9-eee4-4aff-bffc-a4a4e39b63de",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a12441-3ae7-4dc5-881f-3a908b07d700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcafff43-2eef-479c-aaf7-eae0a9cc92ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1527c4c-7a64-4d4c-b532-c2b688bb5d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f654013-602d-4434-a073-1bd0c51b8ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1c3b43-2730-46c6-af60-104c5ae36781",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4638805d-62ac-4dbd-a1f8-c65b1578ced9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfed822c-d494-48a6-a3f5-03d98067a4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dada77-a6e2-4265-82f7-4c8ecfc804af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f29e369f-0008-4c82-8ae8-f9e00ac87386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d56ade-7f7f-4979-bb53-d90bd80b2804",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413c7991-91b8-454f-a4e4-b4a99a562b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ce7213-f368-423b-87cb-6d2cef9887fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c925b1-ee00-4968-b583-2a5f0bbb6cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e293b508-b55d-4d7c-9b27-14ec61a7385f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bb4d05-c559-47f4-ba65-b41d5458f0dd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15715bd-0fa0-4d6d-bcfc-0cc3d11a0cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2cf5d46-fd80-442b-a486-ba990c5fd421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5222d6ae-26b2-4bf1-bd46-5b00b11bd1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "acd7bb91-8780-4b61-87d3-558de04206a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665149ac-cad0-4a98-966a-b80bff257b70",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05257f65-cf4b-4cd3-8e01-37b97475732d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719b1667-e3e7-4ff0-a22a-adc86b72610f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa49b3e-b2a7-4e79-a54b-b9fa27f7ce4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59bd9467-7754-442a-a14e-6539ae4ad0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9ac8bb-7eb5-4378-8ab3-7ed54409e610",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12b333f-531b-4d83-a84c-e71b54da9688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6af05b-1ebb-4846-bfb1-2cc42436156b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e28f8bc-317a-467f-8a89-bdbde176a200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d22dedcd-9914-48d9-a9a8-a08876034e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b62fa80-307a-44ff-98d1-aea98cd1ba26",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da1b296-f38a-41f7-ad80-563075ffe79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a3bad8-aaa3-4d8e-bb1f-ef4d774db347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421b699c-e191-4241-86fc-4006c1b23b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e599624-0402-47b9-98fe-b3bd3ba339eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebbae50-31f3-4f62-9cd0-1ea112bce5f1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc89ea20-2079-4614-b2f2-4850437e206b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65d0308-56c2-43b9-9115-821723acb5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c149e40b-616b-4691-a390-7c52ace1013f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30738801-8e80-4160-8efb-a03db28dded9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d9e847-e387-4c08-abdf-809ec4772911",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd7f49b-2c76-4337-af30-c269a7235f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34496630-c1a2-4682-9aa8-5b706fbc8d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85b397a-f3d0-4a87-9758-28c282c14ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e31d381-3a01-438b-8cc1-0a7958b8e82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b45767-b52e-4c84-a51e-adb0851f3bf6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5aacb99-641d-417e-a4c9-c2bd62bdcd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6250bd5-4e5e-4105-9c06-95eb45018ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96db1455-0170-410a-85d5-4d583b02fc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8870b1b-d610-4f41-9ad5-ce2e581334f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504613d4-c812-47cf-a3c8-19255bbb9535",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff33023-189e-4b3d-a1af-c9bcd3c14121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d43083e-57a2-4bf3-a31f-7bb91c2ef04b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf877d0-5fbf-4d2d-a464-9d340dcbfa09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3008e2-8975-4aed-9dfc-dd9121db6250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b027859-eb8a-423d-8d03-88241921ed6f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4eecc24-77cd-4786-ad78-a01e73894b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a020db-5a95-43e8-9e36-cab7069158a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33012134-c31c-461e-8de7-8f88a08f09a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c751431a-3279-4f9e-a08c-c7a09c966d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3e6126-278e-4f15-8202-4f1152a8c0f6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e273b094-7813-4549-85f9-7dc01fe1a137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ed6a1c-b9b2-482c-bda8-ec6c4642d220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae9e333-fa20-4747-aa6b-5362dfb9f012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed33630-3ac7-4f9d-a913-a464241c645d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1751ee-bc16-41e4-8cc9-15924c475568",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92147f27-2898-4d8d-ab3a-c1c1bd552039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96386b3-3277-40a5-9c8b-c2f4e9841014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6791c4-a9e7-4441-b3b0-0ab3d4d0561e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddab34d0-f13b-4be8-8c1c-766390da9443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a190967a-7778-48c3-91a7-c08d16c20870",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59f6f96-f998-4ee9-95f6-b496fc1e7bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888d3e06-8cf9-4f3f-baf5-94f9ddd3c02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88214c8-7fcd-4452-b130-70ec122a3c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "998ac200-1b4e-463c-a102-b02f9c75b427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9f6307-5fd5-4559-ae76-98d0ca4f5af3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e9e440-726e-4e0b-9995-494732f89fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5486c03-c398-4043-a97d-f7ce6b0e77c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b130192-ce1d-4a3a-9972-dfef07a89166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dae122e-dfe7-4aa2-b8dc-f64955b8b8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83597320-9122-447c-be88-a7a4ccaf5736",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc92836d-8958-450d-b304-dc4fc3e8d813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387bd88e-d380-43ce-a7c7-40452f67f97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28034e8-9329-47a2-b4e9-dec0fe087dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c97b4c0-5d50-4f3f-9966-468c8305d762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49002a5-67d1-4a54-9ba2-731518f63b6d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224e93cd-b0ea-4e72-bee9-e5076cf8104a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d9f710-841d-4102-9649-d26b74163274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b3e08f-837b-49dd-87cd-d561856158f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2df4bcd4-d0c7-4c97-9416-d7f8ff3b2bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9a5554-0b9e-4753-8ede-b779e078b662",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7384743a-1cc4-4f1f-9abe-de734c5a1c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb1872f-2478-40f0-ae60-e286ef2ffed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0693c2fc-718a-46e6-a83c-da618471bc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4415efaa-161c-4db4-a33b-6797813c65b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d13ac93-12c4-4078-91f6-eeb6e71c323b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d68c31-43cd-4298-9725-851192351797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21adca06-e340-4c1d-9730-291c8d3429e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd52437-6160-445f-8c18-6ebe9843f624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54b8c3af-7a71-4592-8fb4-186d87e5b14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac0f1a5-6dc7-4ac0-8c99-522e69108145",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d58156b-28a1-493d-8966-e977a5fafa99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3abab36-d574-4fb3-bd67-ec9a1ff3e9b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd3b588-1229-4d8e-bdf4-4f8fc68ee320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "717c6352-303f-48b6-bb5a-3d1bdd6354ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821a7682-8f4e-4ed8-a156-c571a0679a14",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57358f88-aecb-4905-9f77-4f4a1e28cbf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b9d344-b0b3-4d87-8146-4d6cf17a441a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088a4de0-a09f-4090-9c33-6e36a5d2d4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50c38a1d-ba6d-4c7d-9419-1b955bb7d772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f050d1-13f0-41a9-8c6e-bc86611a00f0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07158d7-9d95-4a88-8005-1985b38bf888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bdc21dd-f1b1-4ea1-b466-028c7ec80a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccd9313-e303-4e39-9aec-b4200e13af61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5cad9e5c-602c-4d9e-b05a-864dad3e5a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f788f21-8da2-450f-94d9-2adac2a284d7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824571e1-8974-4fd3-ac5d-893725876b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec833cdb-69d2-4e7e-90fa-8fb86f0829f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3436653-5422-48ba-afc8-eed34d3473d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35d7d459-7330-44f1-8880-7fdf744ce9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf36fd53-c11c-4609-8b33-f9d7037d119f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd9d4ef-657d-4528-ad9c-8d9db32eb86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900ac840-5446-4797-9e0e-3a97a20d4cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281ddc09-4c07-4519-93ca-db647059062a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f51ece2-2515-4dc8-b878-68daf576f487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d3b5a6-2cc0-4733-87ef-d04f85f58ac3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89159fe9-f025-41f2-9cc9-3cf7fb378707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62028fd7-b917-47cf-abbf-98087160f4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad6cf7d-b6e5-420b-a717-e0f423ae7c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7622ca87-674d-4b70-9847-eeb7367e4b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e633d085-d6c7-420e-970b-66e1b3f61de4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfd8672-9159-4ff9-bcf8-0d38af12c0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5439e908-e262-4f35-9e13-119f0bd90997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f445726-40fe-4625-a4c3-588c2476ec4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "162e31f1-d467-4584-b450-4965c9da9d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e50ee2-1b3e-4211-8289-3cb8001bb326",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fda745-6ed6-42b0-8a2b-f8504fd71fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679c1691-682f-47cd-ad11-124f6d9fce0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c1cefe-4f21-4aad-b54e-461e2de0e685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7c891e7-dc97-47e8-ba5f-06a67a73353f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa744d0-b772-4e29-8956-e71a4f14c8f8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d8636e-e3a2-4949-9886-86d436e664c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4775a00-29ad-47ea-8290-a657265a2515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f87e61c-8a6c-45c9-bf92-2d6ae9f4b7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f7323d0-1c3e-4351-9a6c-bef86c6d9720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65aa7bd4-c4be-4c45-bcd6-abf50b0dcb32",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1650d2-25ee-4abf-babf-e0a66b883781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f18cb026-c5dc-474d-9e11-aa0cd14aea4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fc5034-611a-4332-9ab7-bc3b170b848e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8492424e-110e-4269-bc8b-03e52667c0c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9cd04b4c-e705-4dfe-bd0d-6f448db8cd50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9060ba16-fe19-4058-887a-4ecf2a06f381",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898a386b-f0f5-45dc-a625-62d866343f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4550da5e-9134-4833-8072-46ac067f6ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3d5fd8-c111-4e59-9e7e-01db1661dffc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87534e7d-c606-470e-ab3d-01214259dfe9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a344ede0-c80c-432f-bd21-d5d3f9522357",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3af6128-8c1e-49e8-a957-52338fa5e485"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbe0870b-41cc-49ab-8c63-9112c67ecb4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5df68eb-561e-4c18-a121-575581774467"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "36641014-c330-4903-b4ee-0dd3953938a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "38636890-492d-404c-abc8-093c68d716f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5c299759-96c1-48ce-94b8-5879d7fdd8d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b04ed14f-3eef-4930-8a31-ebc7bc0d012d"
                }
              }
            ]
          },
          {
            "id": "634ee06c-c5e9-4f8d-95ae-3383a2bf0807",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e69042a-f095-43f7-9f96-6926bfc371b3",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a291e5fb-3806-4ec6-8c12-c29a31f2cf06",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98fbbb5-7465-4cab-9ba3-6bc2a5658441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "403463c9-94f0-4b1b-9585-99a989ee38cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bc2d78-276c-489b-ad9a-76d61aa14353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265ac7d4-4104-47b2-b620-98a783a09851"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4ee10019-5deb-4972-8f99-24d6d96b493e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e1bac3e-29f7-4284-bcf0-5baf54425ac1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec5f600e-3d39-4058-8106-7ca9e408749e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ef869df-7504-43a8-a4fa-a3523d7cfe37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "26ed5c18-7c24-4b5e-bf77-5453466c8959"
                    }
                  }
                ]
              },
              {
                "id": "807b74a2-68ab-4dce-89b0-8507ff8ebd7d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f53cea88-49a6-49e7-a005-90db04fcff26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46315d72-37ed-4bb7-b042-9beb40dc08f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9eeb957c-0258-40c2-b7ae-c3b30c1dec7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9010d48c-1456-44ba-9929-481b80d62d63"
                    }
                  }
                ]
              },
              {
                "id": "c1c2ea8e-4e8f-4d6a-b378-e5ddf3026dcc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab352092-be6f-4f10-a972-10d4335772b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0542f5a0-7cfc-486e-b8b8-88014bfb44f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a424c1fb-ba83-4aae-8e39-0f44a55e8bc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8a137c01-5404-4031-a586-37d106df0b91"
                    }
                  }
                ]
              },
              {
                "id": "92e8134d-4bb8-4859-96cc-e42cb90730e5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3510520d-00cb-4c90-8701-02c17a13b5c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "10166a53-1b58-4b2b-ad7a-0678b116e40b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7fed551-3336-49a6-9a69-c2b834133b9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "236cc05c-5a14-48bf-91bc-b04dcfaad3b0"
                    }
                  }
                ]
              },
              {
                "id": "2aa73ec5-7b8b-42cc-a180-b99ceaa29be9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f29b421-16dd-4520-be30-7eb9424a7c1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c95fa2f-70ea-443f-81c3-c13d8dc9ec59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d958d45a-23e7-4b4f-a425-b4f859f8240b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "993f0339-4210-4de1-bf17-770636147e59"
                    }
                  }
                ]
              },
              {
                "id": "dafb51f8-4c7f-48aa-b327-19ed99fe89f9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d461e4f5-2929-4222-9839-930aa761d808",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6a4f4e7-66a6-450b-9c6d-f1246f2aca41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "678edfd2-bf00-42a9-ac69-54c8d9656d1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "63099522-f8d5-4bec-b42c-d4293d520580"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bbd03f95-284f-48ab-898c-6a85412cd464",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7fd5301d-4692-4f84-a5d3-81a5ba56e05f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0aec1fb6-1de0-454e-94fe-f867c3b863ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7cdf0b95-9357-4371-9326-68e09f9212a3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f081a3d0-54b2-4dee-bcec-15773f524e78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "996a765d-b1f3-4d5c-890e-86bf2d1e1a83"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "656eae47-a244-4cc8-9bba-76a2ff05a9e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "836331da-44c0-4bc9-b22e-ef048d2d53e0"
            }
          }
        ]
      },
      {
        "id": "c5e7a2df-1500-4320-b3cc-5adbff21101e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3cfa80fb-d435-42b3-a05f-96040f050ac4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4d74581-1300-43b1-9047-9b2f03b79890",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d872d492-9df1-401d-baf7-62fa3e46fd54",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f7970c-fec7-4a79-8508-68010b80d5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a459810-0e9f-49ce-9c7d-975a6e163f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e775eb7-cf30-463b-b3d3-c9863a4d62c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc0ae01-9398-4e1c-8848-92fac3f33004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c176dd-0d57-4ab3-89e6-3905e39d2fdd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fde7e6-dfd5-4474-8210-10b19983d6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a4e8b6-fc7b-43e3-a8d8-c934f8d1a074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657962dc-7339-4939-80be-38f412b894a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15084768-9f13-4257-8834-0bca2db5216a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1a72d0-7142-49ad-bc99-d1e41a789eba",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2203b846-7de0-4c51-9d57-5c8aad4a62fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7faa5bc-def1-46ff-8810-f2f8ede54632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca036c2d-7fea-4b75-b02b-85e5e93a8e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c53030f-07ac-4035-8b08-60ec3aeb682b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2938d75-c0b8-4d6c-8b1b-53130fbf4928",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec744aa-18df-4324-930e-1308c585856e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00634043-099f-4b95-abec-45c9b553bff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2267222-8e3f-44a7-9cb8-e2bcf6fc5eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "930c5830-b1e1-45cb-869a-3d21cc72b324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a01f626-7106-4e69-9fcf-8f6980ac6fe8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb11552-2654-49dd-bff0-63ec3541f32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c12d82c-efa6-48de-9fa5-fe1df6d8026e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a24abd-427b-49d0-80b9-804ab724f5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1f2e59-8dbf-4c51-95dd-d7a0263cad02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4f87f4-c161-4620-a36e-ca4273aa801f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2e523b-b41b-454e-917e-73dc5626c173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93be4fe-b3b7-42ab-b934-08a1499d1928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a81614-2dce-4f84-81c0-d141a0d90ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "219595cc-8a1f-4e2f-b896-581ef0387c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8c326f-4437-4ae1-84fc-a4869bd894d6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df551d2-7f93-411e-ac75-d43bcfbef32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d264e801-e1a9-4efc-8787-1ce2bbcf5b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b5b4c3-3481-40a1-8fe2-a5cebd2ffd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "65e4897f-147c-4020-b5ee-2bf3e57b376c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0450ae-e261-4a88-b200-6ae8bd1d9438",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd3b569-e3d8-4f75-8d43-300389993e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988bd6b9-b558-4c7f-a91c-e893099ce9ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7923c8a-ae3a-428e-ad75-36b8beb5e665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a72b5789-6d8d-4fdc-a504-072cb013a154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa65979-c787-4929-8b29-14806dcdeb1b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb41056e-568d-436c-a478-786747698746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a6d93bc-c681-4371-a563-621d8bc375d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67574a7c-8d5d-4bfa-a205-a8d0b4bb296f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b76a8ef-877f-4034-9fa1-59a9d054ad8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aae0f97-0bcf-4878-9e18-518bf50caa42",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ecdb4d-05db-4b95-8752-d04e565a1e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea9a978-f4c4-4f76-be14-817495174d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d090c0a-cc63-42ff-a83d-bc476304c24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40852b78-1508-475c-b4df-620ca3b21e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efe5519-0194-474b-bb33-82d5f2eaaddc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743bbdd0-6c97-4a44-8f43-4603606c8052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a8bae7-c9e7-41a1-a573-9ee4b5ca2a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0a988b-30e2-43ce-8137-05e4784263d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "67949a14-2269-4a7f-9709-9a37ab15db49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81af7a9a-c92e-455c-afbe-cb9727e737b9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf63139-fefe-4b1b-9457-7afab48a078f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac5ae6c-d0ff-4868-b7a4-cefd24306e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6369edc2-5c65-4463-a4b7-666129bf5f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b133db-9c5e-4adf-a56e-e1fc03c90a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c5e04b-6f33-442c-a04e-14b19e83a2ae",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f0aa12-3e0e-4614-bff9-358d7a98dde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c704188-e268-496c-b39e-f62f4c96a178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7635e9bc-5846-447a-b554-f9d36d8dc84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d05dbe86-fbe5-4c45-b66b-6769db3eab0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7569135b-5c2b-4c46-a0b1-f0f1ee10c8a0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6321b40c-31f8-4fea-bf27-54dfeef91d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8036a2-b64d-4a3e-ad98-fc56a2742948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3391df3a-dfee-4d3c-bab5-c3a24bd8b4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "641e63e8-57b8-4015-87c7-9447782aca14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfe3394-5e7c-4d55-b4df-5537373c3b59",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f655a6ab-f11b-4689-8a68-1b7e97b82616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6199b006-5eb6-47f0-a2cb-876013333468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35d6065-c3ea-4d50-bd9e-b05d8fb7bf58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "20e45191-2cc8-41d1-ad8c-ca70dd79f91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4966935-d180-43d1-8fa7-1eb3d51759d4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579efdce-fb56-4e45-9109-6b2f043567d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0930de0b-ee37-4173-9450-d47ea0639400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b399c1-55e9-451f-b27d-4b3102c51fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "062e87c8-a9dc-4074-8666-fb765ff07bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598f5a3e-f01e-4879-8673-03b626fc2b62",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae458048-e095-43c9-91af-91d9f5d30275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad5e3f7-bf90-4689-9e03-72ae3fb72a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82bda74-f0c4-4e7f-a879-628dfd578960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf1e2f2-0dec-4b41-92d6-74f06d7cbb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69961146-a446-49d2-910e-53ecaffa6178",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c06ad8-2ace-4baf-90af-63efdfd51d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bfb41c6-7dce-4fd5-9f1f-6a385bf50570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcc5505-bab8-45e8-a1db-35bc6f9d61a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "13123f5f-b78a-4687-85a7-f59b892b563d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70134fd6-d2af-4d11-a5dd-977f8717c6ed",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26add52-4f7c-454c-a418-7d75384591d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f6dcb9-51e8-4406-af7e-044663d1f5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b1077b-cf19-46a8-a3bb-6c81bac12201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5ba1cb-b0fd-4e28-b8e9-bd10cab89586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a981d82-22b1-416f-a637-4e8b47e57d6c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcb18af-d803-4d9c-897b-9a203c913d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08b9e7d-7193-41b6-8750-cc6008c1deb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c15c28c-c0a2-417d-af65-44069a677cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7459c62c-ee50-40e4-9666-8d285268ae2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0fb1db-890a-4115-9450-2aaec3b53f48",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dbc17f-602e-45c9-87b8-99760b4f8d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869f93a1-76b9-46f8-b8d6-22b47cde351e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f88291-c070-4695-85bd-5b4283b4a616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "205d3c2d-a557-4afd-b39e-e82112b44d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3fd6a7-d7a6-4a22-8556-199e7e4a0951",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b1a0e9-4d15-4531-8a78-95c6e7f976d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a007ef-344c-4689-a616-32f935ac5a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe17982f-75c8-4686-a538-8c22b99743b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d932a27-790f-4ecb-bd9f-d2e3b4b2d6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c1b576-f0b1-460b-9c9e-856482632c08",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92779ca4-cab0-47c9-8115-5d05d95528a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53219c6b-4e18-419b-bc12-8fe90fe205fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3393a83-af70-4623-8c3e-d092e50c684f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca6e556-bb97-4d6c-a011-a8f2753d44c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55cacd1-c88f-49d7-afba-0d1b31d109bd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612de48b-1eba-457c-a59f-02aa27cdcc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0988ae55-1ee0-4db5-a9f3-b9a64d3ef254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abaedc8e-1b71-4609-bac1-ab3f5c6a608e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c29c554-d361-4a4e-b08b-1ba38f75e3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffda7cf-4bc7-4c4f-a10e-2f0c08860a7f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1fdfbe-74b0-4dc1-8502-310a893a64d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d260b5ad-f7ab-40f2-8ea6-2708dc92ab47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc928463-0bb6-4e9a-a530-cd0f9d339233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac3eb28-b36e-4420-8c5c-d1f546ef6c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4b2fcc-4e4c-4efb-8a00-9e3d84aa71e8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4993a0f4-c9c2-43a2-9fa3-2df97fc352e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7723233-ba07-4e0f-8d40-061ce64cf718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bebb2a-4368-4754-a7b4-078b54fcc0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a104cc-ea71-4754-aac0-c3b8db2699c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8ded7d-0401-4122-ad3a-6c745fdb58bc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d8e138-919b-4be5-a016-e1a444af3d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6077b3-19c9-4811-8ba2-fe3e6bf189a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d93af94-43a7-4daf-be0b-de14292451bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b9555e6-6573-4e8a-a4ec-7dcb2618a488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c1091c-2d88-43b3-b5bb-bdda7b441de9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd824163-a48b-4f8e-bc4c-7c94b4550e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323a1506-ef2f-4228-ba14-cbf9cd37712f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52928eaf-5506-4063-93e5-43ea3400309c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1c23f6-f1ec-43fb-b2ec-7742ce6ccf83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aef1313-bbf6-4275-9c12-7dda9f27a045",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c54fbe-86ed-4702-9261-b63a33282871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889fd7b3-1e49-4e5a-a309-b3a7220329ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac286f1-79db-45f3-b155-ec6f0034e7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb779e70-c208-4425-ae47-38c927b61ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590a22e8-41fb-42ea-8ae3-fc6e7c73a28f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf70b5ac-7a7c-4912-b89a-de7e91256fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a06a63-2e1d-4c01-aa1f-8f4ccdd5e751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fde356-5666-44e1-a27a-2e07381d3b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "283f4fa8-1dc9-4898-b4db-bd5b6bae3e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa0d2de-72c3-4207-b53f-0bafe39cfcb8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cf321d-1d70-47e7-9450-a9e1898dfa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44116098-702a-4645-8d09-3d2ed3398519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e46ce69-4b6c-4aee-aa44-2639de5b0d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1751ca-4229-4264-87d6-45abdc9b9294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3859679b-ee5b-4f31-9c0f-cc7ee4dc46cc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b65764-7c33-41c1-8a40-ae433cb60b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f17ff29-c90f-41ac-a2e7-ac88f52a3e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50400f52-393f-434f-a15a-645564af24b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4c6800-c861-4e50-b4f3-ea6073dd309e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee7f7edb-8b5d-416f-89e5-dd6416fe0fa9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be0b04f4-2ba9-426a-91f7-a6dbccf302dc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e3d002-9e45-4ea0-a236-56d7ac3c20f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "443f27aa-75c4-414b-88d5-b916b3c968a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c45aca-434f-459f-93cd-663c7813b2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b67826d-a076-4306-ba4a-3d3863ab3cba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a5dacca-bf0f-40a4-8996-96796fd5e694",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c24bbb4-997d-46e0-9b73-8098522640e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c3315a9-43bf-4080-8234-fe57a9a3084b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "331f977f-6317-4ccc-877d-3fb5fcb697be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be59e181-17b7-4692-b39b-d4d571be3d6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cbcd0ac7-fff0-4aee-938a-cd4df7d063bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0570eac8-3fde-4dfa-8733-0aee3bd3b5ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa0a8df0-1cd4-4443-b007-29022cc21349"
            }
          }
        ]
      },
      {
        "id": "a9435902-2d35-4bd0-ba20-3f38236b0363",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "db783858-e6a2-4b1d-b0da-42041b855522",
            "name": "Negative Testing",
            "item": [
              {
                "id": "443cfa1a-ae4a-4398-8c7f-db12ba684bc0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "413b0d3c-c72d-465e-b4ab-56b47a8aabdf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e863178-f58b-4fa0-8ca9-808db1959ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f89f9a-9e27-497b-aa07-ec8642994e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fb5fbe-014d-4be6-829d-f3727de0509e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1b4023-4284-4098-9b2a-98edf31993cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c277c7e6-a481-491e-b6c8-f3212dbde39e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bd4a7d-f6d3-4562-a271-75500497a759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9154edae-4636-479e-adf0-180d4ec9508e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7998bea0-139b-46e7-a9d7-c0fad037947e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aadd6de-b687-4ad3-95d8-7accfd4bbdf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7daa19a-ff88-4202-88f8-3cd349afce08",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cf4073-0729-40f3-95bc-51b6963692a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df5ca77-8fa4-49b3-b0ac-de0c8f2fde4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2119a474-f252-462f-9a13-aa91a19e674e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be7a7084-6cb7-485f-8b4e-c6be74c014bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f05a4c-abd9-4321-bb78-5c5ec41ff041",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ff68f0-fe82-462b-bc8c-fa4bd925948c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f1bc372-4188-4e52-9b53-52abf693fb4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c7014f-fce4-4279-9f1b-1f52bd3f9e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70aa32ea-2a37-47a3-b8ec-a8b4a3b72dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79455f66-b4b3-4927-a053-9354e53ac8bd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c718dd3-4793-45d5-bc75-f904d7139b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0421965-3b56-4e89-8f94-8a9f05b3bd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f43e97-1215-4167-89e0-7a4fc335cb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c8d21f2-53b2-4f81-8757-916ec94a44e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95158b1b-6aea-461b-9afc-ad1aa4c19284",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432edeee-3e69-498f-afbe-491db607aca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4fef17f-fcef-4035-b563-ad52d7837ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c67662-465b-4102-8a76-49c4b3544d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df73c3d1-92f7-4f01-872d-83c3dd5572c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10d3ad5-622a-4bd9-8daf-c6b507536455",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16da9b1f-644b-43c1-8fe2-04e4c0a2a701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015d5bd5-2174-452a-a837-5db0369c8a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c3db1a-484a-4bc3-a21b-7b0cffe432ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c552832-724b-4627-9d77-1374abceddeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1c92e3-56da-4890-b60e-c84cb3d55a39",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aeca98e-926d-44c3-b2d9-d1f8632f0cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6894d13-8d05-49c9-9c0b-ad6375000731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dced6b70-4b70-46e8-8d07-b0d2fd787850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f263b276-14f6-44be-8640-3d0a754a37a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1ce207-fcd9-4cdc-8141-bd09b8c40630",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4fb181-9bf0-4117-89a9-7c55c8427bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0629df8-d34c-427d-8a81-1004089881d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b82e719-1303-4904-bdb4-548761bcbb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0e8b97-5c8d-432f-b7a6-7ff829ca554f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d248aa2-61c3-4028-ba4f-0f0ab567635b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28818ce-ddc6-448e-91d6-42ce8b55a6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27beb208-d3cb-4207-bfe9-a525388a76f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c56992c-5519-4069-8642-aa203643248c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe1c1b8-4551-4b6e-89ac-97fc75ce9a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0b1a5b-03d0-4a79-b4bf-3c87ff7d2532",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ec6dbb-2e24-4ee0-9761-473b646f0347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32adc1da-e5d7-48e1-a910-8f189e667167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13557e96-b6fc-4279-9baa-ce8e0ffebf8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b21c9b8f-876e-4a81-b393-d67112cafbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75401679-9cac-4794-a40c-a895c6ea1e3b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61edca39-1a6e-4141-b144-869e2dec3a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c3769d-13d1-4a3a-845e-aed07295b968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a9c621-7161-4c69-9096-2e2c16c95280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "abfcc80c-69c5-48d7-ab07-01e73eadc03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5c81b0-a484-4fad-9a9b-c20a8646278e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7143ed2-7e6c-460b-8b93-2011374a6dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad021cc-1ab3-4116-b107-f0dce2d79ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adc0321-b270-4401-a29e-c86e4bdb2125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a07eb5a-bc44-4479-a568-9f0addf91132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e99c7b-65e5-4a87-aebc-259d51c88cab",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c3aa1a-b355-4f15-adb1-70ef8d25a5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38062807-2727-48ad-bde4-de59448952f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab02edb7-8c1f-4439-a740-5af368ad8386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9018b02-4a46-431c-9ff7-acac7bd99221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b565ef5c-5449-4ed4-9ff2-2682dc84bdf3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b556b3-4a3c-4fa1-abda-0d7825a151fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2e5a55-22fc-4db2-8714-2b29cd5df9b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80600f6b-84cb-4dc6-be5e-1919d1cb7b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc211e4c-c389-44b1-b330-3b663de64d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9febcd-9f26-46d0-8c72-4e92cfbebedd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cb255a-7b7a-49c6-85e6-06dc78082d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395c3a37-bf7c-4963-92df-b22bd6d244c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c263eb-1343-4245-b904-5a2856b753da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "48fd5e61-0129-4726-8413-3def47d861c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e8b7e1-515b-48e3-a678-960a9a756c4e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ee35c1-f75a-4c95-add6-c55eccac1560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a497061e-56df-422c-af03-f5780ff97e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a7336c-1fc3-40a2-a228-744177ce4c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e35a3837-6892-40f6-a7ed-032902a0255f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680a1fa0-a51e-4e5d-a16d-5ce0e6d5951a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca9a829-c139-4714-aa60-5acf1325608c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d890ea-d169-4b76-856a-f340309dd111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e90d455-b882-46d8-86c6-53398cfa84dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "80caba2a-8e4f-4d2a-a808-2b0564133fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed9e1b7-9a25-41d5-b1f7-8c88a27f9e21",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39bce37-ebf3-40b7-9d22-a817cc395983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e02279-db45-4c5a-8dc6-8c2ba2e8a7e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871b4309-e7a1-4b93-93f5-07a580449012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13c499a9-f3ce-41ce-9822-a7e25f60a2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75467bda-6053-45de-9d94-9e8432a0ae73",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4aacf4-8b06-4741-a66d-a46c246f3dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7986593e-d3a4-45cd-b167-bc4a4145d84f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca02bea-3bcc-485d-9cc5-14fa2749c4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c552dac-36eb-4579-b7fd-5d465739163d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf197c3-1df3-4c0e-9986-7861305b03e6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecf1213-051d-4a1e-8ba1-04393894d5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4de9e42-dac0-40ee-a795-6b14de4684a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb7e421-5638-4aa5-9d72-249bcff63353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92c0034a-eace-45ae-885d-1d87e9b6ac7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd62b77-82db-4660-9836-5b7b437442d4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12787b22-cf2c-4feb-88a9-50983d7068a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be99dea5-b4c0-4644-9730-4ea009c1202b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed5661b-5ee1-4111-abbf-866bac95aa09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc4fa283-621e-42ff-94ca-90458df7d047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e715e53-d6b8-4e47-8a3f-4221d19e0bbe",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c99edab-072b-4002-bb04-e3b63a927a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc02293-ea18-4435-aba0-dc669ebc2d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e24a5d-973e-4c99-81c9-8aa9f6ea4d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc02112-de54-4825-b328-2e87e6bc79b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49eabcb4-8a43-4b39-b544-99936cb4033d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3dc76f-f995-4f97-81d7-82dddceb1fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa5d04e-eb18-4bf6-ac40-ab3f6ebec4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6773344f-2ec5-4a09-82ae-b6e00f035db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a53c004-5d4c-44d9-9141-5d5e1df29aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425df3b9-5b4a-41a4-bacd-f9bb66fdad73",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6f54bf-b3f7-4e69-b2d4-333b5548894b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def11c4c-ebcf-4192-bf6c-ad53c230dfcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965dd85e-cced-4de3-985a-e5e6be81651c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f0820f-0660-490e-b9de-fb977859513c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc39cb99-c22a-483e-9208-4d4f2d6395a8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d04f02-0987-4b53-a8ce-68605175475d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2181cd-16e8-46f7-80bd-ed5d67ca2461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81366e5a-1539-4b80-830f-b88c33556af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52d3fe3d-4ad6-4571-922c-a9843c3300c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f174bd-811c-47a2-9d1b-d276078b3858",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2451054-2ddb-4c14-9126-4df64de18526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98dca31-a404-4dbe-b0dd-40d9ac6bc196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5570186-b504-4b64-9387-19c91c95dee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6e79d6-ce8a-45ef-bda7-ee0a380d3510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882113f4-0252-4d6e-a370-e9557e8244bb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8614e7e7-1373-4a5e-9122-b998032ebff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb80f12-3e5c-4f6a-9672-391b792b4118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1d3214-517f-4498-b74b-926c07a0c43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df5d4aa2-e812-400e-bb7d-4cbab8ad2c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b551201-18ae-40ec-bcdb-bac0fce1c63c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268fe1aa-e77e-48f9-a522-66a44c47e88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767376d5-27fb-4b94-a96f-f957c0326e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7a92a6-94b8-4837-baae-7575d1f1fd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b605a507-2481-40af-91ff-867eec40ca3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdeaaaa-4afe-41d0-90e8-33478a512c3b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfd020c-cafe-440b-880f-8bc1c601ef15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20c27e7-7edf-4813-98cd-b2a5eba319f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcccaed-3db8-4d94-aaaa-ece3b0fc39b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31b64093-d48b-4b9a-ac43-ac398bd0d243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6dc2b23-ecea-4917-ad6c-5681503123b0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c15d4d9-083d-4249-abf0-7a92705c0bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3718c076-fdca-4b7b-89a1-3b99ce736d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457df177-8112-4f1e-9731-45c407bb04f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9bedc5-f1e1-43ee-815f-4b13445c0414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be83ea9c-1fb8-4e41-83a7-f56ffab483ce",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e446be9-b90f-4eb0-b516-c4d5286bd21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c5d7a3-c93c-4086-8983-ee8d8282a090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a513ae8a-8540-4c3c-8069-caaa5dc46453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4545e796-1b28-4128-85a4-ba485f5c78b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beffd39d-bc7c-4748-bab4-1177bd0af1e8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d5df3e-263d-4a3c-98c9-2bed536c21fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c68234e-4023-47de-b773-d67fea86e984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56331858-d617-44e8-8e8e-41ce97551f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d900062-5a4d-4cf5-a29c-5224addfd0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad927e0c-48ac-4edf-ba4c-ba7667ca128d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa60cbdb-5f31-4ddf-98fd-08557523f125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2617d6-29c0-46e1-b6ea-04278da0545e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43dd277c-fc8d-47a2-892f-b7c53fcd68c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91fe5232-1902-418f-9447-f9f3892c5a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a52003e-1661-429d-9f2b-4e983c3664e6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3d5022-74d7-4988-bbb7-fd7cd2a5e54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed74b5f-efdb-437a-8623-956da86a926a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9287a00-dc60-499a-8618-1794f17019bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9247eb9-6cfb-4416-98bf-2b6cc10308ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075d0544-519b-4c6f-8f89-2ec884414f91",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47b682d-8d42-4b99-abed-884afd472e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4358d204-e5a1-4124-ac25-b8965e281c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b048d585-59f8-42f2-9953-53d2ce2e1a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35b1f705-7958-4e1b-a926-f74d89d29f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b8037f-f23a-4263-979f-f7ce235c0f91",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f23d414-56ee-4348-b096-0bb667138481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9de0317-a525-4ef8-affe-453f5afc5de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22ec76b-24b7-416a-846e-3da1c973df79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa45033-01c2-4499-b23d-cdb6308986e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f1e64669-6d77-4459-9162-bb6cc3ca7338",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00db0c15-3f81-4266-8161-1b0ea7dae6b8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c21fc0-573a-4a13-a9a0-d9f56377eb91",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b2ccf9-f3f9-4ff0-b2cb-fdd7a42b2523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "656e2785-d308-41a8-9217-5a50143d016e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3faa4a2-5bdc-4280-9fe4-256c6a61bc04"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b871dee-1915-4ca5-98aa-38d21574cb75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1475fbbc-905a-438f-b0ee-e6ad494ee19b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2c3655f-989b-4d74-87e6-b492ed45d9ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb6749f5-054d-4952-955b-9c30620f4ce3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b28361f-81d2-4d15-ad4d-61402a91a4bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e23c0419-4f87-4f3a-b185-f23ace200a3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5957199-2933-4b01-9ecc-e355c6253360",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0417b454-0004-4fff-b99e-ffe55d9e2135"
            }
          }
        ]
      },
      {
        "id": "497af926-e1ad-4f34-975c-9e130394ee78",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5f5817f3-6ed0-4b19-9d67-7c0667000f92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d7d727b-7118-4ea0-b00b-72404d32d69b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1587651e-859f-4b6b-8a91-ac135a789fc4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6044cb7c-30ff-4600-a49c-69448e57204f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c10a928-3e87-407f-95ef-a9f49b0f988d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a146da06-07fd-452c-a4a4-8f97c545b327",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe253cdc-57d6-4ddc-948a-778215ef1943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a582c342-c7a3-4e31-a210-8858a78922f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ed6568-71eb-42d1-897e-264e94a35542",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce56fc46-b378-4768-8a74-cdb66812faee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d4fa12-f749-49d1-982e-bf468a75b9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6097a7b-2c67-44a0-b39e-1b395a5b3f0f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b607d7f-b0a3-453c-a494-99d5e8a9c690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ea999b-421d-44b4-96ca-d39364d7aff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1f8208-192c-452f-a0d4-b3d8f84c4e42",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea4cdc3-38c7-4c12-a9a6-463e8307a372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8bc3f5-d5c6-41b9-8743-5c7d39176062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59151572-3aad-4d5e-8562-a78757aa5c4e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67bbe34-b524-4c5d-8d1a-11c0be2f510a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d02733f-636d-40ab-b2b6-3801b883f094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf6b885-547f-4fc6-8045-2665e6e584ea",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6453f18e-f54b-436b-a283-33d631403022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee8d91f-3237-430e-b010-c4ba9066ba63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce3eb9b-3672-43bc-918a-011bd98aeeaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b544ef13-6f63-4d36-8d16-25812591c2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4798b97a-846a-4bbf-8eed-a4e0009b4d22",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0d49a5-9113-471c-961f-19f379fd1f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a58bc5f-c612-4ff8-ab68-3058b366ec67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19785c0-3f64-4918-8a93-58491f3a5996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96bdcb8-94bc-4521-b5e1-cc6c1d7e88d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9252c77-7f08-4692-ae7a-8fbb7b5c1492",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1352a66-4bb5-4fc2-8486-449d5d711661",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a691d266-dd18-4f80-b6ee-6be8612d7201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc599b26-ed91-430b-a3b1-509f49833d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c31f13e-dbb8-4508-904a-5b83c77b1855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23540d5-95f4-485b-b25c-5b1d4da2f4ee",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d025da02-43ae-47ad-a557-f75c9de5256c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fadb4ce2-45a8-43b9-8a75-af1ebcb2177a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1befdd27-d9e3-47b0-8928-548db87cc9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965275db-bc9b-4d9d-9ba5-2b10a5e0a06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce64290d-39ca-4f68-a320-b7f725182059",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f78a44c-f4d6-4482-b83a-2c89153a2713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416bc978-4073-488f-a8cb-ca7bb568e727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b166babc-af6b-4a53-9a3d-62218eba4f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26761b5d-422a-4cd0-83ac-107371bacdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45d827a-54ec-4865-80a6-39ff452648a0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6daf5659-938c-419a-902e-8908b250191b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e118b07d-26bd-40c0-b612-bb3e9e25a043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb0db94-d57e-4057-b951-715f90d53a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1378b71-5205-43c2-800d-701650be85e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f2f199-bf93-43c3-be0d-16f25798eb5d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3b75cb-b0f3-4788-b9d1-a213e63ddac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e7b02c0-2d2a-4c21-929c-4281946f2f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00e2ed8-e9b9-43a3-968b-78b4e9880e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b523a4-bc62-405c-8067-860b4a756ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62543092-1ff4-4b3c-9e28-3bffb9b5e7ca",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9f1c80-48da-4dd5-abae-fa3cd139dec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f91f44c0-880e-4c3f-af88-0f9b452d5181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad77b68-bb6b-4f4a-9123-6e9e91604837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c6b545-dd31-4fa9-84f7-e9ee474cdfcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7794ad1f-6b82-49d2-98e8-74a59148f3b3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4ff943-cf0a-45a2-983c-c401990ade29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f016f23f-0868-4e10-9a98-61449245f587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6207999e-f36c-4f3c-94e1-60721f334672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09bcdf5d-1258-406f-ae10-a81125fb1b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9dbbde-ea6e-467f-85f2-549565565e9b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75449cce-117c-406e-aa1f-555a5a3e1151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef3a22cd-c155-47a8-a828-9c3ea5744add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae05c222-1acd-4ebc-a31b-29be57118309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ce3303-68a3-470e-85c6-dca700fd7574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d94441-7c64-4ec2-a7d7-003e3819ebae",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8c0a12-cae6-422f-afb9-b44618a7b06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af7f412-99db-487a-a775-000791e80c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4287a856-d498-456d-9570-00c92ba1fac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6430201b-3fd5-4034-9449-303588295898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bde524b-02a9-4471-aeb0-5e5e8aa7e0a8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84965e1-fc67-4f0b-b452-c20eb0a597a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3773a7b1-ee92-4f61-8eac-6ce70ce55d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e67bc5-2c83-4657-8b38-8a2ea025dfe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb14c5e-e7af-4dd1-8bd3-dac266465fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ae6498-347b-462c-be39-c707c4aa09f2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436b150e-52bb-467f-bde7-632ae1420207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4303065d-2896-4073-8903-d8c489523197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee13834-c3f7-42dc-a228-3e115682010e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a1a548-ccf8-4f11-a285-7960e870fb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a54fbc-3845-4445-b551-69288e2c2113",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6828af91-e61f-4f16-afc3-cc1d05e2935d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "574b7f33-756e-43b5-9414-06f8a9da6dc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d16b9f4-e686-4067-bf4e-6437b0f4308f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f4a9fa-e51f-423e-a4da-a5acafc4641c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb29ae41-d205-45e7-8be5-1237b53a252a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907fe9dd-6d24-40fd-9d40-eedecfc8acca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebcffde-5022-4be1-87a7-06216ae8d5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed84e91f-624e-49e0-9f23-4cde486948f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b72e223-b716-41df-9e1b-27cd4d00b0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f7366f-6ce2-49d9-9fde-9bdbc60d89d2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e52c253-9eff-4dcd-af95-1c9c1554a7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea663be-4242-46a5-a184-78f989222292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae7e31c-5e4c-4066-a6d5-f99675a01827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2161c323-fe1e-459b-a5d7-12ed3b996a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98236da3-3c3c-400b-9c0b-f680c9950756",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f27c1cc-3169-4316-887c-4b2d8e82a50a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "467e6e79-6fdb-4571-8365-89bcaeb29a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f00e5f-f648-429b-9d83-218af3921f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd14161-892d-4e07-a40b-7257418cd63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c29829-aeb7-4fde-9341-30c1285c708c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0322137-5dcf-4229-a375-819e51b4ff4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50443a95-1e6a-45f3-8811-b9d557adce3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c452e0f-33a5-45b2-905a-2957b27e985e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d0aab4-7aa5-4bff-9611-2553f465ad0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d48aa5-89a7-4be4-b701-1d69fc32d4e4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b084230-78b6-4a38-ae51-15592fb1ec2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26324811-71a9-40bf-ac7c-c857b09a55ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fc2683-22bb-45f1-98e4-214ceae41411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759cda07-bd01-414e-8359-186db0b058fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a59f93-1f17-46d0-9b05-17d7d133e8d5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1911c5e-14a6-4497-9b3b-2488395ac8f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f39492f-45d1-4122-aa62-c8d44e592fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "043f3a68-4b59-4f4a-93cf-72c9e955cdcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1d2028-3a87-4146-9b30-42db2d45d122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3eda778-249d-41c3-9c41-706ce6bd4595",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463687b9-2032-4dc1-9786-0fee1554107a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b406f5-4a23-4304-80a3-d23f791e4297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "508f7b9d-2208-4335-91d8-59630606838d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67cccf1e-0367-437c-a7c8-0101f146ee7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb19aa8-e904-495a-8bbf-47c28ba398ba",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5709644f-77a0-496f-93c1-536fb3f21278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da139c08-4ae3-442d-bf12-3f09453cfcf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aecbc36-a79a-4c32-a054-b34e996cc5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a96551-39c6-4050-82aa-e0cd0ad6c98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58eb8081-26d6-4b05-b7a1-ca0f687b5b0d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ba10a0-5c75-4d9a-8260-698cdd1dbc6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f767506-95bb-4165-8d96-a60fb2313a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba850ba-f4f9-4ab9-8439-b48b5537cf3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f2e107-97b2-4db3-9e34-6f25056a9134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff71b76b-2fb9-42b4-b94a-4be76dd98e87",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0043cba-a072-4e38-93f5-01a0b7a86a98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2cbffa6-db72-43cf-ac12-76548f7884b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7840fc-36e2-4766-bbad-9e808404d9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30eaec15-286f-48fa-a14b-98960e2e889d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be01c847-19d3-4891-abb9-deb86a538b08",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc2bfb1-842f-4680-b366-ff464c78c653",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eba17f84-c322-461d-8c18-ffcf0a87a920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304b0b0a-72e9-48f8-82a6-1fe644073f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a388c7df-8e27-4fc8-9a77-ee3bd16f184b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e6f1d0-9a01-44b4-8717-8721851ba18c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2c216f-ba42-44f5-89a9-7f21b07829a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63a3339f-4af3-4dac-bce4-75921da73ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2e41de-33bf-41e1-bccc-96eebe8e1792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1e4c6a-1775-4574-b3a0-db611ca31fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d8f249-9e74-4119-a530-1cf6a952e973",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffc7ac9-038c-4dea-b6c6-ab225128f679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaf15937-bddb-40fd-bc3f-4fda65c4ea53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc1bb02-cd1f-4707-97c4-d124383a8706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc42244d-df51-44db-8921-ae09854a3f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2481c4c1-090c-4c88-b018-1ed5906fcde8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d13167b-997b-46f8-8dd4-cdcedbc3c795",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e22ad43-8f61-4abc-b5aa-c8d7cd0ed3a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f159e204-0bed-4c70-b42f-35759e03bb38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311b2244-7cd1-424e-8cd1-052abfd78e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18385f8e-9a76-483d-be20-3e1d74daf95e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1531076-9c2e-486d-b913-792429438c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c185294f-c3ac-4ba5-bae3-bd78ef00829c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc755af8-6858-43ec-a90c-e3bc7c417eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0700bfe-6c9f-487f-8c96-5a07924b8868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b705cf6-4275-4ed0-a4c8-116f40f2a075",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae992311-a16f-4965-9b8e-ba9168ea2dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0942e4f-ce63-4712-98e2-83402cc3e3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88111c6c-e38d-46d5-99d4-32642ab3a941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bab50a1-af61-4ec5-8c89-2792ec491abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806589fc-050a-4e1f-bf3f-5782677a5c4c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc7794f-6966-4056-af59-121c9bceffcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a08d16-144e-482b-a46a-5a7e6cc8778d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc05d9a-b534-4778-a9a3-c93f5b6a5ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9ec2e5-2650-4101-9a49-222fd8a5fad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1add2a-0a52-4ed0-a452-e23dd64350c9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acc8109-88b9-4c38-97c7-d0fa534e21e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350291e5-828d-4b38-b420-f116d333bd32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea5f2dd-95bb-4da0-b48e-8b5b55a9a82c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe765d51-be45-4015-a37a-0d65519ff670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590ca33f-a4e0-42b1-b965-cb86999e8286",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93329a65-9f33-4bc5-8f4f-4a0f379dbc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986b1c5f-ca46-4e55-9d60-8b0787488c93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c49acb-68b2-4d06-bc52-a83e2e67492a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a2a457-254c-40b7-839d-9a1ff458b4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139a1aee-2f8d-4abb-94eb-54bff12166d2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054deb05-fcd3-45fe-b58a-e6a0e4bfe830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4abc52-ead1-420b-9dec-e90ee6af4090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc3d3c9-b781-4c47-b1e9-b7f87ce163b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab76182b-8047-485b-a5ae-e2fbbf867124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3536816-4684-4220-b755-79d7d8ad5f76",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717dec43-53d3-45d3-a5a5-9eff552a0f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a057db2b-355e-48da-b9f8-c49b9a5c3b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88bc140-684f-4805-8dec-13ed1da43e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b128468-ad04-441f-a761-f16c1dc50e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6752f0a7-2781-4797-867c-defeceec10fc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e49121-4b75-4f34-80ff-6da8fd9ce83c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84e67e8-e005-4dd7-b2a8-f96ccfb496db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4deea7be-a845-483a-981f-1699e940e98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58826dd-e587-4a37-abb4-904415fdad18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88211fdb-f899-47a9-ae75-84c45f320724",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9047fe2a-afd8-458a-b897-d9d13fb6c191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7d10b3-b87b-4d0a-95c3-474f87e90f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004938a7-2c06-4602-a302-1e72610a8056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790ffdfe-de46-4b89-a7f0-96a847888116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb3f7e5-261b-41c2-8af5-82ae97fbd9d3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2d467c-ae88-4476-802f-eae7fd6de6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3823f2f-673a-4bd1-83f4-ac1829dd88ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82f248d-d339-4f55-8eed-326c4ffbfa99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ffd9935-2051-4b64-8e00-ee1ff48b438b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb24356-def1-47ed-bf42-fa3bc22c2e0f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cff61f-c9f7-496c-9bba-426eece67563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a89e4d3-972c-4fae-8f87-2f3c988a7d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "febba4de-6037-47de-acd8-e136b3d6743c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5eae3e-5d7e-4573-ba39-2f289dbc0fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19be290b-a341-474e-a6c9-1831ca346f75",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c13b8b-f9dc-4fc9-a7a4-f9f2045a6805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223620fd-f925-49b0-b2b0-dbc19a3654e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e095cb-8f4d-4d17-a066-82c2a206b3cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a46278c-9f2c-4602-ac26-70d8d8ed410e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f26200-2c74-49c8-a067-3f8daa52464e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5518f6b7-033d-4eca-a60c-a39d0221453e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07fb2223-c969-4280-8128-11e69c76b28e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b51a79-bc56-4d67-b36d-87f6f8ba5909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0869acf-5a4d-4665-ba3f-ac9dba8ca8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37223482-e8a5-4a74-ab41-89b10418e9c1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d9361e-4d8b-483b-a822-9b98b7101a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85914135-a0b6-457f-bb5e-33467cb109bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643274f4-77b3-4153-9561-beb4a2692eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b7fa63-3c29-4db8-a90b-38a19114b162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202e9453-85ce-432f-9b52-ff0b709b0a43",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31584c30-ec1c-4b30-b23a-ab10e5717e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b71f768-5fb9-4cac-804a-740fa529f834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c28b21c-2d0e-4bc1-9cb9-a1753a4df35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097c1ee8-7a9f-48a1-962b-2e4f930c4e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd39805-023f-4072-beba-b298527c8597",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78083d58-d40a-4a90-ac8e-8a1dba3a45ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4b63c1-0fde-40a8-ab27-7a4efc8173d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55eae9b-66f0-488d-99c2-f429a6ed79ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218bdd7b-f9ae-44cf-a413-6fb66d7a39f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfd52f7-0a60-4138-972b-0a62ab39088d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23aa1c6-71a9-456f-a640-e9ab2e908ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0666c8a-39e4-407e-9072-c83ac3dfe162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f0bba8-36b2-4626-bc57-b92cdb15ec58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b00e61-0c69-48c4-b5d6-a62a7756e117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e2834d-26ad-4a6f-a7d8-50ffaf6eaa6c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafb26ca-3b43-4687-a876-a8e9f572d87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a1bc98-6443-4a7d-b503-961b192803bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dd3519-d9d2-4918-ad36-9be913eae405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b757a0-9425-4fac-a07d-1d314495365f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1837572-4610-43fc-af89-d5343887cf7f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d758bc3f-3fa5-47aa-8300-3a0ee6b257fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2706417-1ce7-4913-9146-ae02b77df529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e032d14b-5b47-4568-ab08-1064c1a269ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bfad24-1362-4c8b-8243-eba85ef63125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1484a3ee-c891-43ae-bdca-48411e3a6b7f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaccf4e5-80b2-4b2e-b3f8-44d1e33b0a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff648011-5e14-4006-9fb5-e0abb9822de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31d6919-3f69-4662-b34d-588facda9a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08461b7-ef51-46af-8cea-c2a1d6b0c23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc081fb-e3c6-46af-ad3e-229727a1b121",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3d57af-ae5a-4351-825e-4d272d6b174d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1915d68e-b6d8-404a-95f3-09dba15f749a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5445888d-1bf6-4e46-9ab6-3d0904ff65ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0c6489-eaf5-4a98-814b-a23e31222180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23593038-04a9-43c1-a9a8-20801c729bd9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23f7963-11a8-4f45-a8bf-66cb70f4322b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586be8b5-ec39-4f3b-8a45-caf3de016bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd9fcf2-04a9-4b4e-92db-dac4d3b29ce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78e5cdb-6072-4c41-b88a-3f094b7b5281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebf3078-e4f5-4787-99d7-06b3612faa40",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7de195-6dce-4394-ad3c-77b3cf2b5129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b67bcc28-d5c7-41f2-a6dc-82ff29f2fdfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85366db6-f22e-4323-8440-1ee16e8d2438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70fc305-6b69-4538-8550-63217a14befb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd1bdf5-a59b-4480-a307-8b3ae0fb201f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ec59dc-02d4-443b-b07a-fa848afa0791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084bc688-7f3e-4298-8751-bde13a4f694d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7e3f37-d07f-4294-b9f0-5fa4e2a9a452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bab9e44-8b00-4f18-aab0-897a6be3196c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83c5e26-b9e3-4be0-9f12-4a0827018356",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b801e30b-3efb-49b7-b16a-e8c8f72ce135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0f6cfc-f60c-4984-aabf-48040c8bb0ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c9ce0d-d06d-4500-b73e-179614e5510d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67dcd2b3-da30-4ce4-a79d-1300d01dad7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c64924-f263-4c2b-8677-4756f1d4795d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c929cc-5625-4b85-bcbf-278b2deedbc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf191389-c792-44d4-a388-46fcfbbfc47e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d856a976-5133-473f-a964-0dd39e70b22e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e6ea5e1-26bf-43a5-bd09-86e6461eb1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2291362-013e-4af0-8339-8d3d109cac60",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e96b62-a758-43ea-a69a-38540b115263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83093dc-d287-4820-a7bf-968ce74d8999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5aff19c-8ab7-4ba8-9dbc-3ba7eef68b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a389fa77-3122-4af6-8bd5-55075abfa7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a298bcc7-47f2-4bc3-8cc9-b0b7f983eec7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975efbb7-6d71-4bbb-a620-95290dd6d2d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7598c799-0e94-4223-8883-d4846546f67d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7119f2-0f35-487a-915b-f58e125eb0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77394f0e-dd6c-4a36-ad90-df376fd5d723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f78bbb9-dd7a-43ed-b7d0-d90dcf054b9c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cb677f-2766-4251-87e8-e70b6d4f66dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0afddf67-b1ce-41ee-bda0-8d56b8b69491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17810932-0e68-417d-8e1e-0bd5c20e57b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f11b89d-07e6-4b0c-a9bd-dd03bc6c5ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bfab2f-b026-4517-8edc-28c2ce300d8a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14b2562-8955-4c05-bf14-fc85aa757184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eb80e63-d468-46bc-8374-e5672d008972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db7275e-091e-464d-aa34-d46cc80bf3f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f7e1c5-d5b4-45a5-b741-a2ce72182873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af38a45b-ee63-4a4b-835b-37c31da5b136",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48027722-4eea-4822-93cd-48fe385a2744",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3ac9877-a77a-4a11-bb7a-3b7e488b507f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427e8722-2d43-479c-b230-907cfd57078c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03eb1eda-d064-41f8-adb3-23970dfa276f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f2523c-5e05-43ac-a30e-5f18afa37738",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711dca8e-c244-4393-be05-45893527cfc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43a1a080-96f1-43b7-9894-619b65fc3125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63498ea1-b4e4-4e66-b11c-ed312900cd59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a7dc4d-34d6-41b9-aed2-3a304698dd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f03190c-0fcc-4beb-82bd-edf525110488",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e252539f-d499-44ec-893c-0607b1776f56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a934fd0-17e8-41fc-b334-8e8707d60623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33350ec-a710-41fc-a7c2-1dd81f3cd8c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd3c5d4-e45a-4665-977e-c06c8cac9e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff6288b-946c-4092-bdd9-adbd424b52b5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33148686-6204-40d2-8754-c9a8a590a6f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c46d23b-9874-4763-918c-92240d0368b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1c9cd1-d6df-4e87-abba-d8d47172434d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0893e150-2d32-44c6-a713-2c109beea7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6293583c-45f6-4e38-8888-78d550681221",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6efa912-c4a9-4a03-bf23-19d2d92f482f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f42d9d4c-dfc4-493f-ab11-1703202c3bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f3a35c-0d04-4846-a02a-dc9c1195ae01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ee4632-712f-47de-b9c0-3f077258043e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11b0536-09f8-4567-928a-a0dad290dc3e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b88cbd-02e5-47a3-bda5-20cc9a410468",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "622cdfc1-ca12-4ab7-8aa5-5a932d4f6e95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66adc8fd-49fb-47fe-866b-bd7465dc4c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ec71d6-9a5c-40d8-baab-e5201d467416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af444d76-44ff-4292-909e-2c8cab17eba4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e2ddda-9136-4957-8e7c-1fe29961fff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98789ecd-8c78-4883-98ef-cb7d0e8f87a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67deca96-5da0-4a19-bbeb-9fae4be166fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9ce0c4-3b72-4c86-b52d-b22d0b9f2ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b485fd2-fa3c-4796-9914-db7a51550e65",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3ef5e3-f42e-459e-acbb-3842bfcaaf3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c5e2d68-f2e1-4585-ace2-f49d4629d3e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f42e85-3a81-4aa9-9de0-e78f26c62ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf9472d-415d-4af7-9848-80d058b6c2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af45d60-73f8-4d50-8a74-a36ed421544d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adce3bfc-d302-4b2c-98c0-eb619aa13132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e20fd1c2-bc13-4843-98e6-2748b9b02828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8aacb4-36ae-4291-ba1c-02762eae8d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cbc15dd-a03c-4f51-8443-445a33d899bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586d65bb-9140-4692-bb44-404765da8545",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83679e6-1583-4dd5-adf7-15db327b920c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d9a9672-28ab-4baf-ba73-9e7c5f2809ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73f92b8-fc0a-48c0-8491-5b09f1538dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b111a2-ecb8-4ca3-a7c4-c75dddccb61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc167f87-2ee4-4f6f-8530-b68e1f20b754",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50104ca8-aa1a-4d0f-8acd-f4df60d59ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e4a011f-6eda-4bda-aec2-e4b416fe023c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee02b7b-4d3e-48f6-a4a3-2d51ecb4feb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e63a7b3-4aef-4c01-8d6a-c5bda401a247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b68e55d-3cf6-412c-bab1-3fdbdb62fc11",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90691ef-b20d-4d71-93d5-1d1f462dc7af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3974278-c507-47f2-a206-f02172e7af57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75cdf8f-e339-43b3-a801-977f5761697c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b29282-7a32-4c85-9d13-4c75613649c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24abfc88-e4d3-4214-813b-4e271146adf8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e00c2b-73b7-4146-8b5e-cde5e8356da1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c643ac9-c9cc-425e-b5db-a68e29821d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830bbf34-8cd7-4ff9-a5b6-66f055e6da26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b50260-5e68-4a42-ac82-4b8baf00425b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3b5f45-1dc0-4570-bdcf-a918b4bf01b2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc83e7b2-471f-483a-9b26-df3e0d430402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65b8b31c-067c-43ae-b7b9-384d8aedd4de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2d7ee7-0a38-4d5d-97ce-6e8d66ff5d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3045030-9ee5-44f4-a7e9-39bff9386ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08941b03-490d-4f5e-aea7-8915ff75a42e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac94e88-be02-4b30-b6d7-d410c2820def",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02021a21-aa73-4956-8ffd-8c4611b6e912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75ef88d-f8dc-4d9a-b992-e4d6c4dd3c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdbf3ce7-668b-4bad-80f4-ba24b581a483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f149049-b804-453b-baeb-4404f8519c1b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3b8d92-a839-4658-b54e-6f0a9106545f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2756f36-e9b8-46f8-9c03-747b779cbdb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8d7a78-df42-414d-8e6c-324526ec92dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71cc750-ac44-4acb-bb07-fce1ef8d0a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798ecd03-a238-4a42-94ec-8eef253e42df",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df2835c-66f3-4eba-9cc3-4c9f8da9cc1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3667f722-f75c-4268-93b2-105f9e3090d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a39b982-4c95-48fc-b94f-57d0e838a72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db591ba8-6e6b-4445-878b-6491c0acd8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2879ad-61e4-4475-adc2-d195148897e8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1aa1dd-a626-4f7c-8a6b-d176549845cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddd560ef-8787-4757-9229-0c00b6e166d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f3888a-c167-40ea-a2f4-9a52b1d4bba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61069667-e04e-46b5-b349-6a05d6ca39b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15acd231-8bf0-45e6-b062-593f45bd78b7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481efc16-0716-42f0-b440-aecdbe99cde0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a6a3057-fa74-43e6-918c-64bf7576922f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3df9c6-826e-4a59-8c6f-e25f99d701b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c51a80-edb6-4d20-8731-b9351bd1dc7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01107fd-1785-4aa1-bd21-06ad63176c69",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8455eec-2a85-46b6-b6b6-eab5ec19720f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c434dc30-3d6b-4376-a7f5-5cf9c63282fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d9b3d4-8490-4c0a-9953-0ae4005ba3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aafd8eb-ae51-4b6b-866f-c6a028ac82a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e44046-1363-4000-b147-1bc5c2ac62cc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df75457-1c77-458b-a317-ea8c2c0d8b2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d760369-5ca2-45da-90a7-4304a798f419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "041c4007-0331-473e-adc9-69f0bb7771e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80881a79-6cc6-472c-9911-0fda264e8537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a45560d-8919-4709-bf87-8a5d91dc59f0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e785d9b-fb90-4122-bb6d-568ce4fcd270",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e385243-2f39-4767-8d03-991d53b10904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c900428c-2103-4660-a050-d37ed4135a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98fb402-3a99-4edd-becf-67f095123376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6829d6d6-d6e8-4ff3-9080-2c9c0ebaa4c2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85afa89f-e92a-4be0-9611-61f1a109946d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec29ffde-f940-4b52-a560-75e3393f649d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "164a3d06-8380-4e52-863f-848a90c83aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d38552-462c-44ea-b032-71c34762ebc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afddb35f-5466-48db-af9d-133a6f88f266",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7ef908-70de-4f78-ae4e-abd8f24077e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d35794ae-96c8-498c-9a21-189588aa94b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "234a962c-eb22-4996-a1f9-b0add54ef760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12e7eb8-108a-43e5-8b74-5076d6305ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19f8de4-ffbe-4a6a-9c31-71f3731ded7e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c0b4cc-a285-4a36-9d12-c277e662a2a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3462bb7-6a6c-4ca4-87d9-5a7e1c6080cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d0dc64-2bef-4709-9d64-527941f62b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c7ad25-6fc9-480a-9062-2185aa7bcf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705509bb-5459-41b9-af4f-7a67d8e2abd1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c39361-fa03-4aa0-b3c4-77304c8e1db9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "786e0160-a327-48a6-98fc-d181cb340162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4107d1a-eba9-4967-a567-a698181a28ef",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72622d43-efb9-4121-a0f0-f8460c685fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449f028c-90ae-400d-be90-2d867dd57f0c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87081429-a9de-4661-9f39-d91e76a893d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b08b88cb-99eb-4b3b-ad50-48aba5dacbfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db177a89-5b96-4345-8cf3-9678f53973cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b312b46-be3d-4380-ba11-b67a43d44c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb5c09b-c71e-47b9-a747-e3284b076a89",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f7c54d-1a59-4311-8086-6c00c7b36932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e80e8f7e-1bb7-4132-ae5e-8f8dd534d88c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99733a7f-1384-439b-b4ab-32c0dd04cd65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec39f32e-8765-43b9-811d-b53e7dbab151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58805a6-ae0e-4a82-8108-7e5790a6e58a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6823749-25bb-4f32-8cfd-93b72415d4f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17587e89-1db2-4986-9238-6a3d3a0d907e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459a0268-4679-4918-bd20-6c98120212ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6c0ff5-1b2f-464b-8ebb-1701f14f8b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02abab38-d119-4b35-8f4c-445532727698",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c632a42d-e5d9-4cc0-9e94-f07aa8692801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa55429d-75d7-4778-831f-9ab93bfca554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1463d6-d13f-4cd6-ab6b-c91cd4472c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c07ecb-936f-49d7-9db5-231db9f3f005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae6da88-fb5b-4670-8982-1ea625df968d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569e226d-0308-44d6-8acf-5e27e92fa306",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3886c8b2-1a18-4236-9070-fa3eb7dcc329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8231bc86-69cd-4062-b8e2-87a5923d1d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9381fc22-c970-4042-883d-2812dfcc2c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95de59cc-1c7c-46aa-b146-83c49a1e74dc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3244ab-f643-461b-ab95-48520aca7cea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57d92890-39cc-4707-ae78-4108c0bd49dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f0aa4b-8cae-4716-8a55-54ac4698d1bd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d37d71-327c-4e13-b9ee-a95045a46b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91303a57-8087-4a88-8bab-c9a24b74690d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b817c9-f661-4bb4-b47e-293967c3868c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6856c401-48b6-4855-8215-69788e054aec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdd95c3-5926-4dc6-94b9-964fcf50cd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940712c8-a8b5-4eee-adcd-a2b8b9a80900"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3019dd4-b838-462e-9b60-5bacb3b19bf7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "345d0558-15d0-4756-98a8-c58c237a649d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a0be1f1-bd6a-435f-bac1-59cd596ee273",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd1023c2-5387-4ea8-ad77-26ced09ff3db"
                    }
                  }
                ]
              },
              {
                "id": "8d9c2fe2-f105-4fee-ad3c-0f900123862f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40e6b05d-de1c-4721-a1a3-8827e8b56289",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa4f4f0-99d2-4637-a286-c472eaea32a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "af7d2065-b7cd-42c6-8124-85c8d5939de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3eaeba-10ac-45e2-9df7-10a500e9a2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef03f736-5b2e-412e-9c1b-e374ca3ef313"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fbc0e06-d220-461d-a4b7-9934427763c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63a22ee1-479e-4e5e-a54c-033e22c9656d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebcd4081-4c61-4f6a-9d6a-d9c79a6227ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b878580-0fc1-4065-a7b3-aab2c565314d"
                    }
                  }
                ]
              },
              {
                "id": "a6334b9a-e78f-4d18-a398-e6ef2cfcde6e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5539b879-f5a7-4c5c-83e7-66f8e033eb88",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae60d80-873d-4b05-9870-5a7cd5d80964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "77ab2151-ecaf-4645-aec2-81efaae89bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5034435a-6a9c-42ff-a08c-c057899a201c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a26d469-7c04-405e-9b28-d89113a57dd9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c066a40b-cf63-436b-9823-d2f93350b312",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cdf228d8-ead0-4e9c-9c18-56e0209f3ace",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "776360ca-e9ee-486a-aafd-e6de9a839cf5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9340e6b6-7dbf-4957-a381-13e20fcec9ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cc1bebf-bb30-44ff-a4da-ff033da6b72e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f44af57-53db-4097-8d04-5dfa376fb951"
                    }
                  }
                ]
              },
              {
                "id": "68f353c0-0a72-460f-ae27-68f5e47745ee",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a67a8be3-5568-4ee5-8220-fdf6169bbe9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4d14913d-5458-4217-b181-973277f09e1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8a308b7-a7c4-43f1-aae9-b552dba3ad73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "538c9b94-b9c0-4bb6-bec1-c30b6f17bc29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2a4a05d-ce77-49b1-9cd2-b1e8f9243d69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c490dcca-b308-4213-ae87-3e6e063f77d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56f5af0f-7f99-4589-bca9-adcb8195288b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e63207ff-a881-46a2-b55d-bab17bac6abc"
            }
          }
        ]
      },
      {
        "id": "2fe19a18-c34e-40c0-928b-6c9b4fdc3d3c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "57956885-5155-4bed-b75c-6e14b722098b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d6d2c00-297a-4b19-b536-ba244fd05366",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4889627-69ba-4529-a856-ac2657f88e02",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9370d5f4-e43e-4f7c-9331-72f85c9e9a50",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ba17d40a-8c13-47d0-9215-9f31f1228599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151565aa-c034-45d7-b2ab-e8d539b5a33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e1e0fad-f1b8-4204-af53-feebb82866c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cb0452c-75e6-4f4e-9116-978bfe358363",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f41a3e33-9ebd-4181-832f-9cf7bee0cf5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3221e496-3ebc-4bfb-9e67-1d963242da4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2123706f-8dfb-4900-8a63-4e8806c8d69b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b93eb33-32b0-4677-81af-86c6544830e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0f084336-299c-477d-ac8f-49e9486004dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75f4b8d8-0599-4628-af3c-d129f39290e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b264651-8a28-48cb-b3f6-33470bcdd007"
            }
          }
        ]
      },
      {
        "id": "8479e1fb-0531-417e-8a63-2bbfe48e1d40",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3d2a7f6a-c63c-4a3e-8325-8fd3f37b5fde",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d6ac2f1-2d97-4fea-84a3-3188e94acade",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f40c1b1-5d0b-49db-8384-88f88d513e09",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1a7a17-dc9f-4dd4-9daf-1c227744da5d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfd3d34e-f7c8-44e1-b148-51ed282c4e78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3854101-366c-44b0-8664-406b24511ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2737e1a5-1f53-421e-ae0b-339071193874"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2003205b-eedf-4df5-88c6-b09c9863a222",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43053385-a1b3-44f4-82a9-ef03faeec1a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3735e906-6964-4013-ae9c-96777c138f31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9f98d71-d4ad-43bd-9844-abf59454a8f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f71b29d1-8757-4e1b-84ea-cb35f34d7aab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ca2df76c-3bbd-435c-b621-3009d86e1591"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c42def15-0ab4-4bf2-b940-685e7493e227",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed8c05b9-56c7-4888-a07a-23aad56c757f"
            }
          }
        ]
      },
      {
        "id": "f03479c1-7e37-40d5-ab24-2215dede7200",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c1eb55a4-bf92-4f39-88ba-c4cd9226801f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e06ac16-ce56-4278-87d7-a531c15d31af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c200b708-1c16-4873-aebc-acebb77e22af",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930932de-8983-4eb7-9e58-082b0c7232a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cf12cee-cebb-4689-8a39-5557cf232828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c44a9ce-b98c-42d7-8983-50e313bd1d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a104e555-bd95-4e13-876b-eafc494dcbc5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec699141-9d56-4403-9ac2-7ae5cbce619c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf16ac20-4569-40cc-9c43-be5e2555efd2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0a6a7ce-563b-4a4c-973b-3b49a79e10e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41de561e-e188-4ad4-a9c2-bd1a9639948b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4fc069a-7dc1-4950-a550-b18e6e9cbcdf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e2ea5a8b-dffb-47f8-a83f-d0dd9ff68ca0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e048d99-cea1-41b4-8ba0-eff5dde15671",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7029cb0-edce-4016-80ce-1faf576edaeb"
            }
          }
        ]
      },
      {
        "id": "89dd3fc4-de15-4f63-9878-ef8511973874",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e06ecd4-fddf-4da4-88b1-3b7b17dc4ceb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58aeb1f0-a647-4d58-8a33-dacd7da71113",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5244e290-bf70-4d7a-ba96-75c544bf6ca4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d62129d2-abe2-4671-a1fd-2db5788c7dec",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b32b3ca9-9049-460a-8719-7ab503a3db43",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 103.9719298245614,
      "responseMin": 9,
      "responseMax": 9151,
      "responseSd": 586.9496519710249,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705192781304,
      "completed": 1705192819979
    },
    "executions": [
      {
        "id": "dec21156-9664-446b-b9a1-2c109152f038",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "563a7351-5078-4b18-a7ad-fa8c424b09bb",
          "httpRequestId": "9ee747c1-3ba3-4740-8fac-c2ec848471c0"
        },
        "item": {
          "id": "dec21156-9664-446b-b9a1-2c109152f038",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f6f15c6d-ee00-439c-9ad5-a4ac15ad396e",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "b899c9d8-da04-46d5-8a00-40f3cb7c7066",
        "cursor": {
          "ref": "bc52525b-2c7e-4c96-8712-9eda033512f9",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d4b13aa3-696f-4035-b376-a150f0fd4c4e"
        },
        "item": {
          "id": "b899c9d8-da04-46d5-8a00-40f3cb7c7066",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bada3319-d1e4-46f5-99ec-d9852aed3c3b",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "999461fb-166b-4ea1-b1b3-e8e6b0096b46",
        "cursor": {
          "ref": "62ffdc9d-f4d7-4c6b-bbd5-3bd814af3e7a",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "22d5eec7-2fce-4a4d-872e-69f8013dc436"
        },
        "item": {
          "id": "999461fb-166b-4ea1-b1b3-e8e6b0096b46",
          "name": "did_json"
        },
        "response": {
          "id": "adb7ef49-0053-4c39-ad4d-e7dda4827733",
          "status": "OK",
          "code": 200,
          "responseTime": 276,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7be07ca-194a-4199-9f1b-304670ea9640",
        "cursor": {
          "ref": "ae546940-8335-4128-a005-b42887fcaf42",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f5506b5b-6b30-4047-acff-7cb01c78922c"
        },
        "item": {
          "id": "f7be07ca-194a-4199-9f1b-304670ea9640",
          "name": "did:invalid"
        },
        "response": {
          "id": "eba395b1-c6e1-4247-9eac-24e1e41fb6b5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 764,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7be07ca-194a-4199-9f1b-304670ea9640",
        "cursor": {
          "ref": "ae546940-8335-4128-a005-b42887fcaf42",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f5506b5b-6b30-4047-acff-7cb01c78922c"
        },
        "item": {
          "id": "f7be07ca-194a-4199-9f1b-304670ea9640",
          "name": "did:invalid"
        },
        "response": {
          "id": "eba395b1-c6e1-4247-9eac-24e1e41fb6b5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 764,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952b3bf1-e72b-4c04-bd89-344192751587",
        "cursor": {
          "ref": "1d702a75-2094-409c-9048-21d4be655c5e",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2851527f-d408-4d88-8dc3-6fecbe5cabee"
        },
        "item": {
          "id": "952b3bf1-e72b-4c04-bd89-344192751587",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a041f403-344f-42f7-8483-02aa07c6d0e7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc2ad98-3fa3-4dec-8ac3-12084a6163b5",
        "cursor": {
          "ref": "d9008b1c-199e-48c0-9dbe-05259d7a0820",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8e147cc4-bc7c-4d3e-90e9-0e0a915e50b9"
        },
        "item": {
          "id": "8bc2ad98-3fa3-4dec-8ac3-12084a6163b5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c0650795-31ed-4253-9dad-6b1dd07fe109",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc208366-e4ef-4b6b-a9d4-d044aaadf3dd",
        "cursor": {
          "ref": "9d7335e9-f1e2-4270-8926-067c3d66f099",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "cc4f2b62-3d3e-49f1-8149-57ca0bf5e3ab"
        },
        "item": {
          "id": "bc208366-e4ef-4b6b-a9d4-d044aaadf3dd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "26bd7950-db92-43f7-818e-5a18e78785f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb28d6fa-fe2b-4bf5-b585-d00123d4a262",
        "cursor": {
          "ref": "ab815288-7989-4ccc-b11e-b35fa94ef445",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b2c12f8b-1889-4a4f-bde2-f611e7927819"
        },
        "item": {
          "id": "eb28d6fa-fe2b-4bf5-b585-d00123d4a262",
          "name": "identifiers"
        },
        "response": {
          "id": "38bc1d1a-2ba6-4ad0-9e6c-5e78a9d351f2",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9195da3d-110a-4b6f-9493-4f89a7ca741e",
        "cursor": {
          "ref": "abff8ec9-7e7c-4459-81bd-0988b09a209e",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fa93f545-4a5b-4a74-b1bb-66dface9241c"
        },
        "item": {
          "id": "9195da3d-110a-4b6f-9493-4f89a7ca741e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3a69834f-6827-41a9-8167-237f3958bef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457a0fd0-080a-4a5a-8574-490c8f91b2fb",
        "cursor": {
          "ref": "32475040-30df-49cc-b334-cff1c5c1e5f7",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "35705f18-66cb-49ce-83c1-01a85baf792d"
        },
        "item": {
          "id": "457a0fd0-080a-4a5a-8574-490c8f91b2fb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7ed8275b-e376-48eb-a7e8-9ca9b7f2ac34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b43372f-8e36-4a1c-b39f-11d0f1106377",
        "cursor": {
          "ref": "5bc3997a-9073-4932-981b-b6315d0edb41",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2e692925-8f5f-45f6-a0b2-93570c69b7b2"
        },
        "item": {
          "id": "7b43372f-8e36-4a1c-b39f-11d0f1106377",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b5f42ec2-5d4c-4269-ba25-1fdad6b48218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39286e4-ba5a-43b1-b2ad-4c5d3c619d4a",
        "cursor": {
          "ref": "c34e5e28-dadd-45d1-8638-4b9efeb5eac4",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9c9c6de5-5bd3-42c8-ab46-801be27dc7c5"
        },
        "item": {
          "id": "f39286e4-ba5a-43b1-b2ad-4c5d3c619d4a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2bfed89d-e7e7-42f2-804b-163f760ed89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba3e602-25a5-4390-985d-975847ff6b84",
        "cursor": {
          "ref": "82d3e686-f637-4f7e-8642-9bcea24245b5",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "139ac46e-f88f-4f6a-bad9-956de2c620b0"
        },
        "item": {
          "id": "7ba3e602-25a5-4390-985d-975847ff6b84",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ff6cf648-1bcd-40a0-acf1-df0e87edbb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0996c7ed-df73-4376-8c36-5b79da76b17f",
        "cursor": {
          "ref": "2cced874-f916-417d-9356-3d6b1fb6b8e5",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a7583cee-757e-44fb-ac8a-6ee92792b7d0"
        },
        "item": {
          "id": "0996c7ed-df73-4376-8c36-5b79da76b17f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b997666c-a7ce-4736-be87-97a0c9d15dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d704b24a-f00b-481f-a361-b8e4bf275464",
        "cursor": {
          "ref": "e253a47d-772f-4148-9c29-196124a3d043",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d3e6f260-9e06-4f8c-90ba-ae21096ef10c"
        },
        "item": {
          "id": "d704b24a-f00b-481f-a361-b8e4bf275464",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a04c833e-4e3d-4f1d-ac27-fa60d69cb5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a697f0-a7e3-4931-8d71-23684a8dd677",
        "cursor": {
          "ref": "d1fdbe9f-2e26-42f6-829c-f2755fdf153b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "26179248-94e1-42ca-baef-6e0b2c5ea922"
        },
        "item": {
          "id": "36a697f0-a7e3-4931-8d71-23684a8dd677",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "91a2b30b-d093-4101-bdb2-ee5072f28ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2fef84-878f-4feb-85ab-b9d3661f01b2",
        "cursor": {
          "ref": "a81c9ab0-ca6c-4ffc-afff-bc85100d1172",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2a4e333d-8080-407b-9811-6362340519e2"
        },
        "item": {
          "id": "7b2fef84-878f-4feb-85ab-b9d3661f01b2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "02567c26-cae4-4e27-ad9a-eb7c16ed8965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c287f6-df9c-45d0-a160-4fea098310f6",
        "cursor": {
          "ref": "ce73c2eb-ed21-4a69-86fe-4b8c52089d9e",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b7b644d0-6dd4-4ce3-b39d-5384f3c70042"
        },
        "item": {
          "id": "f7c287f6-df9c-45d0-a160-4fea098310f6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f54debab-c47e-4eaa-9a8a-620c5b2dd283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372e3756-5847-40c0-bdc9-f77868b9ab32",
        "cursor": {
          "ref": "22fcf60b-6a34-4e78-98a2-d0eb422b44dd",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f8266722-4c84-4ae9-9096-9630d813a3e8"
        },
        "item": {
          "id": "372e3756-5847-40c0-bdc9-f77868b9ab32",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5cc5589e-032c-46ad-8823-8d255f14ec1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d2e317-9dda-40c5-aa9f-c29bac991090",
        "cursor": {
          "ref": "25a1e2b9-54c1-492b-9702-2ae25e0c25e6",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "96d8d024-f640-40e0-8d64-a4d9d1f1ccab"
        },
        "item": {
          "id": "d8d2e317-9dda-40c5-aa9f-c29bac991090",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8c7cdf1a-2c90-4441-b464-27b77498ca15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ed5753-0c60-49ff-bf23-a94f46b43bda",
        "cursor": {
          "ref": "15d071e9-f416-4bac-8a41-011385535fb5",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "97ac9d9e-3542-4246-9e0a-dc3b7d4aaa8a"
        },
        "item": {
          "id": "c0ed5753-0c60-49ff-bf23-a94f46b43bda",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "27ff48c8-91d5-4201-8123-9844650e0526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2359d2b3-b1d5-447d-a8e7-4e232ab3f239",
        "cursor": {
          "ref": "3e8222b9-4c2e-4029-aebd-db75a6da3562",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "aa244b46-591f-4727-a64a-884caf3781cf"
        },
        "item": {
          "id": "2359d2b3-b1d5-447d-a8e7-4e232ab3f239",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "84cdaf31-bc7c-4a9f-84fd-a327ec1418ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251d4ab5-1f78-4ca7-add5-bf486abe85b8",
        "cursor": {
          "ref": "d6ef1937-ca87-49b7-b141-a8842b850e49",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d98d71dd-5ac5-4e24-86e0-14261ce47c3a"
        },
        "item": {
          "id": "251d4ab5-1f78-4ca7-add5-bf486abe85b8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "94476299-0e43-4004-aef2-506c0351d698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400a5005-3384-44de-89c3-4446cda0552d",
        "cursor": {
          "ref": "c7ff52d2-e94f-46c8-ad22-03cadebc64ad",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "91520287-e7b5-40b9-987b-40d0ab0dee75"
        },
        "item": {
          "id": "400a5005-3384-44de-89c3-4446cda0552d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4a02046e-bf8a-460d-88b0-17c88663e3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a9d1c7-75ca-44d3-bda4-4682c24fa30f",
        "cursor": {
          "ref": "102eb52d-1a91-44f0-b527-29430bfaa152",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b5870c66-5fdb-4d90-892e-47d046c365df"
        },
        "item": {
          "id": "84a9d1c7-75ca-44d3-bda4-4682c24fa30f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5482015f-a8ca-44b5-936b-4b359dbe3e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d03e09-9c73-44e5-a0e3-dc682ee519bd",
        "cursor": {
          "ref": "24173cce-67c3-4404-a729-790c00b29bc6",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e4eb98ec-441a-4cf1-a003-da4d8b62b825"
        },
        "item": {
          "id": "f1d03e09-9c73-44e5-a0e3-dc682ee519bd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "edfbc11c-49f3-44a9-945e-24886407cf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9682c4-7a48-4d1e-83bb-1301aebf7f13",
        "cursor": {
          "ref": "bff19ab1-e878-4bf3-931d-e849ce011bdd",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0b999671-4b49-4d79-9af9-660090e3d10b"
        },
        "item": {
          "id": "cd9682c4-7a48-4d1e-83bb-1301aebf7f13",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ee316634-0c6c-4fcb-aadf-035bf0b20ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407321e2-0cd9-47cf-943b-4f142ad02018",
        "cursor": {
          "ref": "b1fd7b2a-4370-4a66-98ed-0ac076a371ea",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d3a10a0f-0fc1-4702-b2c9-08448c457566"
        },
        "item": {
          "id": "407321e2-0cd9-47cf-943b-4f142ad02018",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8a79fd18-3b2a-4b9e-9238-dea8195057db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad08e18d-740b-4701-947b-69db3dd36b3d",
        "cursor": {
          "ref": "f38831e4-8bd0-497a-aeec-437a08ebab98",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e8c3a96c-b3b5-4659-8ace-1bc93bfeb3b8"
        },
        "item": {
          "id": "ad08e18d-740b-4701-947b-69db3dd36b3d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e0626194-1af4-4983-9f0b-7aaecdae833c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bf8365-2623-4c8a-b50f-2e24e48db019",
        "cursor": {
          "ref": "62eb174d-d77b-4fbd-ad8d-c8cd01c7853e",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "780c988d-0015-45f0-94ee-6705b4884deb"
        },
        "item": {
          "id": "e8bf8365-2623-4c8a-b50f-2e24e48db019",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "09cc4c39-53ff-4cae-8714-7a51c9e9c14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4238bb1d-5835-444c-a367-351f9f1c042e",
        "cursor": {
          "ref": "0060b192-b31a-4ed3-83c1-897bd588db37",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "afe28801-425f-4ba7-8f88-64a27b9adb7a"
        },
        "item": {
          "id": "4238bb1d-5835-444c-a367-351f9f1c042e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "affb371e-a3f7-48e7-8e50-2966650a0b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15172c8-001d-47f5-bedf-ff1fba282f0d",
        "cursor": {
          "ref": "fbfb4069-285c-4751-9bb7-d88d7f3125b2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ec6f8ac5-c47f-43e6-8c83-e3385bcba014"
        },
        "item": {
          "id": "d15172c8-001d-47f5-bedf-ff1fba282f0d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "21cf7ba9-5b26-4b2f-90eb-64cc15102c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ec8d1e-94e3-47ea-958c-5394e69070d4",
        "cursor": {
          "ref": "5ea6b2c4-b6bf-4f80-b099-c7f0e63df72b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "12ae92eb-01f4-4c43-bb42-3a9e3a2882c9"
        },
        "item": {
          "id": "04ec8d1e-94e3-47ea-958c-5394e69070d4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d5dcf60a-2544-4acd-b32d-955c39596b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5625336b-265d-4379-9207-fb6877d31192",
        "cursor": {
          "ref": "82bc5938-904f-4869-96cf-b38aaa20c52c",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f0c6d1e1-5046-4573-b417-6033a0b81939"
        },
        "item": {
          "id": "5625336b-265d-4379-9207-fb6877d31192",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4e180d55-1635-4317-892b-082a6055b59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5972bedb-0828-4097-b7c4-c325a35682dc",
        "cursor": {
          "ref": "cc4fc2ed-d436-49ed-becf-e6220118f524",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1a4d6613-cc68-4458-8ee0-7d7eb3b17a97"
        },
        "item": {
          "id": "5972bedb-0828-4097-b7c4-c325a35682dc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "05aa0823-922a-4828-acb8-2ac0bccdaa4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643a55ab-01af-4ec9-9b63-efff6e069cb2",
        "cursor": {
          "ref": "b679df70-705a-44e5-aefc-8c3d11b8bd14",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bdb7a720-6549-45ee-8584-6f2a16b38a84"
        },
        "item": {
          "id": "643a55ab-01af-4ec9-9b63-efff6e069cb2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f8997333-b808-4752-81ad-dd4aac363920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be13e4e0-33ee-4ddb-8758-7888a8122e10",
        "cursor": {
          "ref": "c4d9a3a0-67dd-4592-836e-40c2daebfde4",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "78298316-4169-4eb3-97cb-10de22cc6b65"
        },
        "item": {
          "id": "be13e4e0-33ee-4ddb-8758-7888a8122e10",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "57d47d2f-17dd-467d-be2e-f02ee6b56906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ddbda3-6b22-4694-aee3-b1eecf02e095",
        "cursor": {
          "ref": "14829cb2-149a-4ebc-9a4f-ef7fdc57781d",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "17d9357d-b7ac-441c-8b3e-46262e76c723"
        },
        "item": {
          "id": "b1ddbda3-6b22-4694-aee3-b1eecf02e095",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "31c78c17-d81e-43c3-b653-31aca5166cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95775816-4cdd-440d-886a-ab389b7d6420",
        "cursor": {
          "ref": "8b06eb94-bf5e-4ef8-8fd2-8bb017cec502",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3630c995-2c6b-428f-9d05-ea700877dd0e"
        },
        "item": {
          "id": "95775816-4cdd-440d-886a-ab389b7d6420",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "86faf307-47b8-49db-b691-5d01a04fd9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39cc966-ee40-45a1-9561-a05a8697b903",
        "cursor": {
          "ref": "df4716a4-b0ef-4dbc-8059-36dc86d3be7e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "575f20de-2b5e-46bc-aa96-d29ba1abb802"
        },
        "item": {
          "id": "a39cc966-ee40-45a1-9561-a05a8697b903",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d32a16e9-1f60-4db4-8ad5-1c547155ee09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f644c21d-1d3e-4342-bb38-e7efb428711e",
        "cursor": {
          "ref": "b2488370-a5be-42f8-8eee-4d58308e25ff",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c97b4e63-4da6-458e-a260-0a87e872ad32"
        },
        "item": {
          "id": "f644c21d-1d3e-4342-bb38-e7efb428711e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0233b516-8b9c-43f7-b721-236ea7a4f1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee963a9-2430-44b5-aaef-32f294bb78b5",
        "cursor": {
          "ref": "b476b2ba-bb75-4039-a45c-b416b020180e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a118b59e-375c-4229-b076-42e2aa1ffe44"
        },
        "item": {
          "id": "fee963a9-2430-44b5-aaef-32f294bb78b5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f1d8f275-9f59-428b-b62d-30c36cbd72f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e6ecf2-07f7-46e2-9b6f-c7d93a5ece67",
        "cursor": {
          "ref": "14919ef8-24c4-4d7b-9023-7fc3fb90aa56",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "df9851b7-b56d-46b3-936a-5b97530c52e6"
        },
        "item": {
          "id": "77e6ecf2-07f7-46e2-9b6f-c7d93a5ece67",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "937cae82-6fe7-4b4f-acbf-3cdb0706ebc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d24255-ee75-49a8-975b-4dae5877e183",
        "cursor": {
          "ref": "bbe915b7-4bf5-4ea2-a88d-3ccc96d7338a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cad2ab90-add1-4812-9f79-2aa48f5ac4f9"
        },
        "item": {
          "id": "52d24255-ee75-49a8-975b-4dae5877e183",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "69107b64-ded9-4b51-9d1f-575b62a15ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667564d8-0080-4004-9748-47ab093151c8",
        "cursor": {
          "ref": "07767db2-777e-41b3-ae3a-c9be114dc2d7",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "17863e6f-406d-4791-8880-873fd2989037"
        },
        "item": {
          "id": "667564d8-0080-4004-9748-47ab093151c8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3207bf6e-c89b-4ad2-a066-45052d2c5b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e157bee-0a48-4671-b8d0-1fb2373484c6",
        "cursor": {
          "ref": "930b8755-883f-4d92-b073-66f8994c8af1",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "faf1bf57-a206-4d0f-84ae-cbaf11978601"
        },
        "item": {
          "id": "7e157bee-0a48-4671-b8d0-1fb2373484c6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8bf20e25-a6d6-44fb-a873-36281a165e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec85d63-9552-4e46-a627-2d58af65f65d",
        "cursor": {
          "ref": "005f941e-2cbd-4fe8-89fc-22a4f2b8a924",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3bd4b26f-3c09-438b-b395-4ef61ae7ddd2"
        },
        "item": {
          "id": "2ec85d63-9552-4e46-a627-2d58af65f65d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "94fc89c4-4ab6-46a8-a65b-45367c955930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc3265c-c172-457e-b7b4-f5675dd7c4d3",
        "cursor": {
          "ref": "bcf99dee-ef0b-4f3f-ae4a-b486f3fd5154",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0eb9aaeb-55d6-47f4-88cc-9b027ce1be9f"
        },
        "item": {
          "id": "9cc3265c-c172-457e-b7b4-f5675dd7c4d3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a5b6f5be-fee0-420d-99ff-2eec5d7df0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9805e77-e968-4da9-8ef8-00f39c7fdb13",
        "cursor": {
          "ref": "1962fcce-b603-4f09-95e1-ed7f197b2403",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f3c0f1f9-34e3-4388-87da-e200df40846d"
        },
        "item": {
          "id": "a9805e77-e968-4da9-8ef8-00f39c7fdb13",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d0e17d22-9905-4cb4-bf6c-c2d3f18b3294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1bcf80-7eb3-43a5-a2b5-55d48b6cfd77",
        "cursor": {
          "ref": "4019d70d-2332-46df-9da3-8630df8715bf",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "647cdb35-ebe6-411b-9e1a-b664567b8906"
        },
        "item": {
          "id": "0b1bcf80-7eb3-43a5-a2b5-55d48b6cfd77",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fb01192d-06e4-4bf5-9c52-fde78eaa3b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c7bdff-a129-4571-ac0a-3a83d37a1f39",
        "cursor": {
          "ref": "e16d6644-9f13-4baa-85cf-2082888a4ec4",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "acdf93ee-fa0a-452d-b87c-e1e377319980"
        },
        "item": {
          "id": "98c7bdff-a129-4571-ac0a-3a83d37a1f39",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f69d87d1-5f3b-4553-8cc4-c28a977a039f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac6a00f-8fca-4c72-94a6-7bcfb7c9d4b9",
        "cursor": {
          "ref": "93a51194-3868-4261-ad23-42e5ddc0089f",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "29119a35-d098-4811-b988-eb5db5bdfeb4"
        },
        "item": {
          "id": "9ac6a00f-8fca-4c72-94a6-7bcfb7c9d4b9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b9cbd98e-a212-4636-a6e9-518c678a2216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2b994c-e443-4ace-840e-6cbbfeaa6925",
        "cursor": {
          "ref": "130035a6-6e9b-40b1-bee0-e6d502b0b7f2",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "49bd3d25-8be8-403e-bc6d-064845e7a3b3"
        },
        "item": {
          "id": "7d2b994c-e443-4ace-840e-6cbbfeaa6925",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5f6fbaca-c516-4b46-b06f-6573d746b0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16a9478-e50d-4207-b5b2-341fde7c316c",
        "cursor": {
          "ref": "6847d8cc-f20e-4ffb-bc1c-a3b20d1e91ff",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bb8355b2-58bd-49a3-a995-cb2c408d190b"
        },
        "item": {
          "id": "c16a9478-e50d-4207-b5b2-341fde7c316c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c9e98d5e-ded9-49c4-a022-61771b0951b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281d2337-ebc9-4ce0-8a02-af65e37bf04e",
        "cursor": {
          "ref": "ce04eeb8-cb5c-496e-9d34-c5c8ba77c865",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9dd2946a-ca13-4b26-ba9d-443440a2aa06"
        },
        "item": {
          "id": "281d2337-ebc9-4ce0-8a02-af65e37bf04e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "90adca8d-64fd-4c91-b978-a22a0b14ffae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da89b82e-af09-4cf4-923e-c2114d0d7451",
        "cursor": {
          "ref": "249af67a-0f5b-47e8-8158-1be9631cc945",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "db12931b-cf28-414c-81d9-5cba6a9de7dc"
        },
        "item": {
          "id": "da89b82e-af09-4cf4-923e-c2114d0d7451",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d7c43954-d278-46f5-aaf4-7350b35e3e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cedcd54-7bb4-41ab-8de8-a3522f616842",
        "cursor": {
          "ref": "4a383680-8ef7-4fe6-a5fc-d6c8a8bd6ddb",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "70175edf-2be1-4400-9f31-3eb4b414642f"
        },
        "item": {
          "id": "0cedcd54-7bb4-41ab-8de8-a3522f616842",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "26d2cb70-1418-48ad-ab17-cec9c3b069d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abea9fc-65c2-493e-a218-3ae823e217e6",
        "cursor": {
          "ref": "eebb1511-0d02-44d8-ad33-4bc50114f0ed",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f6aea9c8-e15c-4c01-8d7d-4d9581d5bc64"
        },
        "item": {
          "id": "0abea9fc-65c2-493e-a218-3ae823e217e6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b520e8fa-80a3-4789-95ee-1e6e70502c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93453da-e944-4455-9cc1-1bb25aac940d",
        "cursor": {
          "ref": "ae6c150c-0e39-4189-b86d-aaf6dc5c057b",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "aaecfbe6-2395-4c2e-8b73-6aaa5135f8d8"
        },
        "item": {
          "id": "f93453da-e944-4455-9cc1-1bb25aac940d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "799d223f-250a-48e9-a521-f806215217c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac7178f-69d0-480a-8c5e-897cc0d7d630",
        "cursor": {
          "ref": "d790908f-b3b4-44f8-8b6e-e27024390fea",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c0c537fc-0df0-4af2-8b4a-a9a885d5e891"
        },
        "item": {
          "id": "7ac7178f-69d0-480a-8c5e-897cc0d7d630",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c6fabe21-8b1e-4d30-8868-89165cfb3f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca838b1-2e05-470a-9f4b-7a9166ac1019",
        "cursor": {
          "ref": "efd836a9-4a9f-4ad0-87b7-f0de3937f44e",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "874eb424-193b-46a4-b7b2-7e1b6377434c"
        },
        "item": {
          "id": "dca838b1-2e05-470a-9f4b-7a9166ac1019",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "846abd95-b1bf-41e7-a65a-d1340d6cbb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072f6c3e-a810-498c-938d-d56cf47c68f0",
        "cursor": {
          "ref": "070d4c47-8176-4da9-a77e-bbe2175dd1a7",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7f23da5a-5ddd-4466-bd69-cf91247fc63f"
        },
        "item": {
          "id": "072f6c3e-a810-498c-938d-d56cf47c68f0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "39e8a4d8-0968-453f-8855-a60615f7a14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d21251c-0f3b-44b2-94b4-129557660dd2",
        "cursor": {
          "ref": "60f78a23-3331-44ba-b85e-f2bbae7b7a3b",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7537137b-a467-48f6-be6a-07a3b68d0f67"
        },
        "item": {
          "id": "8d21251c-0f3b-44b2-94b4-129557660dd2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "39b2b0b8-7774-462c-b9d7-5cefb7f6513a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3323f3-6b5e-4eea-a5b3-65faa1c57852",
        "cursor": {
          "ref": "c1998b53-a959-43b2-b5c0-a766a32cc997",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "77017f44-4447-42ad-ac83-3921e7ece303"
        },
        "item": {
          "id": "9c3323f3-6b5e-4eea-a5b3-65faa1c57852",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a872b450-ceb2-4d0e-a813-13f8719bb61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab74b5a4-d492-4e47-a194-f4ccc4f5d7a6",
        "cursor": {
          "ref": "e6c7023e-56cd-427b-ad6a-5840ae80f5f1",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7da987c0-4ccd-4408-99d2-5c539a923ca5"
        },
        "item": {
          "id": "ab74b5a4-d492-4e47-a194-f4ccc4f5d7a6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9e1a4aa6-325a-4d8f-943e-e45774d6be86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a098e93e-84d7-4646-a033-7ae283435df6",
        "cursor": {
          "ref": "7c87b59e-04a2-4907-ac81-b3b0f2b0181b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2cb0b80a-430e-4bba-95a3-1583a5babe1b"
        },
        "item": {
          "id": "a098e93e-84d7-4646-a033-7ae283435df6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "40a319bd-64be-4adb-b453-342ef09e36dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc18ed8-befd-4cd8-9237-45a1fdbb26e8",
        "cursor": {
          "ref": "d0e9f0e2-d018-4975-bbb6-e643346d2927",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f3c721ba-12f9-4934-86f1-803403b97d53"
        },
        "item": {
          "id": "3dc18ed8-befd-4cd8-9237-45a1fdbb26e8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "00242beb-f0ae-464b-ac21-612dfcca660c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74c69c0-acab-4424-8995-4abcdf54658b",
        "cursor": {
          "ref": "def57f87-91b5-4376-abf7-4bb78a6d4f1b",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "31492078-3b7d-43cf-a971-87e3cdbf05c3"
        },
        "item": {
          "id": "a74c69c0-acab-4424-8995-4abcdf54658b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1a28f59e-7564-436a-b6b7-bb44c0304b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40224e3f-be03-4e4e-916a-a8c2630947a5",
        "cursor": {
          "ref": "f0651033-9b5c-4b63-89b1-af7c9b63c436",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "59f764f1-48c5-4175-8b3d-2c8e7d63b39c"
        },
        "item": {
          "id": "40224e3f-be03-4e4e-916a-a8c2630947a5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d275d93b-ce45-4941-8e9e-4ef0b57df07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862b4062-d851-4e22-a4e6-09c6fe69c808",
        "cursor": {
          "ref": "c867c252-1c55-4309-9179-cac660922a29",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f5f273df-ea1c-43eb-b083-4fa803b1d7a1"
        },
        "item": {
          "id": "862b4062-d851-4e22-a4e6-09c6fe69c808",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2e08aaa9-f81e-4a9a-a710-9d28a0bea438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f151ff9-eee4-4aff-bffc-a4a4e39b63de",
        "cursor": {
          "ref": "b9b0e8c5-8e2f-4e31-8cf4-4a059672269b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d60a906f-66c5-4eb2-8543-d6d275bcfe78"
        },
        "item": {
          "id": "6f151ff9-eee4-4aff-bffc-a4a4e39b63de",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "979d4b80-44a2-4e9a-903f-f17494ee4dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1c3b43-2730-46c6-af60-104c5ae36781",
        "cursor": {
          "ref": "97023358-6ea0-4ad0-8c50-4131d441494c",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d43af485-fe82-4145-b445-9366d6a2cc41"
        },
        "item": {
          "id": "fe1c3b43-2730-46c6-af60-104c5ae36781",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "58312299-e02e-4d28-a022-ecfe905b61b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d56ade-7f7f-4979-bb53-d90bd80b2804",
        "cursor": {
          "ref": "67b7c387-4631-4747-9800-d6fa26c93b2e",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a4dc9e38-84cd-4337-8d08-7d87b581425f"
        },
        "item": {
          "id": "81d56ade-7f7f-4979-bb53-d90bd80b2804",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5c374837-a68f-4324-830a-6bca427a8b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bb4d05-c559-47f4-ba65-b41d5458f0dd",
        "cursor": {
          "ref": "8ecde17c-78ea-40fa-9ac5-9c9c01a46184",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6c2bdf9f-6499-42b3-a782-93b7c1aebd1b"
        },
        "item": {
          "id": "d7bb4d05-c559-47f4-ba65-b41d5458f0dd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9fd78db2-a564-4fe6-bbcd-898e6510c115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665149ac-cad0-4a98-966a-b80bff257b70",
        "cursor": {
          "ref": "499efb9a-f00a-46d2-a956-2407267a8b20",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "93c83861-1175-4410-b870-a254d5bd79f9"
        },
        "item": {
          "id": "665149ac-cad0-4a98-966a-b80bff257b70",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "47f1a38c-ba00-4af7-8eda-0e6cec095780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9ac8bb-7eb5-4378-8ab3-7ed54409e610",
        "cursor": {
          "ref": "7bdfa541-631c-4f71-bead-bff885af00e7",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b8cbef04-d541-42b0-9b3c-8225c2eadc20"
        },
        "item": {
          "id": "2d9ac8bb-7eb5-4378-8ab3-7ed54409e610",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3f3eebcb-c157-496d-97e9-6a54ed5d620d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b62fa80-307a-44ff-98d1-aea98cd1ba26",
        "cursor": {
          "ref": "64e663b3-6c43-41c2-8d53-69eb072843db",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "29f2f485-9be8-4134-820a-d91b30f8dd71"
        },
        "item": {
          "id": "1b62fa80-307a-44ff-98d1-aea98cd1ba26",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "aa8b6e40-f3f6-407d-a0bb-c9af914b15c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebbae50-31f3-4f62-9cd0-1ea112bce5f1",
        "cursor": {
          "ref": "93498b8e-1271-486f-b020-11d914a98e44",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bbc47b69-507c-4c60-96fe-c4ea531c20bd"
        },
        "item": {
          "id": "7ebbae50-31f3-4f62-9cd0-1ea112bce5f1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9fc6e823-5652-4c5f-a701-4bc6de19428e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d9e847-e387-4c08-abdf-809ec4772911",
        "cursor": {
          "ref": "d2a2f97c-7f5c-4626-8890-a82279a90cb0",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bb30f80f-1c12-4aa6-a788-32a98e7482ad"
        },
        "item": {
          "id": "64d9e847-e387-4c08-abdf-809ec4772911",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "31e871c9-4900-457b-b338-0eb6cbb20a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b45767-b52e-4c84-a51e-adb0851f3bf6",
        "cursor": {
          "ref": "74e7e7ea-698e-4e37-938a-d2d37a0e11c3",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "eb0402f7-53f3-4982-9333-f5fabd13957c"
        },
        "item": {
          "id": "85b45767-b52e-4c84-a51e-adb0851f3bf6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a12ee42d-fbcc-4cee-bf02-b219b66e75c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504613d4-c812-47cf-a3c8-19255bbb9535",
        "cursor": {
          "ref": "ebdc2b5d-87c1-45dd-a153-de502b06ceed",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "78c0241f-1635-4b46-8a98-564aee7f57e4"
        },
        "item": {
          "id": "504613d4-c812-47cf-a3c8-19255bbb9535",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7bdd9b28-603b-432d-aee1-1cad2a342e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b027859-eb8a-423d-8d03-88241921ed6f",
        "cursor": {
          "ref": "60319370-7814-477c-94b8-fe9f94902dce",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f3fc062f-a59a-4151-9f62-39a63d5537b5"
        },
        "item": {
          "id": "8b027859-eb8a-423d-8d03-88241921ed6f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "67732d35-d9ed-49a3-9873-35580bbc535d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3e6126-278e-4f15-8202-4f1152a8c0f6",
        "cursor": {
          "ref": "b7b83a9c-c0fc-4d71-9f58-171e11de6704",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "708c4b0c-515f-4f40-ba00-eea3293cd918"
        },
        "item": {
          "id": "0d3e6126-278e-4f15-8202-4f1152a8c0f6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "051011d0-0e9d-4d3b-ad39-0c515b902802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1751ee-bc16-41e4-8cc9-15924c475568",
        "cursor": {
          "ref": "1e3b3e5a-673c-4c55-a90b-04ac9482ce17",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9eb91278-2018-4366-8844-30dd2528ddca"
        },
        "item": {
          "id": "fa1751ee-bc16-41e4-8cc9-15924c475568",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "dfb48b34-0d2b-4e13-91a7-caf2dee05393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a190967a-7778-48c3-91a7-c08d16c20870",
        "cursor": {
          "ref": "eba6b4ae-3fb2-4370-a155-c048fa24b3fc",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "149ff0b4-e347-4e63-9194-9ca497f630ae"
        },
        "item": {
          "id": "a190967a-7778-48c3-91a7-c08d16c20870",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "94ca36ab-e31b-4b04-9f69-aae4353c6e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9f6307-5fd5-4559-ae76-98d0ca4f5af3",
        "cursor": {
          "ref": "6f8b99ac-489c-4a2b-b23d-ab9a430773bc",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6cec9d55-4cda-41f4-a64a-050818a60d1e"
        },
        "item": {
          "id": "5c9f6307-5fd5-4559-ae76-98d0ca4f5af3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c2a36533-af98-43b4-ae50-fcc3168b2fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83597320-9122-447c-be88-a7a4ccaf5736",
        "cursor": {
          "ref": "8e236199-8283-4bd9-88ea-7e9af4002f75",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "85aefc4f-c81c-44c2-8e2e-dc78191ab907"
        },
        "item": {
          "id": "83597320-9122-447c-be88-a7a4ccaf5736",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3e7d0d89-1636-481c-9065-ea3d3cd906ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49002a5-67d1-4a54-9ba2-731518f63b6d",
        "cursor": {
          "ref": "a505ffea-4840-403f-b9c7-b5a7d65ad61b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b9cfe4ec-d42f-4484-bf76-a7c9e60c8f71"
        },
        "item": {
          "id": "b49002a5-67d1-4a54-9ba2-731518f63b6d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2038c53c-d565-4c87-bfaa-605d735696f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9a5554-0b9e-4753-8ede-b779e078b662",
        "cursor": {
          "ref": "40ba8c59-e682-4bc3-b075-08b88bc3bf70",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "26bcc27e-1933-40cd-b363-8e716ae486e7"
        },
        "item": {
          "id": "5d9a5554-0b9e-4753-8ede-b779e078b662",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "be1e1939-0eb6-4ec4-b1a1-ba90c8cb529e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d13ac93-12c4-4078-91f6-eeb6e71c323b",
        "cursor": {
          "ref": "0f4edb10-ce10-43c0-959c-e265bab20dbe",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6bc7668f-b6e8-499e-80f4-e4cceb7ccdb6"
        },
        "item": {
          "id": "9d13ac93-12c4-4078-91f6-eeb6e71c323b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "56cf4809-3a08-4fd2-bb51-91fdac85c67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac0f1a5-6dc7-4ac0-8c99-522e69108145",
        "cursor": {
          "ref": "c906fce0-7ea8-43b9-bfc1-538b65077dd7",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4d98e2e6-d554-4a8f-8313-6bf5bef86026"
        },
        "item": {
          "id": "7ac0f1a5-6dc7-4ac0-8c99-522e69108145",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b114d67f-4675-4379-824f-a77d228ec893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821a7682-8f4e-4ed8-a156-c571a0679a14",
        "cursor": {
          "ref": "ab5de7f9-8918-45a5-817f-71123a099d76",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "482119b0-3573-4b12-a9db-45f277ae671b"
        },
        "item": {
          "id": "821a7682-8f4e-4ed8-a156-c571a0679a14",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4c1024e0-e617-4683-88ec-aabcebba4bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f050d1-13f0-41a9-8c6e-bc86611a00f0",
        "cursor": {
          "ref": "559a60a1-525c-418f-83e2-c6f8fbf9649b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c3124c74-37ec-46ce-b1b0-3f64383f8e15"
        },
        "item": {
          "id": "53f050d1-13f0-41a9-8c6e-bc86611a00f0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6499cb3f-612a-438a-8bd6-0a93b21aeb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f788f21-8da2-450f-94d9-2adac2a284d7",
        "cursor": {
          "ref": "2fe3d2e4-e4ee-4821-a752-9e95782fb3a1",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f196f8a8-8776-40a1-bd24-9dac375e8414"
        },
        "item": {
          "id": "7f788f21-8da2-450f-94d9-2adac2a284d7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a1660c6b-e1e1-4753-b9f2-ddb14cd622aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf36fd53-c11c-4609-8b33-f9d7037d119f",
        "cursor": {
          "ref": "87ba2a73-8ceb-4340-9866-c6d0d5ef325f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a46c579e-14c4-4a77-b7d4-797a9141ff87"
        },
        "item": {
          "id": "cf36fd53-c11c-4609-8b33-f9d7037d119f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b3e94d9f-25bf-4e0f-9278-df26864de7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d3b5a6-2cc0-4733-87ef-d04f85f58ac3",
        "cursor": {
          "ref": "4a209643-8679-4172-b8f2-b9fc9712c6d9",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "466071a2-1b63-4a06-ac87-ff783000860a"
        },
        "item": {
          "id": "95d3b5a6-2cc0-4733-87ef-d04f85f58ac3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "550e18ba-80b7-4eb0-8f09-13587422cae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e633d085-d6c7-420e-970b-66e1b3f61de4",
        "cursor": {
          "ref": "58a612b5-f41b-49a2-a62f-f9126c85d11e",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5ce521ec-86c4-42ef-9988-bf82fe20ba26"
        },
        "item": {
          "id": "e633d085-d6c7-420e-970b-66e1b3f61de4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "429fdfa6-1467-4995-9cc1-20d25ea31494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e50ee2-1b3e-4211-8289-3cb8001bb326",
        "cursor": {
          "ref": "bf00a384-a9ad-4138-9512-8c8d0ab10fe3",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2133b061-9b42-4307-90db-3d19d2ec9772"
        },
        "item": {
          "id": "a9e50ee2-1b3e-4211-8289-3cb8001bb326",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9ccb97a7-4f3a-469a-8837-c3cd6980ee5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa744d0-b772-4e29-8956-e71a4f14c8f8",
        "cursor": {
          "ref": "daaca389-1c47-41fd-a394-a4942173c0b7",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f3146189-fd0f-40e4-82c8-eb42f2ad66ea"
        },
        "item": {
          "id": "faa744d0-b772-4e29-8956-e71a4f14c8f8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "385b4f1b-d5f7-4891-9001-6e56ed79ec22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65aa7bd4-c4be-4c45-bcd6-abf50b0dcb32",
        "cursor": {
          "ref": "36f8c3bd-bb38-426e-ae99-0b80156bd272",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c2d9edda-9bce-4f97-9896-4758029da048"
        },
        "item": {
          "id": "65aa7bd4-c4be-4c45-bcd6-abf50b0dcb32",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6af25fb0-f759-4174-a688-931026f7dc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9060ba16-fe19-4058-887a-4ecf2a06f381",
        "cursor": {
          "ref": "77f8b6dd-36f6-45c3-a269-b3edc0d8c324",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7a606e4a-84db-4de1-891f-4c3d44064f55"
        },
        "item": {
          "id": "9060ba16-fe19-4058-887a-4ecf2a06f381",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bed35ff4-0b8e-4ea8-a307-eed98b1eb767",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a291e5fb-3806-4ec6-8c12-c29a31f2cf06",
        "cursor": {
          "ref": "fe9601ca-1f82-4ef9-970e-bb8cd8d4764d",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "23bf3fda-feea-4d04-8bb3-00e7476537c0"
        },
        "item": {
          "id": "a291e5fb-3806-4ec6-8c12-c29a31f2cf06",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c33552c2-ab7f-461d-8857-532c6e083ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4ee10019-5deb-4972-8f99-24d6d96b493e",
        "cursor": {
          "ref": "116ee7ff-aa64-420e-9925-0b12ecec86bb",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f579c2e5-81ab-49fb-aea0-15d47e1ebc89"
        },
        "item": {
          "id": "4ee10019-5deb-4972-8f99-24d6d96b493e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "217f2a8c-b105-4b10-87de-060277def505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "807b74a2-68ab-4dce-89b0-8507ff8ebd7d",
        "cursor": {
          "ref": "54c6e5ef-c479-426b-a46b-6954d9daaeb9",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "341149ae-76a7-40a8-a17e-a68d77c7a82c"
        },
        "item": {
          "id": "807b74a2-68ab-4dce-89b0-8507ff8ebd7d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "48a64355-c82c-44c1-b9d1-bfd53dadd5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c1c2ea8e-4e8f-4d6a-b378-e5ddf3026dcc",
        "cursor": {
          "ref": "df0a665e-26b2-42fa-a513-743d845db329",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "09791f22-67c7-421f-ab45-b079ae8be172"
        },
        "item": {
          "id": "c1c2ea8e-4e8f-4d6a-b378-e5ddf3026dcc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "aafd10ee-fbf9-480a-91fa-c73fea42de23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "92e8134d-4bb8-4859-96cc-e42cb90730e5",
        "cursor": {
          "ref": "a9050b0c-7069-4444-96ee-fc0d3719ae09",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "24730261-5102-4a86-bef7-2c30adea25da"
        },
        "item": {
          "id": "92e8134d-4bb8-4859-96cc-e42cb90730e5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9d3a4e05-4591-41ed-9ea8-cd2090abc16f",
          "status": "Created",
          "code": 201,
          "responseTime": 9151,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa73ec5-7b8b-42cc-a180-b99ceaa29be9",
        "cursor": {
          "ref": "61179dec-7cfb-40c9-b99e-f607712327d6",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b2410dd5-1056-4cde-af9b-eca9d65ea0f8"
        },
        "item": {
          "id": "2aa73ec5-7b8b-42cc-a180-b99ceaa29be9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3624775f-bf3f-4d57-b176-49dab4180a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "dafb51f8-4c7f-48aa-b327-19ed99fe89f9",
        "cursor": {
          "ref": "5d390d94-d1c6-4735-8d92-3dcec331ef04",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "480e8f5e-0933-48db-bdd5-bf757f4b87fe"
        },
        "item": {
          "id": "dafb51f8-4c7f-48aa-b327-19ed99fe89f9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bef02ce0-698d-4cc7-b8e8-c391db4cca9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d872d492-9df1-401d-baf7-62fa3e46fd54",
        "cursor": {
          "ref": "abf92f9a-4997-4659-93e8-c3649ff7d6f4",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8754c848-f884-47ec-9225-f38c3edf1489"
        },
        "item": {
          "id": "d872d492-9df1-401d-baf7-62fa3e46fd54",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "895558e5-9d52-48bf-9d54-cd1bf2487a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c176dd-0d57-4ab3-89e6-3905e39d2fdd",
        "cursor": {
          "ref": "8e17dc7b-594a-4f04-89e2-d6c6939937fc",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "62704f21-8356-48b7-a0c0-60804bcce87d"
        },
        "item": {
          "id": "73c176dd-0d57-4ab3-89e6-3905e39d2fdd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "926c26fd-dec1-44fc-b97a-254df07a02ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1a72d0-7142-49ad-bc99-d1e41a789eba",
        "cursor": {
          "ref": "2954f265-8efa-43c9-ab1b-c60f73da3fc3",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "61b03524-6add-4e02-899c-b9408abd5d02"
        },
        "item": {
          "id": "8f1a72d0-7142-49ad-bc99-d1e41a789eba",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f47291d4-1065-4305-9bc1-6da3762c47d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2938d75-c0b8-4d6c-8b1b-53130fbf4928",
        "cursor": {
          "ref": "9cc4e20e-e1dc-4ab2-99de-24e9dc833382",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3e7d1311-37e3-4691-a4d8-a1c1538c6b41"
        },
        "item": {
          "id": "d2938d75-c0b8-4d6c-8b1b-53130fbf4928",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "db4ac77b-47ec-4bf8-bccb-a2dfe42be808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a01f626-7106-4e69-9fcf-8f6980ac6fe8",
        "cursor": {
          "ref": "68267c58-39b5-4011-966e-bba78a1df7c4",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0e2771d2-cddf-4d85-82a8-a674f8694e2c"
        },
        "item": {
          "id": "9a01f626-7106-4e69-9fcf-8f6980ac6fe8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "22a82b37-2667-48fb-9328-eee1ccc4fa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4f87f4-c161-4620-a36e-ca4273aa801f",
        "cursor": {
          "ref": "0b0bd582-7127-46f2-ad66-cc5143f15a81",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "82ea2bb3-0c0b-4d4d-882d-16fd617cdc16"
        },
        "item": {
          "id": "7f4f87f4-c161-4620-a36e-ca4273aa801f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7570927a-942e-477b-a57b-0ef57fcebf8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8c326f-4437-4ae1-84fc-a4869bd894d6",
        "cursor": {
          "ref": "8c53a623-82c5-42a2-aeb2-a3b78dbfa55d",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "15c551aa-1503-411d-a4b2-9220452f80e0"
        },
        "item": {
          "id": "9d8c326f-4437-4ae1-84fc-a4869bd894d6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "58aa14d2-9a37-4e6d-99f8-b817ab467034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0450ae-e261-4a88-b200-6ae8bd1d9438",
        "cursor": {
          "ref": "a98ad0f5-26ad-4120-a9a0-ad036a41e6ff",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9bcb5e14-fdd8-4e37-9aad-184012e5aa9f"
        },
        "item": {
          "id": "dd0450ae-e261-4a88-b200-6ae8bd1d9438",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3725b566-9373-48c3-abcf-3d2320dc0b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa65979-c787-4929-8b29-14806dcdeb1b",
        "cursor": {
          "ref": "a245b7fc-2414-483f-a803-8631a82f8966",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bb074f19-12be-4f93-9fbc-34aa6e304f62"
        },
        "item": {
          "id": "caa65979-c787-4929-8b29-14806dcdeb1b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bc8fe485-d216-4026-9ac1-bda1111c7c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aae0f97-0bcf-4878-9e18-518bf50caa42",
        "cursor": {
          "ref": "712eb03e-ba16-4db5-96af-70dd7df219af",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "429d5d17-89b2-4ea8-920e-6e131ef65e6a"
        },
        "item": {
          "id": "5aae0f97-0bcf-4878-9e18-518bf50caa42",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "10a7937d-7f92-48cf-bd6f-5a2c684bc75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efe5519-0194-474b-bb33-82d5f2eaaddc",
        "cursor": {
          "ref": "14529bfa-6a02-426b-b1eb-cd78127bff82",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "83d2c0bd-4e8a-4c15-b41a-26d99fb2a61e"
        },
        "item": {
          "id": "4efe5519-0194-474b-bb33-82d5f2eaaddc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "730ba4fa-1916-4c54-8c76-14201aa788fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81af7a9a-c92e-455c-afbe-cb9727e737b9",
        "cursor": {
          "ref": "eed618e3-4050-4e5b-b041-5e1377f71652",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "03ab2a1b-9529-420e-b937-4c5c5791b6a5"
        },
        "item": {
          "id": "81af7a9a-c92e-455c-afbe-cb9727e737b9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6028b9f6-556c-4b08-a6d8-b96863c801fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c5e04b-6f33-442c-a04e-14b19e83a2ae",
        "cursor": {
          "ref": "3390743d-a234-4230-9d36-782d0618544e",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7515e01d-2f30-4f77-b166-3005ec6736e3"
        },
        "item": {
          "id": "f5c5e04b-6f33-442c-a04e-14b19e83a2ae",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c7c23d89-91bb-4056-a330-ed602e47b419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7569135b-5c2b-4c46-a0b1-f0f1ee10c8a0",
        "cursor": {
          "ref": "bff813ac-0fe1-45fb-aa1e-e7d642dafa49",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "914f27da-83ab-48bd-ae87-c0e2db59183a"
        },
        "item": {
          "id": "7569135b-5c2b-4c46-a0b1-f0f1ee10c8a0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "371bf7cb-a81d-44e3-839b-3c46884c8abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfe3394-5e7c-4d55-b4df-5537373c3b59",
        "cursor": {
          "ref": "8ddf7071-7d8a-47f0-8588-a881c636ba51",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "358072be-bc3f-4b76-acf3-fdbed49cfd0b"
        },
        "item": {
          "id": "3cfe3394-5e7c-4d55-b4df-5537373c3b59",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f1ebeece-59dc-4355-b706-73cdb2246c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4966935-d180-43d1-8fa7-1eb3d51759d4",
        "cursor": {
          "ref": "917c448a-7423-47e9-b5c6-437dc57f5274",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "436381ea-fb1b-475d-a743-b32ca9e379bd"
        },
        "item": {
          "id": "d4966935-d180-43d1-8fa7-1eb3d51759d4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "46a4d18f-40eb-4e88-a4c2-990c3464cc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598f5a3e-f01e-4879-8673-03b626fc2b62",
        "cursor": {
          "ref": "45a51962-2082-4ff5-8a72-dd9005a52137",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5a47d348-cdf6-45a4-a434-622d9fa78839"
        },
        "item": {
          "id": "598f5a3e-f01e-4879-8673-03b626fc2b62",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "93c627cb-2f84-4784-855c-96662b080908",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 403,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "69961146-a446-49d2-910e-53ecaffa6178",
        "cursor": {
          "ref": "785bb95f-c194-4c53-b0e0-ae1a4d9b75cb",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "91e1cdb8-1b6b-465e-a33f-48d3c3a55456"
        },
        "item": {
          "id": "69961146-a446-49d2-910e-53ecaffa6178",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "34bc4e4a-5355-4992-88b2-87a5dcd3efd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70134fd6-d2af-4d11-a5dd-977f8717c6ed",
        "cursor": {
          "ref": "fc6714ad-8705-48f4-9b8c-80fed007e58f",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6e26b8a4-2632-4498-aa2e-ae96ecdf0ba3"
        },
        "item": {
          "id": "70134fd6-d2af-4d11-a5dd-977f8717c6ed",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7b85e669-f436-434e-bd8d-634c9ca8631c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a981d82-22b1-416f-a637-4e8b47e57d6c",
        "cursor": {
          "ref": "e4420489-4c76-4dee-9847-2c7e51d51fa3",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7725d2b2-eb13-4260-a635-7ad712fcebb7"
        },
        "item": {
          "id": "1a981d82-22b1-416f-a637-4e8b47e57d6c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5dc3739d-665b-4d20-9574-3968bbc54e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0fb1db-890a-4115-9450-2aaec3b53f48",
        "cursor": {
          "ref": "405ef0d8-771f-4888-ac27-1b1f637b9c11",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8d657fb5-be17-4639-a1d1-b90ce5b7ced5"
        },
        "item": {
          "id": "dc0fb1db-890a-4115-9450-2aaec3b53f48",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8364bdad-0edb-479c-a25c-9947da9e54ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3fd6a7-d7a6-4a22-8556-199e7e4a0951",
        "cursor": {
          "ref": "8f0e5668-a457-4566-8687-a4634ccae5e6",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "87b6659f-6a0f-4734-9100-403cab65cdb6"
        },
        "item": {
          "id": "cb3fd6a7-d7a6-4a22-8556-199e7e4a0951",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7ef26c55-2a21-4a11-b7cd-cce519225ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c1b576-f0b1-460b-9c9e-856482632c08",
        "cursor": {
          "ref": "be56ed99-2949-4a4a-aeca-e4384a940413",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "df8e89c0-a6b1-4640-9320-73c4dde6e80f"
        },
        "item": {
          "id": "a0c1b576-f0b1-460b-9c9e-856482632c08",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "575db960-127d-47fe-8669-e9cde7761218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55cacd1-c88f-49d7-afba-0d1b31d109bd",
        "cursor": {
          "ref": "10b9d0f5-f417-4269-94e6-20680be5a5bf",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5b666cda-efef-4d51-842e-eeecb35454ec"
        },
        "item": {
          "id": "d55cacd1-c88f-49d7-afba-0d1b31d109bd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b012bbfd-303c-4329-904f-f56fedfd8a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffda7cf-4bc7-4c4f-a10e-2f0c08860a7f",
        "cursor": {
          "ref": "1153a586-d694-4c94-a862-133c651eb0b4",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "11b6a6ef-09e3-4db5-b139-9dcd4a28624a"
        },
        "item": {
          "id": "1ffda7cf-4bc7-4c4f-a10e-2f0c08860a7f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5b3d235e-204c-476f-bf11-2455061fed54",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "6d4b2fcc-4e4c-4efb-8a00-9e3d84aa71e8",
        "cursor": {
          "ref": "c6608e45-ed4f-476f-9984-23739c89a588",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5b69dda7-4376-48cc-a120-25166ef72f47"
        },
        "item": {
          "id": "6d4b2fcc-4e4c-4efb-8a00-9e3d84aa71e8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3118cabd-9d88-4f79-ae58-080292e647f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8ded7d-0401-4122-ad3a-6c745fdb58bc",
        "cursor": {
          "ref": "7c94f7cf-2ae5-42ba-b3ce-d50c0cc4ed0e",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0a4069ca-33b5-4803-b080-602ec3936cd7"
        },
        "item": {
          "id": "5b8ded7d-0401-4122-ad3a-6c745fdb58bc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "245fb510-9eac-4f69-aa23-09ef3132e84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c1091c-2d88-43b3-b5bb-bdda7b441de9",
        "cursor": {
          "ref": "8a2f326e-3c91-4927-91ac-49f5cc7f4ba2",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "af6f82b9-31e5-48b5-b362-212509065d5c"
        },
        "item": {
          "id": "96c1091c-2d88-43b3-b5bb-bdda7b441de9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "89e819fb-6119-43ae-9e92-f4ac202f912b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aef1313-bbf6-4275-9c12-7dda9f27a045",
        "cursor": {
          "ref": "76a46388-edd0-42fb-b063-6033cc249146",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "98c535c5-43ee-49c6-b4d3-ab1d5aceee69"
        },
        "item": {
          "id": "9aef1313-bbf6-4275-9c12-7dda9f27a045",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ef18a859-9d01-4d47-841f-aaf224cd4f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590a22e8-41fb-42ea-8ae3-fc6e7c73a28f",
        "cursor": {
          "ref": "63bec631-d864-4a86-9468-4a41475e34bd",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6d147df8-72f0-4726-a830-626e5174724d"
        },
        "item": {
          "id": "590a22e8-41fb-42ea-8ae3-fc6e7c73a28f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a9004dfe-d65c-4ca9-890a-53ce874cddd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa0d2de-72c3-4207-b53f-0bafe39cfcb8",
        "cursor": {
          "ref": "213fdd0f-6d27-4e34-9cc7-c50c7e17b172",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e951a554-c5c6-40bb-b7ac-f6ab50cef976"
        },
        "item": {
          "id": "ffa0d2de-72c3-4207-b53f-0bafe39cfcb8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9e04e849-3a3f-4b91-84fb-6cf31c8b8028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3859679b-ee5b-4f31-9c0f-cc7ee4dc46cc",
        "cursor": {
          "ref": "396b117e-cf35-448f-a976-14c329e34801",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0131699a-2a8e-4736-874c-e144ab84ba89"
        },
        "item": {
          "id": "3859679b-ee5b-4f31-9c0f-cc7ee4dc46cc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "931debb5-017c-44b7-a8bf-676c6d11a9a7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 80,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "be0b04f4-2ba9-426a-91f7-a6dbccf302dc",
        "cursor": {
          "ref": "3f4ca48d-2891-42e6-b36f-8a67122ad185",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3b3127cc-b366-4875-b515-56b648964e5e"
        },
        "item": {
          "id": "be0b04f4-2ba9-426a-91f7-a6dbccf302dc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1990f316-b46c-41c8-952b-1439ee7ef838",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413b0d3c-c72d-465e-b4ab-56b47a8aabdf",
        "cursor": {
          "ref": "db87a8c8-b585-4275-9f07-ceb829894663",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5ca187cf-3164-4722-911c-39af3fd8c3d2"
        },
        "item": {
          "id": "413b0d3c-c72d-465e-b4ab-56b47a8aabdf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5eb32d6b-b9da-405c-9518-a402703f5b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c277c7e6-a481-491e-b6c8-f3212dbde39e",
        "cursor": {
          "ref": "69fce76b-ee05-4f14-a191-3fca2699aecd",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "dca959a2-f60f-4ce4-b684-0dbdc02de04b"
        },
        "item": {
          "id": "c277c7e6-a481-491e-b6c8-f3212dbde39e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0c1e45ed-2eae-421a-be31-631783a965bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7daa19a-ff88-4202-88f8-3cd349afce08",
        "cursor": {
          "ref": "f7d4c317-1fa6-432f-86a1-3b9a18a203f3",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "660b3ada-7e1d-48af-a65a-ec3f203a34ee"
        },
        "item": {
          "id": "a7daa19a-ff88-4202-88f8-3cd349afce08",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a46a7fef-24e6-403e-a904-a98ac5129b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f05a4c-abd9-4321-bb78-5c5ec41ff041",
        "cursor": {
          "ref": "6c8539a9-f2de-4b41-b7f9-ee192bfb953b",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9064c01c-a0ad-4bbe-9a06-622e8104c46b"
        },
        "item": {
          "id": "d1f05a4c-abd9-4321-bb78-5c5ec41ff041",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f15d437b-ec85-4cea-9384-3af574df586b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79455f66-b4b3-4927-a053-9354e53ac8bd",
        "cursor": {
          "ref": "108a0de9-1cd0-4f38-9094-210073409b28",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "86594733-4c3b-49fe-9f2c-543343c8661f"
        },
        "item": {
          "id": "79455f66-b4b3-4927-a053-9354e53ac8bd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6b0abb38-b66b-4366-8b64-b329a94cc221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95158b1b-6aea-461b-9afc-ad1aa4c19284",
        "cursor": {
          "ref": "d33dcb3f-904f-4133-88b8-eab82a2de499",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fcc316e4-33fb-4ee4-82a5-e57360aea6bc"
        },
        "item": {
          "id": "95158b1b-6aea-461b-9afc-ad1aa4c19284",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "542daf44-ff05-4e2a-b608-9e0cacfb0037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10d3ad5-622a-4bd9-8daf-c6b507536455",
        "cursor": {
          "ref": "cb0ec186-e3ac-4655-bf88-e61705cca55a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "67ea300f-aeeb-409c-a325-de361a95d4e6"
        },
        "item": {
          "id": "a10d3ad5-622a-4bd9-8daf-c6b507536455",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2a1d2996-0987-4a2c-be80-a07ecc4187a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1c92e3-56da-4890-b60e-c84cb3d55a39",
        "cursor": {
          "ref": "1090e25b-ac6e-4b56-b396-6a29614b8ffd",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4516ef39-6df8-494a-a9f1-21859684401a"
        },
        "item": {
          "id": "1e1c92e3-56da-4890-b60e-c84cb3d55a39",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a6485f76-d4a0-4be9-aad6-65dcef88e339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1ce207-fcd9-4cdc-8141-bd09b8c40630",
        "cursor": {
          "ref": "69ef1e3a-73d8-46f7-b8f3-d33a3427f72a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "de7ddf53-f54a-4e14-8115-270317417c9c"
        },
        "item": {
          "id": "7c1ce207-fcd9-4cdc-8141-bd09b8c40630",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b27a20e6-12d5-46b5-b707-cb408074ebca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d248aa2-61c3-4028-ba4f-0f0ab567635b",
        "cursor": {
          "ref": "6c704d59-7d16-4347-bdcf-8b91f95f1952",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d9e43ee2-ca0a-4094-a29d-e95d25848de9"
        },
        "item": {
          "id": "3d248aa2-61c3-4028-ba4f-0f0ab567635b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2b88f54a-6f0e-4144-931a-b6c1026b033b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0b1a5b-03d0-4a79-b4bf-3c87ff7d2532",
        "cursor": {
          "ref": "c5f1d436-ddc7-4dd5-9bbb-0025e2daac27",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "576202d0-39e1-45c4-93d2-455160bc8637"
        },
        "item": {
          "id": "bb0b1a5b-03d0-4a79-b4bf-3c87ff7d2532",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f0f56a72-1463-4d08-99fd-72e7b1b9ee70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75401679-9cac-4794-a40c-a895c6ea1e3b",
        "cursor": {
          "ref": "a59cf174-0127-43cf-b0f7-c47094cadb3a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7302b1f3-1e92-452a-9331-0fd99b8dcf9e"
        },
        "item": {
          "id": "75401679-9cac-4794-a40c-a895c6ea1e3b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d7d589b7-b05a-45b6-905e-774cfd3f1858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5c81b0-a484-4fad-9a9b-c20a8646278e",
        "cursor": {
          "ref": "0a091c6d-6f06-440b-9226-ff32a542bacd",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "79e5932e-ee03-4384-abd2-e1d884fa9850"
        },
        "item": {
          "id": "6a5c81b0-a484-4fad-9a9b-c20a8646278e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "539067cb-c553-48e7-ba00-0a592f2efd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e99c7b-65e5-4a87-aebc-259d51c88cab",
        "cursor": {
          "ref": "7df8efba-c103-4ac0-a83f-b37cda9a2223",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9d31aeca-1633-4e2f-93db-6e6447561e0e"
        },
        "item": {
          "id": "a8e99c7b-65e5-4a87-aebc-259d51c88cab",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e90a30f6-46a3-419c-aa15-0fd40d4eda46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b565ef5c-5449-4ed4-9ff2-2682dc84bdf3",
        "cursor": {
          "ref": "5b741b65-26e3-46ce-9040-e16704be34e0",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fb9eb37c-43d7-48b9-ae07-d74543947608"
        },
        "item": {
          "id": "b565ef5c-5449-4ed4-9ff2-2682dc84bdf3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "68228e20-8f53-4fa1-898f-61bb3e7aefc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9febcd-9f26-46d0-8c72-4e92cfbebedd",
        "cursor": {
          "ref": "8d1a85bc-06ac-4d2c-ac1f-6dccf69e30e7",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "636613d6-9f90-4aeb-814a-d3f42131986e"
        },
        "item": {
          "id": "4a9febcd-9f26-46d0-8c72-4e92cfbebedd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8f83deea-a8e2-482a-a800-1af8935c6175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e8b7e1-515b-48e3-a678-960a9a756c4e",
        "cursor": {
          "ref": "93062791-ee4e-469d-b048-a4530e211e6d",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f9327ed7-1e99-4c78-8ccc-3518a30f57c7"
        },
        "item": {
          "id": "b4e8b7e1-515b-48e3-a678-960a9a756c4e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d9025e8a-7a05-41b5-a983-3972986975dc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "680a1fa0-a51e-4e5d-a16d-5ce0e6d5951a",
        "cursor": {
          "ref": "c0ecded2-6b87-4c3a-a1e8-1753eb680b58",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3f454352-54e0-4767-afce-8633e1922dc9"
        },
        "item": {
          "id": "680a1fa0-a51e-4e5d-a16d-5ce0e6d5951a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ce4d15fe-6a58-40c0-8e22-be5843aebef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed9e1b7-9a25-41d5-b1f7-8c88a27f9e21",
        "cursor": {
          "ref": "38760234-f4a7-4578-9def-29b42342ef1d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cf7c9167-6517-4964-a301-a2eebbd0440d"
        },
        "item": {
          "id": "6ed9e1b7-9a25-41d5-b1f7-8c88a27f9e21",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8ed0fb45-8b0a-4b19-85aa-d5a5b461793c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75467bda-6053-45de-9d94-9e8432a0ae73",
        "cursor": {
          "ref": "1c3d8693-c1e4-48d0-87ca-6aa0feaa0385",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "446d9134-a228-43c5-b193-44071b0f85fa"
        },
        "item": {
          "id": "75467bda-6053-45de-9d94-9e8432a0ae73",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "deaaacfc-f917-4089-a79e-5cdc0c84e0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf197c3-1df3-4c0e-9986-7861305b03e6",
        "cursor": {
          "ref": "29885992-c8f1-4d22-89ba-dc518f432e42",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "dc96b305-eb16-4b87-bb34-593d8116c5ba"
        },
        "item": {
          "id": "cbf197c3-1df3-4c0e-9986-7861305b03e6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8c3cbcdf-901d-43e1-bda2-dfe08d598f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd62b77-82db-4660-9836-5b7b437442d4",
        "cursor": {
          "ref": "8a14d5b8-de5e-47c9-bbf5-78a0a9273176",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cf26573d-a545-4ae0-a84a-5e76c9ac6a69"
        },
        "item": {
          "id": "ccd62b77-82db-4660-9836-5b7b437442d4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c9f7ef96-901f-42fa-b213-b04453facf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e715e53-d6b8-4e47-8a3f-4221d19e0bbe",
        "cursor": {
          "ref": "6caf9a3a-62ce-4458-9cb8-c5dc859805d4",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "11ce262f-ee95-4a81-ad6c-dff01a4450de"
        },
        "item": {
          "id": "0e715e53-d6b8-4e47-8a3f-4221d19e0bbe",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9cf43493-4bd6-48f1-ab01-652833808fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49eabcb4-8a43-4b39-b544-99936cb4033d",
        "cursor": {
          "ref": "2951d391-da24-4691-891f-8d7cb30f342e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3a71d441-b8a7-4395-8561-676f6928d8e5"
        },
        "item": {
          "id": "49eabcb4-8a43-4b39-b544-99936cb4033d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e804040a-167b-4522-990b-567e81bfb8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425df3b9-5b4a-41a4-bacd-f9bb66fdad73",
        "cursor": {
          "ref": "6bd23c01-87af-414b-b7bb-9b5edacf3a8b",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7a68e976-f89d-4601-9f55-56e74afb717d"
        },
        "item": {
          "id": "425df3b9-5b4a-41a4-bacd-f9bb66fdad73",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f99efd52-2cfa-4f48-b48a-5cab5038fe22",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "cc39cb99-c22a-483e-9208-4d4f2d6395a8",
        "cursor": {
          "ref": "9d0e5e5d-f2f0-4d14-8de8-1b513713868b",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6def7c67-9ba0-4310-b3eb-66eabb4c5232"
        },
        "item": {
          "id": "cc39cb99-c22a-483e-9208-4d4f2d6395a8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ad49903c-ff62-4885-b7aa-f3f058c2a319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f174bd-811c-47a2-9d1b-d276078b3858",
        "cursor": {
          "ref": "81eb086d-92d8-4194-80b0-bb524a04b145",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1b73f450-4732-4b25-91b0-bf546983ba97"
        },
        "item": {
          "id": "f8f174bd-811c-47a2-9d1b-d276078b3858",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b9d19c00-961e-4667-8727-5dceb02319a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882113f4-0252-4d6e-a370-e9557e8244bb",
        "cursor": {
          "ref": "3fa8e2bf-5640-43c9-9a75-1ec2625f3ff3",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ca4dd054-dda1-43dc-a1eb-00bbf9bc459b"
        },
        "item": {
          "id": "882113f4-0252-4d6e-a370-e9557e8244bb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f2f866c6-228c-48f3-a91b-7fd34631ffa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b551201-18ae-40ec-bcdb-bac0fce1c63c",
        "cursor": {
          "ref": "3b3ccb32-fcde-48e9-95ca-b417f7b121fd",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a51ad7ae-3123-425f-9829-ff5a40df11b7"
        },
        "item": {
          "id": "5b551201-18ae-40ec-bcdb-bac0fce1c63c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dd12f563-35a3-43dc-9e7c-d02c6ecf4511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdeaaaa-4afe-41d0-90e8-33478a512c3b",
        "cursor": {
          "ref": "bb9b5319-bac1-4f1d-b1c6-471416161c9a",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3c99cb1d-e596-4e25-9e23-c13bc548061f"
        },
        "item": {
          "id": "abdeaaaa-4afe-41d0-90e8-33478a512c3b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c8701c09-489b-4014-9558-be20119a78b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6dc2b23-ecea-4917-ad6c-5681503123b0",
        "cursor": {
          "ref": "bae5cb0a-8179-49c3-b31e-e268047d4a70",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8c1b642c-77a0-4005-b075-bfacbc207aa0"
        },
        "item": {
          "id": "f6dc2b23-ecea-4917-ad6c-5681503123b0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9ab0dfc6-e12b-476a-8582-af14ad389a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be83ea9c-1fb8-4e41-83a7-f56ffab483ce",
        "cursor": {
          "ref": "45a6102f-93ea-4ac8-ab6e-41063cc6cfbb",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "76b6a369-10a8-4629-a7b0-dd7f151c6d8c"
        },
        "item": {
          "id": "be83ea9c-1fb8-4e41-83a7-f56ffab483ce",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "314fa93c-8f7d-44c8-a064-1fbf34d6a80e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "beffd39d-bc7c-4748-bab4-1177bd0af1e8",
        "cursor": {
          "ref": "21aef7a8-dde4-46c0-a126-94597395b141",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6259b1c4-a731-4c8f-9284-6d99a9db298e"
        },
        "item": {
          "id": "beffd39d-bc7c-4748-bab4-1177bd0af1e8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b056a37a-b0e9-4b94-a5dd-f55ca0bcffaf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "ad927e0c-48ac-4edf-ba4c-ba7667ca128d",
        "cursor": {
          "ref": "52959522-0fc8-4dc4-9226-78c9c2e8bda4",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "30055727-9cd4-425b-85f1-824892717040"
        },
        "item": {
          "id": "ad927e0c-48ac-4edf-ba4c-ba7667ca128d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cebf1c59-0fec-4b88-b4bd-3aa404011505",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "9a52003e-1661-429d-9f2b-4e983c3664e6",
        "cursor": {
          "ref": "28c75130-9af8-4191-8916-715696c716fb",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bb353564-67ff-4424-9230-c4ce7b1ec100"
        },
        "item": {
          "id": "9a52003e-1661-429d-9f2b-4e983c3664e6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6c4079ca-d15e-4bf3-b9c6-92d950c46d32",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "075d0544-519b-4c6f-8f89-2ec884414f91",
        "cursor": {
          "ref": "71a5011c-454c-46d3-aef8-3f4b4e982902",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5a4d3846-a487-4197-9ddb-29ff03449f00"
        },
        "item": {
          "id": "075d0544-519b-4c6f-8f89-2ec884414f91",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9cfc9938-2b5c-426b-a79d-dc47a49c52e9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 116,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "89b8037f-f23a-4263-979f-f7ce235c0f91",
        "cursor": {
          "ref": "938e92b6-570a-4cf7-815d-700bca4af483",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3bcc8aa4-e179-4a6c-84ab-c21471d788fc"
        },
        "item": {
          "id": "89b8037f-f23a-4263-979f-f7ce235c0f91",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a379d19f-4d29-46f0-bc86-4cda2045c4f7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 52,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "00db0c15-3f81-4266-8161-1b0ea7dae6b8",
        "cursor": {
          "ref": "a2abba51-e052-4111-b319-9e7daa3c2417",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4ce2cef2-5b20-4667-8efb-4f7b60371c3b"
        },
        "item": {
          "id": "00db0c15-3f81-4266-8161-1b0ea7dae6b8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "eb668ea1-05fe-4099-9234-e9437e2d167a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1587651e-859f-4b6b-8a91-ac135a789fc4",
        "cursor": {
          "ref": "db55d7bc-f63c-461f-98b0-abf61dd7ac1e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e92f824b-8e0e-4d44-af09-c0eb19642198"
        },
        "item": {
          "id": "1587651e-859f-4b6b-8a91-ac135a789fc4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "57639fc0-72e0-482e-9038-c6ea0ed6e941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a146da06-07fd-452c-a4a4-8f97c545b327",
        "cursor": {
          "ref": "f7497102-aff8-453e-9127-b5aa80754ccd",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3740c753-6b60-43a5-a900-5298f231d7d2"
        },
        "item": {
          "id": "a146da06-07fd-452c-a4a4-8f97c545b327",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "57127c2b-5eb4-4ab8-b67c-0d4267894e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ed6568-71eb-42d1-897e-264e94a35542",
        "cursor": {
          "ref": "0d503820-8006-4d4d-b995-ca5028277fa5",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "34639fc3-681d-4654-81fc-de99c3641f10"
        },
        "item": {
          "id": "91ed6568-71eb-42d1-897e-264e94a35542",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f0258367-33fd-408e-931b-31dce7f4a1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6097a7b-2c67-44a0-b39e-1b395a5b3f0f",
        "cursor": {
          "ref": "367c2b84-3335-45e3-a28e-d86059a0d8c0",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "15e3bdb9-dc77-469b-b018-89f6e576d579"
        },
        "item": {
          "id": "f6097a7b-2c67-44a0-b39e-1b395a5b3f0f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "04786c65-0222-4896-b5b9-7c8209957ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1f8208-192c-452f-a0d4-b3d8f84c4e42",
        "cursor": {
          "ref": "564c1a63-5456-4105-84e3-abb95ab003be",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f7caaca3-86a3-47c0-a7eb-f0a343585264"
        },
        "item": {
          "id": "7b1f8208-192c-452f-a0d4-b3d8f84c4e42",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f1f4b70f-1cce-48bb-bf58-d75606a812ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59151572-3aad-4d5e-8562-a78757aa5c4e",
        "cursor": {
          "ref": "15e80984-1f7a-460d-9e85-bb1b90e965a3",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "74915e55-3f43-41a3-adc4-470603d2af91"
        },
        "item": {
          "id": "59151572-3aad-4d5e-8562-a78757aa5c4e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1f3a6129-6e06-4f96-abb3-2cfbd2f02387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf6b885-547f-4fc6-8045-2665e6e584ea",
        "cursor": {
          "ref": "806d6626-e382-4ba7-89c8-c96c9f39e67f",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c75312a8-f266-4e0c-85eb-2e6d6c613339"
        },
        "item": {
          "id": "8cf6b885-547f-4fc6-8045-2665e6e584ea",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "448655a9-8efb-4061-a205-85bbf1a7896b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4798b97a-846a-4bbf-8eed-a4e0009b4d22",
        "cursor": {
          "ref": "38ef9a92-fa1c-4031-9461-dcb2d0a3aa88",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8ff99248-d827-473d-896f-8394eb7685d3"
        },
        "item": {
          "id": "4798b97a-846a-4bbf-8eed-a4e0009b4d22",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "94f33ec2-7f57-43d7-b805-fd8a3f13b03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9252c77-7f08-4692-ae7a-8fbb7b5c1492",
        "cursor": {
          "ref": "774b55af-868f-4f84-a7c9-6fe42af1cb81",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9e4bc70f-6900-4de8-a4b5-fc1aea39dab2"
        },
        "item": {
          "id": "b9252c77-7f08-4692-ae7a-8fbb7b5c1492",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "754ebe22-c210-4655-be1f-3dc63ca1bb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23540d5-95f4-485b-b25c-5b1d4da2f4ee",
        "cursor": {
          "ref": "206d74b1-71c6-42fb-a86f-d9b5f6714f0a",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "79480a3d-4c59-400a-83d4-abe10b6af042"
        },
        "item": {
          "id": "b23540d5-95f4-485b-b25c-5b1d4da2f4ee",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ba2019e1-6e2f-47bc-b46a-10bc2f22110a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce64290d-39ca-4f68-a320-b7f725182059",
        "cursor": {
          "ref": "a45a93d7-b80f-460d-a35a-1c4b24ddb622",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6267123c-feaa-4dc4-92d4-c52fe39f6f88"
        },
        "item": {
          "id": "ce64290d-39ca-4f68-a320-b7f725182059",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5540caaa-8394-41bc-9afb-f2b54bfba8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45d827a-54ec-4865-80a6-39ff452648a0",
        "cursor": {
          "ref": "4338d99f-44b0-4d9a-9e13-962a6de2decd",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9f753b66-e49f-4d0d-a68d-ffa781b56a3d"
        },
        "item": {
          "id": "f45d827a-54ec-4865-80a6-39ff452648a0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0d267eeb-962e-4c83-8f00-264d04f9db24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f2f199-bf93-43c3-be0d-16f25798eb5d",
        "cursor": {
          "ref": "7c0b8964-1802-4527-ad17-bca9f6f926dc",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "72f477c0-fd46-4d70-a436-bf3a35f55d76"
        },
        "item": {
          "id": "f0f2f199-bf93-43c3-be0d-16f25798eb5d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f8e456a0-3f17-4561-9efd-d5136a77f6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62543092-1ff4-4b3c-9e28-3bffb9b5e7ca",
        "cursor": {
          "ref": "6824435b-014d-4170-9b60-e5a120120384",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "852a910e-1f9d-4426-b6fe-1072842e81ba"
        },
        "item": {
          "id": "62543092-1ff4-4b3c-9e28-3bffb9b5e7ca",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "400bfcd9-870c-48c4-a039-e1efce89ce64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7794ad1f-6b82-49d2-98e8-74a59148f3b3",
        "cursor": {
          "ref": "19f0d7dd-bcd4-4732-917b-24b741e275c9",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "906f4f62-835c-445b-947c-9f4e1ff1a601"
        },
        "item": {
          "id": "7794ad1f-6b82-49d2-98e8-74a59148f3b3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c878b4c7-2b7f-4911-bc5e-746329736450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9dbbde-ea6e-467f-85f2-549565565e9b",
        "cursor": {
          "ref": "755ba2a9-2e78-4547-b80e-ee8abfd50f86",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "59548d74-aa5e-4a84-ba7d-c2d5c6753680"
        },
        "item": {
          "id": "4c9dbbde-ea6e-467f-85f2-549565565e9b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "aa2ec4c9-9ad3-45b8-b451-7791e8f86f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d94441-7c64-4ec2-a7d7-003e3819ebae",
        "cursor": {
          "ref": "3fa4453c-28e0-4aef-97e3-cdbdc61e46b2",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "67b4cdd3-5212-4379-91b0-e2b598a6afd5"
        },
        "item": {
          "id": "c1d94441-7c64-4ec2-a7d7-003e3819ebae",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "73343648-e5cd-48b8-829c-082dec0ba510",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "5bde524b-02a9-4471-aeb0-5e5e8aa7e0a8",
        "cursor": {
          "ref": "f200d047-1841-489c-bd83-a6a359a240c6",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1deb7558-10ef-41c7-b64d-a38d3a3a12e3"
        },
        "item": {
          "id": "5bde524b-02a9-4471-aeb0-5e5e8aa7e0a8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bb2917b9-5863-412d-97a8-2e658df13030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ae6498-347b-462c-be39-c707c4aa09f2",
        "cursor": {
          "ref": "d606457b-d917-408e-ad46-50a84b04e368",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "327c96fb-daab-45b0-9b22-3ac23a34d81b"
        },
        "item": {
          "id": "c6ae6498-347b-462c-be39-c707c4aa09f2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5eacc86f-9580-4c9b-91ff-37ef23a5ce26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a54fbc-3845-4445-b551-69288e2c2113",
        "cursor": {
          "ref": "79fb249f-50e7-4bb8-aa75-72527d414f87",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "df64a759-3169-4d04-99a9-3dfebf622dbd"
        },
        "item": {
          "id": "73a54fbc-3845-4445-b551-69288e2c2113",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "29e4e8a3-d0f1-4eaf-8e2d-15c5363f4150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb29ae41-d205-45e7-8be5-1237b53a252a",
        "cursor": {
          "ref": "cd77cd3f-f49a-4b06-8dcc-5294ca06da9f",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "36dc34ee-5488-49f5-8d62-9dae27afe089"
        },
        "item": {
          "id": "eb29ae41-d205-45e7-8be5-1237b53a252a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "99eee9b8-1bf1-4c9d-b6b9-3999ba14f0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f7366f-6ce2-49d9-9fde-9bdbc60d89d2",
        "cursor": {
          "ref": "11f0a743-c2e5-4b7a-a952-884fc311a812",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7782dbc1-2608-4c01-8d13-d763f54fc483"
        },
        "item": {
          "id": "d0f7366f-6ce2-49d9-9fde-9bdbc60d89d2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8d25fc9a-2a09-44a9-b0e2-01d0931aa6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98236da3-3c3c-400b-9c0b-f680c9950756",
        "cursor": {
          "ref": "3f2cf32d-5acb-46fb-aeb6-56d443f722f5",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4b717fd1-7cea-4625-bb09-c7c141c0dcfa"
        },
        "item": {
          "id": "98236da3-3c3c-400b-9c0b-f680c9950756",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7d858fb2-4066-499d-8702-79938af5b295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c29829-aeb7-4fde-9341-30c1285c708c",
        "cursor": {
          "ref": "0e347fcb-ecad-4322-969c-2fdd45de9786",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "edf9be83-eed2-4e4a-adeb-d275c46b3b3c"
        },
        "item": {
          "id": "a5c29829-aeb7-4fde-9341-30c1285c708c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d682e78e-ccdb-4d76-bdd6-d0980c94ebc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d48aa5-89a7-4be4-b701-1d69fc32d4e4",
        "cursor": {
          "ref": "f3d2bd74-ff0b-4660-8ecf-44f8dd7a12c2",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e710d7d9-af80-4dcc-822d-79b443d18976"
        },
        "item": {
          "id": "80d48aa5-89a7-4be4-b701-1d69fc32d4e4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "505d834d-3e17-4db2-9c59-d47c3c96d300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a59f93-1f17-46d0-9b05-17d7d133e8d5",
        "cursor": {
          "ref": "6bb35d85-810d-4907-a870-a75d7d9f1b52",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "87b649a8-f20c-46c9-9d74-6844225f6a91"
        },
        "item": {
          "id": "72a59f93-1f17-46d0-9b05-17d7d133e8d5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "56f51aeb-55b3-4802-9be4-5507c8dfec52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3eda778-249d-41c3-9c41-706ce6bd4595",
        "cursor": {
          "ref": "bd4d3248-187b-4a58-858b-780cd32132dc",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7089d160-3af5-41ce-9559-bfced3b328a0"
        },
        "item": {
          "id": "d3eda778-249d-41c3-9c41-706ce6bd4595",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d7fbf03c-4059-4b0b-94ce-d3842cd4c40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb19aa8-e904-495a-8bbf-47c28ba398ba",
        "cursor": {
          "ref": "f20b5e4f-e496-4772-9f13-b34c10619812",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b2d29f3f-beec-473f-91be-02a77d47f6cd"
        },
        "item": {
          "id": "4cb19aa8-e904-495a-8bbf-47c28ba398ba",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e9778546-eabb-4f19-aff9-17739047c884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58eb8081-26d6-4b05-b7a1-ca0f687b5b0d",
        "cursor": {
          "ref": "a9558583-7d58-414a-9686-e69812b2b66f",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "26abcaea-00c7-4994-9012-92056eac8882"
        },
        "item": {
          "id": "58eb8081-26d6-4b05-b7a1-ca0f687b5b0d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8f14159b-a22b-437a-af15-dfc363bc863b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff71b76b-2fb9-42b4-b94a-4be76dd98e87",
        "cursor": {
          "ref": "fcf481db-23d3-43d4-9487-d3c01dacf5a1",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "77d2c5dd-0fc6-4efa-b416-e4808d712b25"
        },
        "item": {
          "id": "ff71b76b-2fb9-42b4-b94a-4be76dd98e87",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "829ee92d-1e5f-4128-87a3-9fe6768fc647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be01c847-19d3-4891-abb9-deb86a538b08",
        "cursor": {
          "ref": "93b84da4-9f05-414f-b7fb-57f9179f9bf9",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5ae4e306-1eed-472e-8e04-9027e3f463d6"
        },
        "item": {
          "id": "be01c847-19d3-4891-abb9-deb86a538b08",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "15f6b298-3fe4-4858-8317-d4e68c3035a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e6f1d0-9a01-44b4-8717-8721851ba18c",
        "cursor": {
          "ref": "2078ffa3-8f8a-42da-9da0-2c3f6f7e51b3",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "73240524-9d44-4079-8e70-13473c48a2b5"
        },
        "item": {
          "id": "c4e6f1d0-9a01-44b4-8717-8721851ba18c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4e9b2353-2ac8-496d-aae3-0e9f6d421af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d8f249-9e74-4119-a530-1cf6a952e973",
        "cursor": {
          "ref": "e0b4652e-e0ac-40d2-84bb-c4557d4bc2fd",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5440afab-a829-4a63-85af-979e29820004"
        },
        "item": {
          "id": "a9d8f249-9e74-4119-a530-1cf6a952e973",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e2287621-22a7-44b7-9ee7-161ff791e626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2481c4c1-090c-4c88-b018-1ed5906fcde8",
        "cursor": {
          "ref": "e60cd509-cd72-4f25-84f3-019e79dd57b7",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e170950a-f104-4685-b639-af6cd4b03f08"
        },
        "item": {
          "id": "2481c4c1-090c-4c88-b018-1ed5906fcde8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "32383ce2-1352-47dd-879b-1cb4203c031a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18385f8e-9a76-483d-be20-3e1d74daf95e",
        "cursor": {
          "ref": "c5fffcd3-2617-4a86-ba7c-51f6f1b7225c",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c00886c8-b392-4d7a-b359-7156585af445"
        },
        "item": {
          "id": "18385f8e-9a76-483d-be20-3e1d74daf95e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0fcebcfa-b528-4463-9ded-269dbc29e74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b705cf6-4275-4ed0-a4c8-116f40f2a075",
        "cursor": {
          "ref": "a05f81b1-c1cc-4f03-ada7-6ea91f1dba8b",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "743ac896-f4ff-4b83-ad0f-c65bb6dd15cd"
        },
        "item": {
          "id": "7b705cf6-4275-4ed0-a4c8-116f40f2a075",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "be054d2c-0675-4d99-88c0-579b5e7fcc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806589fc-050a-4e1f-bf3f-5782677a5c4c",
        "cursor": {
          "ref": "bc8cfd80-0d22-4566-aa2a-363d72856a2e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5561a670-9c0b-4394-ab07-7227bef01e2c"
        },
        "item": {
          "id": "806589fc-050a-4e1f-bf3f-5782677a5c4c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "243d70f0-0b8f-49a2-8219-5a38c250425f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1add2a-0a52-4ed0-a452-e23dd64350c9",
        "cursor": {
          "ref": "917c5c36-805b-4328-ab81-aec6e7f2b079",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e4ef55ff-4609-46f9-9e74-71ea6e7557f1"
        },
        "item": {
          "id": "5f1add2a-0a52-4ed0-a452-e23dd64350c9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7df213b6-16d0-4455-b061-424553507f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590ca33f-a4e0-42b1-b965-cb86999e8286",
        "cursor": {
          "ref": "2be2cd27-fe36-4502-be47-d0ec975a6d0d",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c21d7e9e-3112-4671-9446-700ef9220a00"
        },
        "item": {
          "id": "590ca33f-a4e0-42b1-b965-cb86999e8286",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "65813a8e-ab9a-454b-aab4-987ea5ef2aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139a1aee-2f8d-4abb-94eb-54bff12166d2",
        "cursor": {
          "ref": "dbf03e99-c52d-4caf-bd00-cc88e46bfdbe",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "587ffd3d-9b04-4183-a300-c871fd9c101e"
        },
        "item": {
          "id": "139a1aee-2f8d-4abb-94eb-54bff12166d2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "984fb108-6cf0-4535-803a-9a26049fa1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3536816-4684-4220-b755-79d7d8ad5f76",
        "cursor": {
          "ref": "af16ee9a-8317-436c-b05f-63b2a398ca49",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "12db777b-8832-4f32-af1c-6d1f84024a51"
        },
        "item": {
          "id": "e3536816-4684-4220-b755-79d7d8ad5f76",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "74de3e18-7159-4c10-ae58-c376282332bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6752f0a7-2781-4797-867c-defeceec10fc",
        "cursor": {
          "ref": "e587f012-1081-40b8-bb60-0e80908c6bf4",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8e2cee5f-0523-4264-a006-779816fdc9c9"
        },
        "item": {
          "id": "6752f0a7-2781-4797-867c-defeceec10fc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5c41b804-3e57-4ff6-a326-7dc9a65b01cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88211fdb-f899-47a9-ae75-84c45f320724",
        "cursor": {
          "ref": "90628505-50ea-4782-a860-13033930ee17",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "df094f55-65ed-4456-8952-160d7108afd8"
        },
        "item": {
          "id": "88211fdb-f899-47a9-ae75-84c45f320724",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "de17ce7b-5a42-4e46-8d81-7bfccef09524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb3f7e5-261b-41c2-8af5-82ae97fbd9d3",
        "cursor": {
          "ref": "74512ccd-de77-463c-bc68-36a65d7c6b04",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8ca3393a-d3f9-4174-a615-a647147edd35"
        },
        "item": {
          "id": "ebb3f7e5-261b-41c2-8af5-82ae97fbd9d3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7b31c13f-43a0-4837-9db5-adc8aa9df8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb24356-def1-47ed-bf42-fa3bc22c2e0f",
        "cursor": {
          "ref": "2fbe9190-a5f0-4d2d-9577-26a51fc9783c",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "104a21b5-76d2-4374-823e-c2010cb96b12"
        },
        "item": {
          "id": "edb24356-def1-47ed-bf42-fa3bc22c2e0f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8e7a58a3-6460-49a2-a1de-b89a2ee0a2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19be290b-a341-474e-a6c9-1831ca346f75",
        "cursor": {
          "ref": "3b3feb59-dc97-40f7-a7c9-2f58edc7c911",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "21e4e952-3e42-4ea5-a55a-cc6985b051a1"
        },
        "item": {
          "id": "19be290b-a341-474e-a6c9-1831ca346f75",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4da1866e-ba10-4059-ac49-a25105c1bdc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f26200-2c74-49c8-a067-3f8daa52464e",
        "cursor": {
          "ref": "d03f832a-cb09-422a-b4a2-30e76e8a498d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fe0a450b-39da-4fd5-b5e4-4409ec7c54eb"
        },
        "item": {
          "id": "78f26200-2c74-49c8-a067-3f8daa52464e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "30c6e596-4ff8-4cda-94d8-c8e82491f163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37223482-e8a5-4a74-ab41-89b10418e9c1",
        "cursor": {
          "ref": "bb19bcf1-fd35-43d8-8345-ca9384bfee6f",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9a3aee4a-fe40-4bb3-b651-31f0d2f7ff1f"
        },
        "item": {
          "id": "37223482-e8a5-4a74-ab41-89b10418e9c1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3489bd5b-70f9-49f7-92be-9cd339e4739e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202e9453-85ce-432f-9b52-ff0b709b0a43",
        "cursor": {
          "ref": "0a8133c8-4832-4ba4-9056-34b6a8972231",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8fdb8cb6-4f31-46dc-9178-673fc072644e"
        },
        "item": {
          "id": "202e9453-85ce-432f-9b52-ff0b709b0a43",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bc652416-673e-4838-8e1d-b1ff61ba8d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd39805-023f-4072-beba-b298527c8597",
        "cursor": {
          "ref": "6cdc38f5-68d5-40c0-805d-b0a59a611d25",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c21172f0-6782-468b-954d-4f41a4cd437f"
        },
        "item": {
          "id": "dbd39805-023f-4072-beba-b298527c8597",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8761779d-b144-430c-a9f4-f197e8842cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfd52f7-0a60-4138-972b-0a62ab39088d",
        "cursor": {
          "ref": "f6e39f85-ba90-410c-957a-9137fee3c1ef",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b3f46ee5-ab76-42a1-95dc-d2ff9af451c2"
        },
        "item": {
          "id": "adfd52f7-0a60-4138-972b-0a62ab39088d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "720bfb35-5cb2-4dd8-9cd0-199bbe28eb34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e2834d-26ad-4a6f-a7d8-50ffaf6eaa6c",
        "cursor": {
          "ref": "c994812b-9ffb-4431-b37e-2482de40aa43",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5e21b475-188b-403f-8ce6-fa13da34e215"
        },
        "item": {
          "id": "80e2834d-26ad-4a6f-a7d8-50ffaf6eaa6c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "24f1a077-3d3b-4ac8-98ea-a4efeb4dddbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1837572-4610-43fc-af89-d5343887cf7f",
        "cursor": {
          "ref": "ce6acbac-0655-47ab-9018-02ef93ae033a",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "99d8a2b7-9721-4d6b-a3ad-7390808acc86"
        },
        "item": {
          "id": "d1837572-4610-43fc-af89-d5343887cf7f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "28fa3a6b-9351-402e-8706-00d6be62021c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1484a3ee-c891-43ae-bdca-48411e3a6b7f",
        "cursor": {
          "ref": "24f5dfbb-f928-4c90-9bb0-5f5bc3e0d952",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2753e06a-7f89-4f02-b50e-ab0da1e88930"
        },
        "item": {
          "id": "1484a3ee-c891-43ae-bdca-48411e3a6b7f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fb1bfa88-4861-45a9-bbfd-d50923bbf634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc081fb-e3c6-46af-ad3e-229727a1b121",
        "cursor": {
          "ref": "299bc86a-195c-425b-9a9c-979de00cbaf3",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6e9142d9-5a76-45c4-89dd-48d69072bd5d"
        },
        "item": {
          "id": "6bc081fb-e3c6-46af-ad3e-229727a1b121",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c0a86d5a-06a4-4e4c-8859-65f4f1c32c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23593038-04a9-43c1-a9a8-20801c729bd9",
        "cursor": {
          "ref": "00542a77-6398-4266-aa87-0d3f11e8cbdc",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a1f8b797-9322-43ad-91bd-714b9c106d8f"
        },
        "item": {
          "id": "23593038-04a9-43c1-a9a8-20801c729bd9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1aafa610-d963-4827-a78b-c669d1ab5407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebf3078-e4f5-4787-99d7-06b3612faa40",
        "cursor": {
          "ref": "742fa6d2-abce-406a-bff8-0eda2061d74c",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e637eb26-b0e0-480e-9ad0-21d6238c7f4a"
        },
        "item": {
          "id": "bebf3078-e4f5-4787-99d7-06b3612faa40",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0bdc59fa-9d3f-49ac-8ba6-25ead6357ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd1bdf5-a59b-4480-a307-8b3ae0fb201f",
        "cursor": {
          "ref": "75044845-f9ac-48cc-b3b4-eef0d3aa71fa",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2e5ccf82-79eb-40af-836c-f7009a4191d4"
        },
        "item": {
          "id": "ecd1bdf5-a59b-4480-a307-8b3ae0fb201f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fe026fd4-31d1-43b9-b580-acbc91b74152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83c5e26-b9e3-4be0-9f12-4a0827018356",
        "cursor": {
          "ref": "25749cb9-7775-4a88-bfd9-2cc9aa35a25e",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "be56b70a-3265-4bb8-a2e4-116e65846e47"
        },
        "item": {
          "id": "f83c5e26-b9e3-4be0-9f12-4a0827018356",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ec54c0df-66ad-4bf1-9c91-2e937ea2ab55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c64924-f263-4c2b-8677-4756f1d4795d",
        "cursor": {
          "ref": "39cee7b9-7acb-4ddd-9d54-1803d32e2b7c",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "72b5ce59-0a00-4dbe-b0b5-e2809cc62028"
        },
        "item": {
          "id": "49c64924-f263-4c2b-8677-4756f1d4795d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f3a06bfe-f803-495f-9fdc-2bfb61abdadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2291362-013e-4af0-8339-8d3d109cac60",
        "cursor": {
          "ref": "68bb02b6-cf3a-4157-b891-c4efd1cdb6e6",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "07ad9c13-4ae0-4c0e-9110-d3133543c41a"
        },
        "item": {
          "id": "e2291362-013e-4af0-8339-8d3d109cac60",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "009ea8b4-5900-439d-a991-78a8ea6d7166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a298bcc7-47f2-4bc3-8cc9-b0b7f983eec7",
        "cursor": {
          "ref": "d43adb1d-dfaf-4e1c-a732-cf2eff322532",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "02844057-afdf-481d-a8c1-c9dba035346e"
        },
        "item": {
          "id": "a298bcc7-47f2-4bc3-8cc9-b0b7f983eec7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "66bb9322-a7e9-49b6-94be-12b0cf70ce51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f78bbb9-dd7a-43ed-b7d0-d90dcf054b9c",
        "cursor": {
          "ref": "b8313801-09de-4332-ad4b-0b9e875ad992",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f3a24706-d459-4602-bfe2-725aeddf1685"
        },
        "item": {
          "id": "8f78bbb9-dd7a-43ed-b7d0-d90dcf054b9c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "772d161c-b95e-49fb-9cb9-a42bd944088b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bfab2f-b026-4517-8edc-28c2ce300d8a",
        "cursor": {
          "ref": "139d1caf-be3d-4e72-a7bb-7f3b0fe5ef01",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5e6f1a58-10fb-4d3b-a7c4-ceebafd78b4c"
        },
        "item": {
          "id": "f1bfab2f-b026-4517-8edc-28c2ce300d8a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4b4a2d1d-47a6-48c1-9973-ce202ef15db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af38a45b-ee63-4a4b-835b-37c31da5b136",
        "cursor": {
          "ref": "ab0a0dda-edb3-49df-9f70-8bf19ed6ea91",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0457e83c-86e8-433b-b8ec-7998c593d4a0"
        },
        "item": {
          "id": "af38a45b-ee63-4a4b-835b-37c31da5b136",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e97cdcd7-4d18-4840-a774-def7999d066c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f2523c-5e05-43ac-a30e-5f18afa37738",
        "cursor": {
          "ref": "55f4277d-2fd4-4a26-a66f-3eb8f4ffb64c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "193f897c-fb50-4cec-ae6c-b6afe3f87139"
        },
        "item": {
          "id": "32f2523c-5e05-43ac-a30e-5f18afa37738",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "10000b2b-ec2c-468a-ab4b-e9fc2968f030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f03190c-0fcc-4beb-82bd-edf525110488",
        "cursor": {
          "ref": "3e8427f4-636f-43d7-9beb-73d7fd5d33aa",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8c79b116-e14b-4b3a-b2bb-b04e5c33f191"
        },
        "item": {
          "id": "4f03190c-0fcc-4beb-82bd-edf525110488",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1df86d2f-f4c1-4102-bfce-b947dc400466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff6288b-946c-4092-bdd9-adbd424b52b5",
        "cursor": {
          "ref": "409a6307-47fe-4ec6-97f2-8d9707a0f32c",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a882460d-600e-4f67-9f38-682c6334c9aa"
        },
        "item": {
          "id": "6ff6288b-946c-4092-bdd9-adbd424b52b5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b5f08b00-6624-44bd-bc25-1517b5b6166a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6293583c-45f6-4e38-8888-78d550681221",
        "cursor": {
          "ref": "b64841a7-1913-4f2a-a416-3ca4c334dc09",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "df74188b-9c66-4359-80ae-84647e711c2d"
        },
        "item": {
          "id": "6293583c-45f6-4e38-8888-78d550681221",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "22b7c2db-4ae2-4ec8-8c9d-0e0d84a23c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11b0536-09f8-4567-928a-a0dad290dc3e",
        "cursor": {
          "ref": "27fa6c3f-dc66-4fd4-bbc7-8cee0ee12672",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "209fdc25-1983-4437-8837-03a9b8cb0cc3"
        },
        "item": {
          "id": "a11b0536-09f8-4567-928a-a0dad290dc3e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0ef6de51-e14c-4777-b1fc-26543fe7e259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af444d76-44ff-4292-909e-2c8cab17eba4",
        "cursor": {
          "ref": "97c124dc-7968-4388-9938-129d72647193",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bd9778ba-ff25-4e34-90a3-6cc7bdc0faee"
        },
        "item": {
          "id": "af444d76-44ff-4292-909e-2c8cab17eba4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b8608290-e2e0-45d8-9cfa-ac7145c6edec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b485fd2-fa3c-4796-9914-db7a51550e65",
        "cursor": {
          "ref": "b4c2c1ad-e3bb-418e-b748-b8c4d74a1396",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0ef0d78f-9937-4b26-b19b-411724e5ce9c"
        },
        "item": {
          "id": "7b485fd2-fa3c-4796-9914-db7a51550e65",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0ac26ba5-d67a-4b14-93f5-54cb53e8f0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af45d60-73f8-4d50-8a74-a36ed421544d",
        "cursor": {
          "ref": "ad3acc53-6f18-4c1e-af61-b4a92c8e9f4c",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0c6e63bd-2833-4765-843d-827661802754"
        },
        "item": {
          "id": "7af45d60-73f8-4d50-8a74-a36ed421544d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c480a169-a81b-4866-8183-88b168e70c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586d65bb-9140-4692-bb44-404765da8545",
        "cursor": {
          "ref": "c90b560e-eb53-463d-b8f5-3d0634e3711f",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "15d9013d-7ee5-4697-baac-7cd11f621259"
        },
        "item": {
          "id": "586d65bb-9140-4692-bb44-404765da8545",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a7ece7ae-e3fe-4918-9221-f01fe564c042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc167f87-2ee4-4f6f-8530-b68e1f20b754",
        "cursor": {
          "ref": "d868ff71-4742-453d-9864-f07b7748a930",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3c4eeb73-aa7c-4aec-af05-e92011f377a3"
        },
        "item": {
          "id": "bc167f87-2ee4-4f6f-8530-b68e1f20b754",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "df648d0a-ce3d-428f-95cc-5530ad41883d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b68e55d-3cf6-412c-bab1-3fdbdb62fc11",
        "cursor": {
          "ref": "599b2428-e3aa-4c13-a82e-6fd818df02a5",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "117790ca-c632-400a-a371-1033980b9c2a"
        },
        "item": {
          "id": "4b68e55d-3cf6-412c-bab1-3fdbdb62fc11",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b5d29710-5ce8-4cb3-bf3e-25b9a7ba6c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24abfc88-e4d3-4214-813b-4e271146adf8",
        "cursor": {
          "ref": "0af7a9d3-3428-4159-b2c6-eb208eae78e7",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4418c4c9-bcf2-42e7-ae62-4e152b942c00"
        },
        "item": {
          "id": "24abfc88-e4d3-4214-813b-4e271146adf8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0434c616-8044-4282-9e30-2900a2550a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3b5f45-1dc0-4570-bdcf-a918b4bf01b2",
        "cursor": {
          "ref": "3762cacc-49c9-4256-96c4-b82f96e27ab2",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "526670e7-64da-40ec-8671-dea2e020d3ea"
        },
        "item": {
          "id": "8f3b5f45-1dc0-4570-bdcf-a918b4bf01b2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "11a79e91-1281-4c4e-adbc-c045f11f1680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08941b03-490d-4f5e-aea7-8915ff75a42e",
        "cursor": {
          "ref": "39cea7a2-6c40-4311-a679-cdcbb3971308",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b3c2e533-9d47-4f3c-9ec0-08cd7cf10220"
        },
        "item": {
          "id": "08941b03-490d-4f5e-aea7-8915ff75a42e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0d922840-d96a-4a5c-a9b3-1877ddcfa13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f149049-b804-453b-baeb-4404f8519c1b",
        "cursor": {
          "ref": "2552f5d8-644e-4179-bcfa-605f009cf13e",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "799fc4dd-3881-4a98-b65b-2d7f6bac594f"
        },
        "item": {
          "id": "5f149049-b804-453b-baeb-4404f8519c1b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0af9ee06-ef24-4ae1-8f5b-1455ce79e79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798ecd03-a238-4a42-94ec-8eef253e42df",
        "cursor": {
          "ref": "69f1e84f-ed4f-480a-bc4e-3be7e3b82ce3",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2e25df9c-fb8f-433f-b41e-9bbed6f1d3cc"
        },
        "item": {
          "id": "798ecd03-a238-4a42-94ec-8eef253e42df",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "17dacda9-affe-4408-9e96-05f59ae1f0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2879ad-61e4-4475-adc2-d195148897e8",
        "cursor": {
          "ref": "12f67a1a-13e3-4c7b-a285-fc3c0162ba48",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "05a37fb0-631a-4d2f-922e-c0b276de7935"
        },
        "item": {
          "id": "4e2879ad-61e4-4475-adc2-d195148897e8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e0efa16f-0cee-476a-9f24-e11c175da478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15acd231-8bf0-45e6-b062-593f45bd78b7",
        "cursor": {
          "ref": "2df82171-ded9-4d3b-9d58-38b111396ba7",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "426e6e38-e9aa-4044-9a15-f3c84cec9fb5"
        },
        "item": {
          "id": "15acd231-8bf0-45e6-b062-593f45bd78b7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8b7a4946-d675-461d-86ed-589b2ff9372d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01107fd-1785-4aa1-bd21-06ad63176c69",
        "cursor": {
          "ref": "bef898b3-f034-41a8-85ac-8400d11037ce",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a378f35a-5296-4259-a97f-cd7d1729d560"
        },
        "item": {
          "id": "b01107fd-1785-4aa1-bd21-06ad63176c69",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2215bed4-bfa8-4c6d-9220-7b38fc479253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e44046-1363-4000-b147-1bc5c2ac62cc",
        "cursor": {
          "ref": "cae09d07-92ad-4fa9-aefa-05882c58d5ca",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "db0aa700-25b3-4ac8-8033-8a2e4719760c"
        },
        "item": {
          "id": "97e44046-1363-4000-b147-1bc5c2ac62cc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bd9702e0-c5c4-436f-963e-f500b45de7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a45560d-8919-4709-bf87-8a5d91dc59f0",
        "cursor": {
          "ref": "e5c8b780-1677-4787-bce1-3a93ba594ad8",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5cbbb762-ce4d-47d2-bb09-5b0849c2e596"
        },
        "item": {
          "id": "4a45560d-8919-4709-bf87-8a5d91dc59f0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "857c78a4-3aa1-4622-bb72-daa66b1061ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6829d6d6-d6e8-4ff3-9080-2c9c0ebaa4c2",
        "cursor": {
          "ref": "c29e2467-879f-471f-9e2b-89abac5bcd68",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9129a250-a29e-483a-8a3e-fc2b05a4d878"
        },
        "item": {
          "id": "6829d6d6-d6e8-4ff3-9080-2c9c0ebaa4c2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f5607e21-57ef-4afe-a680-86a57bf45c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afddb35f-5466-48db-af9d-133a6f88f266",
        "cursor": {
          "ref": "3186b369-eaab-4b89-bdd9-e2fed1693b7e",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d848dfb7-de3a-46e9-9dd5-e9d872eae263"
        },
        "item": {
          "id": "afddb35f-5466-48db-af9d-133a6f88f266",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1ea9634f-31a6-4716-aba9-dc967422c2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19f8de4-ffbe-4a6a-9c31-71f3731ded7e",
        "cursor": {
          "ref": "9a5b2cd9-6eb8-403d-8299-1a77dad9170c",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "5daadde1-fcc5-4c66-97cd-47dd96e0dc8e"
        },
        "item": {
          "id": "e19f8de4-ffbe-4a6a-9c31-71f3731ded7e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3451a291-d51f-4af0-8c97-a3ddc784ade8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705509bb-5459-41b9-af4f-7a67d8e2abd1",
        "cursor": {
          "ref": "29d9e2ae-db0e-4ff5-b775-6794e9285df6",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "eea65c7c-bf0c-469a-afc0-54cc77d1e0c2"
        },
        "item": {
          "id": "705509bb-5459-41b9-af4f-7a67d8e2abd1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7904155c-b262-4cb9-883d-54bdeedbade3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449f028c-90ae-400d-be90-2d867dd57f0c",
        "cursor": {
          "ref": "d60c6120-142b-4955-ac08-8f6f6fb7def4",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "66e44ff8-a68d-4de7-9782-b2b64c5606a3"
        },
        "item": {
          "id": "449f028c-90ae-400d-be90-2d867dd57f0c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "67bbe665-5f37-480f-9892-46d772c14003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb5c09b-c71e-47b9-a747-e3284b076a89",
        "cursor": {
          "ref": "f9e247bc-2d59-4c83-8e6b-7076d5d72c8e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "cd96f3c0-cd50-466d-803c-48180caad48e"
        },
        "item": {
          "id": "ebb5c09b-c71e-47b9-a747-e3284b076a89",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6d3aec59-d31d-4d6d-bcc3-08e131d64294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58805a6-ae0e-4a82-8108-7e5790a6e58a",
        "cursor": {
          "ref": "a7d667f0-03de-42c0-9caa-8ec77bc28fa9",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a000d228-9c0e-40f9-95cc-28a4176b4620"
        },
        "item": {
          "id": "a58805a6-ae0e-4a82-8108-7e5790a6e58a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "725e783b-dfbd-4e9e-8dd0-27b5dc05b9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02abab38-d119-4b35-8f4c-445532727698",
        "cursor": {
          "ref": "743a9287-ade9-4dee-b27e-05bc8e27ec46",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4d22a4ef-5aa7-41f3-bedc-b320663ff7c9"
        },
        "item": {
          "id": "02abab38-d119-4b35-8f4c-445532727698",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cb4e1403-9676-4181-97e8-e4e989373f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae6da88-fb5b-4670-8982-1ea625df968d",
        "cursor": {
          "ref": "4427d914-3949-4674-8fe4-70660750fca3",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "be5971c3-9095-4522-8447-4991ba8c7235"
        },
        "item": {
          "id": "bae6da88-fb5b-4670-8982-1ea625df968d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f02438f4-8de2-4245-b698-b09478d434bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95de59cc-1c7c-46aa-b146-83c49a1e74dc",
        "cursor": {
          "ref": "e3b19aa7-9ffd-4584-a846-57efe8db6a40",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7f0179a3-5947-4588-8a28-d2b6cbfc7183"
        },
        "item": {
          "id": "95de59cc-1c7c-46aa-b146-83c49a1e74dc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "eea7d41d-eec8-402e-b9d0-1c35b7fc91e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91303a57-8087-4a88-8bab-c9a24b74690d",
        "cursor": {
          "ref": "3b6d54b7-1413-4e1d-a63b-fea6b981afa5",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3b4e6242-9eb5-49a5-aef3-9dd79e789fae"
        },
        "item": {
          "id": "91303a57-8087-4a88-8bab-c9a24b74690d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4f287cb4-fad7-43ae-bd0a-da085aaf0fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e6b05d-de1c-4721-a1a3-8827e8b56289",
        "cursor": {
          "ref": "a76f7842-13c1-4671-8756-3592186500ad",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "dedb9533-d241-4e47-9db1-4ddb93e87278"
        },
        "item": {
          "id": "40e6b05d-de1c-4721-a1a3-8827e8b56289",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e2ae14c7-096a-476f-8e22-b4fe371579db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5539b879-f5a7-4c5c-83e7-66f8e033eb88",
        "cursor": {
          "ref": "55dba221-9d5d-4a80-95f7-533569959652",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "28353209-2565-429a-883d-3e7c68dac6f8"
        },
        "item": {
          "id": "5539b879-f5a7-4c5c-83e7-66f8e033eb88",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5d1cb744-a37f-48bc-88bb-420da4b1b79f",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf228d8-ead0-4e9c-9c18-56e0209f3ace",
        "cursor": {
          "ref": "82168e64-5b77-440b-bbda-0b0679f414bd",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f2ae555e-a868-4863-bf05-6de94ae04992"
        },
        "item": {
          "id": "cdf228d8-ead0-4e9c-9c18-56e0209f3ace",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3dde2f4c-e8c6-442b-b0c4-e31104342f63",
          "status": "OK",
          "code": 200,
          "responseTime": 2571,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f353c0-0a72-460f-ae27-68f5e47745ee",
        "cursor": {
          "ref": "0f47c10b-7086-4689-8cd1-02bc20e50107",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "01523e7a-a6fd-4b31-9006-78a1ab730a50"
        },
        "item": {
          "id": "68f353c0-0a72-460f-ae27-68f5e47745ee",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "94b45ec5-943c-41e9-b4cb-de3eac659d3a",
          "status": "OK",
          "code": 200,
          "responseTime": 2662,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4889627-69ba-4529-a856-ac2657f88e02",
        "cursor": {
          "ref": "0a6a20dd-c073-4547-8c5c-9dac440d5a52",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a071176e-ce3b-4d7e-ad45-f2e146f3320b"
        },
        "item": {
          "id": "b4889627-69ba-4529-a856-ac2657f88e02",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ecb4e6fc-873f-442b-9c85-2b48a8de8179",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4889627-69ba-4529-a856-ac2657f88e02",
        "cursor": {
          "ref": "0a6a20dd-c073-4547-8c5c-9dac440d5a52",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a071176e-ce3b-4d7e-ad45-f2e146f3320b"
        },
        "item": {
          "id": "b4889627-69ba-4529-a856-ac2657f88e02",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ecb4e6fc-873f-442b-9c85-2b48a8de8179",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f40c1b1-5d0b-49db-8384-88f88d513e09",
        "cursor": {
          "ref": "b3ba2502-1566-40b1-bb71-9f6d28887fd8",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "dab20b72-32ac-43ba-9e13-4e2d0b348f54"
        },
        "item": {
          "id": "7f40c1b1-5d0b-49db-8384-88f88d513e09",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6cf85b93-45b8-41ca-8d2c-af3f625f66a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c200b708-1c16-4873-aebc-acebb77e22af",
        "cursor": {
          "ref": "41d3e5da-7188-42ff-96b8-2d1ee80a6fc2",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "0dc6ba92-c9f0-4699-8548-f2295c8d11eb"
        },
        "item": {
          "id": "c200b708-1c16-4873-aebc-acebb77e22af",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7bafa981-1b7b-4725-8810-d4ce2ac7457a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}