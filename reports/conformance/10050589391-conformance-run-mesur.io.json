{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "40371a83-5866-484f-80fe-1ea6c2f483ca",
        "name": "Clear Cache",
        "item": [
          {
            "id": "382de946-a373-4f08-b883-959ab5b5d0d5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "61e79861-2509-421d-a080-8569acad96d9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6369bf52-b3da-4511-9f47-266a4ab79fe6"
                }
              }
            ]
          },
          {
            "id": "002a386a-0932-46df-84d7-6b0933aa6e68",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "318489e1-73bd-405d-bc70-34bb7491750a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e97bb25b-baa1-45ec-a62d-35750d526eee"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "25fb9786-e42e-4def-bd3a-425434f0d69e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3c7239dc-fc9b-4c72-ba06-a457f891fc43",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0d3c170e-b9ad-4ca5-88ab-f4efada7c36a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed9a999f-a3ec-4c5c-a5fb-e25eb88947cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0099abf-e55c-4fb5-9fc4-da6a096d0f76"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bc5ed0ac-ac60-4e96-9e81-8324f72f74dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1d9e648b-bfdf-44b5-a013-e05fb3d67df8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e8fab620-f836-4354-b457-e49ad03377d8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce7234f2-8346-4285-8196-60735de4ccef"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e9fb15e-3703-420f-b94f-71fd2108ddf1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a637d35e-aeaa-412d-a021-c36c0dc6ffce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da569395-cc23-4652-92dc-372c44c4da19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "060d7ff7-9daa-4df2-93e5-61ccb9440f87"
            }
          }
        ]
      },
      {
        "id": "2be72c87-b221-49a2-879e-cb24a7920d39",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5f51f13f-7fa0-40b5-b918-df067137bafd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c355d1a-ff1e-4fb6-adf8-74412f04651f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a1f5722d-fba3-4d5a-a7b6-7a75bd7fcdfb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33b89d2-59d4-4580-8bf2-4e8a8918c629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06c6fb15-58ed-4508-909d-6b6a492d7098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdd53e4-9062-40e2-b652-1259f5d08988",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c2a6d4-4bc2-40ca-b491-f60a71a9fff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cfa4a0a-181a-4d05-8fa5-e0fb61d104be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc8f08b-2bbc-4f1e-8841-92a05b6323d5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14065a4f-9352-42c9-9c85-b043d693aff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3536209-1ef7-420b-b19e-1d076dc72636"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "430f50e9-7f67-4e0f-931c-a761b7655a76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05814025-eeb4-4bfc-aaf5-d3c95d2dccc1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cadec6-bda4-4c3b-8abc-458ab78feee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da3be4d7-bd2a-4c79-a02e-046e5a96c30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a13752-3ba3-4370-b6ee-518c0e0935e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26be00a-9e65-426c-8083-ca55be00a27f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9b9ea135-5cdf-4322-b26d-14216baaa68f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bbec849d-e0fd-49e6-bea6-bebcb292e903",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1f6962b-ca88-4d3d-8038-8ec74bcd5e94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "037313f5-f384-4a7e-abe1-b4cc8e25b9f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afff6147-e800-4360-ba81-888e3f1bc7ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b7becad4-9fd9-44c3-a91a-03a7601f8fe8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be31a28a-a85f-4520-b281-3bf03e9be6ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd6b69d8-5200-450a-a4de-52d6f87e1ad7"
            }
          }
        ]
      },
      {
        "id": "e589f516-ab5a-458e-abe2-b3d5852275cb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f0681c69-d9c1-4405-a2b6-676f8683428a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cf70ea57-0d91-40c6-b088-9e2e02f4a276",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b1e4af48-3b18-45c5-806f-0ea7219803bf",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffaf9260-ec2d-49f2-8b02-fecd2ba345a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0d9325-fdf6-454d-8dc1-b9d081c32248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a2cd53-3280-491e-9934-a134ba8540ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "277da7f6-3d92-455d-ba06-5228cb49d11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1911487-9ba8-4c7a-a402-2edc2dffc1e3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae14063a-62f5-4dad-8eeb-7eeeae2cd9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f63e246-2127-44b5-b96d-295a7ecc08eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63304f65-d691-4c7d-9d59-450410afc4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e08f24d-a107-4da4-b0c7-a038b800a511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80421603-0ad3-48fb-b973-73a1b704fcad",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae909b87-7ee4-4af4-ba03-19875384eb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe91747-4454-41ad-95b6-e622e6447d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df729048-c0a5-41f9-ab7c-2836e441c805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af976c71-c5b3-4964-985b-eb7284c1e055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986e302c-92a9-422d-94a4-de32f2cb6bd7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad63ae05-a50f-4226-8690-1bf48d5b30fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc335d5a-89ec-49d3-b6bf-62bf2fd6633e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03196253-c780-4356-ac1e-dc8cd65a751b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3eed31c1-a09b-41f1-9966-493c6d02bccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4439954-a0f0-46bb-bb79-25ab48f55e44",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c269ee-0b66-41a3-81ce-a5eeaf876d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a6990e-2622-434d-9b36-dc3a7c5393f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f054871c-6f1b-4c89-9917-d8452bcaa54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0da24baa-7edd-4f0b-904f-e671c0ca4a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c574e2c-d708-480d-84b5-04019115486b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272065ec-29fb-4237-a7be-14b10184c611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b63eac-00c5-423e-a090-0e62d07fc452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8296cf31-8a71-4204-bd4e-174beed8b4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f7e2020-30b8-4035-a64f-23d0f81474b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce865bff-23fc-425c-83f4-a69ef66ae42a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a123a5f-28f9-461a-8c51-f995dcab22ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a781053c-723f-4c2c-af4b-8ccb6c5405a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c475cabd-cbfe-4df0-a243-20f04def82fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e3e4955-ebe5-4005-9472-d3f2bd450e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500a8298-862a-4e2e-9a6f-4ffd2a43cc2a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82233046-7bf4-402d-b956-6e5dbfa55ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237d4174-9f99-48be-8151-0e652bb31434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d861225-0ed8-47b1-8cfc-9c5937a7fef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cc6b61b-3194-4fc1-91ef-68fbfddcc689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e0f17e-bf9f-44b0-9bba-7650ae99abe6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8a6d53-97cb-4fa4-8309-d9981fb5c3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11573eb-47a8-4c0f-979c-31a3ec1919be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f7dee9-9679-4524-8611-aa4d1d28448b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a60afe7d-9ab0-41d2-8877-f0a19aa92c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4179d7d-2df7-49d9-84a4-e8b753b83f27",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafb12fb-0f0e-408a-a3a8-2f51aed1219d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a6f5c7-06ea-42a4-89cf-0879415c3957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb1d325-5d19-4410-9740-385591fbb456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcb9d2e8-38fc-4ff0-9b2d-6f9bbc218562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ef35d5-d7b0-411b-ae6e-13140b09c83a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b517b0-5160-4cad-bc23-5a44661294cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9140d9e6-9e49-4023-af2d-ba20c5681bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1302e2a5-11e5-4531-b0b9-1ad778d4e6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "818c8f4c-cae2-41c9-99e5-95e3fef3dd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fb3a1a-1fbc-4411-81e3-f7436b06c92b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2c1960-d6b5-46bb-9741-3f4522200e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95bfe2d-33ed-42da-b5cd-ed6ef7af261f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19db3e1c-8cb0-4207-8b9b-49d999a8932c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad448bd7-96f1-431c-86b1-1d559f015a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84faf4f-24ef-453d-821e-679fa68a4073",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c441ec61-68d4-423c-b592-8d1208274e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41fe581f-1e02-479c-8d4a-011d9de128e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2d9d45-2069-4fff-9212-c9f5aeb0cb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0b0c37b-125e-4668-9b8e-8e3f702844a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9e49ca-74d5-43e3-a87a-e7b80cd72b72",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e03712-39b5-466a-aac9-6079e4cb6da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80975671-3f92-4bd5-be7c-2f33ff2afc7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e64d88a-c7c4-4b4b-a896-fe560dea771f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de7a8939-4bc2-4571-b6e8-851bc9788a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df59345-5bed-4b6d-ba55-3239ac6a83f8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdf181f-3913-48c6-9289-ecea2fea8e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3f9961-85a6-4692-851e-73ee6ae4d086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581d0b8a-0f4b-45d6-849e-33fd7c9c530a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "153a177c-4bf5-4a2b-a54a-a6bd97d2b518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f0a2e0-aeca-408b-80b3-85d89e359eac",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcf2122-4e34-48c7-bad3-3ee9908dad24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43c88d2-a5d0-49ac-917c-bb1d3c765443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffeb075-71ec-4799-9dae-f55dc448e6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68a056b4-2abd-48e8-904e-42dfa4792f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad644f7-07fa-4665-b528-95e31b18a4b3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a819d8ea-a1ae-40e6-ab5b-8f433b3c390f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd060e26-8494-4b04-ba14-eff0e1618684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafa3956-8266-4f59-a2fa-d2df87d68f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd3216b6-6e71-42c6-8096-9ffd13a6e3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d49db0d-5690-4382-a348-96ccecdc9a31",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8ef821-c69a-49b1-bb6a-ea567eee5eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c497419-c79c-4e33-8665-58159edc026d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c74030f-52b0-4ce2-af80-403946c72ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1b2e5c-c4e7-4a70-8515-b7eed960cc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645af7e6-a527-4bb5-8a08-d05469d832e6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86743d2d-0152-4605-b176-83fa85ce71dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d1f111-ea72-4c21-8565-654b22f29cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d44212a-8150-4785-8650-be2eb697452d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "227c269d-7a49-4984-9c83-4ee6cb12dfbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7791f4f6-081f-487a-a4ff-11f8b6085b01",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be72000c-526c-4091-b060-65f3d60e72e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80e5872-9528-4001-bac2-6bbb912d21bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0dc108-6fb7-42ce-be9f-1313005038b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f0b147-3498-4f9e-9348-3add3b2483b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01993e44-adf1-42d5-81ae-ab6ab10b6164",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c63a108-46dd-4e0a-b3a0-f749e89a2227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6c3254-fb2d-485d-8f23-c232fc8a6d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9a7699-41ae-430d-a6e5-b37be5a7c1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0190946f-2130-44a6-ab4f-e5dde6db42db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214ef5d0-63ce-4ca6-8cb9-8e9f9be01b1c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8ed685-4a62-4ec1-a3b6-2757f94e5420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739333cc-412a-436f-8348-325593b8379f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289a776c-a6f7-4612-86ac-21f96abca309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc6a8c3-b54f-4df5-9e8b-c27ae4e48e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e9cec9-6561-41ad-bc6c-7679fdea1d59",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b498efbc-2e5b-40df-8081-592274c5939e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69ac832-4232-4459-b07f-9f0965605132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af2a6a9-28b3-4891-ae1b-dac5161d5d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a53a01d-76bd-4c5b-a5ce-cf1aa0a25d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc44233f-803b-4ff2-b57b-df0ce803fde0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4684a8c-ea78-4141-b2a1-2b68e2de101e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d009c7-f28b-4092-a988-72f45aba4c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b41268-e694-4bd6-b471-57c2a41168f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5a4050-2a6b-4611-9a57-505ae0ee89a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d91dfe-cefc-4061-8e18-aa4539bc125a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5789d0-7351-4d40-bb2e-6d9158859905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98f26a7-09a3-4057-9289-7e03dc245e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab55a98-2e92-46f1-86cf-b124df143bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea8a645-5eb4-49fc-a579-306a39f38a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a754e2ec-ae55-45aa-af08-178ff237da85",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4b46ff-a9f3-4f08-bab4-57cfeebea55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7175976a-899a-406d-a568-b15a0d9b2a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbc9071-0c26-44df-b0fd-ed9de66f852a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25f55cb6-b399-41b2-8f58-51000427e863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038a6a33-531d-4a0d-9e06-41ce8d7e605a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bc5454-8a1b-4bce-969a-c06a9b86a074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e843046-75bc-438b-978d-70cd62774e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58ec6c6-4ac4-4d77-9249-a848150fdcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdbc1483-4733-45d7-944c-51d3d46809ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da557ce-34cf-4e2c-ab29-aff53632a4a6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4abc500-697c-4bab-962f-376cae0e6fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3a40e2-c33c-47b4-9e6f-6ee44a303bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd763d22-e5db-47f7-8bb5-82fed09113e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a094d2-4fb9-4a66-be84-86b750bbca1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd77ce8-cc83-434f-93eb-92a58d365b97",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c8652c-e0bb-4f90-9915-40f4713bfae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30647f03-e5de-47cb-adb7-fbfe8f477244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543d9f36-1644-4c81-ba39-a385ebc72029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeba019e-a8e5-4e2e-8493-8c4bd0331b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246a5247-8c65-451d-b9b3-878fa33e32bc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d9fbe9-23e1-452d-92ff-c43817fc1647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f832a8ae-3c65-484e-bdd8-2ec64d940aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb4685f-d698-40f4-a448-0a1420078da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6d5779-cc06-4c10-b082-8539abf29b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f80487-0db6-4e11-9d57-425d85c8bb09",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c11105-7151-4901-8775-273c537f8250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0596c1a3-eb0d-4681-9d27-c7afbdda9baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ad02e8-a52a-4977-bd0e-e5f57744d472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40302657-182f-4d0a-8570-59c56cada7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7161e40-7034-423c-a6f0-1d4b51d8f5f3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20e37f1-36a4-4a80-98fd-c2327f20a2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b558eec-d1b2-46cf-847f-d4dd452f21f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2432f28a-2af3-4d75-a758-0a32465ffe4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1ee5ed-57f4-4a9e-8696-e121b7a0f464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080cf255-d7a4-4620-a211-dea02bf538f3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cdca9b-f583-4463-8985-d2186d8a5530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90523be0-0a42-4f6b-b67a-2d7d44686c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86a9aa0-c483-407a-9c58-e963a5624263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b26335-a481-4f52-b564-b0ab670bbddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b309a14a-6a1d-491f-8ec5-fcdf32b04902",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda5bab3-d2c4-404c-9aa7-f7ab91655b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd3093a-2533-438e-a663-9d2f17183a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9acb7ad-cdd3-4f00-b8f2-dd0bfcb024bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f04fb84-6813-4f55-848b-f349b4fdf41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce45c59-8cf2-41a9-ae64-b1820777ca27",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c3bc52-9823-4631-be51-08090a53cc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90725430-dcfb-41b7-a58c-efd85e85b61c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddd76d2-70dd-4c4d-88f9-8c0d32617d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f5701d38-8d01-4052-a8be-adeb1e2753e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99ffe95-8038-496c-bd5b-b886598aefbf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0296f350-4241-4574-8559-183988e83046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe26415e-23e5-452e-b12e-44821efd2b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee55c52-97cc-454d-af0d-7a1bb3df77e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cae72469-9afc-4260-9cbe-0d79ddee9c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52153f3-8da6-4eb2-9c32-08d9ad3c2b51",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8849b20-a811-489e-83c5-3aeabfe13126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23bcf584-afbd-4d18-a1b4-6a249544af78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b84e8c7-c44e-4f89-a1e4-3808a688b07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ffc0b75-d688-47f2-a28b-9a2b0652d501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b242ae-4844-4b3d-bdeb-ba7d4948a098",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb71723-a395-4ba0-b2b3-1e3dff14bc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f64c7ec-3dae-4c0a-bb9e-129d84480c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4299e362-1c6a-48c4-ac5a-1fd339198998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f064737-eca5-4677-9914-d599dc39f13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1418a7e4-d88a-4b67-b45e-d2074c72d4c1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84998ea-8d6c-401a-9f8f-387ac2be7305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b840a0df-4a0f-4a00-93d4-452e4ac173e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e09467d-972d-4946-97b0-a0427ab28d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9925fa7-a339-445a-a975-f73450994aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5b2267-87bf-467c-98e6-8239d9b2b7d6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf6bc6f-19a3-4104-974f-ccc41931c76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c607e34-5d66-4935-9c9f-6282160dba40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1ff348-af2b-4f09-bb79-226c20c9452e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f318495-a3cd-4259-a4d0-cc6cb43a7d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c019e2b-7ae3-49a5-a354-8c41e978a152",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7b61a9-3b29-41c4-ae13-754b0e39be61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7afcb3-aac3-4970-b261-7e0d0c2feebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0106425-71b0-4c32-b853-90dc62cb1322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4f40a6-1792-4d96-a068-3f265299bc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa47b7ce-5621-4a6c-a106-f1c96f8fde57",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb6746b-2b6e-45c2-8bc7-0b300d2294dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6bc7da8-046f-48af-bb2f-737c8b643a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6199c144-5cf8-4bc5-8f5d-16d7a3123cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "61da1db2-e052-4b05-ac79-6a88ac7e6249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f7fca5-8df3-486b-a318-dfe7dfa50fbb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fccdd8f-7ab1-4ce5-92fd-bfd51b17f1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286fb49f-0892-46cd-911e-99ec3401feed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f82f03f-d8ff-40d2-b656-263cc632e7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "239bf531-5665-4a44-86f8-3d0d6a0ed689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671330c3-f75f-4bf4-9341-3418ab61ae84",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd7f9ea-6362-4a13-9574-d2eb596bd862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2419f7eb-cf3a-43a2-b19c-04befe5de182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74355daa-8e4f-4101-9b06-5fa38841f06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f96f7bd9-6782-40ac-8453-a4fa56e3836b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8433787-d3e6-489a-b2a2-2ad3ffe9219e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c91a20-ffe0-4318-ba51-c90df1bde9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e72e2b3-4d37-4fdf-9373-bd3ba58ba9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63c8891-7027-41eb-bb74-1cb904e2ff7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "afada599-5d73-42f8-8651-5548b97e72dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15848be3-2dbc-4e33-a12e-097d3a486e7f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffc621a-5d57-4de3-b36e-713dbdb965a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d209227-7c5d-4e7d-bfaa-cfc797161118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9da88d-bdbc-4c33-8bfe-cdafdecdc917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14dd7784-4597-4fc5-9a71-da93b077ccf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3795fbe3-8038-436f-9077-da2fa2d6de07",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5677069e-343e-4180-8084-d714cec46832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc02e731-b18e-4083-8f61-f5a8495b2226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b05f6d-2e3a-4646-9ed0-4158fe535641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03b7733a-b4ba-4110-a855-72d592441ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7f6c44-d380-477b-aa8c-dd09303cfd87",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9a2411-897b-4212-a81f-1933c310d16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d03fca3-7075-4266-997f-0217462d1ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a4973d-b8ef-4433-b21f-a15f85dffbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5bde43-08c6-4a0b-bf4e-0ebd1d74eeae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb004389-bddd-47c4-8a8d-4e45cea23a27",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ab37ba-1df3-40b2-af6b-f8b02abb02e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80037cf8-4183-477b-884a-1350e2bed7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9912c8f0-1ae5-4dcc-a7a8-fe62ed449200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f883b121-3e65-416b-8f74-44b7d73986d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69ca8af-e1cf-41f1-875a-315f838fdfa5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9f9ab0-25f5-4813-add7-271305653781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93123921-2aee-465e-8a6b-c507fed4f0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220d34b5-ab7a-4c90-9b3b-3a926d97ff88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b13a0717-9c02-430a-9e2f-d313de8699f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1847787d-3aaa-46d4-a138-6779060a45d5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a034c4-dc2a-499a-8a36-aacb854a1583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a507db-a3a1-4141-81a0-35cd53b923bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea229f1-d309-4086-bd3e-4e397919f1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "949c21e8-448b-454c-b57e-e3cbf0d5d8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23348cb3-fae0-473f-9f19-247b462b36d7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf699b5e-49d8-4503-ab3f-91480e968756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af8a3c4-5924-485a-8abe-a296556b0e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6697695-70a0-4939-97fe-74ffb2bce7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c700251-c606-493b-9bf7-8d8cc75c30cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e11acb-a43a-4052-83cf-586e56cbeabf",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b7bcf3-3b25-42fe-a2e0-6a4cc150f76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f74f9b6-af23-40c5-93d8-5259305fa824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e44540-6173-4041-9040-4869ae7574af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe2fda6-e0ea-48f6-861e-3f062b1923c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd67dd31-755e-4ce6-a127-f6de0f513a87",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef69cec-18fa-4237-8eeb-49efb0efa449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102f0f39-f240-47e5-9732-fa89d8513969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bef7d4-f87d-46bb-8cfa-d462b2c2fab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4145bf-f0cf-45bb-8f79-ef3268580242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73225a7-954c-4f9c-b765-734cd9c603ac",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc42989e-f5f6-498b-9ae9-e23cf0ee487d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533cd80d-e02b-4808-aba1-9acc63aaed82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f69fafe-2cf6-44b6-b747-5c4505ee6ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30fdaf44-3a8a-43e9-8f9f-01972eba2420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfb7748-39c5-49ca-ad00-f0c110d96c0c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837d7af6-1b9b-4c1d-9c28-6e5be974b50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0f6647-7ec5-43a2-b8ba-0012e549810a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a4ca55-ebbb-4ee7-a48f-50a247cba2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff6b02d-64ed-40fa-9f59-15841d40730f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cf5f2f-5698-458f-bde1-5907bebb42c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22564845-c01a-4330-bfdb-ef70d3aef3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea63b12-7a78-471d-be5a-4efb3ac0fc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6212e6f-8a7c-458e-a8db-d9d254fca515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "560aa5a6-f6fd-47e0-9032-74adeb9a5a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4dff606-ac36-4327-bf46-8bfbd9299c60",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee33231-b9fb-48d2-9eb4-961a9bc048d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70ded57-e8b1-4a77-a3e7-2fdfa9cb0461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45bd6fc-1f03-4217-95c7-4ef93cae647c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8738d7a9-f090-46d3-ac24-5b36c2408f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4988dc3b-5c56-4f66-99e7-da389f1c4484",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892a8772-82a0-4000-9875-095d09014ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f43f49-3740-4c71-9dda-7d2b124f5b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9812cb34-bf18-453f-b678-8cf1d865d0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f31e2ae-79e5-422a-a413-6003af459c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef617f9-71c8-425a-a593-54024a1642de",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf09b12-de8c-4c30-9d2d-21ced6e3a24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b712724-94de-4c4b-9abe-03d9158b0d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf49fe0-41bd-453c-a548-4992f91164cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "82e441c0-6e57-410d-86ff-c71a0c5e4511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59cbe07e-c935-4459-8fee-a96d65489956",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e14d83-ad30-4420-9f1b-3fb530fbb5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c3f80f-1fd5-4629-8ccc-6a1fefc4b9e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbdd1af-39a4-48db-b0af-86535dc59e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff6b539-aa45-4f73-91c3-0b1f1f792e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ef69a4-ef7a-4f94-91fb-5864def3b597",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c561d5-4189-41c6-894c-24f966680b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692d67ae-74f0-44f0-bb7d-9fe78fe07616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abfae6c-6344-4361-8345-a446c3a2b951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b04d7d8-60d8-412c-839f-a855219008ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647f359e-004a-4d5b-85cf-6e3980dcde16",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0023d267-b7bd-4cbd-9829-6a85980e0dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a948c2e0-a575-469b-b022-faf28abfdbe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee8b135-56de-493c-ba75-edb3a81c391f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a0c87e-3b6d-4232-a10c-81967cf540bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046856d0-bcfb-47b2-9df2-c90bd3750ad7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fbacc9-9d65-4302-a6da-38a936434d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85e887f-d435-4e0d-9577-d2b1c860476c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11acecb2-e4d8-4fd1-b330-9be068f3efb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d010802-147d-46c3-8f66-f7c3b4b7dbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b099e1ab-7eaa-444b-a31e-99139ef39890",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c057ddc3-ecb4-42cc-a06f-3aca90578347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94463e17-4e5d-475e-89ee-8b69b8d88883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e770fec8-de83-449f-95ed-0b642710e249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cac1919-d6bf-4637-b221-cca16b2eddec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90f499f-5a15-4c47-9c8b-bdf84b5c4a81",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2a31c4-83cd-4c02-82bf-ce9d73f282e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f27b3c1-af8f-4c35-99b7-e3c24bef7f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed471f09-3c43-4c3a-a311-03da006a4b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "baa5b62f-3888-4f33-91a8-e04ff735ce59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06464b95-debc-4a4b-b2f3-4fa81c0af261",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e0cd93-9b3e-4b22-b3e0-cfc846a0a0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc55671d-b515-4e0f-8605-2b83fd686f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd405670-f310-4660-8013-d377c1ed09d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd829e9-4953-4f81-b85b-75b87b699212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c56342-a7db-49ac-8acf-f02bc9a3cc10",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1526da-77d6-40e4-842f-789d4dfa70e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3812b38-d2bb-47aa-b37b-6c258de19bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319ca47b-f7b9-46f0-b7f4-353d7c7db8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7edba37-c8ca-44e2-a17f-e5621e08fd64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c40b60a-c2cd-4af9-9c87-7712085a2620",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e65a595-3ac9-4a95-bffb-71bebd844162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072afa5e-775e-49d5-8e6b-fa01320c0691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349aabf7-a779-44ec-85c3-771f5a568b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5d5037-fe53-4438-9533-2bda3974b593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b2c519-d209-4c58-b43e-7e05fb9f2ee4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c95ba9-8ffd-45f6-8d3b-1bf912684a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac4901f-025a-4647-8949-6f574bbe1e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509d8362-35bb-4b41-a1e9-0bbbd68f4227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad4a459-eb54-447f-8a2b-3fbea34b0e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0328ea4f-7ae3-4d2f-8caf-677c0f501e7f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beca43b1-0387-4df8-bc65-7fa3130fd3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42da0664-1dc0-4436-bf6b-2eab676a79a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5623f6-852d-403c-9a95-e702fd3e66a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f24d1f64-389c-4b8a-bb12-9b05f529cde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7b2b85-6687-46d9-b481-471a3ce4211a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedf5b2d-f093-435a-9e74-a63e081303fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e4b0d7-c8e0-4c09-9c2a-d30133bfc2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27cd4e0-11fb-41d2-aa72-0a438cc65526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc5630f-2cea-4414-be19-865de2fd3ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2387e1-cefa-4944-9f00-26256503f53c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675daea0-de2d-4528-b61b-aa66df66e828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d993778b-5a5d-4ed8-b75c-81a6ba658760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853fbf42-269f-4001-90f2-539df51d2559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df73355d-42e1-47b0-b020-26c97bc7585a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bcb57a-c38b-4344-8d01-a3027e65e799",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47e60b6-61fc-479d-865b-1d0f06f92e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57a9b9b-3a80-453b-8c67-e015449c40ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d0ce7a-977d-4a07-ab6f-3f62b4f15d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41da9b3f-82ce-4aa6-a726-9ffa72a29970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e06db62-429c-4367-9414-c5bce298bd8f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5ec37f-d2a5-49a6-b3f7-106a7c660fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e0aead-5801-44a8-89a8-8e457bfb4313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a84d0ed-ed82-499f-9151-83db827dd638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb56e1c1-5b14-42e2-b174-4d06d924ebdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17936f7-a3c5-4b42-91fb-0bfbf3593a19",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94364eb2-c3e0-4176-9ff2-f49e4fd72d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab11768-e125-4b5a-ac14-42ee09bb545f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81256226-f7f1-41e1-9206-049b8f23bbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b68c597-4c22-4863-b13a-87134b24e7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3534977a-b3cd-40dd-9963-28b8933753d7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb40f86-80da-495e-a332-ce420be227a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa08e7e2-ca92-4d9b-b178-08aca132a4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81dafe48-d293-4837-96b5-1cf8f4b455cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f8d41f-0989-4f94-ae42-59d787f1c937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6af0cbb-7841-4482-b25b-0c41e09edfc5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cab9fc-0204-4dd4-8e33-268294a48402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79e203e-971d-4dcb-a4e8-20e1c4d7b3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa96c35-e848-4658-a43d-44be8d0bd62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e44fa28-033c-4a3f-bc08-82541f83217b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7197b3b-e6de-44d6-bb52-3685ccfafcf7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d32f413-f9ab-4e06-aa8e-aa35a39a759a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627615c0-c16e-4639-9d61-f6c122d1ad2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5aac40d-1d8e-4938-910b-434095d34157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7315becc-8303-4ae1-a401-e9fa9e3afb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41900d83-25df-43f0-b3c9-739c42262028",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f463cf6f-9a26-4de4-9737-97101301ee73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6127eb-7fd2-4ba9-925c-b433725cd1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48eea91c-12fc-44d8-96d5-66e4fe14f305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cce7b91-50d6-4856-be33-0d64650e5986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8cee5e-0f98-42c8-a3ae-fd60d3e3e6c0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e510ae-593c-483f-82af-728279db3136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aaa5164-1f77-4252-9d8b-ca7569859d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acb0dfc-c731-4642-a6e2-c356e80f1d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac746508-3924-4836-8e6f-d2ad39932bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0a3049-bf70-488c-812f-1f81439beb7c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f8a9ea-3241-4369-a8f6-2587535233cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d8b71d-b764-4d26-8b99-9967340ef22d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06486a45-b40d-4518-89cf-e9af805f69f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "291a6a07-1db3-4b6e-9857-73669cb87cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a88cf7c-980a-4df2-97e5-60f1ec85272b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5149f7a9-419b-4458-ac72-89c9ac4926e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5515a5ca-b58c-4ba0-bfb2-fe0f7ee97b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f89dbcb-14ea-4d76-8b34-e1cb3be60fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "491806ee-4726-42ff-b532-9a617e39eded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42178af2-0589-4c2a-96e2-62ffc8bdaa4d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f42bbf-efb1-4290-8fc0-64b37627a79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dccf4cde-97d7-4588-b8b9-9f8441530ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56271a0-5aa3-4c06-9149-555eb532958b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58e3dcd9-4264-4b9e-b999-2812bf45c366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22430df-6ec7-4045-ae26-20e3ccf31598",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce01da8-52f4-4dbe-80d7-5cbf4e8d795a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8caf7f9-8801-4476-aa96-2d4cbeb2a7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e87d1f-b83a-4ad2-854d-40fdf5367df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd1ca64-b2f0-41a9-8bb2-6abc14b28c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab881afd-9879-4faa-a924-b1a6f3e0bae3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f994b0-a4b8-4e01-83c9-eb0ce5f01575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362fd114-ba0d-43d9-be09-5d4b5bdf8deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c510d0-585c-445e-848f-9daae51f9d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee14f31-164e-4b45-93ee-66e1d3a807f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833c1706-d4cb-4118-b266-0870c8a382f2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a1a3f4-fbb9-435e-aa10-16309a313ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a862cc-ded9-490f-b833-25fecdff3528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882b5733-e872-4db8-9b44-2a90037b830e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "90e66f55-f19e-4136-9590-0a11587c2297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f741984-5a80-46a0-980a-6c1bbe122228",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6b7aa6-11f5-4527-b2d2-1030eb5b8c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d2c85f2-cf84-4ece-b878-ff77357fbf00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedae9ee-f67a-4a94-8aeb-c7f42d3845a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7528939-b79a-4b88-8c27-a97b75e3a8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ea2f0f-d5ef-4414-b54b-accc23004405",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51d2a16-000a-4481-8240-6907bf74f4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e204061-d887-4958-b176-9595767db4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70defc30-5b95-4fa4-bdc8-e0a62a7cc51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc42de8-8600-4be8-b771-2d2d48550597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41c4639-a0a9-4c41-9f43-2fb2a4e6a4b8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4837f981-e534-45f0-b6da-942905507c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094c6c80-9d72-4bb2-98bd-01825707774f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116bee52-9478-443e-9f70-3eac758060e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3465f288-dfe9-4f49-94e2-045ef2dd0fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a513d63-44e6-426c-b32f-f0f6bad086dc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d178a7b-df11-429d-9a70-6d656a49f759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e908d5-9010-4d65-8450-fb0318afc946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0876ef-5427-4929-9cda-a97c0b367f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1058501-8616-4eb8-a4e6-732501d1db85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d55730-f736-4058-a2b2-5a83c9f3637d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9b2d02-d914-4225-9cad-98c597e29ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8ba5bcdf-22d3-404a-991f-fd88b6a01abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45f1288-9a7e-407b-98ff-5ef5c11caf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "19be2eec-c62c-4798-a1c7-5dfd3c9f9bd6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "46ab05a6-730b-48dc-ba3f-6b0b251d5f57",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b74f6c9-f7ea-4d59-9544-0d7fbec1eeff",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f83e485-f8a3-4d4d-89ad-ee416f867655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da5d8b17-00bf-47eb-b7e3-6ae8cfa58961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f26013-29ee-48ca-b182-97094bc65334",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2e9c2f5-02e9-4fc4-b795-f719d2caa8a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4670268-a2ff-4316-bf36-a05ea9880014",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "506feb2f-dd02-4639-b644-8f8bfa5fd7f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "edc2d8f8-cafb-465f-984f-598fa997475d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ffc7064-e270-4cc4-a18e-5a2e26d59ea6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9fb0b3df-c36b-4481-91cc-24a1fb6d5f1a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b1648bf-25e8-47c2-8751-8da6c478ea2c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d8bf2cab-0625-4368-b550-b2bc0cacae17",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a4070f8-f36e-4331-8319-20ceea63ae0d"
                }
              }
            ]
          },
          {
            "id": "030f2df1-1ba2-4d36-ab9c-055d1d1578f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a545015-6f49-4c7c-a2e4-836f06fe919e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "bcac0ed5-92ce-4bf5-985c-ccae4cb52061",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9733fda8-b66d-484b-82c4-12338a1b89ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "44f66949-eac4-4606-aec1-95a8a5acf630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af22947d-6f69-45a2-932c-3aa2ca7ad9f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137c0760-8749-4798-a0c1-6dc1ebe49a72"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "77a51de7-abf5-4641-9827-245c2733223f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f594c07-beb2-436a-a64b-4a0daa4bd1f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76b023d4-e0d5-42fc-99f9-2375358d11ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee06beee-6c86-4e03-b598-0f0cee1c25fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8af308aa-f802-4f5a-972a-4f0d2daa2da4"
                    }
                  }
                ]
              },
              {
                "id": "e78381b5-692a-48dd-a9ea-a0dedd7649ac",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3068f814-bcae-4319-ae93-08b8f05462c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79c7d4ed-e4d8-4869-b7e9-c5bffa77e9e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59abc69d-b4a7-4b63-8159-81c6c5a16b2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9579b336-aa3c-4e5d-aab3-c1b9a33d0fd5"
                    }
                  }
                ]
              },
              {
                "id": "48806b86-bfb0-45ce-ba65-bd66f4c66ae4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c79b78e8-59c1-401a-aad9-c8b6f6957179",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01f28590-bacf-44a4-b7e6-37862347e2aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e334dc3-3368-4286-a6bd-26e00a05f351",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7454b098-1cf0-4e56-988a-c3520e1813a2"
                    }
                  }
                ]
              },
              {
                "id": "782b3cb5-fa15-4219-994c-f47a325310f0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d85ae4b-6028-4ff3-b901-086889405f86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d978c40-260d-4fa1-b509-c29e793fb123"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7c5f9e7-e562-4295-964c-c6f1aa41afee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1a13ab1b-cc6b-4860-9483-84468879cc18"
                    }
                  }
                ]
              },
              {
                "id": "1bf6d001-9d0c-4e2f-8c90-3fd85373d3f1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2890c08-f974-4a2b-8357-93003a437589",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b5ba494-01b7-422b-a59c-38cada176c8b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad0dc7c5-dd57-43e5-a62a-7561ac1eaac7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "41caaba2-11fc-48de-90ca-76fc7eb9f402"
                    }
                  }
                ]
              },
              {
                "id": "1127ef7a-850e-4028-9664-fda4be51e7c1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da1b41d1-daf3-4bf3-be87-d7332f6539bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d69388b-954a-4c45-b7e8-babee04d62de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84ba4555-ae2c-444d-9592-4c78d34c7456",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "52cd0673-7aa9-4e33-9d7d-b807f407a103"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf47bdad-34a2-460e-980f-84f8c3096fdd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2090a036-310a-4271-895a-48d45c02a77c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1c26b722-ee60-4967-8473-005a3b742dbe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4e15cc8-9e63-4dc9-a122-ab3676c3032a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f7856ed-8202-490e-8e2d-c7e7cf2302d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f67777ef-f54e-47d4-863d-4a9699a4f42f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "530203f8-55e8-459b-9a29-60e6098a13dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19416cbc-bca4-45f4-88e4-4e4289839c92"
            }
          }
        ]
      },
      {
        "id": "89067960-6b08-4070-ac36-75a7d99f9318",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "38b1db86-5f2f-48d9-a6ba-c223f24d5487",
            "name": "Negative Testing",
            "item": [
              {
                "id": "edb51d20-7033-4ad1-bc33-0fbde91aae3b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "85b59dbc-61f8-4997-9b1a-c46838c40da6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcca0bf4-36a8-4301-a87c-0c4b86e0dc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a04f14-fdbe-4860-954e-087157972674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178ea58a-5c88-40af-8708-d49089ac8f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6fe89ef-8fe5-4f82-aa09-0e4e2387b945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6557d7f9-7769-488c-964d-808d1e3066ed",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eca3bba-184c-47d4-87ee-0e99c14154f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b33939f-5d76-4ef7-b116-a8097e3d12b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44893db3-a678-4644-8958-8217682d6c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c03f1aa7-6771-48b4-ba5f-8a40daa4cb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9108ba-97da-4535-a0d5-1e234f17299b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4025ad3-7850-4d3e-b318-a532a4c08920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d32287-e3d3-449b-a3c6-52b1d4992b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bb7586-f850-4c68-b781-0ba87cdc275a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "006190d2-6cc6-4d84-bf18-ae324625374a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702d11b5-7570-427f-8084-2e0d6ac5a38b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badae92a-709f-42ce-9613-b46013fa8072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c113e6a4-1f6e-4fed-8c34-378495e7afe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31216ff7-92da-4567-94b0-8ef1ddbd28df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "260b2852-6d08-4c12-aed1-4cb3241ef22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16ac684-8795-4031-9313-460c6810e745",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f1520c-1b02-4c2a-81b0-fe2c53341c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0719468-873f-45b3-9f7d-6f03ae8bc193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6776bd35-f0c5-45c2-80aa-30202dbd0661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "149cc359-d426-463e-9653-5d2fe889d4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05524204-211a-450f-a661-138544bef83e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124f6fad-3c2e-4f33-8d14-a8e69a86aa70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ade350-c30a-4982-be89-f90494158a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b73725-e303-4ae5-8b69-6c4f8f774b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0845132a-8fa3-4408-be5d-fb3f7bf71285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28af603-43c5-4d9c-91cd-4d389e4875d1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a4865d-348b-4e70-b2ef-b2eb30af7d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b6ba4e-b2ce-463d-81a1-8961766105a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1f1ce9-1d66-48d0-a20e-6c36b1fe6492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f09ce94e-2dac-45c0-8e86-1b0fd41e3052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2bdf57-960b-4f49-a015-cf16ea6f5cd6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979a8d5b-3be5-4df1-ad95-8e87d218f830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db058fd-2a5c-4f95-9c9c-86683a3376dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cfd67c-121d-4b24-a43f-3f3cc06d7c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15de150c-9cea-44e0-a0dc-d184b5238451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f95b06c-a540-4e74-bf60-cf5513dd08b4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f29551c-882e-49f6-9b25-57cc7f23c578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6cc4269-0110-4cf5-b009-457b722eda01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889e7649-8215-4276-a9b2-161fec2e44bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eeea067-ac34-4c00-b082-124aca07fae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1af2e2-0372-4ffb-9f0f-eec1e5f67367",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e18056-de1b-425d-84a3-12b0059d6f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922fb7c2-ebb8-4908-9a00-842d9f300379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10d5883-60db-4761-be7f-875aa8576a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a94c1fc1-7e13-49a2-8245-f0ee25c7a424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18a7c2c-54a6-43f6-b5f3-6db02eecebdc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ac770b-1c5f-42ab-a684-7efb8c8c3f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f66491-1966-4fc2-8121-973d72e8eb71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469fe322-e207-4414-b006-16cccb7e1bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc13ef6-3af3-4f6f-926e-425b3a4e34b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fd063f-0102-4a43-be92-7a90d44c73fc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aad1c81-80e9-43b1-9d1f-055ef4d96864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00169cb9-bab1-4f65-934d-1db5f18de096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c710688-3c23-4e4d-bfea-e9461222caab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df9d66b8-37b9-472a-8d43-ff7738ad3685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef02b4db-a94f-4028-9bac-0fe4aaa9e9f8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af84464d-f65e-4463-8c4b-c29dbd3d0399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cfb93b6-a013-4e7e-a629-2cfb8534a48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9feae6b1-e2ca-4154-a7a0-37888b649353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6740f233-6398-421f-82b4-8d8a1f2a933b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a72dc0-6457-40a5-bd9e-520af4c8d3ff",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be30f8d0-4c8e-44a3-b67c-e4bad8756445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4c2bde-3294-4bc2-b272-39aa8382fda9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5327bf0e-f094-46a4-af7b-caa155ce1811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1be8c4-a74e-42ec-925b-dd20134ae23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8042903e-8715-4ef8-8790-7ffeb1bcc6f9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf7e1d4-e988-4ccc-aa07-ca0971ce2ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7893c4-90e3-4fec-b1d5-833f5752ce52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0cb08c-b6ea-4dff-ab09-eb3b797dcb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b00f8e98-9488-44c8-a644-03546e486ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9060c57-5442-43a2-ae62-9c36bbee83da",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d3e694-1be2-49dc-83fe-3730c5de7b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b526b7-5ea8-4180-a209-4829acba01a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b0101d-7115-433a-a49d-3bb064edbab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bed39b1-55c2-4568-9140-dd365f1e7ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d589531-3b25-4b14-8dfb-c7e13a128b53",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66498b76-8483-411c-a57b-79312437d918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29754c12-67fc-4141-a600-c15987883fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80efc20e-980c-4a27-ae58-46ca7e4686d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8853fc7-a417-484c-8c91-fed4dbb32e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57db9c9b-d701-4b00-b7f1-93260ef0c933",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44997ca3-1bea-4e79-905c-2f575f024571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64dbb8e1-72d7-43f4-9fec-d0a3ae46519f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83335300-6261-4537-bd2c-e8cae1f3133d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc59c94-e1a7-4f56-b6ee-92c192129b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6640c9a0-720d-4d69-97b7-2a0f806b8711",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7871d79a-cfb2-4d6f-bc7f-d2621a48e2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "478ac8b8-8e03-4e1d-b789-b0809cd8bdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4606b2-4d6e-4957-bdae-24e20588f77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06c53f59-dd95-4e17-a22a-0dfd42d5eb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94576d66-f841-41d3-ab60-624eb1cd814a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c33834-8231-4270-bf86-ed508e5996c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93142221-4165-4cc3-ab3c-83354a9e6df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683c7e67-c699-4a0b-a3c2-342fe2f0230b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7051f096-8c25-4b70-8ca3-61bd57c43464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d01f82-0d90-457f-986b-554fd2f9a304",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fadf60-3254-4d43-b56d-785cd677be31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d233588a-95dd-47f2-b82f-4c76b3bccafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250d1997-414c-4b94-9e61-d629e195cfa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3498ce88-7fa3-4bac-a332-009f2227821d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef7c470-15ad-4ff6-b55c-78961ad4fd46",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d126c9-3207-49bd-a508-58c12acc2dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114c6e0b-6276-462e-bff1-b288443207e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e79239-2024-463f-a112-19d85f44f88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b807259-6152-4e12-a530-a8e5832c5d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bce7695-260a-4244-83ea-a671b14a55f0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f07b1a-ec64-4c4f-849a-72f294b89172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036b0ce3-648e-415f-b801-c37d1caae604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade98d1b-65d5-4040-8c98-627e8de26a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63c0a8da-8f62-4da6-af4c-34957132a1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b39c10-d3dd-4e0c-8d5c-95cc007cdbb6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77e7eab-879f-49ae-8c15-9af99289606b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b08cca-09a5-4854-ba3c-9d54c31a7804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5366f8a8-8246-4203-969f-5e976fc50e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8110646e-e78d-4de6-ba28-c63175588f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082adeaf-596c-4c7b-a163-7f2668d5cb7b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5a89a6-b5e9-4dd5-ad9e-da5c0e0598d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6eefc96-e54d-4f72-9287-80be140b38e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6985ad-598c-4767-95b2-0b76c4b1d976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "115e5299-ee99-4df7-a253-7d148be2c259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587a934f-8b8f-4bf4-a7ac-4e25ae2d62fa",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcd1651-8bbb-442a-b6ac-bc79c559bfa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b5ec69-b8d6-45aa-a316-a1db1ea1e743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d0e31c-9315-4d5d-90f9-fb995b3f3c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d10eaabe-92e0-4d39-a38f-a3835c2bcc07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bbbc3d-7fa9-49dc-a801-935d5d7011fc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d960dd-39f7-4790-a0f6-ad7aba8b47a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd384add-6632-45d8-b5d0-39e96a77961f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e1cc75-f531-415d-98a4-8c1ea7c04830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "682f1290-bd29-44b9-989b-f5b01285f54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a50aa7-1973-4eb3-a149-fcb28ca0c862",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e49db8-187e-4943-b393-f05aa8d46c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e653bd-26bc-49ca-a832-c63a1b730383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95efe81c-bf0e-4081-b607-a915751dd42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c583433-61dd-485d-8bd2-94e26aa48d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572b9ac7-4cf5-4712-9bf9-3076f73bbc0d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e52600-4105-4060-9b64-029d57316e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b2204f-75bc-43e3-b777-80c785ec6364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a176ca78-2682-4ed0-bdea-f1022e5c263f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa69905-5219-41f4-92d8-ef0a1c8fa5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005810bf-bb3a-4107-ba86-5bcef34ec451",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fbd8ca-8b0e-4caa-b882-b7974b4f5b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb11bad-e6da-4d79-bb78-53bbb358a94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c19ed9-8abe-4df0-96d9-a037c0ed3520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8035de58-2231-4c62-97c6-daa18d7c7c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbef627e-25a2-4654-9988-995dd5e2f4de",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d76fe1-cba7-4ddf-9c60-df3c028e0068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d154bfe-0d3d-40e0-b6fe-70a5c376ab0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6c4dce-f1e1-4614-b02f-48df5b771b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91f00332-dc90-4ea2-afc2-4b1042d504a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533aeca3-e71b-4b39-b64b-11c6cf233ec9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703ca669-615b-4f5e-bab8-3dbd4e554b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17cba33f-b923-4f1d-9cb2-83825c492b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddb3d44-e55f-4f96-bfc9-2ce106273675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3931bd7b-116d-4ad4-bc32-8e643f551a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae66cc7-2de4-4556-a2d6-c36869befc59",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3f8a17-bf12-481f-acdc-0e91c5f874bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789a5910-f336-42d0-8dd2-f5a3a703c093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963e4b94-c25f-4595-baea-a382f96eccdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94c94dba-baef-4ac3-bf60-074bf187fb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d2e5a2-5fb1-4270-a7f1-e707c96550d9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08122e52-6469-4ae4-88ce-a9b5350b50d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e841ad-e620-4ea7-86c1-8722f4a3bd3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877bd108-c4e3-44df-8ebd-fa692d9bdb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ede0628-0f4c-4f13-a693-68786b7ca965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cf3069-ec05-441a-ac81-07d89115d5b3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b0f235-e8b0-47dd-9412-1776e660d243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cda213c-d801-4c1f-a355-6f7c851927dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485cf49d-00c9-4f40-b1d3-e557eb49cff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9fffa61-6371-4686-a6bb-8ddc800bb706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73edb0c3-4e5b-436e-80de-19a675fab08c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c67541-f543-4474-ab26-0f53dd02fe92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9f8cff-6b67-4f85-b6aa-7b8533a2e549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb259811-dc71-4374-b5de-c773f2e45645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8661da4f-d9a2-4962-bcec-45a123a68aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915e56fe-5bc3-47f7-95b2-382a41f7ec67",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ad1d20-35bc-4ef7-87cd-bd49e4c7c612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6754eb-8f3e-4ba2-a5d6-b952b03cd4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe12d963-8085-4d76-b204-df3cb37c34eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4076851b-cb54-4383-bc00-9197c4a6b457"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a91955f8-979d-4ba5-9534-df7403aafa37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9c8b015-f1f3-4ffa-9cf1-2d59c7706822",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9052d0d-a10b-4d90-9149-f7ba9ce65325",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fac0af42-c00c-40c7-a199-96955282c8d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "392a31be-865d-4ec2-8234-b49bb7834ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52aa57e8-b38a-4b1c-b5f0-2447cecfb29b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8cb48f9-7a2d-4b9f-b459-71c0fb7619a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a001f3f2-10ce-4b45-88b2-459a9be3a253"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9ef9c99-d731-46ba-81c2-a6ecb5467a57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62d69a6b-2e49-4f42-ad81-967e5bdc17d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21b89a7c-952d-41ed-9562-c50e22024952",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "58b1b3bc-6a76-4399-9b1c-0d3a074ad00c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f95f58f1-c6ed-458a-a6de-731c4d288b49",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99438062-3035-4e80-81dd-b323a2a6f904"
            }
          }
        ]
      },
      {
        "id": "661e0bfc-a395-435b-99ab-5fe9026733a6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2ccc6c1e-6f4c-4087-9889-388827345975",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d3f848c7-b1c2-47f5-8fcf-ca37372ad8c8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "261b0f99-63a4-4066-bb26-ca3ae20624ae",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6a7dd8-1130-457c-bc1c-075929d22c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ecc6d2-152a-4d34-b18e-f0bae2d8032b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0f5924-fbcb-4aaa-8efa-619999dd8ab5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8059e51d-4bab-45a2-a439-6be2656e27b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d559f66a-420c-4798-9347-9cb006f63196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfbfb54-85b0-46f8-a214-da34a8f40a54",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac3347e-b136-4494-b647-ea993f0fb7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bad4104-b0b9-478c-85fd-e403815b1174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f1cb01-cc2d-46c0-81f6-6808011b8045",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9f217a-80de-4b5a-8023-144f484716a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bb98fc-a8bb-4342-a743-31315a0d01e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c91af40-1748-40ce-9ae0-30485ab6df70",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62f3db4-45f2-482e-bb76-c5734cfe8ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83071920-7dac-4d73-8f9a-8d6c4338abbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23af6b77-87fd-4697-baa3-22c621b5d282",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7842c26f-2a74-4859-9b25-7469cdb2ee82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd889fc9-5ac4-47ad-8b5e-b2eef14ad03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e108e99b-ebce-4941-8ae6-e77801e8b68e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833dc7bb-8313-4ee1-aaea-5ffcfb2ceb63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232de9ef-16fc-43e4-b578-f04d9d57bb5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "480f3c3b-cb18-4652-9b4f-2f2e9ec57c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704d4c0a-424c-4d75-8d79-a8f16815dee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c99ddc-a88b-4ce3-93b5-37f2f3a043b7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c76adc-230e-45e1-adc2-c16bd8abe7b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "708f760f-ec09-4acf-9d68-920435e77abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc39b82-b4e2-4f25-b967-0480988bc003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079bee75-2396-4bbd-9819-7b9a29b3f66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebb50ab-9c6d-4d5b-9cc1-c24185dc5d76",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eea7ec0-263e-4284-8687-a0120fac0ab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6549420d-f5b2-4bd1-aaba-5474ce5f74f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9005ef63-f4b0-46ae-89e1-21c36a56ac60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6787364b-7eba-49e7-b0f2-55d83472bae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca26c74-1abd-4582-95f3-0cf21377121b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48662f14-40d4-42ef-b040-c524d68d22a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4408f050-7d4a-4c47-805e-7e076daea1f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1d78d4-eb17-482a-8d7f-99045c3e165d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5aee91-b94c-4e19-99b0-505e6931f87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a52ce0-ece1-4652-8f44-48f5516171fa",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03287e1-39df-41aa-8f47-3602d8fe9558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f35d3c9-a114-42dd-9679-1485e42572e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "575095e3-9b29-471b-913b-0d4d6a81148f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a886323-160a-4300-8e74-f237edec6298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4256981-affe-4e9c-b480-2fac1a9798d4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c224f180-8b13-449c-a9b8-edf8f34e7cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c15cdb7-de80-4276-885d-2b44b68cc657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31842024-6228-4b20-987f-cd5cf2e76845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51809b23-41a9-48f2-9380-2424c4948963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc139da-416a-4f5c-9a3b-13673a1025ca",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdd37aa-fa5f-401f-82f5-86fd68cdcb68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd475c1d-b12c-4364-8f05-1b840d801327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0a3cf1-67da-42d9-b00c-c4f71af72156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed39d67d-1eb7-4c50-a126-e0368fb98d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7fad91-cd9e-4220-9beb-ca8984fa3ae0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b3a74f-8d60-4fae-98c7-13c578a5f098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a68c629-0aa2-4ae2-bbab-5cde9418133a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7f1cc0-39d8-4d51-a554-6eadf77e1756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1858d09-3784-4722-98a3-7a06c09ea3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13febdb-4b5b-4ac9-8874-150ec6bc98c7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93a27ae-0aaa-4f8e-ba09-3c3c983f0a7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4631c6db-1963-44ec-9d46-10c8565f8675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510c70e7-758a-40dd-ae8d-1e43d416a280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d30bb5-4868-4dc5-ac88-73cd139bd3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef770a4-bafd-4f51-a69f-61a0feabdfa1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd5731b-9c16-4cc3-99fa-083179725b00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d9da856-18f6-41c3-b5e1-5a7cd321ca4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f587e10-2a3c-42eb-a951-7102fcf2bc3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "237bc022-e0a1-4530-ab2d-28eaabe35dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff0e3ad-3b2f-4f34-8b82-ccfaf9fe2349",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5951b033-8c15-416d-aeea-71c76fbb97c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea22b3b4-fd37-4934-bda2-1eaab3032df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52daa306-b0d9-4d08-b850-5730ab0cc71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25847be8-0e1e-42f5-8317-e6345a613491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d50fd88-312f-46c9-9c42-36b92a9c1c24",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5b1112-d36f-4b16-8d04-ca7aa7a48d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5efc0e3-72e0-41d8-8188-1981a60a3c01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac036c4d-122e-4d88-aa57-eee66b68593c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f5e7a57-f69b-4213-a6a1-451ac48416cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b33596-d286-4afa-abca-04e05704161a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07fc483-3768-4481-8f19-28cfb589e95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f43b770-9bf4-441c-ab6d-6fe9c5bb6be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d331cc0-6670-4647-bc9f-54013e2573ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de9210a-5add-4b00-979d-fe719799e0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e8b41d-ec0e-4530-ba4b-17963debb148",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc47c4bc-80be-4ee5-8424-a96fc0b47250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2aee1cf-91cd-42fe-a0d8-06b6667ac611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57a71a6-bfe7-4d7e-8fd7-ba4696c2d1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5029ff-d402-44f4-a6db-e1d30d6a7f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8aee0c7-c554-4539-83f2-ceb2845a7a55",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0ec4b9-2b16-47bc-b7e1-529e392fdce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d1a65c8-da7e-4dac-b466-32e8bb15e398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7a864c-5535-4958-9f0a-be5f9c581bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3e7f00-8721-4b5f-80a5-18377264e5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57df7a5-7a10-4481-a688-3fdd9d344795",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b176ccf-a63f-47ed-9f38-066f486be7b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366f623f-b477-455d-b3f2-4162cb849324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3b73bf-0ac1-4ef5-9d44-cdeba3744401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e35f0a-bcd9-4ec9-a697-27ee3a0bde80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcbc2bb-dd57-4615-a2f1-48591021d659",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9663c21-dd7b-4cf7-b416-12956579fa1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fab91f9-47bf-4cce-9410-82b6b990e79a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ca64d6-ac4d-4a5e-85b3-12efd8ef6989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d847d9-4c74-44f1-8cb5-982041613434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f93c419-1fe8-4f1d-af68-8f6f0b53089c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdaee5c-e1f7-4aaa-9812-55cece7d1316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fee3611c-16f9-4180-9b3b-77c7e5894660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a31cb7-1e98-4db7-b44a-64d9914ff13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6e9162-a67d-45b0-bcf5-a9bb7d85356c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada11e5a-6162-4f10-8664-bf0c30e97a86",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7029893b-c78b-4fa9-87ea-56284b75600b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f25b3a1-8d88-4174-8523-0a2dd47ed730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d655842-d375-402e-a502-5dab1654a900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ae40a6-3baf-40ef-b90b-eaca1db73720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3341b043-068b-44e5-b5bd-eb878bc41fe4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae4c221-1f36-47c9-9b05-7b4ebfab25ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "656512df-56dc-4011-9e2b-dbc2340f6f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc471e9-48f9-49e3-89c5-3faad6d404c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce46376-760a-4d3f-bb1c-7db668f56c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c576c4-d5d0-45aa-9a31-04d40e2c77e6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60ab3f1-9130-4ccc-b1c6-d4833ff1cb91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ede30bb8-4ed1-4e83-bfec-f40fd6e6e483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66db77e6-a7e8-41e2-9c8a-c2c3067e7c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58b299b-d25c-492e-b322-ee17b80c8ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189f7205-dc3b-4ce4-947a-87c70e1543b3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319260d8-27fa-4d26-9f99-118eaa0ca859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43b21b5-3049-4c25-b4e2-d7161f40f259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9119f5d-fa75-4e06-96dd-4cc7076e14a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a84caf7-abc7-4952-91de-aa7110a1bf04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4f1024-a16f-4ff1-b598-39043de8d620",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeec9a37-3124-4d15-b04f-04eab5572f84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e05de46f-b94b-40fb-a98b-0e2102026109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48462baa-8b7f-4166-942d-342664464a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ecc3aa9-131f-4cdb-aa89-5acfbdd2fd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ede38c1-0896-4339-a2d7-d4ac33e569c4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5daf23f5-67db-4e2c-9175-c290a3e819f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "899b6281-31f5-4aa1-a323-03d7178f7343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c72b189-ce27-4f7f-a1f5-b3b4ada43ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa054a7-a106-4c1b-888c-d758130fd1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ff556d-4208-41e6-a2be-492b7e4e5f45",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051818d8-b531-4570-b669-f3eecbb59416",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "303f6311-d2fe-45c9-b6da-fb2bafaaf7f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa98d8d-d187-4c14-83a5-a9b56f6caa45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387eb540-37af-4125-8ef2-ffbf755d628d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cb749a-2ff9-4192-add7-35664b6d5aee",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1abced-68b5-46b2-bddf-14c37328ff73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddc345b6-f90f-43ec-a195-e4e2308ed46b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17977732-ddbb-445f-9134-929b0bd72cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf17d61-9d47-405a-9181-0a3ca1c18c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c957d6c5-ec47-4c53-8cc8-f5e76db90fcd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebda834-f9c6-49b9-99db-fbfccc968102",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf7d890a-2030-43e2-b4a5-b7ebf9100bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4885a552-1a6e-44b0-b694-f2ecbd5b42c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717233de-147c-47f4-8374-15226a7c16d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfe9496-3db0-4a62-a2d4-5aab4e3f3ad2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f300d0b-de9d-47df-9072-78444d5efdf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab22d2da-481a-44e2-8cbb-a30b24de0a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89feebe-6bff-4732-a6a3-404e50acb9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2586845e-2ed4-410d-b177-49663ab9be8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d749fd-3368-459e-88cf-dfe97a103913",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606a31a3-5592-4199-b433-890c4993032b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62defc24-86d7-435d-80f7-4fba8736678c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0fdccc-d2ed-4587-8294-71f480e28d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a3118b-5ade-4410-9015-daf3477320ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7cde685-0411-46bf-8cf9-d04a811db9c0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82700c58-7129-4946-8587-f858731b20e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e717a24-5190-4b4d-8d64-712cf565e2a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "045ebb8a-79ce-45ec-b334-a2fb1bb556d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623be355-13a8-47dc-98cc-88812c02e411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5174b8e3-9132-4116-9546-1ec71e4612d6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb56e682-765b-40b5-b02a-40363a696af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c2a1cb-90ad-4f0b-8f9f-8de762453e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d22f4c8-f7e1-4d28-9b95-0e16446bc9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bfd8e89-9795-428d-9e7e-1ac35fb4a11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8636aa1-408d-48b3-b031-13434b94413d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2674e7d3-23c1-4315-b38c-266b72d1c3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35477641-6637-4441-9c02-1bf930df7d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b857766c-b14a-4eae-95b3-fd77b531ced2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4de1d9-3339-41e0-aaad-2ab7bd9ec0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe93b3a-7446-4540-8e70-84b7e55770b9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354dd02a-664b-45c9-9c2b-d09106c90012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b58ffe-ddc6-46f6-b052-f08fff50e5fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5ccd59-569b-46db-a7d9-daac3120ba1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f28f4e43-7c90-43a1-a487-c0d2a7784bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3700e7d3-9e7c-4cca-8fa7-c0d591ceb2ea",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72a0a91-ab09-4e68-a081-5546da0d521a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5981d38-da8b-42bc-bac9-46cf472f66a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1ec083-f0f6-44b4-a15f-af97a3c898c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b2b299-994e-4b43-8c04-386e77222455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363428f8-3183-4c96-88b3-7eaccaee3c96",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e17ac78-9008-4d1f-a226-58390eaa9288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660c4aeb-9d6c-4cb1-aa84-3aafee703f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1b6bcf-264b-445b-b21a-67730edc5af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b801352-319f-450b-8da2-be75c5f17777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d74794f-8038-4aa3-b97a-16374f24fa18",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c30c23a-ea13-44e8-a1d3-7178568f4751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32141827-9e7d-464a-8d5e-388ba8e36d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b482cde2-d329-4620-9357-7af240a7e845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e075410d-1b35-446c-b064-7e49ef85415a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46137a9d-b493-4626-a87e-cf2e90678b2d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba7cd5b-e2cc-4bbe-b31b-866862ffd7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7795e8-8fa1-423d-a3f6-f960ecad265c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16017b3e-3f5b-4dc1-aa9a-c6dd2addf176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b1f493-3bd6-4534-a1c9-9eeb0d6cc390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdf6034-a1ce-4bbe-81cb-22653b454dbc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2856af-1048-42d5-9480-1b2399c723f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47fff08-888f-4429-acac-e8b539f99d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e5597e-059a-4c85-a2b5-2aa5fa2a3e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4552f625-b977-49a2-a4cf-e852e599ca2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c2933c-b556-432c-a50f-8e2197859f42",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6831eb-60d0-4a4a-aa70-cb03afadcc40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad4c274-616c-4a82-8104-f006c7e6c69a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abc6593-bde9-4024-b431-45f49a54ca94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5db01ab-8958-4980-b8ad-933128375db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794b733f-c3ae-42f2-aa6a-3fbbed692a72",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d0b069-fb70-418b-a067-b001c0ee0dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e844e97-0c70-461e-9ee6-e0471b9d8ab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6553fa-ce15-4c41-a13e-ca462819c3e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ae9d88-79f9-40f6-9d41-da51a88b4795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6951be61-3dd1-4a25-8cf3-48bbad0f97f3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013b3ce9-d2d7-4a08-b1b7-c8a0ae7766fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be73c658-16db-4ef7-917b-8fe9abdf368d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee34db6-ed9e-4b09-8f5b-c77273c96de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ecd69ec-1a68-4f83-9352-608e5e3571bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c571334-90c3-4f36-b54d-08948b2acc4a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0ba9cd-5ace-4425-8a05-ee2ca3207ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a3dbec-8ee0-4706-8359-85132a74790c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a22b0cf-e0a1-421e-8ccf-66bfcf1c82f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9309998-b53c-4b17-b7d2-b78d6d238c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfd254e-67eb-4b7e-bc81-6274805e1988",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341f0387-6d2f-404f-bde9-f942c287b581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354bc57a-de85-4704-a104-0582a8978965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73012852-90bf-46bd-b5bf-31aa14802684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0654370-87a6-45a3-823a-dd92342edc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76f1229-75bf-46a6-8863-db5eaae6647d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e18da37-05d4-4727-be8b-7630abb8aa50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964eaec6-a95c-4d24-a7f2-5ecf358a9329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26727d9a-90ad-4d5b-b8bf-c7fef7fa2348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d433ac1-8af2-4a16-8d39-2892b4b845d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce4051a-9f3a-4814-a6ff-e02b7e09fb8c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58d6156-f770-47cc-83a9-850ad17373e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bca65da-3eea-445e-a342-e354e258b824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d3b016-9ea4-4c3a-a6f7-42c558fa8e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187ceac8-06c4-4729-b8d3-8700700edccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f9b4d2-c017-4b4c-a88b-e401430a5d58",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db154aad-38e4-4e7f-b04f-1291cda6f009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527dbb90-8ea6-47a3-afc3-482507e0f140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a21f47f-ebb7-457f-a218-467d3a2c180d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9a26c8-388d-4226-a939-92ddffefe8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcae9c2c-fb1d-43b0-bd52-2a46622eab0e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c8e25e-787b-4ae0-8283-3a3f424468e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa140941-0923-4d8c-9922-388388c9a9c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9974f14e-63e3-47d9-8cc4-bad3907a691a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6d9884-ec57-434a-8ff2-b16c70a8b0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7163fd-2480-42e6-a7eb-a5a2c995130c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83aef11-70ba-4a3f-9559-f30a9c5dff93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13c30ea-76a4-4210-b625-c4adc398e52f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb69086-239f-4b20-b345-49eb8c45c36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8204122e-9c5f-47fb-a62a-a172e48a9fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a6690d-38f4-4d2c-a766-3a842d4103b3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ce116c-c7f7-4951-b00f-fba0f12bbb3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636dcd1f-3a1d-4094-af16-712b47dd6c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91d285d-3ff0-4625-9504-8cb4ffc33a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b17a4c0-a282-4ab9-85eb-ba2af7dc5835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255a5658-8691-4f4e-955e-f5afe5fec4a0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e8da05-dbf8-42f7-be9c-afcc77834ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a7f96f-2421-4a83-b4da-eb48af924984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfccf2cf-1023-4dd0-9bf8-89e58d906234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3eb0a31-981c-4d49-9032-da4754d1f1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651af265-c121-49c9-ad60-062edcdb75b6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c69f6d-b7fd-4f50-9488-5ad2edead32a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a30af06-a413-498b-8e09-f838baeaa830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4aa784-be91-43f5-b4bf-774c8293b4d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50936e6e-98db-4d6c-9dca-f13f582bb0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af73ae29-9bae-4d8a-b8ed-147b4011dc07",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcd396c-bf85-4d31-a42a-f19b967d643f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74df7ebd-1ea5-4ec9-98f1-6310be6843e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4ff2c1-2f51-41c6-aeed-d2009006de1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9359cc5d-cfef-4ce5-9615-047127d85596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8381301-6b02-4126-918b-fe2cdc9a7942",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9bcd7c-bed9-449e-962f-2ca6fa2ac3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292cdf1e-41f8-4f62-9d78-07eb06b12c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8b17b1-dd14-49e5-8a7d-52d48ea9847e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4a5913-fd65-4fcc-958e-6a9dbb2604c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa932cb-3cd2-4ded-91a7-d1c4af286a47",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58408a41-2189-4947-8e2c-dd3d6bd9d25d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9414cb66-8142-4c0a-81a9-fb8e9fe5897b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ef1fd7-8417-444c-a2c9-90c9060cf664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d690b71d-8848-4a9e-aae7-541afe0efe72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eda6c54-03ce-4398-9a93-a2e1545ae572",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c74bae-2fb3-4da5-bf00-bc12f6917416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b5ccf2-997c-4eae-9283-19d76f773854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8a2261-2ed8-446a-892f-eca7ce47ca62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1965c9c3-d839-44a5-9002-0b03428251ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29561d8c-17bb-4a2f-b428-643ab1eaac0e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e7243e-d6fa-48e2-822f-05ae4a3d1184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cadf9c-6f02-4fc2-88f3-1e3d1e8c320c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d23f41-fcc8-4ed0-aea8-46d791494ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895f7858-6415-4725-830e-3ed071f6e848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18882e3-339b-4ff8-9cfb-7cd6f35ae9ef",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef33398b-8d8d-4df4-8775-97ca258de7b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab0922d-8e0e-4e5a-b61f-7e19d4c0ed8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd912b84-e951-4587-a1fe-54ec04916fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9933ac0-5877-4aaa-a347-b2db65a2f0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fa83b1-1a99-49f5-98fc-23eb62377886",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a438edc3-eb22-4b0c-8043-1e5807876938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ccda8ac-08d0-421c-b44d-6ec51121f79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "184e0564-a984-4617-9931-188ead5ff835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9655b35b-3557-40fb-977a-4d2f522ebf85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7026143-3e57-4a2a-9f40-f6fde30fe475",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd44896-9530-49bd-bb48-c9bf7d9ac04a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6085a638-6313-4335-a41b-16cb820a9495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c489e3-8fc4-4f43-83e4-1cd424c5b5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12ed5cd-9a35-4503-9678-b8f78b665361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd94727f-003c-4460-99d7-3af7ee508e88",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b71f12-30a8-44fb-80bf-b09151acaed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81eefb3b-9ce4-4568-b18b-784a75da2992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6baa396-72b9-45d5-abb5-95eafd67d73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cbb1f04-010b-4aa2-b4fb-4c1e88042108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f36fd03-9c0e-481a-b0ee-a24944ddd912",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cf1b75-2923-4fa0-9afc-f24c24897fc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "253901f1-f1d6-449f-8100-bb02a6584234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc18ace-0779-436d-b053-ce19f5d8486b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd45a61-0708-4e2f-bb17-a40292696e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991a853c-8278-4b20-b3b4-4a5134ca1119",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad30437-7033-4bc1-b347-32dae52edcd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd870cc1-5504-438c-a28b-698f5025e976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea25e739-ae52-46e9-add3-5b43bcb9fcd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dacf965d-d1ed-4ca3-88eb-2201d6a0bf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b0f2c4-653d-4a1c-ab44-d682a88ea076",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adf92e1-d19e-49d3-b6bf-0ac793d1c6c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a2ce12e-1b3d-4915-922c-4b6c62396cd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b0e6d0-5f29-451c-939e-d3f0762a4c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08774cca-47ed-471d-aa2f-d271ff94f43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed34fb2-1e58-4e82-adac-74a6834c7a82",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36d53c8-59d8-444a-9285-816fb43dfda3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e9e09c-a971-43a8-b8bf-e180e2c09cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc5f2d1-1d5a-4466-98ad-5202bf6cc8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6471575-a0c9-4ff1-aa9f-6de35b2d186a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087ce501-9e62-47c9-959d-edeb4195af9c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6c3cc7-922b-4c2f-beb5-d86768500e01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "769167d7-83d1-4b74-9e39-2bfa97ffd081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3803278c-75b5-4d1c-b2b6-b75a5a4ec285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c359dd2-d438-413c-b82a-69690868d402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfd7f9d-9670-4a19-a5f4-7e72eb622a56",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da959c7-d690-481b-a7dc-95236b42ae90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48a97237-51cf-4941-9f7b-7ed95240170d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8933c36-d8ba-4079-8952-c6003f6f5229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae81822-b2f9-477f-902b-cda45e61b855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54075a16-7e1e-4faf-98e4-e3a37c1b09b1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4867a8-4ceb-46fc-b230-dbe533b6832b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a781218-565d-4e51-9539-b9b55708221b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "609d72a9-eb4c-4b38-928d-a66caa13dfda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e36d4ce-6f51-4a84-9e24-904faf5e5f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fb44ec-d580-424f-9f45-c1f087eecf60",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72aeb633-afed-4a6e-ace6-b43df04102c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c148ce9d-0814-437c-a541-6ddeb3f53611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7315e06a-c587-435b-8a51-967fee8e3a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57604434-2279-487e-a521-6c0515286b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d38e116-5c2d-4e28-9387-b6fc913bdccf",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5575ffb5-73ca-463f-9a92-acc47e997ebf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0eb45a9-c247-4b09-b57b-859da1485bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae334b3d-69dd-44a6-b71a-1dd1cc165cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd276aed-e825-4ad2-9909-9f39a6c35043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76462a4-b1b1-4d3d-8e36-1ba45fb071b2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e53fa43-4f38-4ce6-ab5a-d5231e4819eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d59aa172-928f-4a30-9033-6b37bcf2345e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd6e5ba-9282-446e-92a7-b2e2749ffe9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee7ac19-c2b0-4d55-85e9-03b123cbb0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908270cd-b5de-44e4-a591-2e10b2711aaf",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37a241a-631f-4a4c-9b16-fdbedfdd868e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01e8b29a-97c0-4b96-9c49-2bee7ce1b1b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c99753-a069-4daf-adcc-ed0d081184f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422ce525-b5a4-4a8f-825e-a0d8b8b50b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c496ab-48de-4e4a-998f-fe31e50b3f60",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4de6f29-9ebd-4ea2-875e-4798cc4f9520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e9d58c-3198-4c44-bf5a-a83b1cd1061b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf84414-379e-436b-ac24-85875eb8fb51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9079971-0963-4d14-9d60-c7666e0c14c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5bb789-5af8-4835-8351-9e763a335832",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eeaeec-a164-477d-9bc4-c472d15194a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31636cc3-ced9-4046-a0ad-b99dc0373a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c6e312-233f-45d0-8015-9581407fad60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22973a64-ac88-46ad-b7ee-307afde7b4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900316f7-cd21-4e1a-bcf0-38d96770dcb8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f95149-7f22-487d-ac6f-61d2506a7fe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef9cf79f-8679-4a92-b062-2b0292188d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db4bc5a-87c3-4cdc-bca2-1e058c790c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70fe8732-6077-49ea-9bd1-bd621facb59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cb68c9-5c68-49a7-8d82-e9db959c37ac",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f6ddeb-dcfc-4d6c-a228-9c34093c0200",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd571434-1fd3-46e3-94ad-7ea212612e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c65d02-4d11-4992-b881-0ffd5823671e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2b42fb-51fe-4c84-9cae-77bee6dfe8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ee4a30-c523-4bd7-8931-ee2e53eb83de",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50a43d1-0426-4cf7-9bbe-129cd49a3cf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d114740-05f1-487a-8478-4ea47c69c075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "594f7868-aad0-4d2d-8387-963311d179b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430cf74c-6b8d-40d8-a097-2fb87c0b3e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9827b094-ea65-4df0-a5d2-f2621ecaf571",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2fbd03-6d53-4ea1-b8f7-4db379d61574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48535d63-a8d1-4000-91af-5a84cbc4405d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "155327d4-8158-4118-a557-f2dfa4462166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3184f4-72e3-4af6-a551-01c3a3a82864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21154b10-132b-49df-9ebe-ea479494c286",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4accd81f-5ffe-431b-84e6-d4e0c7885cc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b8712db-b92c-4bb1-9f20-d33b04f54570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55e906c-1b1d-4f59-b62f-6d78dd1ec510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9659b351-2506-4b8e-a0f6-e0b82ba0fe6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c838988-84f4-4b2a-b095-0e3b54be0e88",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc9f7f8-bd32-4810-9772-c913eaf69a00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a476be21-1140-4f4d-8f07-7dd4d7eb7221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab89e7e-2579-4796-af6c-f3f24a4d902f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be6c7f2-a69a-4e0b-bc88-8980184c6281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ea831b-ee98-482b-9f7d-c0326c77f68b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda12682-2672-4fc8-906b-841f07575581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "330945f4-688f-4222-b41c-39fcb1774798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e04fa14-400a-4816-9fb1-529e073ea76e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c24f0cd-a3cc-4abf-84dd-30ab4bb52013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28dbcd5f-d389-4bbc-802a-74575853de19",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2d2d00-138c-478d-bba1-ac186abc63c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d02adbe0-cbe1-4cb2-8b9b-30663f8a3c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5230c7bf-9e50-4fb1-9aa1-b17ee7503eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c1049e-e953-47a2-891b-c79bd684eff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa396207-e407-4667-95d6-72bce9f24adb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5329ee6-fba8-437b-b230-002a54986ca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f9016eb-c86c-4dba-a01a-b6ae63147f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aead6fb1-0200-4eca-9833-16958c849d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c65be4-de2a-4e44-a502-8645bb8746d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0438b25-0aa9-438c-8346-483655584627",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b488f3-3d51-4708-8c88-6c621defb989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38c4f3d8-cc35-413e-b22e-e25323105419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2055b839-6315-4e85-8015-230429c7d60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae606c6f-98b1-4c0a-a811-d49e9de22d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff59357-1d07-4d39-8e13-7a747028609f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fabd38a-4183-45a4-aaa1-dd61d81491c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cc98c82-0d99-4b07-b3eb-66a9103e477b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390be6db-dcb8-4b6d-a46b-5a069b4ec3ed",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ff7516-6281-49b7-b908-309eaccccead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef4ee3d-6167-43a2-a4cc-519c5ca67932",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc9ca32-ef79-48ba-8f12-6e006af3a119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc46a228-25b6-42fd-a9ed-65503f689842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5f68c3-487f-414e-806c-050f339e3d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e42e9e0-7287-440f-8757-618dc2d092f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98ae82a-43d5-4c82-9e84-5840380f5797",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4f98c3-ea3f-4d32-a369-ef53d76405f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab15da6c-9bd0-4f05-b1db-40daf47ed9f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63594494-d2eb-4bab-8bf9-87f18a9d95df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f74b10-60aa-49eb-a40d-147b149c4c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a529a147-16fb-4e70-954b-f785007d0f00",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835cac81-70f9-4b5d-88e9-726e21fb4584",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90f83925-077a-4fe9-8d0b-b1841efb1d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7cd295-22ae-4666-beac-5768a09e3c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c17904-8852-4bf2-af92-dff1d5875011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836335ea-83d3-483a-9856-b3e71fb1b567",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfe1fdd-c1eb-4120-a01f-624bf687d155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb69feba-7dd0-43c5-b1e1-fcd612fbd9d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6493d789-3f50-48dc-8742-9b04946fa355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe22a7c9-5b59-4141-b58c-5f1d008c89de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c32c76f-f85b-4bf8-87cf-4e8edffac867",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3950fde2-3030-42a0-a3be-007785c72a70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a11fd8b-621b-4882-94f7-554ad5ead29c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c518a1-e91c-40ce-82a2-06dc603a77eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52690a68-f80b-44f4-b8de-e4da168a803c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec05c2c-5c09-4663-bc12-e8be5dc77f37",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062cc82d-5623-4fd2-9ba8-a3d1d4a86d3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a489be5-71a2-4932-96cc-8e7e2ca33c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45520f52-f524-4c18-bd1a-afe78fabe47f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac49b38-83fd-4a8a-b4e0-53a0bacf1d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30ace23-7140-4a42-ad07-e4b691029a1e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055fe21d-869b-4ae4-90bf-a8487a8b89b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "872c01a3-fdf9-4bbc-b54a-b40a7b02bd91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99904d39-9c0d-4e1a-8ef4-dd0de7ff16a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5360526d-5df0-479a-8b57-cf03f128ef74"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a0dad43-2822-4dcb-a5a3-1772f49e1029",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ea3cd98-98d5-4b34-bd9b-eb3fe91309b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6d90c14-ace3-45f0-ae9d-0883723887fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5871f907-d04d-43a5-8551-c90626c9723d"
                    }
                  }
                ]
              },
              {
                "id": "cd170d5f-8781-4836-8dd6-3b0b47e6d3a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20090e2a-21cb-4e0f-9a69-55b29330445d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20220253-17e4-4a08-a24d-1b10068e8b2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a55e16fa-d7db-4b1c-80dc-e8ef7ed405c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "920e2a81-7856-4385-9b09-ca3f2a0deb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "570d0b68-8c79-4cda-b723-29164ab79e61"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8847a2e-12c5-40d8-b583-da4f9783e43c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a6450e9-727d-4057-9be4-aa2f4d6a2bbf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d08ddbe-cb1d-4af2-909b-312e31a349c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e53b8b89-765b-451b-9bc6-1fd5b66d45e0"
                    }
                  }
                ]
              },
              {
                "id": "7c468828-971c-4ef7-bec4-3e270e06a310",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ee8e6e85-7aa3-4a2a-b629-554eea9d9485",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae9fec6-6730-4e0d-b049-c2e61e9161f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "48319e24-0780-47ff-96a0-e6cd96ac6051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1879d1b-a66e-42cb-a3e0-5a59ba1d124a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad2bb0e-3f86-4630-b815-35f964ca0192"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "06ce2b19-6b2e-4c14-9b18-67f53223d442",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4de79535-ac0f-4e19-928e-511ac17b7341",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "752fbd06-06af-4f93-a10a-117a62553e9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "20cf6b45-4e7f-464e-9240-4af14eed2fd5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3efbc516-20a5-4627-a1dd-006d5239c154",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61e3019d-7927-4ced-bbc5-d71a76290c41"
                    }
                  }
                ]
              },
              {
                "id": "8a3b2450-c44b-4bda-aceb-fca54926e9a8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32003e68-786b-4a7d-9241-9ce815646044",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "440e47e1-d73e-4bc3-be65-5661412ace3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4fb7621-6a97-4666-b56e-51f1a58536ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bd25c08-56e5-493e-a452-15cc730220b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9734ae5a-d5b4-4a0b-a046-e424708c398f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1a7b8f84-bdd4-4a1e-9309-c49df2f9de3c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8effd9f2-139c-4e0e-b919-d743243fd448",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cb5ef02-5a1e-4833-85e4-c64c1443c7a4"
            }
          }
        ]
      },
      {
        "id": "383acc41-2e0d-49dd-9166-71750f7c476f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "eeb290e3-abae-4d10-806a-fdcd12a43d31",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc95800b-88d8-42a5-a958-d262cf5665b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4bcc4959-0b0e-4baf-b679-237e2eb160cc",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d5e104-00b9-4c70-b9eb-9ec60f9a3960",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f6a6d039-0797-4a7f-afe6-d8ca2117e609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2587c5f-17da-4443-8ad3-56ee01ecc2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd0afc9d-4f1c-484e-b258-08be1019a346"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd6ff1d4-3b7a-48bd-a960-76f28124b7d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aaa46a6a-6193-402b-b1f5-a56fa73030df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e04d3442-4660-4009-983f-87975c7483c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b129cc10-2c90-4289-bc39-4a84617c243a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dff5355e-9ffc-4804-af2d-9adfddecca38",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4181aa5b-d465-4b6d-baa3-8c06eb605238"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "957913cd-c8b1-486f-9d59-05a43b6db90d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a352958b-3f4a-4a9e-af71-6a7f0866503a"
            }
          }
        ]
      },
      {
        "id": "d7af6547-366b-41bd-91b0-2628e7d1efc8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7dcb293f-4279-4db7-9ce3-37604bca081c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c362b406-3cf6-4ff0-b254-2abd33c1eb0e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2a3237e-639d-4dae-845b-6d13839e84ab",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5dcd708-023c-423f-8c3e-e5966063d7b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76963c42-5e41-4007-9742-17aac81b2c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c135c29e-3a24-4ad2-9b9a-6b724f77158e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ef5ec2d-3c1a-402e-bb5a-84fb0ccfddcf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea5bb7ff-86bb-4a6f-9059-9c500b020215",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5381d45b-0001-4187-b4fe-282b3ce16c9b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66a241f8-f53b-41ba-a2e6-5b3897ce2fb6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b38ef56-353c-43fa-8fd6-fc9a82a91714"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3a8fb24-7389-425e-81d7-91dc101e9cf0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "34e4d49b-c43f-48b9-a4f3-78ba4fbd449e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "904c8e44-6b49-404d-9861-a145460c4b65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d3d5d28-1c7f-4027-bbf5-0868507f6594"
            }
          }
        ]
      },
      {
        "id": "3b8ec1dc-ee9e-47b9-ba8d-0ee1295391ad",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "74fbfbf8-2682-45e6-a7b5-666a7fe36aea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "69fa298a-230f-48e0-8e60-6be3b8654531",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ff378ca-6abb-40af-b636-4e8a74da46be",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cb00d2-a178-425e-86f3-cde0092bda11",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8a20288-0faa-403b-9af7-aaefd5c45634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a7e067-4ea9-4d66-9d64-97a0aa4aa02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03d741bd-df48-42a3-a1e2-f50b5f602b88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcac47aa-61f8-450a-9344-c63b8a322b26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f6688f8-c90b-4ed1-8607-2a10d09bac4c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0aa1e54d-cf9a-4168-bd74-35ae98befd90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79e5efb6-ba63-450e-a2c5-825c05341c49"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c18ee79f-d96c-46a4-a5a8-3f1391517677",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "119db692-ae8e-4d2f-ae06-6fd3d7c4b24b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f80c773b-1c39-4ca9-836d-be392f9b6e0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ff9f346-b532-457f-b093-1b8c56c04ed0"
            }
          }
        ]
      },
      {
        "id": "2e17add1-a379-4ea8-96bc-53761c677f2f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09e9756a-b717-44ee-8795-b52e9e0ec3c7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "058b9330-7693-48f4-a4f3-de1e2566c20d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "27c85dfc-b8c4-4643-8d0a-b98a56fb50c7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a963b63a-85de-4eb2-908c-3f7e8aa162a3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87779f2d-2d16-4cc7-bcf8-5f1ae2f7e76a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 28.02777777777778,
      "responseMin": 7,
      "responseMax": 650,
      "responseSd": 44.71704717174588,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721695208748,
      "completed": 1721695223885
    },
    "executions": [
      {
        "id": "382de946-a373-4f08-b883-959ab5b5d0d5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ba424ec6-e82a-49f0-a432-867903fe0f88",
          "httpRequestId": "7299cf37-c4c5-4040-88f8-1720fc50cf51"
        },
        "item": {
          "id": "382de946-a373-4f08-b883-959ab5b5d0d5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "018d3211-083f-47e4-b84a-7ddb7c818419",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "002a386a-0932-46df-84d7-6b0933aa6e68",
        "cursor": {
          "ref": "449ecc54-6eca-4b7b-b089-9bbb763c3873",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2e73a4bd-99ed-4fcf-98c4-66175b4b4433"
        },
        "item": {
          "id": "002a386a-0932-46df-84d7-6b0933aa6e68",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bf561b0b-5191-4454-a211-5f633cacc550",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "0d3c170e-b9ad-4ca5-88ab-f4efada7c36a",
        "cursor": {
          "ref": "cef8568c-171c-4da7-a84d-0895b79a0f68",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cfc6187b-995b-44b0-be07-ce66fcd85ec6"
        },
        "item": {
          "id": "0d3c170e-b9ad-4ca5-88ab-f4efada7c36a",
          "name": "did_json"
        },
        "response": {
          "id": "0f8c9554-56e0-47d9-ad84-16c613ccdccc",
          "status": "OK",
          "code": 200,
          "responseTime": 251,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f5722d-fba3-4d5a-a7b6-7a75bd7fcdfb",
        "cursor": {
          "ref": "4b047498-b472-477f-ba2d-f043670ef865",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9ab90271-6017-4ca2-8912-d9c5706ce6cd"
        },
        "item": {
          "id": "a1f5722d-fba3-4d5a-a7b6-7a75bd7fcdfb",
          "name": "did:invalid"
        },
        "response": {
          "id": "3a1f3c9b-74f7-47ad-b3b8-2af6c07c2d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f5722d-fba3-4d5a-a7b6-7a75bd7fcdfb",
        "cursor": {
          "ref": "4b047498-b472-477f-ba2d-f043670ef865",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9ab90271-6017-4ca2-8912-d9c5706ce6cd"
        },
        "item": {
          "id": "a1f5722d-fba3-4d5a-a7b6-7a75bd7fcdfb",
          "name": "did:invalid"
        },
        "response": {
          "id": "3a1f3c9b-74f7-47ad-b3b8-2af6c07c2d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdd53e4-9062-40e2-b652-1259f5d08988",
        "cursor": {
          "ref": "1e68d0d3-b4c0-4b66-95da-f7c23d92fd2a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d9ca0639-63a0-4006-b36d-8fe00804f401"
        },
        "item": {
          "id": "1fdd53e4-9062-40e2-b652-1259f5d08988",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e00239bd-4c9b-4603-bcb9-1900b8c6ad96",
          "status": "Not Found",
          "code": 404,
          "responseTime": 184,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc8f08b-2bbc-4f1e-8841-92a05b6323d5",
        "cursor": {
          "ref": "48727fd5-7aac-40b4-9f38-f61f10dad450",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c92ccb01-fda5-4381-88be-774aec99cd16"
        },
        "item": {
          "id": "1dc8f08b-2bbc-4f1e-8841-92a05b6323d5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "16cab553-eef0-42f4-b3f6-700bb4c54bd6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05814025-eeb4-4bfc-aaf5-d3c95d2dccc1",
        "cursor": {
          "ref": "2a497160-aa13-444e-bd0a-b3e8d3b4c913",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "746a0fe5-a476-4e83-8c24-4dcf22338d3c"
        },
        "item": {
          "id": "05814025-eeb4-4bfc-aaf5-d3c95d2dccc1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "556e5777-7788-4fba-bf38-4da6a113c846",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbec849d-e0fd-49e6-bea6-bebcb292e903",
        "cursor": {
          "ref": "99bf58be-431a-4b95-bbf9-92b98bfa7c90",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6b823679-40b4-42d0-9208-aca0a9eb73b4"
        },
        "item": {
          "id": "bbec849d-e0fd-49e6-bea6-bebcb292e903",
          "name": "identifiers"
        },
        "response": {
          "id": "4524a446-9749-4592-babd-39b9a4c5ce62",
          "status": "OK",
          "code": 200,
          "responseTime": 218,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e4af48-3b18-45c5-806f-0ea7219803bf",
        "cursor": {
          "ref": "aedda8b8-eef7-456a-98f0-aba69f608533",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b5f83d50-ab0a-4a56-8cdc-1f10fec1e747"
        },
        "item": {
          "id": "b1e4af48-3b18-45c5-806f-0ea7219803bf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "82eb3ce3-4d13-429e-8287-4848f5606e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1911487-9ba8-4c7a-a402-2edc2dffc1e3",
        "cursor": {
          "ref": "08596869-0c77-45d2-b33b-7067df475b1d",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a90f9598-2c7c-46e8-8f23-9f2c558a34aa"
        },
        "item": {
          "id": "d1911487-9ba8-4c7a-a402-2edc2dffc1e3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6f580ec8-02f6-4979-8ca7-214ddbf737c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80421603-0ad3-48fb-b973-73a1b704fcad",
        "cursor": {
          "ref": "3fbce972-e309-4ce4-934d-ff63ffe76cf3",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e76ef41c-e46c-4492-a585-c08dfa5fd32c"
        },
        "item": {
          "id": "80421603-0ad3-48fb-b973-73a1b704fcad",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f578644a-217a-4b19-830e-cbfa84471ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986e302c-92a9-422d-94a4-de32f2cb6bd7",
        "cursor": {
          "ref": "9ada2420-817e-4271-94e8-432ddfdd6f1f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e568d6f5-4058-4ecf-be7c-1691de3b57b9"
        },
        "item": {
          "id": "986e302c-92a9-422d-94a4-de32f2cb6bd7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f5ac6fc9-c22a-4dd9-843b-5ba46e4d7b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4439954-a0f0-46bb-bb79-25ab48f55e44",
        "cursor": {
          "ref": "e29f4267-0e9d-47f8-9e1a-8fc295da2b44",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7f073b18-faac-4694-b744-d7d4756b59df"
        },
        "item": {
          "id": "e4439954-a0f0-46bb-bb79-25ab48f55e44",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6e630bd3-d0a8-41fa-a5eb-aa8639be13cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c574e2c-d708-480d-84b5-04019115486b",
        "cursor": {
          "ref": "455b6f30-fc93-4212-918a-23c9155541d9",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ca041578-e262-495a-b478-24ac444793ea"
        },
        "item": {
          "id": "3c574e2c-d708-480d-84b5-04019115486b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "44370c05-cff5-45d3-8790-1ec71cfb55c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce865bff-23fc-425c-83f4-a69ef66ae42a",
        "cursor": {
          "ref": "661a7a6e-da27-4ba6-af58-c10586492c5c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "92cf3151-194e-400a-8d3e-7e50b65ff68d"
        },
        "item": {
          "id": "ce865bff-23fc-425c-83f4-a69ef66ae42a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8f033a19-5e7c-4c9b-a4bf-04448fd65299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500a8298-862a-4e2e-9a6f-4ffd2a43cc2a",
        "cursor": {
          "ref": "a519c894-7e75-457c-aabb-0831c22bb708",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d68df037-fdc6-421c-b306-f431784b9a74"
        },
        "item": {
          "id": "500a8298-862a-4e2e-9a6f-4ffd2a43cc2a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d37532e4-93c3-4d75-8488-b5ced6d47ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e0f17e-bf9f-44b0-9bba-7650ae99abe6",
        "cursor": {
          "ref": "045a6bf7-2845-4b57-9857-a6287d8b13b1",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a1c9af25-e01e-470b-a3e9-3d7e077525e5"
        },
        "item": {
          "id": "16e0f17e-bf9f-44b0-9bba-7650ae99abe6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5923e26f-0b53-4f79-be1b-8f709978fd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4179d7d-2df7-49d9-84a4-e8b753b83f27",
        "cursor": {
          "ref": "3c8124b8-5073-4e6d-b631-624a2e387f1e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7b6295ce-b860-439e-9254-85af78bdfa69"
        },
        "item": {
          "id": "f4179d7d-2df7-49d9-84a4-e8b753b83f27",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6ce00b81-3662-424e-9672-7c7d7d41793c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ef35d5-d7b0-411b-ae6e-13140b09c83a",
        "cursor": {
          "ref": "bef53f9b-45b3-4197-b56c-d1b5d49d0c1c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5aca4c59-3d05-49ba-ac76-7f621eb5f3c9"
        },
        "item": {
          "id": "f1ef35d5-d7b0-411b-ae6e-13140b09c83a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4015b012-5549-4524-8173-6ad3d94b7f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fb3a1a-1fbc-4411-81e3-f7436b06c92b",
        "cursor": {
          "ref": "76ab00c3-c6d3-4e26-b70e-2f9192799a9b",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b5625de3-2b35-4d4c-86cb-94e1a717e268"
        },
        "item": {
          "id": "03fb3a1a-1fbc-4411-81e3-f7436b06c92b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e56199c9-7f69-4e45-a272-03b68dc89133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84faf4f-24ef-453d-821e-679fa68a4073",
        "cursor": {
          "ref": "26657617-2f37-4771-a3c7-4986632a50ef",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2910567b-ef7d-491d-b5e4-b4e3afa17987"
        },
        "item": {
          "id": "f84faf4f-24ef-453d-821e-679fa68a4073",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "506483f4-4d26-42d1-a72d-9fc6f5614589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9e49ca-74d5-43e3-a87a-e7b80cd72b72",
        "cursor": {
          "ref": "7d2a9c85-21e5-4940-b13f-84169d3b760c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ad16eb54-c908-477d-9631-438ca7f3890d"
        },
        "item": {
          "id": "4b9e49ca-74d5-43e3-a87a-e7b80cd72b72",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c98c0b65-9682-419f-abe8-007be2041156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df59345-5bed-4b6d-ba55-3239ac6a83f8",
        "cursor": {
          "ref": "b613eb0f-0b09-4b44-9731-f4c4f386efcf",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "59b9caa7-c243-4fc2-8120-7391c850e30c"
        },
        "item": {
          "id": "4df59345-5bed-4b6d-ba55-3239ac6a83f8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2a3986f1-6065-43b0-a2aa-c96b387bf32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f0a2e0-aeca-408b-80b3-85d89e359eac",
        "cursor": {
          "ref": "279c1b11-daf6-4133-beb4-d4406f21fea3",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8d178f3e-178d-44ac-bb9a-52e76d87f50f"
        },
        "item": {
          "id": "64f0a2e0-aeca-408b-80b3-85d89e359eac",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e5dfaf8c-b34b-41b4-b137-0c889a9ff406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad644f7-07fa-4665-b528-95e31b18a4b3",
        "cursor": {
          "ref": "2e778e13-8ce5-40e5-add2-ed09e0d0ae18",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fb9caff8-b2cf-4a00-a22c-a30569a0777a"
        },
        "item": {
          "id": "0ad644f7-07fa-4665-b528-95e31b18a4b3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "efb708a7-f39c-465f-b070-cce6e6c6dea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d49db0d-5690-4382-a348-96ccecdc9a31",
        "cursor": {
          "ref": "e52d3693-2095-4360-92d3-71ab47579fea",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2c7b51fc-be05-4a20-a1d0-e6baf9c7ed62"
        },
        "item": {
          "id": "1d49db0d-5690-4382-a348-96ccecdc9a31",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8443d90d-3d72-4057-b75a-bf875876d7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645af7e6-a527-4bb5-8a08-d05469d832e6",
        "cursor": {
          "ref": "9505f6d7-c8bb-4bce-a328-339940425701",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c2814412-f52e-4b9a-a2a3-c4df88cefe2f"
        },
        "item": {
          "id": "645af7e6-a527-4bb5-8a08-d05469d832e6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "02f9120b-8730-4342-ac6d-4772339c81a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7791f4f6-081f-487a-a4ff-11f8b6085b01",
        "cursor": {
          "ref": "9bbb3a78-a159-4ce4-8156-a48a5b6bcd0e",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f7c14098-2496-4865-a7c7-667d2b2d69a1"
        },
        "item": {
          "id": "7791f4f6-081f-487a-a4ff-11f8b6085b01",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "55cdabcf-e465-4d27-ac0d-d00aee9039f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01993e44-adf1-42d5-81ae-ab6ab10b6164",
        "cursor": {
          "ref": "076ea40c-9d15-4794-b77d-ec4f95b27576",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1d3dfb4f-19d3-47c5-a81c-51948773655b"
        },
        "item": {
          "id": "01993e44-adf1-42d5-81ae-ab6ab10b6164",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d3fa92b6-96b7-407e-a93d-580021040002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214ef5d0-63ce-4ca6-8cb9-8e9f9be01b1c",
        "cursor": {
          "ref": "0868a705-6e8c-43ea-a21d-f0cb9ddd335c",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8264b1c4-9f69-4782-8d69-5b0a07b36913"
        },
        "item": {
          "id": "214ef5d0-63ce-4ca6-8cb9-8e9f9be01b1c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ffb7d426-4ce7-4c36-8f32-b0bbd5ef60ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e9cec9-6561-41ad-bc6c-7679fdea1d59",
        "cursor": {
          "ref": "d7171810-f924-4945-9b54-a0c8b0d6db0f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "945753a8-eb8e-4f51-932d-e74ac377f0c0"
        },
        "item": {
          "id": "28e9cec9-6561-41ad-bc6c-7679fdea1d59",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "37d9dd62-a56e-425d-a911-9829ae513b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc44233f-803b-4ff2-b57b-df0ce803fde0",
        "cursor": {
          "ref": "95323c11-f50b-4a2f-b984-6c863c2f2987",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "759328d4-8fb9-43d4-998d-a1dc61bad444"
        },
        "item": {
          "id": "dc44233f-803b-4ff2-b57b-df0ce803fde0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d49d4b11-e0c8-4cc7-acc1-ba7800c8c901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d91dfe-cefc-4061-8e18-aa4539bc125a",
        "cursor": {
          "ref": "83f8b5f0-309e-4b08-b5fb-048f9f2fd702",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "89862cbe-9a66-4134-bad2-bbb79051fb20"
        },
        "item": {
          "id": "89d91dfe-cefc-4061-8e18-aa4539bc125a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b7ebbed1-b6e4-4b6e-bacd-882ea07a907c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a754e2ec-ae55-45aa-af08-178ff237da85",
        "cursor": {
          "ref": "f52fbf36-1238-4a6c-aa72-827cb959c8fa",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6e573490-d291-49d5-8ce3-8b59327ba4c4"
        },
        "item": {
          "id": "a754e2ec-ae55-45aa-af08-178ff237da85",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bc4d48f0-c605-4320-a001-d81f78cbeb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038a6a33-531d-4a0d-9e06-41ce8d7e605a",
        "cursor": {
          "ref": "28f717f8-1a94-4ec0-bc59-3cdfa19e935f",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c97bc708-6d80-41b9-9408-f6ef1cf451dd"
        },
        "item": {
          "id": "038a6a33-531d-4a0d-9e06-41ce8d7e605a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3327a03a-1999-40bd-8865-b3843f307cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da557ce-34cf-4e2c-ab29-aff53632a4a6",
        "cursor": {
          "ref": "0c2d9465-6d1f-4ebf-a900-93c8af89e1ff",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e66014af-82a8-43d8-8d05-541a6578d161"
        },
        "item": {
          "id": "8da557ce-34cf-4e2c-ab29-aff53632a4a6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "aa069dcd-d0ad-472a-a0da-0e12f177008a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd77ce8-cc83-434f-93eb-92a58d365b97",
        "cursor": {
          "ref": "1b05b9be-cbcd-47c1-85fc-482fec5f9e4f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "20c63049-303d-4c07-951f-43451f1379a5"
        },
        "item": {
          "id": "dcd77ce8-cc83-434f-93eb-92a58d365b97",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "535d07fb-307c-46b3-a939-cbf7e07c82f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246a5247-8c65-451d-b9b3-878fa33e32bc",
        "cursor": {
          "ref": "9bf95672-e748-4726-82b8-f1a2ebdee8bb",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "421a8e1e-ee38-4f96-a306-e9b86a53c0bf"
        },
        "item": {
          "id": "246a5247-8c65-451d-b9b3-878fa33e32bc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bbf09125-a561-4b2e-9bdb-86436fd512f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f80487-0db6-4e11-9d57-425d85c8bb09",
        "cursor": {
          "ref": "ca901f13-ac95-4d4d-a31c-3ad073aa2d8b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "94516cf6-3378-440c-acd2-39deb782864b"
        },
        "item": {
          "id": "d1f80487-0db6-4e11-9d57-425d85c8bb09",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9792c1a4-fc33-4c50-a727-927761d1c02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7161e40-7034-423c-a6f0-1d4b51d8f5f3",
        "cursor": {
          "ref": "e22ca19f-251b-42ad-a2ab-6b3729e32681",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "094cf4fe-a5e2-4bff-80d8-36cb788862f7"
        },
        "item": {
          "id": "b7161e40-7034-423c-a6f0-1d4b51d8f5f3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "70c28288-8476-48ef-9333-66a5689e9569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080cf255-d7a4-4620-a211-dea02bf538f3",
        "cursor": {
          "ref": "80ac3d52-2aa9-4b85-a5d7-b75790216e93",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "47852c47-6ec2-400e-bc3a-c3674fc8f6e4"
        },
        "item": {
          "id": "080cf255-d7a4-4620-a211-dea02bf538f3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "55c6f175-856a-493b-a069-2f65d8cc072f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b309a14a-6a1d-491f-8ec5-fcdf32b04902",
        "cursor": {
          "ref": "ff385e55-ef43-47bb-af79-28c2c52351cd",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "26dd49c0-779a-4203-b9cb-3c6eb703c68c"
        },
        "item": {
          "id": "b309a14a-6a1d-491f-8ec5-fcdf32b04902",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1eda5457-d9ea-4a73-b2ae-9007a96a4dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce45c59-8cf2-41a9-ae64-b1820777ca27",
        "cursor": {
          "ref": "4522d767-a9ba-400e-bb55-482ceab26641",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9eeeeef9-b4ca-4255-9552-1ba7a484976b"
        },
        "item": {
          "id": "5ce45c59-8cf2-41a9-ae64-b1820777ca27",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "190cff32-cf44-450b-a03f-67f71ffe36f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99ffe95-8038-496c-bd5b-b886598aefbf",
        "cursor": {
          "ref": "2128b845-3cca-4242-8beb-53e7b5ad2000",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1ad61806-2d0a-47f5-88be-ecd105158cd0"
        },
        "item": {
          "id": "d99ffe95-8038-496c-bd5b-b886598aefbf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2b38fde3-580b-446a-b602-181224506a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52153f3-8da6-4eb2-9c32-08d9ad3c2b51",
        "cursor": {
          "ref": "4a1a19cc-2fde-450d-972d-f4e7b69db355",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fd7c276a-f2d0-4a39-8dc3-6ed1556c10ec"
        },
        "item": {
          "id": "d52153f3-8da6-4eb2-9c32-08d9ad3c2b51",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6413582c-2906-4e46-85a7-7d17a6254765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b242ae-4844-4b3d-bdeb-ba7d4948a098",
        "cursor": {
          "ref": "73d95730-3ce7-4bb3-a9ca-46fbf13d17a1",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fe62856c-19e8-4735-9658-c4a68edc324e"
        },
        "item": {
          "id": "d5b242ae-4844-4b3d-bdeb-ba7d4948a098",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2a8bc050-6c56-41d4-8d95-7d4745715519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1418a7e4-d88a-4b67-b45e-d2074c72d4c1",
        "cursor": {
          "ref": "88f4dbe1-b145-4fb9-ac1f-d6edce7c2f9c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e208b013-2670-4381-84ca-1eb07660466d"
        },
        "item": {
          "id": "1418a7e4-d88a-4b67-b45e-d2074c72d4c1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c137c14a-2d6b-4206-9b53-e13118fe4f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5b2267-87bf-467c-98e6-8239d9b2b7d6",
        "cursor": {
          "ref": "26758455-b159-4273-bf5f-a2618b91cd4e",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "37ba58f9-64b6-424e-adcb-3b9b948b0aea"
        },
        "item": {
          "id": "3e5b2267-87bf-467c-98e6-8239d9b2b7d6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3cdda203-8c7e-42a4-8fd4-655e8bba885e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c019e2b-7ae3-49a5-a354-8c41e978a152",
        "cursor": {
          "ref": "66581721-b4e3-41b7-bcdb-23d5c27d5fe6",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d80dc3f6-786c-42b2-86b5-5d0f56505c2c"
        },
        "item": {
          "id": "8c019e2b-7ae3-49a5-a354-8c41e978a152",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "72e4dd92-7757-460a-8561-07cbfa00eb1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa47b7ce-5621-4a6c-a106-f1c96f8fde57",
        "cursor": {
          "ref": "05a78f0c-fe40-4589-a2c4-10b706357e4b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1fca006b-877b-42e7-8597-2f311def5ea6"
        },
        "item": {
          "id": "aa47b7ce-5621-4a6c-a106-f1c96f8fde57",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c645c0e1-8b7f-45dd-bfb9-6dfccca4d5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f7fca5-8df3-486b-a318-dfe7dfa50fbb",
        "cursor": {
          "ref": "7109c4f4-69ce-4df1-b0bd-a94e1b7bb6b5",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3e5a88b6-47e3-40ee-92c0-7cb601d9c58d"
        },
        "item": {
          "id": "26f7fca5-8df3-486b-a318-dfe7dfa50fbb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1b3d4739-d6fb-422e-9a68-7d235f93de08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671330c3-f75f-4bf4-9341-3418ab61ae84",
        "cursor": {
          "ref": "96060a94-9a90-4957-af13-951bcef1d4d9",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "60a6a15a-16a9-4346-b45c-fe47cc938fca"
        },
        "item": {
          "id": "671330c3-f75f-4bf4-9341-3418ab61ae84",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "93083cb7-7103-4da1-8598-8474310438c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8433787-d3e6-489a-b2a2-2ad3ffe9219e",
        "cursor": {
          "ref": "7cf1911e-611a-48ba-9462-49d904df0dd5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1717946d-6ee7-4e6f-8226-b58f388c9507"
        },
        "item": {
          "id": "d8433787-d3e6-489a-b2a2-2ad3ffe9219e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d1090052-c36b-4ba3-b700-9d7a32026505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15848be3-2dbc-4e33-a12e-097d3a486e7f",
        "cursor": {
          "ref": "86e2153d-2cbf-4283-8304-976a0cb79d0d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5d5798a9-877b-4560-b8a0-1ed6c806023f"
        },
        "item": {
          "id": "15848be3-2dbc-4e33-a12e-097d3a486e7f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "47ae72be-1c16-4f8f-9d69-3a6bf7f410e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3795fbe3-8038-436f-9077-da2fa2d6de07",
        "cursor": {
          "ref": "befd535c-c273-4305-8b17-755f7d40c623",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fff24432-7cd2-4692-a179-2386d8f5c6b9"
        },
        "item": {
          "id": "3795fbe3-8038-436f-9077-da2fa2d6de07",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "59aae21f-1c07-47ee-bcc2-ef93d6f17efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7f6c44-d380-477b-aa8c-dd09303cfd87",
        "cursor": {
          "ref": "4a0ae613-8dc5-4090-a00b-1029bcef1293",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8f398688-2691-4023-a753-61b41e44be54"
        },
        "item": {
          "id": "2e7f6c44-d380-477b-aa8c-dd09303cfd87",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a6241d8f-7379-4058-a0df-1aa54fd7229a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb004389-bddd-47c4-8a8d-4e45cea23a27",
        "cursor": {
          "ref": "b2d1fbda-931d-4ab4-9dd5-fea3c1dcdcb8",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0f4cf149-254a-4009-b994-8b6386b617b5"
        },
        "item": {
          "id": "eb004389-bddd-47c4-8a8d-4e45cea23a27",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ac73cc31-9975-4bb6-9037-1c78cc6179cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69ca8af-e1cf-41f1-875a-315f838fdfa5",
        "cursor": {
          "ref": "0477c774-a639-493a-9c7a-e4280121b7a1",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1e3ec3a6-f98c-41fd-b40f-e2e1f4b9799f"
        },
        "item": {
          "id": "d69ca8af-e1cf-41f1-875a-315f838fdfa5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6a3d68a2-b36e-4bff-95e4-b67bab4d99dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1847787d-3aaa-46d4-a138-6779060a45d5",
        "cursor": {
          "ref": "12e31975-79e7-488b-a775-b5cc298c719b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "049be640-40e6-4e4c-9103-3cd11320fcc7"
        },
        "item": {
          "id": "1847787d-3aaa-46d4-a138-6779060a45d5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c210f512-2ae3-4fa8-94c7-f4a7d68f97e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23348cb3-fae0-473f-9f19-247b462b36d7",
        "cursor": {
          "ref": "198627ed-b806-431a-8afd-3d643f15f765",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6cc83b87-2188-4b21-818e-ba12ee488947"
        },
        "item": {
          "id": "23348cb3-fae0-473f-9f19-247b462b36d7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "162985af-50f2-4294-b184-6e992ff42a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e11acb-a43a-4052-83cf-586e56cbeabf",
        "cursor": {
          "ref": "5cd143de-0f3f-4bb0-842f-dd1608bc6e87",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7b9f43f2-3450-4e58-b4bd-96cce1358e69"
        },
        "item": {
          "id": "14e11acb-a43a-4052-83cf-586e56cbeabf",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a5889ee0-45a8-4ef2-9fc9-8bd44ef39260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd67dd31-755e-4ce6-a127-f6de0f513a87",
        "cursor": {
          "ref": "096a0baa-d47e-4795-aa8d-0bb1294545a3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "69570cb6-9055-43b9-a108-ece201b0c596"
        },
        "item": {
          "id": "fd67dd31-755e-4ce6-a127-f6de0f513a87",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "55748e8f-cbb3-4c60-a09a-f1390e021ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73225a7-954c-4f9c-b765-734cd9c603ac",
        "cursor": {
          "ref": "5b04a6d7-d361-40a1-bcfe-e7d0153a51c6",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "76bc5045-442c-4930-8789-e592d30a5891"
        },
        "item": {
          "id": "b73225a7-954c-4f9c-b765-734cd9c603ac",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6d3a7cf4-d3d0-409b-8d33-a937aed029f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfb7748-39c5-49ca-ad00-f0c110d96c0c",
        "cursor": {
          "ref": "8ffc6e90-1abe-4ff8-b3ca-55589b56654e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ca67f21e-c1c3-4a34-a372-9c74e2b5cbf5"
        },
        "item": {
          "id": "6bfb7748-39c5-49ca-ad00-f0c110d96c0c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "71ef340d-9d0c-46be-a411-2b7c1e8bf070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cf5f2f-5698-458f-bde1-5907bebb42c3",
        "cursor": {
          "ref": "9a3fdb39-239c-4b62-bc3a-a697d186f76d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1484c618-babe-419a-9f65-2961916398dc"
        },
        "item": {
          "id": "08cf5f2f-5698-458f-bde1-5907bebb42c3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "94a14461-8cd4-4419-bc05-d05718bc2027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4dff606-ac36-4327-bf46-8bfbd9299c60",
        "cursor": {
          "ref": "4421c4b5-d322-4787-b0ab-fd3954fe5e3f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "68614ba5-2630-484f-a97a-ecc92769f45f"
        },
        "item": {
          "id": "c4dff606-ac36-4327-bf46-8bfbd9299c60",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "414734eb-2227-4e6e-bd92-6d8b0eb04091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4988dc3b-5c56-4f66-99e7-da389f1c4484",
        "cursor": {
          "ref": "74b351a4-b887-4911-89c7-66e1d4805244",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d30c1d56-6865-4c15-9117-5d45b71ba9c0"
        },
        "item": {
          "id": "4988dc3b-5c56-4f66-99e7-da389f1c4484",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0790961e-f6b5-4cf2-b164-462c6f6b153f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef617f9-71c8-425a-a593-54024a1642de",
        "cursor": {
          "ref": "60570a08-64b4-464d-8c38-a0e88b38baae",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a5e4cbdc-a73e-4371-97eb-21b5b266c878"
        },
        "item": {
          "id": "6ef617f9-71c8-425a-a593-54024a1642de",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5b5e0c0e-1186-407d-880d-edf9d01c47f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59cbe07e-c935-4459-8fee-a96d65489956",
        "cursor": {
          "ref": "e3b719c4-34ee-4795-8eb8-e1f06fa01e92",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "00f2c11e-013d-40d4-9882-0b304ff112ea"
        },
        "item": {
          "id": "59cbe07e-c935-4459-8fee-a96d65489956",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "248dc17e-201e-4b3a-a899-b2e8358d1b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ef69a4-ef7a-4f94-91fb-5864def3b597",
        "cursor": {
          "ref": "21db5ca1-682a-4eb1-9d16-3d6d3504999e",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4a4c4058-91f9-43ed-a38a-b7342588c29e"
        },
        "item": {
          "id": "d6ef69a4-ef7a-4f94-91fb-5864def3b597",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "adcc47a3-7a4c-4424-ac6e-bc68730995aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647f359e-004a-4d5b-85cf-6e3980dcde16",
        "cursor": {
          "ref": "72a082ea-dbb6-4760-9019-62b637149153",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1d004d15-3bab-4111-b218-71a72c922e14"
        },
        "item": {
          "id": "647f359e-004a-4d5b-85cf-6e3980dcde16",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4d6953ae-8331-4280-9dd4-f01bcdb5b35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046856d0-bcfb-47b2-9df2-c90bd3750ad7",
        "cursor": {
          "ref": "e81d2c6e-0da9-4d25-a8a8-c82d3e2ac89c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9a93450c-1bcb-4abe-810e-5126069cf853"
        },
        "item": {
          "id": "046856d0-bcfb-47b2-9df2-c90bd3750ad7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5e1d39cf-6024-4f38-8551-7c00b8e5f4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b099e1ab-7eaa-444b-a31e-99139ef39890",
        "cursor": {
          "ref": "92b376bb-6f2f-4277-8269-e50ee48efb54",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "96cf85e8-6e85-4d83-b01d-2f807e5b523d"
        },
        "item": {
          "id": "b099e1ab-7eaa-444b-a31e-99139ef39890",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "237959aa-5760-416b-a868-9ef45de8e854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90f499f-5a15-4c47-9c8b-bdf84b5c4a81",
        "cursor": {
          "ref": "c2f2fe57-7ef6-4a82-9f5b-c7b6d8d892f2",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1c45950e-ba23-44c4-831f-090a22a7acc5"
        },
        "item": {
          "id": "e90f499f-5a15-4c47-9c8b-bdf84b5c4a81",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "db2fdb31-cf4f-48aa-b32c-b5d3e1e33577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06464b95-debc-4a4b-b2f3-4fa81c0af261",
        "cursor": {
          "ref": "9306d262-2a36-4b45-b754-593c0772422d",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0a798e52-90e1-460e-b2e7-199d7a81a840"
        },
        "item": {
          "id": "06464b95-debc-4a4b-b2f3-4fa81c0af261",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "db840849-1d16-45a5-a0d8-ffa1d1a9323f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c56342-a7db-49ac-8acf-f02bc9a3cc10",
        "cursor": {
          "ref": "57bc4316-7a78-4d7a-b3eb-65548fa080ad",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3997dd3e-d22e-41c3-9f23-d2d87247d332"
        },
        "item": {
          "id": "61c56342-a7db-49ac-8acf-f02bc9a3cc10",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8f22210f-a262-440e-a398-30b28714e870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c40b60a-c2cd-4af9-9c87-7712085a2620",
        "cursor": {
          "ref": "0f76032f-4aa5-4590-8f3c-65360bb8b629",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2956d642-3ce4-45d8-a3f1-eac8dc51eeb3"
        },
        "item": {
          "id": "5c40b60a-c2cd-4af9-9c87-7712085a2620",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0566e213-bfb1-4a2d-a8cb-5343f656440f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b2c519-d209-4c58-b43e-7e05fb9f2ee4",
        "cursor": {
          "ref": "2ab70b57-0df1-4d00-9c94-a37f756b6924",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1e0161af-565f-4d1c-a1f0-cd11d4e3344b"
        },
        "item": {
          "id": "03b2c519-d209-4c58-b43e-7e05fb9f2ee4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2a239487-8b3c-4651-98fe-db2468414711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0328ea4f-7ae3-4d2f-8caf-677c0f501e7f",
        "cursor": {
          "ref": "3c1e31e7-d6e3-4751-ab43-2d9d230da783",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8b3fae83-7561-448d-a6c6-1cc4b7c1bb65"
        },
        "item": {
          "id": "0328ea4f-7ae3-4d2f-8caf-677c0f501e7f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3fb00f69-6a1c-4f5f-a071-158e6f2dc93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7b2b85-6687-46d9-b481-471a3ce4211a",
        "cursor": {
          "ref": "8dd067f9-ba06-41b6-9850-3b4c762a5d4e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "81234147-ad77-48ec-ac1e-86ca542c5607"
        },
        "item": {
          "id": "fc7b2b85-6687-46d9-b481-471a3ce4211a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "92793f86-c372-4a15-a07a-950a3d2239ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2387e1-cefa-4944-9f00-26256503f53c",
        "cursor": {
          "ref": "151aaf5a-c8a7-4d22-b067-e4f03c645544",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9c4a8fd2-75d8-4d5b-8d8b-9db879dd54b7"
        },
        "item": {
          "id": "5b2387e1-cefa-4944-9f00-26256503f53c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "eab13596-087c-4ed7-8f9a-a8cbe106ac0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bcb57a-c38b-4344-8d01-a3027e65e799",
        "cursor": {
          "ref": "311d044a-c39d-4d0e-a224-a700c8e70502",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6934795d-e718-4d1b-a085-72da4be5a7fc"
        },
        "item": {
          "id": "86bcb57a-c38b-4344-8d01-a3027e65e799",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "377bfebf-a208-4ef3-a503-f65906e58409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e06db62-429c-4367-9414-c5bce298bd8f",
        "cursor": {
          "ref": "5e26742a-ff6b-44ae-a4ab-e96ae1831e5e",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "777b6cc5-489a-44a7-9657-2a6eed12aa98"
        },
        "item": {
          "id": "0e06db62-429c-4367-9414-c5bce298bd8f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "dc575871-54a8-426b-9598-22b209b573c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17936f7-a3c5-4b42-91fb-0bfbf3593a19",
        "cursor": {
          "ref": "2cbf4949-6419-4044-9461-3c0741a78887",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "276c2abf-5052-4e1b-893e-50e07cd6504b"
        },
        "item": {
          "id": "c17936f7-a3c5-4b42-91fb-0bfbf3593a19",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e44ed77f-db61-4e0d-83af-027806bd08fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3534977a-b3cd-40dd-9963-28b8933753d7",
        "cursor": {
          "ref": "d947f082-4bef-4b5f-8d3f-e1d7a122fc83",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "72a15852-db15-40ac-a16a-b2599238ce96"
        },
        "item": {
          "id": "3534977a-b3cd-40dd-9963-28b8933753d7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f9a63c8e-322a-4115-82ad-85d9cba6228b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6af0cbb-7841-4482-b25b-0c41e09edfc5",
        "cursor": {
          "ref": "d94f4cf4-44b5-44ac-9207-c6d7f9514869",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6346676d-2d40-42e1-8eb2-a8265cd2c8ef"
        },
        "item": {
          "id": "c6af0cbb-7841-4482-b25b-0c41e09edfc5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "63c4f2d4-a328-4d6c-8e2c-897293c201b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7197b3b-e6de-44d6-bb52-3685ccfafcf7",
        "cursor": {
          "ref": "cb9a25d9-7864-48f7-b294-ea8ef910aa65",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8d36aa8c-e10c-4f8e-9bce-ba21ccf736c2"
        },
        "item": {
          "id": "a7197b3b-e6de-44d6-bb52-3685ccfafcf7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b8d6c6fc-5265-4319-a6eb-144112071570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41900d83-25df-43f0-b3c9-739c42262028",
        "cursor": {
          "ref": "7e3aa3ac-8295-4403-a136-eb1ceb418a87",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fc910e9a-95ad-452d-a0de-d2fe04fbc511"
        },
        "item": {
          "id": "41900d83-25df-43f0-b3c9-739c42262028",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "008df9a8-b2eb-4f82-bbbf-0f6bf69079c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8cee5e-0f98-42c8-a3ae-fd60d3e3e6c0",
        "cursor": {
          "ref": "dfdc9a41-14f8-4b8b-96db-2ffe1d3b1d0b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "57bde4db-6373-493e-8421-5af774a088a4"
        },
        "item": {
          "id": "ce8cee5e-0f98-42c8-a3ae-fd60d3e3e6c0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "363582d9-fbee-456d-ada9-b8963f30b79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0a3049-bf70-488c-812f-1f81439beb7c",
        "cursor": {
          "ref": "4cbe2a04-5576-478a-8da9-19599bbcbe83",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3aa7b123-44f1-427e-b768-422b51f3064b"
        },
        "item": {
          "id": "8b0a3049-bf70-488c-812f-1f81439beb7c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f5b2eb3b-c931-4e99-8cf8-be7d0027d70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a88cf7c-980a-4df2-97e5-60f1ec85272b",
        "cursor": {
          "ref": "fd9761f2-b348-40e6-a144-ad33e451bec7",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ff588919-73c2-4ebb-a890-bbb6605f1266"
        },
        "item": {
          "id": "0a88cf7c-980a-4df2-97e5-60f1ec85272b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6f5ad82e-ec75-4dbd-891a-cc39c14c6dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42178af2-0589-4c2a-96e2-62ffc8bdaa4d",
        "cursor": {
          "ref": "38d60701-a1df-40bf-805b-502d836bc6b2",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "442b7c2e-6410-4df5-a3d8-116f924bf3d5"
        },
        "item": {
          "id": "42178af2-0589-4c2a-96e2-62ffc8bdaa4d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "621bbdd0-7337-4edb-a2a5-06f99965c64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22430df-6ec7-4045-ae26-20e3ccf31598",
        "cursor": {
          "ref": "57cd8df4-83bc-4ed4-b1dc-a220f921d9d6",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "093aad98-7b52-4696-8887-ed2968c1d016"
        },
        "item": {
          "id": "a22430df-6ec7-4045-ae26-20e3ccf31598",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2faa8b98-478d-477e-b0e9-4c21b066f288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab881afd-9879-4faa-a924-b1a6f3e0bae3",
        "cursor": {
          "ref": "0365b82d-6561-4449-9155-391562ad64bc",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e204cfb6-bbd0-449a-9b68-121cd03b681a"
        },
        "item": {
          "id": "ab881afd-9879-4faa-a924-b1a6f3e0bae3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d1afb6d8-74ea-4bd7-9229-fc212a975aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833c1706-d4cb-4118-b266-0870c8a382f2",
        "cursor": {
          "ref": "a712dd8c-e07b-4d00-828e-a9e17e027ada",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4a4f9989-fd0e-499b-9360-183356b0c0b8"
        },
        "item": {
          "id": "833c1706-d4cb-4118-b266-0870c8a382f2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e1d15bd8-2bb6-4b26-895a-3225afe2aba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f741984-5a80-46a0-980a-6c1bbe122228",
        "cursor": {
          "ref": "7c446507-60f1-426f-9150-cbb05d9be704",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "57c95a27-8956-4428-ab79-753e404ca2b2"
        },
        "item": {
          "id": "2f741984-5a80-46a0-980a-6c1bbe122228",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "faafb190-35ee-4db5-a2d7-c843aeed935c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ea2f0f-d5ef-4414-b54b-accc23004405",
        "cursor": {
          "ref": "04856243-ccac-4c37-b27d-1ef72868f1f6",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "785bc7fd-234f-43b0-9d2b-c61a6bd7d151"
        },
        "item": {
          "id": "92ea2f0f-d5ef-4414-b54b-accc23004405",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "65c16dea-9b87-4daa-8c3d-72f91f3508f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41c4639-a0a9-4c41-9f43-2fb2a4e6a4b8",
        "cursor": {
          "ref": "b741feff-2b3a-4196-8f45-363106bcad63",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c9bb583b-825d-4b6e-a898-96b2f54a43e4"
        },
        "item": {
          "id": "d41c4639-a0a9-4c41-9f43-2fb2a4e6a4b8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "059af558-b854-44ed-ba44-56e65cc7232c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a513d63-44e6-426c-b32f-f0f6bad086dc",
        "cursor": {
          "ref": "81954aac-fe95-4b74-a337-0e937cde5f25",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b7611559-ee01-4a55-867d-86cc2d991a07"
        },
        "item": {
          "id": "8a513d63-44e6-426c-b32f-f0f6bad086dc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "82290f48-bc28-4eb8-a617-a18bcc8f000e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d55730-f736-4058-a2b2-5a83c9f3637d",
        "cursor": {
          "ref": "07e3f1a7-ae7b-414d-b5a9-2a5dcd90a087",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "237fc74a-9b4a-4ca6-9bb5-a9dc8b4d3bac"
        },
        "item": {
          "id": "65d55730-f736-4058-a2b2-5a83c9f3637d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "440efd74-1f42-405b-97f5-c65bfce1fc5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b74f6c9-f7ea-4d59-9544-0d7fbec1eeff",
        "cursor": {
          "ref": "75ecc1b9-ca19-4859-8852-faa394be7e84",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "29169315-6c7a-4e7d-90d4-2ce407d6b565"
        },
        "item": {
          "id": "6b74f6c9-f7ea-4d59-9544-0d7fbec1eeff",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e8217a85-a769-4077-aa35-4ce2fedcf1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcac0ed5-92ce-4bf5-985c-ccae4cb52061",
        "cursor": {
          "ref": "2720741f-298f-4f17-9fb7-ef62fe3b62dc",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7696a553-729c-45c0-b0a9-61b2db644072"
        },
        "item": {
          "id": "bcac0ed5-92ce-4bf5-985c-ccae4cb52061",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f290f62d-c479-4daa-9c85-e0678a1fb689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "77a51de7-abf5-4641-9827-245c2733223f",
        "cursor": {
          "ref": "c1f26f19-bcf2-4a9c-9fc9-65c3dae50cc1",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9341b1e8-a03d-44ff-ac47-e4119ad6313b"
        },
        "item": {
          "id": "77a51de7-abf5-4641-9827-245c2733223f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d7139bac-0f3c-463b-8ced-737a9da5a7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e78381b5-692a-48dd-a9ea-a0dedd7649ac",
        "cursor": {
          "ref": "5412deb3-c533-4f1e-a2e0-5f3710c7e4e1",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "99f39090-c1f8-46db-9103-b733110e03e5"
        },
        "item": {
          "id": "e78381b5-692a-48dd-a9ea-a0dedd7649ac",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c2bad2a4-bb9f-4217-91b4-51b67027a025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "48806b86-bfb0-45ce-ba65-bd66f4c66ae4",
        "cursor": {
          "ref": "7fe47513-0181-4d1e-90ac-9b33ed561872",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "362ecd24-ded3-4dca-bd8b-356851bd167c"
        },
        "item": {
          "id": "48806b86-bfb0-45ce-ba65-bd66f4c66ae4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9a58e77b-2f37-425b-aa6d-41908d090f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "782b3cb5-fa15-4219-994c-f47a325310f0",
        "cursor": {
          "ref": "97a1cf01-4cb4-4359-82f5-24a3eff5948f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b7b89295-7922-4221-9244-3449ad005b3d"
        },
        "item": {
          "id": "782b3cb5-fa15-4219-994c-f47a325310f0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c366b9c1-b218-4a0a-b759-ae0c089769f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "1bf6d001-9d0c-4e2f-8c90-3fd85373d3f1",
        "cursor": {
          "ref": "cfabe2de-4c2e-46c7-8379-264c3d1e9f63",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1ccc3b5d-8918-4a7e-bced-5e0cc2e6f4ea"
        },
        "item": {
          "id": "1bf6d001-9d0c-4e2f-8c90-3fd85373d3f1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "55bd144e-c734-4e7c-af2f-11a51fd24b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "1127ef7a-850e-4028-9664-fda4be51e7c1",
        "cursor": {
          "ref": "ce403fd7-d7e1-4f17-8f98-42a8d4268719",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "75048794-bb9a-4876-b445-f996ef658841"
        },
        "item": {
          "id": "1127ef7a-850e-4028-9664-fda4be51e7c1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6c4ebc4d-1e68-491a-b100-613f87312878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "85b59dbc-61f8-4997-9b1a-c46838c40da6",
        "cursor": {
          "ref": "8a1d133c-9ede-4e0b-b8d8-60978660fa56",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "428a7fa9-171b-4caa-80c8-d935483de632"
        },
        "item": {
          "id": "85b59dbc-61f8-4997-9b1a-c46838c40da6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cc48d3a2-0ebd-489c-a9f5-7b55395805d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6557d7f9-7769-488c-964d-808d1e3066ed",
        "cursor": {
          "ref": "066f4cec-5956-43a3-bb0f-7fcaf854343f",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b50493e8-13ec-4a93-b5e5-a4d703b3a919"
        },
        "item": {
          "id": "6557d7f9-7769-488c-964d-808d1e3066ed",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c847c383-d82c-40f3-8b32-895cab0bdb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9108ba-97da-4535-a0d5-1e234f17299b",
        "cursor": {
          "ref": "2a225055-3aca-45d7-8b71-80a15be3827d",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e2f6b076-7da7-47ca-b02d-cab646c92da7"
        },
        "item": {
          "id": "bb9108ba-97da-4535-a0d5-1e234f17299b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "45ded760-25ef-4a7e-8b2d-892d8078f2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702d11b5-7570-427f-8084-2e0d6ac5a38b",
        "cursor": {
          "ref": "40db505b-9e33-407f-8ae9-0f46145542d0",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6e96af27-3e1a-4638-ba87-1fe868af3578"
        },
        "item": {
          "id": "702d11b5-7570-427f-8084-2e0d6ac5a38b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "900b35de-0eb1-4f33-8eb5-554eb7d7c6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16ac684-8795-4031-9313-460c6810e745",
        "cursor": {
          "ref": "ead06644-f415-4432-bf17-5deece42abb1",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9ab756d9-ae2d-43a0-ba03-94c247712eaf"
        },
        "item": {
          "id": "a16ac684-8795-4031-9313-460c6810e745",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2129e995-d974-42eb-81b7-d4acfeccada9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05524204-211a-450f-a661-138544bef83e",
        "cursor": {
          "ref": "46eadd4f-c931-4658-8ddd-5ec37cb99d8b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4d1d26eb-eb13-491c-b9f0-73fb7219a234"
        },
        "item": {
          "id": "05524204-211a-450f-a661-138544bef83e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "05a3fb61-4fe0-4b87-8340-5a066afa0ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28af603-43c5-4d9c-91cd-4d389e4875d1",
        "cursor": {
          "ref": "e3fd3dfe-609a-4881-86a6-5ceebfe31fc6",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "745958f1-df48-4397-99a4-6a0296151d33"
        },
        "item": {
          "id": "c28af603-43c5-4d9c-91cd-4d389e4875d1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "13181d2d-3d0f-4fc1-992c-a33281e67594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2bdf57-960b-4f49-a015-cf16ea6f5cd6",
        "cursor": {
          "ref": "730acbea-d9fc-46e8-8741-ac5810fcb3e5",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "13f0ab60-fce6-4dc4-bdfa-028529fb3429"
        },
        "item": {
          "id": "3d2bdf57-960b-4f49-a015-cf16ea6f5cd6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "95d9c6ca-d131-432f-816c-1c108c711425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f95b06c-a540-4e74-bf60-cf5513dd08b4",
        "cursor": {
          "ref": "a97bbea9-375c-438b-9422-ced5728a81f2",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a17c7936-933b-4350-91ad-002783104e45"
        },
        "item": {
          "id": "2f95b06c-a540-4e74-bf60-cf5513dd08b4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "89c90c4b-e6b8-4af4-8621-37b4801ce9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1af2e2-0372-4ffb-9f0f-eec1e5f67367",
        "cursor": {
          "ref": "371e6d44-d62a-49ce-ac4d-2b7e67deaf9b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c7eec784-9e08-4cff-a629-37dd95cc1618"
        },
        "item": {
          "id": "4f1af2e2-0372-4ffb-9f0f-eec1e5f67367",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7c6048a3-b2a8-498b-8ec6-d7a093867a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18a7c2c-54a6-43f6-b5f3-6db02eecebdc",
        "cursor": {
          "ref": "3363fe53-bec6-4316-8773-febb7fc37343",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a30d04a6-9c5d-4b7a-a0b2-69c2be301fb8"
        },
        "item": {
          "id": "b18a7c2c-54a6-43f6-b5f3-6db02eecebdc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "62b355e9-82e3-4224-a398-cb146e5621fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fd063f-0102-4a43-be92-7a90d44c73fc",
        "cursor": {
          "ref": "f4fdecc5-71d2-4b42-a3c9-e0810243f56e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e63144f0-204a-4910-aabf-664057c9fa39"
        },
        "item": {
          "id": "56fd063f-0102-4a43-be92-7a90d44c73fc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "56582a13-3e18-459c-b035-0021dea6c57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef02b4db-a94f-4028-9bac-0fe4aaa9e9f8",
        "cursor": {
          "ref": "a525c205-9d0f-4e30-8a49-d284d7500a3f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0eeed72e-99e2-4506-b8bd-12286725a047"
        },
        "item": {
          "id": "ef02b4db-a94f-4028-9bac-0fe4aaa9e9f8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5200d9de-495b-4102-a5b6-e754a18d0f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a72dc0-6457-40a5-bd9e-520af4c8d3ff",
        "cursor": {
          "ref": "860824e2-e563-43a9-88e0-816ba2d40b52",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b015eba3-9856-4193-8486-e2b1c24eb18c"
        },
        "item": {
          "id": "b4a72dc0-6457-40a5-bd9e-520af4c8d3ff",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a859360c-0468-4efe-806c-c4288c2bce11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8042903e-8715-4ef8-8790-7ffeb1bcc6f9",
        "cursor": {
          "ref": "752827d0-39cc-4498-91eb-dee62d1bf919",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "72a2d259-eaba-43fc-8a7b-5546a9a08558"
        },
        "item": {
          "id": "8042903e-8715-4ef8-8790-7ffeb1bcc6f9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "27bbb717-18bd-4b9e-8bc8-ba168ac0266f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9060c57-5442-43a2-ae62-9c36bbee83da",
        "cursor": {
          "ref": "41fd4e7e-f9ad-488e-b1b5-738be3185afc",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e11c71a3-5b1f-4cc5-bdfd-2b7054e82ae2"
        },
        "item": {
          "id": "a9060c57-5442-43a2-ae62-9c36bbee83da",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ee7ad921-8b32-4173-af88-a7444e7ac880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d589531-3b25-4b14-8dfb-c7e13a128b53",
        "cursor": {
          "ref": "2f312d37-2e33-4212-a3ce-c1035d4929c0",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "551b7573-f535-4385-a5e5-c60a7c497767"
        },
        "item": {
          "id": "7d589531-3b25-4b14-8dfb-c7e13a128b53",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f3c35ab5-9232-4e22-af52-9e52049dccf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57db9c9b-d701-4b00-b7f1-93260ef0c933",
        "cursor": {
          "ref": "e5be6380-c694-43a2-8b2d-b330c3077913",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "caba1ac5-6b3b-4c98-8b10-68e929e9afde"
        },
        "item": {
          "id": "57db9c9b-d701-4b00-b7f1-93260ef0c933",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "22f6d943-90a0-4115-ad3a-497e0c249003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6640c9a0-720d-4d69-97b7-2a0f806b8711",
        "cursor": {
          "ref": "1705a371-ce55-464e-863c-e47bf76d9d25",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "51a85113-5209-4ca0-a9c3-ac11a5616eb3"
        },
        "item": {
          "id": "6640c9a0-720d-4d69-97b7-2a0f806b8711",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b35a428a-8f54-4494-8ba7-e895535c008d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94576d66-f841-41d3-ab60-624eb1cd814a",
        "cursor": {
          "ref": "4c2c7035-cdf1-4076-8421-1d990a755997",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "11e25c04-2830-4369-b262-22be07310a43"
        },
        "item": {
          "id": "94576d66-f841-41d3-ab60-624eb1cd814a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4ba14d97-061d-4714-90e9-12219c9c2b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d01f82-0d90-457f-986b-554fd2f9a304",
        "cursor": {
          "ref": "25efac1a-bd03-4038-841a-b381a4aecd03",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5586ba83-691f-42b4-8ddb-dbb24a251652"
        },
        "item": {
          "id": "f3d01f82-0d90-457f-986b-554fd2f9a304",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "aad5e7e6-50c1-432f-8426-310d38a80143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef7c470-15ad-4ff6-b55c-78961ad4fd46",
        "cursor": {
          "ref": "05a79d3c-598c-455b-b2b3-47665b18b7a1",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "83c1b5fd-903d-46a3-8318-37b69b994b52"
        },
        "item": {
          "id": "5ef7c470-15ad-4ff6-b55c-78961ad4fd46",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a1d8f5dd-c0db-4b76-988e-ce917f3d41c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bce7695-260a-4244-83ea-a671b14a55f0",
        "cursor": {
          "ref": "060af8e6-41e8-4e2d-871d-f9307cb10b63",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5ff6bdd8-9653-412c-a0ec-cbcaae0705e4"
        },
        "item": {
          "id": "1bce7695-260a-4244-83ea-a671b14a55f0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9f8d9e7a-b716-46d2-a35c-1dfea612c736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b39c10-d3dd-4e0c-8d5c-95cc007cdbb6",
        "cursor": {
          "ref": "ca25aaa6-0a60-4f38-bd11-70659fbae63f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1d4d5ff9-f3c9-4df5-80bf-0e9b4b9617db"
        },
        "item": {
          "id": "36b39c10-d3dd-4e0c-8d5c-95cc007cdbb6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "43ea83db-b384-4bfd-94e8-303668b6c9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082adeaf-596c-4c7b-a163-7f2668d5cb7b",
        "cursor": {
          "ref": "253cfc2c-5e91-4938-bdb4-f78f0daa8335",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "479782d3-2726-496e-bb08-896767d3cdc9"
        },
        "item": {
          "id": "082adeaf-596c-4c7b-a163-7f2668d5cb7b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9ee84816-7a9a-443f-ab2e-78efa660f682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587a934f-8b8f-4bf4-a7ac-4e25ae2d62fa",
        "cursor": {
          "ref": "4881f872-4b35-4216-ab34-63de1bc333fb",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "559993c4-45e0-4491-aeb9-b91084861d9a"
        },
        "item": {
          "id": "587a934f-8b8f-4bf4-a7ac-4e25ae2d62fa",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7def8293-98a0-456a-8ddd-d9c8dee81989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bbbc3d-7fa9-49dc-a801-935d5d7011fc",
        "cursor": {
          "ref": "e1d85470-bcd5-46d2-8e5b-634c7bca2924",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9ea13d16-309d-4c04-aad1-3478469ab544"
        },
        "item": {
          "id": "08bbbc3d-7fa9-49dc-a801-935d5d7011fc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "070a2212-f8b4-4ab9-bf40-9668c0046a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a50aa7-1973-4eb3-a149-fcb28ca0c862",
        "cursor": {
          "ref": "0a3ee608-b99e-4188-8f05-eefce8a06253",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3197b4ed-416c-4537-aff6-7dfc1d16d7a1"
        },
        "item": {
          "id": "e6a50aa7-1973-4eb3-a149-fcb28ca0c862",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e506d003-9e55-49b7-8388-0c80f012eb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572b9ac7-4cf5-4712-9bf9-3076f73bbc0d",
        "cursor": {
          "ref": "4c8b8be6-f696-49b9-bea7-11be27277aaf",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c5ffbcbf-b875-47c3-86cd-236ee8a8019a"
        },
        "item": {
          "id": "572b9ac7-4cf5-4712-9bf9-3076f73bbc0d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7b64b922-c888-408a-9a8a-e6a184deb0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005810bf-bb3a-4107-ba86-5bcef34ec451",
        "cursor": {
          "ref": "ea23899c-50dd-4cac-8b97-69f5f8f4a24f",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d7823483-de8a-4c2b-bbc5-9d313c9b1c29"
        },
        "item": {
          "id": "005810bf-bb3a-4107-ba86-5bcef34ec451",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "90a0fe12-c86c-4f34-aea0-5cdd96cef377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbef627e-25a2-4654-9988-995dd5e2f4de",
        "cursor": {
          "ref": "7a2570f9-572f-4307-87f2-fd92e96cc9fe",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9f28e20f-b9a1-4f37-ba33-1b1233cd1da5"
        },
        "item": {
          "id": "dbef627e-25a2-4654-9988-995dd5e2f4de",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "296d57e1-db86-4487-a4cb-860e40fa592f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533aeca3-e71b-4b39-b64b-11c6cf233ec9",
        "cursor": {
          "ref": "1927c9cd-4a8a-4fe0-b97c-cf66231c8b03",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e3a3cdf4-ef2b-4e4d-a5f3-b40b48c7f41c"
        },
        "item": {
          "id": "533aeca3-e71b-4b39-b64b-11c6cf233ec9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9457e861-7098-42d5-b755-905e8941d8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae66cc7-2de4-4556-a2d6-c36869befc59",
        "cursor": {
          "ref": "5933fd4d-dbc7-4c36-b1e6-4ed5624be7f1",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b19c0467-ca77-4eb7-8bbb-fc470a825a08"
        },
        "item": {
          "id": "bae66cc7-2de4-4556-a2d6-c36869befc59",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ce40068b-0d45-40b3-a5f6-160cc02d1cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d2e5a2-5fb1-4270-a7f1-e707c96550d9",
        "cursor": {
          "ref": "1a8cbb7b-96e9-40a4-b64e-bf429584e085",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5d442f2e-366a-4db7-81d3-9674d487ca88"
        },
        "item": {
          "id": "80d2e5a2-5fb1-4270-a7f1-e707c96550d9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "10b4c63e-fade-439b-8c81-190ca23b4c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cf3069-ec05-441a-ac81-07d89115d5b3",
        "cursor": {
          "ref": "f0c1bde9-b412-4672-a0d6-f999e054193f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8d74d7d8-08e4-4037-8178-bb4d971cfa33"
        },
        "item": {
          "id": "f6cf3069-ec05-441a-ac81-07d89115d5b3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5bbbcb64-5205-4c63-9cbe-8152bddfea2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73edb0c3-4e5b-436e-80de-19a675fab08c",
        "cursor": {
          "ref": "a97ba20f-9e6e-4430-87e0-6c6221a49a12",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "533cfefa-2745-49c0-a3d9-12c0783df94a"
        },
        "item": {
          "id": "73edb0c3-4e5b-436e-80de-19a675fab08c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4caca15f-2367-4312-b269-ee69cda0f3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915e56fe-5bc3-47f7-95b2-382a41f7ec67",
        "cursor": {
          "ref": "89b9d6d0-cc99-4471-b979-7c28d0ac3cec",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e3ed23ad-c8c1-4ac3-ac2f-00167a13b655"
        },
        "item": {
          "id": "915e56fe-5bc3-47f7-95b2-382a41f7ec67",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ad2aa7b3-9d24-467a-b7e4-55b2aeac51a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c8b015-f1f3-4ffa-9cf1-2d59c7706822",
        "cursor": {
          "ref": "54693e1e-7703-468d-bc77-a08e25da593a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6dffdd29-9bbb-4853-88d8-02aae99bfa38"
        },
        "item": {
          "id": "e9c8b015-f1f3-4ffa-9cf1-2d59c7706822",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c6e099c3-a8b6-4b94-9258-c97c7db45441",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261b0f99-63a4-4066-bb26-ca3ae20624ae",
        "cursor": {
          "ref": "d79f317d-6356-4385-a6a0-378f37e237ec",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a64a7323-6e18-49f4-8152-1f760ab8129b"
        },
        "item": {
          "id": "261b0f99-63a4-4066-bb26-ca3ae20624ae",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c7163e31-68df-4ef6-af36-e120094c239c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0f5924-fbcb-4aaa-8efa-619999dd8ab5",
        "cursor": {
          "ref": "7ca7c22c-71c0-4565-b3d6-7895e802a9a3",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "98351cc9-8775-4db4-802a-7d04ca8afa1a"
        },
        "item": {
          "id": "bb0f5924-fbcb-4aaa-8efa-619999dd8ab5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "961dcf9a-ab9b-4d56-8b81-1a6c97d92d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfbfb54-85b0-46f8-a214-da34a8f40a54",
        "cursor": {
          "ref": "5e38412c-2699-481e-bde9-45f06e8d8dff",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2e5def10-f2d0-4a15-a063-bdd19d6c2383"
        },
        "item": {
          "id": "9cfbfb54-85b0-46f8-a214-da34a8f40a54",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e90be75c-fd8f-4cc6-941e-07555d8c9f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f1cb01-cc2d-46c0-81f6-6808011b8045",
        "cursor": {
          "ref": "d2fa2fea-8397-40d6-8912-0d4f20a23c3e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "036cd3ec-3700-4310-ab6f-e2dd53941c46"
        },
        "item": {
          "id": "72f1cb01-cc2d-46c0-81f6-6808011b8045",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "58a108ec-d931-406f-ada7-feb87cab8ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c91af40-1748-40ce-9ae0-30485ab6df70",
        "cursor": {
          "ref": "d30cfe6f-f749-4a1c-978f-054a8493b32e",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "11422bac-2087-4c2f-8efd-76e7df501d73"
        },
        "item": {
          "id": "0c91af40-1748-40ce-9ae0-30485ab6df70",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7e141f84-bc36-4a4c-a06d-6547babe4b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23af6b77-87fd-4697-baa3-22c621b5d282",
        "cursor": {
          "ref": "c2fed6e1-f97a-4980-96de-fe2130f55771",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "979f3f56-b3a7-4562-9763-946b83a44cfb"
        },
        "item": {
          "id": "23af6b77-87fd-4697-baa3-22c621b5d282",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "39574634-908b-4af7-8d2c-960a3d078a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e108e99b-ebce-4941-8ae6-e77801e8b68e",
        "cursor": {
          "ref": "edbd5196-77ca-4c43-b3e0-2b2f170347df",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "40014c87-c85c-4b6f-b9b7-d77022a0ec44"
        },
        "item": {
          "id": "e108e99b-ebce-4941-8ae6-e77801e8b68e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "31a984b0-ad14-4c1f-9207-92138e809990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c99ddc-a88b-4ce3-93b5-37f2f3a043b7",
        "cursor": {
          "ref": "81537c9d-bac4-42ba-8c6f-48c4f8c86c02",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5e249193-5f6b-4c07-ba3d-d1526d79b127"
        },
        "item": {
          "id": "93c99ddc-a88b-4ce3-93b5-37f2f3a043b7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b4c0d062-adc3-49c2-b850-0f09991d308d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebb50ab-9c6d-4d5b-9cc1-c24185dc5d76",
        "cursor": {
          "ref": "4b1bcd05-ce34-4404-a6cb-69d75c8921eb",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "736d7b98-c0c4-458d-b66b-dc8a8838e68d"
        },
        "item": {
          "id": "2ebb50ab-9c6d-4d5b-9cc1-c24185dc5d76",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3e12f706-2d6f-4748-a1d9-f4a0fd1765b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca26c74-1abd-4582-95f3-0cf21377121b",
        "cursor": {
          "ref": "722188b2-055b-4bd4-836a-d6191462009f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9f56503d-693c-4971-b8a3-e2559d2dd6e6"
        },
        "item": {
          "id": "cca26c74-1abd-4582-95f3-0cf21377121b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "661e626f-2bee-4692-a44a-416139e21252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a52ce0-ece1-4652-8f44-48f5516171fa",
        "cursor": {
          "ref": "1f70f949-6055-4472-88d6-819ec816fc63",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d9968338-5bbd-4ae8-a856-d3b62dce31b9"
        },
        "item": {
          "id": "99a52ce0-ece1-4652-8f44-48f5516171fa",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "69617e5a-4d3f-4b4d-87f1-c97ad30d6af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4256981-affe-4e9c-b480-2fac1a9798d4",
        "cursor": {
          "ref": "7aa80c45-ddaa-4009-9fb5-b0fb5b06d7cb",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6312c0d3-e8b7-44de-ab81-30d9388af47b"
        },
        "item": {
          "id": "e4256981-affe-4e9c-b480-2fac1a9798d4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ef764e99-fae8-4cb9-be35-e8044aa67ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc139da-416a-4f5c-9a3b-13673a1025ca",
        "cursor": {
          "ref": "554ac2f0-cf01-42e5-9921-aa3a65eae32a",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6dd9d78d-170e-4a6a-a8b2-09d525a7f560"
        },
        "item": {
          "id": "7cc139da-416a-4f5c-9a3b-13673a1025ca",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ed1b5e71-e05f-4084-af03-88979d1d9e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7fad91-cd9e-4220-9beb-ca8984fa3ae0",
        "cursor": {
          "ref": "efa5dce9-ccec-4f87-ac2c-ed572ff40984",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9705b2fd-ab8e-425a-9f3d-afc615521985"
        },
        "item": {
          "id": "be7fad91-cd9e-4220-9beb-ca8984fa3ae0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "59609bfe-2ef5-46c9-90b8-d083e10b6e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13febdb-4b5b-4ac9-8874-150ec6bc98c7",
        "cursor": {
          "ref": "1cfa8e3e-bc68-4812-b09a-cea4c3782b12",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d9ae5cf1-d458-43ab-b553-76af0cf11922"
        },
        "item": {
          "id": "a13febdb-4b5b-4ac9-8874-150ec6bc98c7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "834d121d-6599-444a-bfee-c10c580be93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef770a4-bafd-4f51-a69f-61a0feabdfa1",
        "cursor": {
          "ref": "c2f7b081-8bce-4146-8648-d0df778756e0",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "227ff9b7-2bfe-430e-a9dc-d7e401d74901"
        },
        "item": {
          "id": "eef770a4-bafd-4f51-a69f-61a0feabdfa1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5a93b3f0-185b-4cc8-b3a2-bdaa4e8be7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff0e3ad-3b2f-4f34-8b82-ccfaf9fe2349",
        "cursor": {
          "ref": "35de439f-9a3d-4d71-94be-83f8df88c793",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b493d5aa-065a-4b23-81aa-95a31d44c308"
        },
        "item": {
          "id": "7ff0e3ad-3b2f-4f34-8b82-ccfaf9fe2349",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6591c33a-e976-415f-b21a-ce5fe2ef918c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d50fd88-312f-46c9-9c42-36b92a9c1c24",
        "cursor": {
          "ref": "15caf50a-f50e-4c4b-ac62-e7b236c2787c",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3b089742-1f90-4c51-9915-8781165c9b76"
        },
        "item": {
          "id": "6d50fd88-312f-46c9-9c42-36b92a9c1c24",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4314c4b6-c43c-4e73-9800-28e933e398df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b33596-d286-4afa-abca-04e05704161a",
        "cursor": {
          "ref": "34e4e6cc-6ec0-4c60-934f-0e4a58c27aa5",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fa95182e-8fe1-430c-9920-949f13d6eb58"
        },
        "item": {
          "id": "71b33596-d286-4afa-abca-04e05704161a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "dbe1c58a-5068-48ca-9ac2-d957a01f6b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e8b41d-ec0e-4530-ba4b-17963debb148",
        "cursor": {
          "ref": "199cb6a9-4e5c-4d31-863b-d4119691799d",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f4348103-ebec-4936-8dac-d9a78e583dd0"
        },
        "item": {
          "id": "09e8b41d-ec0e-4530-ba4b-17963debb148",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "730dac45-da89-4127-a68b-ba6e0f84e1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8aee0c7-c554-4539-83f2-ceb2845a7a55",
        "cursor": {
          "ref": "ecbcb627-fa60-42fd-bbd1-7794bc491a43",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "32b88015-4740-417e-9dff-8fee8f7a8508"
        },
        "item": {
          "id": "f8aee0c7-c554-4539-83f2-ceb2845a7a55",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b6e14210-61c2-4bb9-b667-16c7531ce56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57df7a5-7a10-4481-a688-3fdd9d344795",
        "cursor": {
          "ref": "9df85f47-4d8e-470e-8b9c-e34505dea0bd",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d7ed25b6-eff5-4b07-be45-f019d7a78608"
        },
        "item": {
          "id": "d57df7a5-7a10-4481-a688-3fdd9d344795",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "20e55ada-211c-430f-9ebd-47d19e5edc5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcbc2bb-dd57-4615-a2f1-48591021d659",
        "cursor": {
          "ref": "12fc664b-b2ca-4ea1-8e51-8c0af1ca095d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "30acd529-0c1a-44a8-af71-593ea0f5a807"
        },
        "item": {
          "id": "dfcbc2bb-dd57-4615-a2f1-48591021d659",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c14991ae-d47d-4367-87bc-c1ae1068d21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f93c419-1fe8-4f1d-af68-8f6f0b53089c",
        "cursor": {
          "ref": "75b93b16-9a69-4561-ac0a-631715a13a02",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9018d1e0-b572-47a8-a48f-0444b5c7ade6"
        },
        "item": {
          "id": "8f93c419-1fe8-4f1d-af68-8f6f0b53089c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b8b3b07f-0b15-4a48-a372-e2018b37ac1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada11e5a-6162-4f10-8664-bf0c30e97a86",
        "cursor": {
          "ref": "ef64ed4b-6aa5-430b-85d7-c161e233955d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "36b544bd-362b-434a-b719-e2fbe191eb4c"
        },
        "item": {
          "id": "ada11e5a-6162-4f10-8664-bf0c30e97a86",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f8d37846-325d-4616-ba94-f58e867b620b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3341b043-068b-44e5-b5bd-eb878bc41fe4",
        "cursor": {
          "ref": "f85036e3-f73d-48fe-9d8a-0d60fbda9f0d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "80b8d3b6-35cf-4786-90f3-6bc6692650ce"
        },
        "item": {
          "id": "3341b043-068b-44e5-b5bd-eb878bc41fe4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ba8c5d60-5f62-4727-8b41-dc2f72ba6314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c576c4-d5d0-45aa-9a31-04d40e2c77e6",
        "cursor": {
          "ref": "d12d1451-c9bb-43fa-89e0-11e88e04feae",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7689052c-80b5-4518-a5d3-9259477a3fc6"
        },
        "item": {
          "id": "d5c576c4-d5d0-45aa-9a31-04d40e2c77e6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b10da972-7882-4e25-9378-6b9adcced729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189f7205-dc3b-4ce4-947a-87c70e1543b3",
        "cursor": {
          "ref": "8b07b6c1-bb09-4804-9809-15c0ffb24892",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3f6bc3b9-6d37-4ff5-9060-05bda8eb79ea"
        },
        "item": {
          "id": "189f7205-dc3b-4ce4-947a-87c70e1543b3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3f51cf69-1971-41f7-9f69-14c563c93df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4f1024-a16f-4ff1-b598-39043de8d620",
        "cursor": {
          "ref": "f6a62933-f4ed-47e4-9d4f-8467ec0e86e7",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "234b8031-a40c-45ad-9c94-5f242237cb50"
        },
        "item": {
          "id": "9d4f1024-a16f-4ff1-b598-39043de8d620",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f8f81782-de89-4219-a7c5-5303719a95ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ede38c1-0896-4339-a2d7-d4ac33e569c4",
        "cursor": {
          "ref": "f2a2b539-15f9-418b-80a0-d946c93c08a4",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "05a6c890-38b5-414c-bb8e-b3b484b6db8f"
        },
        "item": {
          "id": "0ede38c1-0896-4339-a2d7-d4ac33e569c4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0fef82ba-7b7b-46d0-902e-67990f444fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ff556d-4208-41e6-a2be-492b7e4e5f45",
        "cursor": {
          "ref": "664b4da4-8ed5-494b-9f85-74678c9295ff",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5d4c3f23-6808-43f6-b777-955ede1b9c26"
        },
        "item": {
          "id": "a2ff556d-4208-41e6-a2be-492b7e4e5f45",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ae926c0d-0dea-4c46-9b3c-60e6183841a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cb749a-2ff9-4192-add7-35664b6d5aee",
        "cursor": {
          "ref": "eff2febe-a36b-47c4-b585-1b09dfbf2817",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1a7f08a0-9f1e-4b68-a086-97a47942ba9f"
        },
        "item": {
          "id": "81cb749a-2ff9-4192-add7-35664b6d5aee",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f86c8c86-d1ff-47d6-bb3d-c4c9f25d3d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c957d6c5-ec47-4c53-8cc8-f5e76db90fcd",
        "cursor": {
          "ref": "03a1e71e-d283-4d98-b08d-e6813a525e2d",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "21f85be0-de4d-4ca8-9ec3-c8262b9d09e6"
        },
        "item": {
          "id": "c957d6c5-ec47-4c53-8cc8-f5e76db90fcd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "411667b6-24e8-45ec-b70e-d772728eb44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfe9496-3db0-4a62-a2d4-5aab4e3f3ad2",
        "cursor": {
          "ref": "179c6b18-d014-4739-93b2-72d9e51228dc",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b841179c-c33d-4e61-91fc-694af18837ea"
        },
        "item": {
          "id": "abfe9496-3db0-4a62-a2d4-5aab4e3f3ad2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f9704b37-69ab-4e8d-8185-6cd0c1b70550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d749fd-3368-459e-88cf-dfe97a103913",
        "cursor": {
          "ref": "8f740a77-130e-4848-bb1d-c4031ba6d6a4",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1ca0499d-d071-4889-8875-c7229c987954"
        },
        "item": {
          "id": "46d749fd-3368-459e-88cf-dfe97a103913",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e33ea486-5e05-4a1e-af98-92aaafa120f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7cde685-0411-46bf-8cf9-d04a811db9c0",
        "cursor": {
          "ref": "74fc4405-6ab9-411c-a57f-e6af2eba4d04",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a79df330-7188-4ca6-982d-03542ec001d7"
        },
        "item": {
          "id": "f7cde685-0411-46bf-8cf9-d04a811db9c0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f1142208-b84e-4ad6-80c2-c977d92ddd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5174b8e3-9132-4116-9546-1ec71e4612d6",
        "cursor": {
          "ref": "c6827177-e59b-467b-ae05-2b31b73c66d7",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "45942f25-12de-46ec-95dd-ca36d234e915"
        },
        "item": {
          "id": "5174b8e3-9132-4116-9546-1ec71e4612d6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "eacfdb4c-5e71-44fa-8473-142e2316d40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8636aa1-408d-48b3-b031-13434b94413d",
        "cursor": {
          "ref": "74d8cc72-48fc-458b-9232-41885a06e79e",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1281fe63-2457-4a5b-997d-bd7822d2b406"
        },
        "item": {
          "id": "d8636aa1-408d-48b3-b031-13434b94413d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ae7e0c8c-9453-4159-9480-aeecd1e06f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe93b3a-7446-4540-8e70-84b7e55770b9",
        "cursor": {
          "ref": "0cc379ef-8f53-4305-8d26-5dfbd69dd98f",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e0ee01db-46ce-4f2b-b510-36a5f0e5bfe0"
        },
        "item": {
          "id": "dfe93b3a-7446-4540-8e70-84b7e55770b9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "94106666-8ef0-4a9e-8e6d-64f5a2a7396b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3700e7d3-9e7c-4cca-8fa7-c0d591ceb2ea",
        "cursor": {
          "ref": "3700e290-ca01-4a28-9b28-0299fa2156fe",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f927085f-f523-4f4f-971d-51c11e025ce1"
        },
        "item": {
          "id": "3700e7d3-9e7c-4cca-8fa7-c0d591ceb2ea",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8eb98ca8-363f-4a7e-897b-d54661842f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363428f8-3183-4c96-88b3-7eaccaee3c96",
        "cursor": {
          "ref": "5e0a7ebc-0628-4eb9-b4b0-b4dfe5911284",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7d363184-373b-4797-b743-cd6854084574"
        },
        "item": {
          "id": "363428f8-3183-4c96-88b3-7eaccaee3c96",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "abe11f8d-6ad6-4bd8-be6e-78c2b252cf3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d74794f-8038-4aa3-b97a-16374f24fa18",
        "cursor": {
          "ref": "32e359da-30d0-44ea-a03b-2d5036cfc46e",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "16572b92-fd63-436f-b919-98aaf0e55d8d"
        },
        "item": {
          "id": "4d74794f-8038-4aa3-b97a-16374f24fa18",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "85237680-3664-4794-a97d-744ce9ed3d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46137a9d-b493-4626-a87e-cf2e90678b2d",
        "cursor": {
          "ref": "220030b1-4eb1-46a6-bb46-80851bfeedb7",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7233c7a4-48bc-48b9-940b-0498ebb026f4"
        },
        "item": {
          "id": "46137a9d-b493-4626-a87e-cf2e90678b2d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "41a637c3-6df4-4ad6-b40f-8c852fb18696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdf6034-a1ce-4bbe-81cb-22653b454dbc",
        "cursor": {
          "ref": "4a795504-ea0c-41d9-9d7b-dc10662f1cf9",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e0e4c522-375e-4504-863f-107ce8fce6d4"
        },
        "item": {
          "id": "3bdf6034-a1ce-4bbe-81cb-22653b454dbc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "66a6f5b3-74fe-4c6e-beb2-5d608c218db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c2933c-b556-432c-a50f-8e2197859f42",
        "cursor": {
          "ref": "9f933169-5d85-417f-92d1-cebe26c3f5fa",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b17a7ff2-7ad9-4330-88d7-312c83e517f9"
        },
        "item": {
          "id": "d8c2933c-b556-432c-a50f-8e2197859f42",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b12bbee5-3064-4100-a5c1-6f562f0fb7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794b733f-c3ae-42f2-aa6a-3fbbed692a72",
        "cursor": {
          "ref": "11d3c068-a5dd-49c8-b742-9fed43ae8446",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "84553ea4-f156-46b4-9674-8e7d1655b1b5"
        },
        "item": {
          "id": "794b733f-c3ae-42f2-aa6a-3fbbed692a72",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "88addf89-c46d-4184-b42a-86334f22ab72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6951be61-3dd1-4a25-8cf3-48bbad0f97f3",
        "cursor": {
          "ref": "15a57393-aa31-41ee-9c43-e1307ec11eb8",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "706aff83-1493-466d-b7a9-c192aab0c6c5"
        },
        "item": {
          "id": "6951be61-3dd1-4a25-8cf3-48bbad0f97f3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f3c5d95c-b2d0-497b-9879-057d105936a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c571334-90c3-4f36-b54d-08948b2acc4a",
        "cursor": {
          "ref": "080bcf05-5030-450c-8bce-07a283648b5e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3fb41e10-e57d-4321-bf2b-4da62a0fdc9d"
        },
        "item": {
          "id": "7c571334-90c3-4f36-b54d-08948b2acc4a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1483d78e-88ac-4144-beb0-6699467c4dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfd254e-67eb-4b7e-bc81-6274805e1988",
        "cursor": {
          "ref": "2fa16e6f-b428-4e6e-88b4-8c092911e0e4",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "25deedde-156d-4386-817b-3a802fa08125"
        },
        "item": {
          "id": "5dfd254e-67eb-4b7e-bc81-6274805e1988",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8f3cf0eb-0747-4d67-a163-7c75d2e77db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76f1229-75bf-46a6-8863-db5eaae6647d",
        "cursor": {
          "ref": "c0be99fc-1e6f-4c28-9ad4-82e1fc6c1d73",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "731cdca3-2f82-4c05-9636-080420e9fd40"
        },
        "item": {
          "id": "a76f1229-75bf-46a6-8863-db5eaae6647d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "88f41b6d-f365-4b27-bec4-f6180bf511fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce4051a-9f3a-4814-a6ff-e02b7e09fb8c",
        "cursor": {
          "ref": "55da46ea-3304-412d-b5ec-f5c30cd4560b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "52e1dcc2-21e9-43c9-b62b-d672579cb0fc"
        },
        "item": {
          "id": "8ce4051a-9f3a-4814-a6ff-e02b7e09fb8c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dcbd43b7-5ea0-4bc8-8ace-c73832b30437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f9b4d2-c017-4b4c-a88b-e401430a5d58",
        "cursor": {
          "ref": "0d2aad0b-7961-4ad6-9b0e-259f99bddbd4",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1ade312b-5296-422f-b684-612e5d584dc3"
        },
        "item": {
          "id": "62f9b4d2-c017-4b4c-a88b-e401430a5d58",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f47a264a-270a-4db1-90b6-b328154013fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcae9c2c-fb1d-43b0-bd52-2a46622eab0e",
        "cursor": {
          "ref": "9a475f05-48ae-4c0d-b176-208deca3679a",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "79f72ccc-82c5-404d-82ed-de80993f1b84"
        },
        "item": {
          "id": "fcae9c2c-fb1d-43b0-bd52-2a46622eab0e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b504f6fb-d471-487e-abf7-d86340d20360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7163fd-2480-42e6-a7eb-a5a2c995130c",
        "cursor": {
          "ref": "d0f97875-2f2f-4a56-9dbe-2ff27f5b0ccb",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2e26c700-cf2b-4baf-b820-8e7a5db7f9b7"
        },
        "item": {
          "id": "ef7163fd-2480-42e6-a7eb-a5a2c995130c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0971d5f6-5fc8-402d-b39e-afb498d8f252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a6690d-38f4-4d2c-a766-3a842d4103b3",
        "cursor": {
          "ref": "7c6ca069-c735-4a7f-bdf5-ae64ab2dd2a6",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ec776fed-d2f5-4702-b25d-747dc1fbdc93"
        },
        "item": {
          "id": "07a6690d-38f4-4d2c-a766-3a842d4103b3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "12dd4361-c22b-4dbc-a6fd-0683d66eae6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255a5658-8691-4f4e-955e-f5afe5fec4a0",
        "cursor": {
          "ref": "63f0e0cb-72da-4003-9e72-440da0789347",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "02edf0dd-9fb0-4e98-ab95-147e110842b5"
        },
        "item": {
          "id": "255a5658-8691-4f4e-955e-f5afe5fec4a0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "14055489-7f7a-4faa-afdc-bf4b8a7a14d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651af265-c121-49c9-ad60-062edcdb75b6",
        "cursor": {
          "ref": "a18bf1ec-05dc-4bfc-836b-4b58586bf786",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6eba8ab5-9d4b-41fd-a11e-76e87f26d8db"
        },
        "item": {
          "id": "651af265-c121-49c9-ad60-062edcdb75b6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7e775bf9-4b9c-48f5-9ff5-de794323781e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af73ae29-9bae-4d8a-b8ed-147b4011dc07",
        "cursor": {
          "ref": "f5c7af21-0313-4be6-8ca9-cc6e8bf1abe0",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "52d1e7ce-506d-4eea-9242-7234bfb60bc1"
        },
        "item": {
          "id": "af73ae29-9bae-4d8a-b8ed-147b4011dc07",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "601c021b-7ba3-4551-9943-f453ea25d327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8381301-6b02-4126-918b-fe2cdc9a7942",
        "cursor": {
          "ref": "6329b125-7348-4cd9-9f05-13a0fedf9d64",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "27d1458e-abea-4ba4-9368-bf50ee3fae2c"
        },
        "item": {
          "id": "e8381301-6b02-4126-918b-fe2cdc9a7942",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "92d927c5-e7a8-49ce-8f2e-b6be8e5c35bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa932cb-3cd2-4ded-91a7-d1c4af286a47",
        "cursor": {
          "ref": "c73bc701-3324-43f7-ba99-1da14e160006",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bf468f69-3a13-4f8c-bdac-324141c9905c"
        },
        "item": {
          "id": "7aa932cb-3cd2-4ded-91a7-d1c4af286a47",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8989e55c-c01b-4144-9b26-6e6dbdca4105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eda6c54-03ce-4398-9a93-a2e1545ae572",
        "cursor": {
          "ref": "50f5c5da-513c-4d5b-8923-ddb249a94bc3",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "74279953-b2d5-4c03-8f93-99409000f4b7"
        },
        "item": {
          "id": "5eda6c54-03ce-4398-9a93-a2e1545ae572",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8d6861ab-df91-476f-b632-57927d1e44ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29561d8c-17bb-4a2f-b428-643ab1eaac0e",
        "cursor": {
          "ref": "1e35b958-13d1-4240-8f28-1620b3b6f674",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ea6a3ad8-78a5-4fa0-aeb1-deac83d2c36f"
        },
        "item": {
          "id": "29561d8c-17bb-4a2f-b428-643ab1eaac0e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "25c9117e-8583-4ea1-993f-a54fa46f8f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18882e3-339b-4ff8-9cfb-7cd6f35ae9ef",
        "cursor": {
          "ref": "5a8a063f-4b45-4491-aec2-6385cdb01c25",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "30ee56a7-e897-428f-9bbf-f03f04be995b"
        },
        "item": {
          "id": "c18882e3-339b-4ff8-9cfb-7cd6f35ae9ef",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f45d0f54-3e22-4afe-8901-7da2b8a6347a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fa83b1-1a99-49f5-98fc-23eb62377886",
        "cursor": {
          "ref": "d38dc5f5-9e57-4d1d-9a2f-53475823bca3",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4ce7f795-59f1-4af3-b3de-18922554a342"
        },
        "item": {
          "id": "65fa83b1-1a99-49f5-98fc-23eb62377886",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ea956b08-b874-40f2-9962-5213a1c0ac25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7026143-3e57-4a2a-9f40-f6fde30fe475",
        "cursor": {
          "ref": "8b227fca-2f21-4c15-8154-543a0fb5eedb",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3350f796-e8bd-4684-9e1e-679feb2a5c15"
        },
        "item": {
          "id": "b7026143-3e57-4a2a-9f40-f6fde30fe475",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e0f038ca-28ad-4059-a07e-bfd775c76f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd94727f-003c-4460-99d7-3af7ee508e88",
        "cursor": {
          "ref": "c9c249e2-17a0-42e8-a51e-5e497d120df1",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "231654a4-e155-45af-aca7-1fbd94fe4435"
        },
        "item": {
          "id": "dd94727f-003c-4460-99d7-3af7ee508e88",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1a5de899-b75d-4b41-a4af-a588a0ffe868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f36fd03-9c0e-481a-b0ee-a24944ddd912",
        "cursor": {
          "ref": "1cc63a9f-c566-455b-aaa6-7d92b5c0b159",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0ce06cd0-1802-4b14-a233-6a3cf93a128d"
        },
        "item": {
          "id": "7f36fd03-9c0e-481a-b0ee-a24944ddd912",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3d9f9614-b293-4d69-92fa-8ec827ee1991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991a853c-8278-4b20-b3b4-4a5134ca1119",
        "cursor": {
          "ref": "b8400625-a3fa-425d-8c76-22dc5248bd23",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "eb601fed-5ff8-4350-818a-cb62c7c36a0f"
        },
        "item": {
          "id": "991a853c-8278-4b20-b3b4-4a5134ca1119",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "11a9c478-ab19-4ce6-9fbf-8ca40e587820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b0f2c4-653d-4a1c-ab44-d682a88ea076",
        "cursor": {
          "ref": "8acb0dc3-80e1-4a30-8133-9986f4297b6d",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9a8cb1d5-c526-477e-a6b9-ae05a5787cc6"
        },
        "item": {
          "id": "a8b0f2c4-653d-4a1c-ab44-d682a88ea076",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "571ad533-7a44-459a-8ad6-3751a25bfb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed34fb2-1e58-4e82-adac-74a6834c7a82",
        "cursor": {
          "ref": "5d5f5fec-9d09-4e21-aa89-1daa946f625c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0ad3e14d-6c99-4c6a-be3d-5ca83f0fcfb0"
        },
        "item": {
          "id": "2ed34fb2-1e58-4e82-adac-74a6834c7a82",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e7e90ac4-463b-4d82-87a2-17afe996c1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087ce501-9e62-47c9-959d-edeb4195af9c",
        "cursor": {
          "ref": "526bbe56-1978-4e71-8cef-0602e9c9363c",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "17ac7e3d-bfb6-4885-9045-9146f415b4b5"
        },
        "item": {
          "id": "087ce501-9e62-47c9-959d-edeb4195af9c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "05932932-76fc-45a4-b42c-4c168434abe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfd7f9d-9670-4a19-a5f4-7e72eb622a56",
        "cursor": {
          "ref": "e2dbbec1-ed28-4cc7-9439-36fcfd1738fc",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9c186d38-1bb8-4854-9697-55721f5269c8"
        },
        "item": {
          "id": "9bfd7f9d-9670-4a19-a5f4-7e72eb622a56",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "017f8048-55b6-4b85-a0d7-ce5e86bd5d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54075a16-7e1e-4faf-98e4-e3a37c1b09b1",
        "cursor": {
          "ref": "31da7427-9ae3-4306-b66b-fc5b93ba8e73",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f78d123b-6f0f-44d9-8d2b-be86272ac4fd"
        },
        "item": {
          "id": "54075a16-7e1e-4faf-98e4-e3a37c1b09b1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5ded1183-975b-4113-b468-30a87c010d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fb44ec-d580-424f-9f45-c1f087eecf60",
        "cursor": {
          "ref": "ca345528-c85f-4e80-8659-79057bc88faf",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c37988da-fa05-4635-8d62-221eea6a15f9"
        },
        "item": {
          "id": "69fb44ec-d580-424f-9f45-c1f087eecf60",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bc905f3f-46ca-45b2-b647-3b0c72b6aac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d38e116-5c2d-4e28-9387-b6fc913bdccf",
        "cursor": {
          "ref": "ab7b2ac0-e323-4e8a-b78a-6ff971f704d1",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b798c900-d1c6-4b6e-ada4-dc441978efb7"
        },
        "item": {
          "id": "9d38e116-5c2d-4e28-9387-b6fc913bdccf",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c70179fa-3c1b-4f15-a2af-d0b226f94069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76462a4-b1b1-4d3d-8e36-1ba45fb071b2",
        "cursor": {
          "ref": "00b37ec9-f6f3-4e6b-8a38-faafae7a067e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "262c6b2a-0203-4935-8f11-4f340aed0a29"
        },
        "item": {
          "id": "f76462a4-b1b1-4d3d-8e36-1ba45fb071b2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "dd0824c1-a963-49ab-8539-9ff9d57a3b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908270cd-b5de-44e4-a591-2e10b2711aaf",
        "cursor": {
          "ref": "02737d36-5c4a-4822-b6d1-52e956ad0b50",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3b1999fa-8e56-477e-8919-a3532fc28e60"
        },
        "item": {
          "id": "908270cd-b5de-44e4-a591-2e10b2711aaf",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "22d75f9d-f792-4db7-b6c7-7937efe2ae30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c496ab-48de-4e4a-998f-fe31e50b3f60",
        "cursor": {
          "ref": "760fe0ea-0b57-4423-b7ed-76e995e1143e",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "49d714a2-d205-4d2c-9d7c-fc19392b25cb"
        },
        "item": {
          "id": "70c496ab-48de-4e4a-998f-fe31e50b3f60",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dd2ac8e0-bd3e-4026-9b02-d7d26c5088c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5bb789-5af8-4835-8351-9e763a335832",
        "cursor": {
          "ref": "68fdc5b0-e934-4867-b62b-36825de5265b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "723131fd-3a10-4f0b-bf96-0815e2941ec9"
        },
        "item": {
          "id": "8f5bb789-5af8-4835-8351-9e763a335832",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "876ca8fc-4a9e-49c2-9dd3-d2b6a43fa3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900316f7-cd21-4e1a-bcf0-38d96770dcb8",
        "cursor": {
          "ref": "2ed22d10-3bc9-42ca-9aea-e8f0f7788963",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b65ce989-a4c0-4feb-bedf-8d28f5ef6ac1"
        },
        "item": {
          "id": "900316f7-cd21-4e1a-bcf0-38d96770dcb8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1b7c5371-a36d-44cf-b948-3e55ad2f26c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cb68c9-5c68-49a7-8d82-e9db959c37ac",
        "cursor": {
          "ref": "90e81e9d-a2fa-46a4-bba2-d3c332d179fa",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a00fa509-8492-422e-a348-2a6445070cf4"
        },
        "item": {
          "id": "f4cb68c9-5c68-49a7-8d82-e9db959c37ac",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e04ce304-ef41-4f6a-ab94-d172d2f5eb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ee4a30-c523-4bd7-8931-ee2e53eb83de",
        "cursor": {
          "ref": "89c970b6-d6be-444b-a6b0-34f2ea3d3f61",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d9d8a9c2-ec8d-4a76-9786-de9263e4e0b0"
        },
        "item": {
          "id": "50ee4a30-c523-4bd7-8931-ee2e53eb83de",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "434168af-600b-4c3a-b462-9917c9402d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9827b094-ea65-4df0-a5d2-f2621ecaf571",
        "cursor": {
          "ref": "37884b3f-78e2-4d86-9f17-0a6d50912ab2",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "75b76d1c-8899-497b-a5a5-67bfdb20e4f8"
        },
        "item": {
          "id": "9827b094-ea65-4df0-a5d2-f2621ecaf571",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b7f8ceb3-bbd7-4eda-995b-7161dc6e8b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21154b10-132b-49df-9ebe-ea479494c286",
        "cursor": {
          "ref": "cea48c57-4e6f-4b40-9fd2-68c8d2fbbca7",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a76e5a77-bd5f-4843-afa5-f147bdacae1d"
        },
        "item": {
          "id": "21154b10-132b-49df-9ebe-ea479494c286",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bdcf7d0c-88fd-4812-ac7f-e3502629131a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c838988-84f4-4b2a-b095-0e3b54be0e88",
        "cursor": {
          "ref": "3d89c7ad-0771-4a5b-9065-722b7a14b2a8",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a242184f-5735-4624-8129-8709ecd07dff"
        },
        "item": {
          "id": "8c838988-84f4-4b2a-b095-0e3b54be0e88",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "73a8b1a3-4479-4293-9e33-f0f3fd8a3d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ea831b-ee98-482b-9f7d-c0326c77f68b",
        "cursor": {
          "ref": "d7f76dd8-1f03-4dbc-822d-234f6f4082de",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3066c721-383b-4ccd-ac33-e98f2ca4e87e"
        },
        "item": {
          "id": "b6ea831b-ee98-482b-9f7d-c0326c77f68b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3c76c8c6-4e2e-466a-8c00-4794f76adc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28dbcd5f-d389-4bbc-802a-74575853de19",
        "cursor": {
          "ref": "10fdb57f-bff3-4d5c-800d-9077e0b76c67",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "040100e6-c9e0-4d48-b907-d5462b875c29"
        },
        "item": {
          "id": "28dbcd5f-d389-4bbc-802a-74575853de19",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "50413e52-10ae-4070-83f8-5fc06d56c2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa396207-e407-4667-95d6-72bce9f24adb",
        "cursor": {
          "ref": "450a9eb8-4720-4175-bf39-eaeaaa982bcb",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f1bfffdd-badd-462b-afff-f3a04bfb2664"
        },
        "item": {
          "id": "aa396207-e407-4667-95d6-72bce9f24adb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "23b78cfb-a048-466b-b1e8-fc9a635fc699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0438b25-0aa9-438c-8346-483655584627",
        "cursor": {
          "ref": "6916b9bf-d055-4462-815e-37467e41b0ff",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5e58af17-9548-4f82-9185-e26eef7375f3"
        },
        "item": {
          "id": "f0438b25-0aa9-438c-8346-483655584627",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "90b7afe5-519d-437e-ab1c-81d0e02208d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff59357-1d07-4d39-8e13-7a747028609f",
        "cursor": {
          "ref": "004b361d-8762-444e-8ac6-017714c17200",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "13f46ea7-70b2-4658-96a6-6b992cb75623"
        },
        "item": {
          "id": "cff59357-1d07-4d39-8e13-7a747028609f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fe43b336-3c54-4378-8e47-ff353866897c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef4ee3d-6167-43a2-a4cc-519c5ca67932",
        "cursor": {
          "ref": "8c2546b8-0156-4717-8c05-18ac08370d3a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "96407026-04cf-4ff8-a307-120e81452de4"
        },
        "item": {
          "id": "2ef4ee3d-6167-43a2-a4cc-519c5ca67932",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b2f407f2-a3b7-4323-a769-e1c83190f3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98ae82a-43d5-4c82-9e84-5840380f5797",
        "cursor": {
          "ref": "718eba7a-a801-4f8c-9b3e-8aba49a2a9ab",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fd04c799-0aca-4b9a-aedc-95994cdf45dc"
        },
        "item": {
          "id": "c98ae82a-43d5-4c82-9e84-5840380f5797",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f64a9d3d-0072-4cc0-975c-6eda14c5870d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a529a147-16fb-4e70-954b-f785007d0f00",
        "cursor": {
          "ref": "6a38b679-ca22-4658-8fda-2bcdfd8fa788",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b5bc3572-ec0f-4209-b8d0-e027b45811b9"
        },
        "item": {
          "id": "a529a147-16fb-4e70-954b-f785007d0f00",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "84be90f5-e033-4b29-9fe4-2510aaa909fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836335ea-83d3-483a-9856-b3e71fb1b567",
        "cursor": {
          "ref": "cec21a84-5a65-4518-a0be-531413300f9b",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "965f41cb-ec28-4297-bc2f-3dc747576f73"
        },
        "item": {
          "id": "836335ea-83d3-483a-9856-b3e71fb1b567",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cc20a476-bc99-4ee6-a449-fe0b078355b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c32c76f-f85b-4bf8-87cf-4e8edffac867",
        "cursor": {
          "ref": "b245ad09-157d-4e10-8f33-bb9367496150",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2bd1a5af-fef9-476a-926c-1bfe5a605fdb"
        },
        "item": {
          "id": "1c32c76f-f85b-4bf8-87cf-4e8edffac867",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b13fb649-9559-4e4a-9d81-2a3065255a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec05c2c-5c09-4663-bc12-e8be5dc77f37",
        "cursor": {
          "ref": "7c65a642-56f7-4cb4-871f-84e4738727f0",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bf36dc92-689f-4afe-b527-3ffd47f67068"
        },
        "item": {
          "id": "3ec05c2c-5c09-4663-bc12-e8be5dc77f37",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "49e6e0f2-d468-4be7-980d-b994b6eb3daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30ace23-7140-4a42-ad07-e4b691029a1e",
        "cursor": {
          "ref": "d2bd8e20-bcf8-4a07-96af-0662b6a919da",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0aeece83-5469-4dd0-9234-f27a36391dcf"
        },
        "item": {
          "id": "d30ace23-7140-4a42-ad07-e4b691029a1e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "56ed15a6-f512-431a-afb0-f3c6902d0790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20090e2a-21cb-4e0f-9a69-55b29330445d",
        "cursor": {
          "ref": "1a40761b-bd7c-414b-a60b-65e1eb652c10",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "393e68d6-664d-42ea-b07c-10afcedb1913"
        },
        "item": {
          "id": "20090e2a-21cb-4e0f-9a69-55b29330445d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "74f95c98-bd3c-4fc9-9b9f-9fd39c8979e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8e6e85-7aa3-4a2a-b629-554eea9d9485",
        "cursor": {
          "ref": "3ff09af2-2d52-41a0-b74d-28f75a9128d0",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c49e0161-b4a4-4c6c-b6e0-2ebb2ce71f07"
        },
        "item": {
          "id": "ee8e6e85-7aa3-4a2a-b629-554eea9d9485",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "42b46bb9-34cb-488d-8b99-8cb61b7454ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "4de79535-ac0f-4e19-928e-511ac17b7341",
        "cursor": {
          "ref": "ad6a6df9-69f3-4dab-b181-04ce95e1d828",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1b6201c1-a723-48d3-9ae7-634fd2579e6a"
        },
        "item": {
          "id": "4de79535-ac0f-4e19-928e-511ac17b7341",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2f30346c-143f-487b-9506-720ff2f414d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "8a3b2450-c44b-4bda-aceb-fca54926e9a8",
        "cursor": {
          "ref": "5be40970-a906-4d96-9d13-79f58c9dbc8f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "14c7a327-d405-45e7-9eb2-435080b2fecf"
        },
        "item": {
          "id": "8a3b2450-c44b-4bda-aceb-fca54926e9a8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0c173731-b078-41b7-9490-a6b892dece86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "4bcc4959-0b0e-4baf-b679-237e2eb160cc",
        "cursor": {
          "ref": "593525af-b8cf-4d95-9cde-2ebc36586038",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8348d71f-a8a5-4e74-9021-509e702952c4"
        },
        "item": {
          "id": "4bcc4959-0b0e-4baf-b679-237e2eb160cc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7986715a-d17a-453a-b282-14ffac1eec98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcc4959-0b0e-4baf-b679-237e2eb160cc",
        "cursor": {
          "ref": "593525af-b8cf-4d95-9cde-2ebc36586038",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8348d71f-a8a5-4e74-9021-509e702952c4"
        },
        "item": {
          "id": "4bcc4959-0b0e-4baf-b679-237e2eb160cc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7986715a-d17a-453a-b282-14ffac1eec98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a3237e-639d-4dae-845b-6d13839e84ab",
        "cursor": {
          "ref": "14a92184-1f7f-4d2a-b7bf-59955c0b2c82",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8f1098f0-1a11-4d09-b0c8-09efce6df6a0"
        },
        "item": {
          "id": "b2a3237e-639d-4dae-845b-6d13839e84ab",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4312ebb9-252f-437f-87ba-30c31a5ec625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff378ca-6abb-40af-b636-4e8a74da46be",
        "cursor": {
          "ref": "a717f94e-05d1-48a7-b0e1-223db7ca6f49",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "878ce6eb-e858-42f0-b8bd-0d6a95482cdd"
        },
        "item": {
          "id": "0ff378ca-6abb-40af-b636-4e8a74da46be",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "73a06e06-0ebd-4c77-b431-1b7dc1b2aeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}