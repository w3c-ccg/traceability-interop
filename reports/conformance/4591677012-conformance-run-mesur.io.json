{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7a2f0ccc-78a4-4e5f-8100-3ab9587e59a1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c6fa5468-6fa9-4e2c-ad16-c9c362ef42f3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0862c771-6aeb-4730-b6a1-0ee511a04074",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "73b606a0-c4f2-4d9f-93cb-5f3aeb8bc419"
                }
              }
            ]
          },
          {
            "id": "71674703-f237-41a9-a99f-196866c403e4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b6c152aa-dfb1-4e5a-8690-874d726e0bca",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "47721ffb-50dc-4ec4-a86e-e8f1ba7886ca"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dfd4fb7c-d40b-49a9-9c9d-65aca1937be3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7ef7aa67-d44f-4062-a7e5-b8754c6253e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fdb2be00-03dc-44c1-a844-11f4de3bb23c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "042da67c-ef72-458f-8275-588aca519569",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "314f1b47-7753-48d6-b372-22717ab16f09"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80006111-d835-42a3-b185-9c41d313926c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eff9c07a-1f52-4e93-81c8-329654709eea"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cb8648ea-6db0-4e80-a781-f053c0b5b39f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "729aab5c-3d4b-4fa8-8cba-de4eb23fc90f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e52cdac4-03c5-4a47-af52-0a6ed4a38e29",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "edd698dd-4db3-46ec-9497-3802c1b8897d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73169a4c-218d-47cf-a997-f2735b340827",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7fd442a-67d8-44fb-b10d-04ab2f25867d"
            }
          }
        ]
      },
      {
        "id": "d1c123e4-c675-49d9-a199-013171fd5181",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "84a8cb3c-2530-4aa9-9a6f-ea16a34d0123",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4700699-3c2a-40ef-8cae-d0c0ee0f2279",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "87d0b913-6d06-47a5-a042-aefa488223db",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2dfffe3-31d0-4a21-8f39-f979c7ebac4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a44340e-e55c-4198-8c91-19b724f5aea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e71753-ff71-4ce8-a6e1-68e8239371a9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c549e1-c1f6-4d69-ad9d-da518e709b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6b80314-3c29-4dde-9cb9-32303ccd5a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1259e9-15d2-4836-a97c-0c52298b5b7f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67617fa1-7fb8-41be-932b-8cf3bd52906f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e5d750a-0189-42d9-955d-7b974795a84e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cf2d782f-9fcf-44bf-8106-5ba33bc2ee26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca45de85-0b62-46d2-9a10-5417cb6f4948",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4d2c98-ab74-48b8-9fec-5049485b3b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65579cdc-1201-49b6-b5e8-c27b97aed0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabd5853-9fb5-4d4a-a521-9191022017cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1edffbf8-81c7-41ab-8400-480d9bc4cfcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74aedf91-254c-4b2e-98e0-77bd6c47610d",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1e0e88-7507-4955-84ce-8c1903a782f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "750197f2-a0d2-4be3-868f-c6f6d0794988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c96b3f-4958-4e91-aeb7-d95ba73967a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "55eda0e0-99ad-42e9-90a2-446198471477"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "47aad1eb-13c2-46f9-baee-acfd8875586f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "929225a1-ead9-4b36-b50e-33d33bfb8f0b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8d37f9d-c682-4778-9317-abce46eae2bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9741cb05-ec0b-49ba-9e2b-7eff5388de03"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fbe408b-2d88-4822-9310-720e2463b6ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "6e95be55-0712-4dd2-a281-0149dff72c25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22751960-552c-4d56-bd9a-2aa611bd4d4e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d7e48d7-1a17-4838-bc8b-0d68c246505c"
            }
          }
        ]
      },
      {
        "id": "08906087-0391-4b8c-9d07-ab0edc61e437",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "127fdb4f-97b7-422d-b713-c5b1f0806317",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6327bf86-d673-43ef-8154-ca601cecdf2a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0da061ce-1eff-467e-8900-24302d80fff3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fabee9-c9ec-4c42-a3e2-75c897ccd3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b17da7-00cd-41e6-807d-3ebe6bea1a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59b1d13-a9b8-49ba-857a-b81e1aa867ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a98dd05-52c8-435e-9397-39549c33f852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fff975c-2ffe-447f-994e-be2ddcc6b2f5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794fb4d3-23e6-4414-a830-131fc8c8e232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8881bdc-bb2c-4715-877b-1c745615d37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a2625a-bb3b-4249-8d39-beb73ce5fc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42c48cb2-3b94-4c4b-81f6-a968bf8ab7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00f4965-3e30-4d44-808a-1c9056e3cc93",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3326d4f-b12e-42d6-8a2f-b27ad9071b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d541556-95e9-4f8a-930b-c4b6c20ce9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efaa61a1-24ea-4582-83c6-882489a0bf6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4adbf97-d899-4969-b051-fa30518d8583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77e4798-4fb5-4a1d-8802-3b7a3aea52be",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94bbef1-dde4-4684-acad-c25efa57f853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfc8243-aff9-46d1-9b4e-e545b5503b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bcd766-f58b-4392-80fb-e8df8185e8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a9abd18-5425-43ed-9f88-3fcb9d6fdfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77dda78-8803-4b57-9e1d-98132fe92314",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99585c50-3645-447a-b279-094e710109c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9624661-a788-4a80-a2f1-993b767d8303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780fa0ac-14e0-45ce-8699-95fceea2a55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "704fbfd2-2327-49f0-a3a6-dee2648a6099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a337d4-db7a-4b01-af53-882c6f2c5a30",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3524c2-dc4c-4a52-8d7b-b8c8d7e411d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab273c3c-a328-44fc-8f2d-a2c51ca8cfb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68258f12-991a-4da6-a447-227c1aa7c04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a7a6ac8-8edd-4709-a681-85935bbfcb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc08075-aba4-40ed-a9e5-7bc669a8932a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb04736-bc1d-42f9-bfe1-501c45261ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e79de6b-8a71-48f0-be68-48cbe2533f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f7e5f5-9836-4a39-a1a8-7ac511693ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f83edb06-340f-489f-b7c4-7472d64de888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419cc476-9626-4b52-bd2e-cbe75da64b02",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8895a20f-7377-4bef-8fb2-07fd807fec11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52897a6e-4d62-4384-a215-fba1349bd54c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd94cc1d-2af6-4327-8bd0-a566717fe0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "831c138c-5230-4bd9-9df2-b19749a4fc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632e8478-5916-4743-8342-fd8b1ddceed1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b9fc53-1e80-4ec6-aeb8-b7ea208cd939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523ab01a-025c-4df3-86ae-f5921c722b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9b9ac3-2f68-4adb-97bf-a045d2bb60d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a574cb7-fcfb-44a5-991d-68f472c68838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765881f9-475f-4384-9c63-b2305a421337",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d0788f-691b-4e94-a443-287ebd76afb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5bfb7d-1d9d-4be2-af81-ada66107e28a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49b99d8-667e-4a11-9960-c12213182fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54628c43-f7ec-4d67-91b1-b17b4678321e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcadada-0320-40db-b666-00a36804151d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b40fc2-e9df-43dd-b31a-afa7c7ae1187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7228a2ca-0fcc-4447-ab19-fe7f78e719b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3168209-53bd-4f30-9aa5-e1094bc9e3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e563a589-0e10-4dd1-b35f-bd3aed98df8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73f10d7-8107-412e-92c3-e824d0719b92",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48af67b-0889-4cdb-b1f2-d0177d703c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be758b4e-c0b7-4d9b-a23f-1ce24b47714e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6448ff0-c276-43ec-81c7-1fdcff2f2b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e4e1019-af77-4627-a62c-b9d4b2b8321b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2d56df-53b0-4a62-84cf-5b3aa722efc5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2d82e3-150d-45f8-8d62-22e02139e467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196f4aed-6e52-43cc-a118-3558659b160e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d470639-45d4-42a6-adbe-cb98b788fb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f2d075f-7bd3-44ce-8c99-c634c2572aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4be1c9-9bc2-4b9e-a3d7-b61bcc510059",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1e9c64-495c-4463-b86c-4dd0ac968823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e937108-4301-46d2-afc5-d2d4be707af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d349f751-6247-4227-bd00-d5da8f084d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74e6d666-6926-4252-a593-7653746a3861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4319c55e-ff15-4f69-82fb-f2ca72d4157a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b127bb2d-b11b-480f-8c47-da9e5d700bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181feb72-e6be-4c9c-a420-12d9f7d5f72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7d2069-35b5-4fc8-af63-e2752667d931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8e268ad-ac1b-4e29-9846-ab6d46e8e2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a52b20-be01-4aa5-893d-e919de6fd1ce",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7bc20b5-d416-4459-9245-5ca3f36b6b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0feca017-17d6-4d7a-a4c6-5e0bf421a08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9eba6a-d892-4242-ba87-b7e8a5ae9293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1d7f7c8-5456-41ef-8f58-91cbfafc2cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324bdc73-a0f3-40e3-a8a2-840be3049637",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895aa6da-e895-43ef-b727-c89c3c59afa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf508f94-d444-4170-a88b-f244f42ca848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af635d19-44e2-476a-b064-162eb164dfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70fabb13-8f20-41e1-a62e-b88bbe4db30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46859af-0b94-44a7-b6cc-29d0f7a0e681",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38fe3a3-a5e6-4e78-94ff-2b6b5ed34efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb275c0b-f87c-4440-ab63-9840e11037a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e76676-4a22-4ab2-94fd-d643ed202ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e542192-30eb-4670-974f-f7f4d2ebd91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0054dd-32d5-477a-bca2-2e8805693db1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5402ade-ea84-4f46-8daf-3c92e601f46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a07254-5193-4fb3-97a5-a4baa3513c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00a357e-f46a-446c-9e8c-3f96d850674e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31432600-c527-4d9b-9732-ee370b02ed0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00a8e72-1959-4aec-b488-52b3fd50a11a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f22e6c9-cd4f-4401-96b4-47463f2a375d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3639512-a279-48ab-a869-5c8367e502d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4598708e-7a08-4254-954d-ccbe1524afaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c53ec7ab-d37f-40ff-b652-9eebef095881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846091d1-d1b7-4bd5-8dc7-2c2b7afc57d1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf613b06-a01d-4653-993f-a8bd86816ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94308460-5d49-411a-a661-d97f1bec3f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab80fc2-8598-466b-beca-2b9298d066ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "640ebc6a-080f-4ff5-9565-cb8da09def38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd2170e-816a-4fd6-94ca-a7189f71810b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935cfb0c-90ce-4cab-aab2-8b632744f9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8fbefa4-22ef-42a4-aeb5-8dd365dfc35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6227ab67-4373-4168-a56d-51297b7eca6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf19cb5-8c1d-47a2-b481-6eac59694723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a6b22b-c5ae-4ddb-862b-b1185e0a1ede",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5bd804-cdc0-4778-96b9-90dc1fd76b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c184c35b-4208-4a10-b512-ec4e561562f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460667ea-50e5-4965-b382-84295ca18ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30f13c90-29a2-42b3-a7e4-d15694c84202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7379e63c-061a-4da9-ba4f-53522501dbd7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb43dca9-5765-4657-9a23-7803a8b2b274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f6360f-bc41-4f8a-a4ab-81608c8023da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ee5d1a-4d80-435c-ad76-0e87e60f9d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "62e085e9-0411-4535-b7c8-5c695def0477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9dd402-8818-4fce-b672-7e57438c7ead",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c382cd-4ad9-47ae-9ba8-ecc6b32172e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3a7db6-7d86-430e-87f1-68eb274baea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50b8700-f296-4da7-bd43-ea627ee5d4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "483b8651-172c-40be-aa9d-fde69d83e501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ae6761-f978-40c2-94be-4afc378b4062",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1ee93f-80fd-4e9f-8fb6-a594392612cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815d9351-678d-442c-9bbf-97cd3c74b176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11fec0f-5b05-41cf-aa1c-a2decb110b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "59232c4a-047e-4b51-b7ee-ec280fdfc0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f749a75-f006-4104-82be-19fd6ee886bf",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d236eb-721a-41b6-92ed-1b7e89dd09ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e5a584-ea29-4770-8095-e11c8f2c290a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4639d331-1618-489f-9f7f-750f5aeae193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d227d4bb-35f6-4572-b058-3d3e16a9694f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6dfb0fb-036b-4537-8175-21da3d265461",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fee1ac-17d1-4e57-a386-68a39320f23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ddc4112-b2b3-4718-ac57-6c6fd4dea7bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967c20b4-be9f-4607-9d70-3e808a60b15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "596174e2-2678-4d04-a021-b1e98337ef89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b25118d-428d-4efe-802a-cc79c77dbd2a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13473d10-2aae-4d4b-81fc-cff92daedb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d4004e-0f2a-4c6f-aee5-8066b683edac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d16bb51-d2c9-441f-9c09-caa34361587d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "871e7a38-8ada-468c-8a56-dbaaefca69c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e32cf7-8c59-4963-8eae-09500ced7cd6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1eaee3-5a9f-4458-b1f2-d53504564216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3293880e-40d9-4a5a-9666-f21e9b017ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74387f98-9047-4839-b69f-9fa2cb5db852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "080fe2ad-d60b-44c9-b776-f8f1144d7685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8d397e-4111-4763-8074-f2b04ebbdf87",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764391a9-0136-4f47-9e51-a520dce9f6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d80f69b-06d2-4669-a485-d559b8b2e414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d66c15e-1520-46f9-b84c-7b35df74d6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9f8250-64c1-4856-a04b-10dab2e13426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d97958-04a8-4987-92a2-f2e2cb12d009",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24baab58-7e82-486d-b98c-7009340419ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4ef1d4-7cb8-4e9f-b8d7-236f36a34e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58cab1f-145a-41af-83ce-77d2f4ce48e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1db14c-7eae-450f-b9c5-abbde37ed32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8c0064-3f0f-409d-80a4-46b1d95c9335",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c980cc-4ac2-43f5-947b-0ab8419ac409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a7eb85-79ec-4354-92ab-8d3e1dd5896e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff96f64-86a9-47c3-82f6-443b080a1c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87add093-f796-4eb5-84cf-23c5ae675c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c4b43a-2621-479f-aba8-cacb08527dde",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf91a86-b11c-482d-bbf4-b175682549d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb5a225-a79a-46c7-92a6-756e853d44bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01b0518-2cc5-43b2-89c8-3c3c6efa9ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35e8c608-1830-42a6-957b-6791fe184a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7c792b-7f0d-4051-b6b3-e5f4f70632e1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcf38f8-dffb-4ea1-88dd-62b31799452c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ce28ed-e047-449f-81e7-e83dce442341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d12d32-1ad2-4212-98ac-9207442ae443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "56edbedc-0b5d-486b-8106-0f665df7e529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8760000e-29d4-4a40-b9ca-e0ebe26fa096",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef93ee9a-149c-450f-b1de-3b93cbd322f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f5a3e9d-c306-4ff0-b20c-b7f20ea12d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b4cee2-a76b-467e-ab99-68b10992692f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45502782-7410-436a-a1a2-6c829d74060a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb695cc2-7d8c-4d5a-a7e0-947474f9420a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f04548-a8de-4d19-badd-063e6fba8ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139f4908-2e50-4349-af31-8e7f9bb6bb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a7d3d3-78ea-419a-ac63-53ca36711fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e91b40b-505d-42a4-ae1e-63b2727bb854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c1cc43-53a1-4957-ad7e-de7b61701779",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cd4e96-c06c-4bd1-aad9-266c4e4b5d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c84b80-0f33-43f5-b1f5-ce2d7ed7a18b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310cf228-ea91-4220-ad8e-dcaed969a6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d822f9e7-6d61-4576-9eaf-79e9269b303a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1136d20c-73ba-487a-9db2-7d8dc3f99086",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616631eb-5cfc-4dc8-89aa-2f90aa385ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18aecc3-4d08-42e8-9559-c9b4f947a3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9698cf2a-a7db-4caf-badc-95e4503436db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "13dc0562-98b8-4521-abb8-9247ac1639a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983f3a84-1938-40aa-a75b-e3c29a2da0a3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd9c50c-17f5-42d4-8eba-5c488c893f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78debde4-08bb-4b08-9f24-757dc4b4f74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28731ed0-3186-49c1-abd5-5f98e6995868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "85bd4eee-76d2-4636-97ff-6cc213c9df9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d350896-1305-436f-920d-811fc959844a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b49e5d-8a57-48b4-87be-2d95a4dd083f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35c6057-9f00-455a-a43a-d6e73a6e540a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a171cc9c-accf-47cd-beeb-bd7f3b13195d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b74b1102-1082-48d0-aff2-7eb90d5cd3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c24a40-27ac-4f8d-ab69-9e2bc5679ecc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774efc0c-8e44-4d8d-b5b2-15386e74709a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89c2a3d-c38d-4110-bf2e-5023f83ee852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b221e37f-aaa0-4257-89c0-66a835cdc1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "53957c37-7f07-4aad-ad24-0ef0b241b212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8ad45a-fdc0-42e6-8169-d444977313bb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aba8e2a-0729-4382-9fdf-37f4db3f4c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7f779b-8a36-4208-9310-f73f7b0f0096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f234794-1de1-4368-b4fd-d8e4e408aa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf2056d-597b-444b-a182-fa7ea7e79395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc09ddd-c04c-4c1e-9d90-72e63abba503",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30401429-bc17-44a9-a945-74fd25009f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2beef93-9955-4d74-94b9-544a5ef84c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c353678-f041-448a-8985-498f1ec28a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "03ab7dfd-e42f-47da-b8c6-ec61e417e185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0caf01d-7d29-4c3f-8b35-3c922643876e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b0d385-75fe-4475-8b3b-38180a3ba5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7a18f6-ea3a-4d0a-8769-507d1a35669c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcfbc31-99b1-48b5-b3d0-4cc2a4e76319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0023a1e6-f2b6-4007-84e5-d2c1ebcfb5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82865b90-31b0-4587-971d-3e85307e0983",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ec474d-800a-41b1-aba3-e15f02c855e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e05e45-ffa0-47ef-85a3-9efde4cd1d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676eefe5-43bc-4b25-b12f-fe9f3ab978c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ad3a7b-0ec2-4469-8d67-53f43d2354b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941847f9-53f9-4146-becf-ac6f9e8b2d89",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b458fc70-13ec-46f8-9920-d5e009581535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf0c824-e9e2-45e6-95be-fcb206ec78bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f559a7-b5e6-45e9-b9fa-0a8806c86bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "faa43cc4-4142-4fa2-8833-f55e1e68f305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba22d43-7152-4367-9171-ce172292c127",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4f87bf-02b0-4fc2-8adb-b41fb7fb47a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2067b1bd-7027-45b0-80eb-79c30826bfb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c232c7f7-b282-4594-ad6d-a1ee699aa5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "068cfede-603b-40b4-86e7-c9f3884d03ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87059a6d-0623-411b-bead-6381533ae905",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4b519a-2bff-4af5-960f-0339c581e628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a75afe7-202b-44df-b35b-2783d8e2a3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35198683-c214-407b-8ec9-6d0d21eadd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f881ac0-3f8a-438c-8966-37bae985b978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6209f75-8765-484a-bdce-27a4314e8b2d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86feaee9-b31e-4e04-9326-e94aa8289e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafd29a2-e0cf-4c2f-b9dd-5308d6b8d1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b4b709-3dce-4dfb-86de-575d8539f44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66e6714e-91fa-4d83-bda4-431430dc6bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018fc6bc-7a5c-4a69-97db-7b99110f069e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8acbc58-f303-482c-93a0-2248f85de78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "008ee9e0-c37c-4dec-806d-4f3b542e9ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1616d6f-a378-4a24-83ee-6165182613f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "492ee62e-aea6-445a-b3f4-06e58c2921d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7076992f-be53-4517-b500-bbcf6d050fb8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc52a312-37fa-4bc1-93ca-5fe613752f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88044e3b-3fd9-4a80-b611-edab32d8a9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddf9cd8-ff89-474b-b693-ac185a527873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ba4df6-4718-477f-8cee-ea2e54a260f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d196f6ce-666f-4e91-a814-57e00bed00de",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358b43b3-b3a7-4625-ad9b-54f6ebb9e0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b36a8a-f805-4183-b836-11aaccfe1eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df85908-5078-426f-b182-d21c5686f688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7472838-ec9b-4d72-8142-54c441de934f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcf2b2b-65a1-4f4c-b96b-01381023d776",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7327d6ac-ccd2-4e63-a317-60958d2b9aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca462882-7b77-4d73-a489-709407380302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc0b9a6-1ea9-4d33-a3b9-e4923d2a4b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c75925d-a1c4-42a0-a7fe-d4675ba35d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb602de-cac8-48d6-b0aa-27f1627aeb7a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1e2a63-8ba7-49bb-9abf-2638ea9386d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513806ff-18b4-40bc-8b08-b34a21dda447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc2c18e-620f-4d4e-a461-222a14c1dfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4973ed09-38d6-4f43-bf1d-150c47985a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaa0123-2872-4e5b-971e-54f48a1fa057",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8bca8a-0d8b-4edc-ad03-941494428751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8405024e-8759-49c4-a692-5f81f4b8d391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fcee7d6-e5b6-4a7a-a2af-74c4cceaa3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "283191d9-e27a-4155-8266-9648f77e0c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94656ce3-745f-485e-b693-15582b7a9131",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ad6f01-73d1-4089-b6c0-060d179877c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c862c45e-4d86-42ae-8ea6-75f5fe7fca44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe73c77a-b566-466a-abf2-d5cee44b3b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9d0d8e-2fa2-4a52-8a9d-eaa883c5ad30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e996f655-6e43-4163-9e7d-1c06d45cf02a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb5be1d-cb7e-41c3-b231-653c00da68ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c42a85-18e5-48b9-9ae2-db45bbebc149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82054f6-9884-44a2-aa42-db8084855a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea84244a-a363-44fc-9b48-e7308450845a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f8d713-3ca5-4c51-82b7-916014c4468a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7612057d-3a02-40fe-aa2a-3e25dbeb5857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7a168d-6a08-4f92-bfd1-059a98bdd122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68822cae-f34f-4ba6-9bc8-22148eda2de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "680b744a-0eaa-4287-b058-80d4411c4867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfc34bf-aff0-40d4-a7ea-15113700294a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd61dd5-c06f-46d8-914f-a7198245167c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97bacfff-2573-46a7-b742-226ec5657dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f18dfd-a544-4e96-b19c-6e5ba5088040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a5c9f8d-4d02-40d4-88de-a6362321b658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e58afc-2c79-4214-9b35-7068b394da12",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7724564-9608-4b5f-9a56-d835d9361048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8effc429-49f4-436c-9bd0-0d041be3f434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79199b97-e3ec-463d-b322-b5474f81d930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0280fb-fd90-4623-8de5-277f9da106b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcc7bd8-902d-4680-b9a5-268e682e1883",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35be5672-4d0f-442a-9b11-512d4ac20de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de93a2f9-64fd-4443-aea5-af01fc9be8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d369e9-184b-4e6c-83a0-e22e162c9d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "372dd692-76e5-43d2-a05c-4c5552c9bb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a547e189-0b35-486b-8c79-755aae51a2a2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd2bd0f-727b-4137-a6fb-9877ec51792f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4ed492-f8d3-49fe-ab14-9b26c8da622e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abdb6dd-c7e9-4dd7-8289-6df6a5d7ee9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "03425f45-fcee-42c6-a610-1199b86eee7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a6c0a3-ee0c-4d31-8c48-d10abdf3d92c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0910e375-51ec-4031-9096-8239024dd9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670e73ba-553f-4364-9407-bacfca885adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b18b6e-a5fd-4d83-b7d4-d4556c4539e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f90a12c5-1d64-4f5b-abc1-4b85ffcaf1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0380ba4a-04ab-4f70-a2b9-a50952780f17",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637e6ce0-fa4e-4283-a94c-b31236f28d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376733cb-3a95-45af-9919-4ab6f1d8a089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42346a8-c39c-41ef-8f6f-d3e04c567206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e87f80-5472-49db-8dea-b728f4ded074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96569fef-79fc-4725-a185-dcf7b842d16d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8eefca-ae8b-43fa-ac3a-b96db36fa68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89969981-afe7-47fa-b14d-993d47acfbc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ea0242-3e4a-4bac-97cc-0b71a392dd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0157579d-51f9-4436-b4d0-1aaa0aa25c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2165c63-2102-4ee4-a427-a9faac8321e0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f1e185-7ed6-4a81-9404-d4a1327fd5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a1ad8b-10d2-44af-a6a2-69e54cf8f638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60730194-afbe-40f6-8148-ae2c6f71856d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "206b874e-7d64-4514-a6c8-6ef03cb130d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ceee94-c508-46c6-9b96-3aa76cdab060",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3db3d0-fa4c-44b2-986a-d48210cf9a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b89650-6c6f-4a3b-9b15-108b32749fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc6012c-45c9-4b54-a094-42b853f02f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f98732-7211-41cd-a861-89151e065933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd56106-105e-4040-9164-70255953061b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9047bd4-9700-49ac-86cf-7685de435e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841a0cc5-4746-4d3b-94de-c93dfacd8782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cc6241-1007-43c9-b60f-504606b0bb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e18d8d13-2ec2-4889-bdd0-5f4dfdca05ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50e5425-cbcf-4a3c-86ec-9e55d7008834",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c46847-0718-4827-b204-93e9c17c80be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8bf737-66ff-4cd4-811a-f86751789640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c405d70-9c87-4fd8-a3ec-9ac7a4502a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d4c5e4-641d-4a13-b84d-8d16e1c3e12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c7ead0-ed0f-499f-bbf9-470cea183584",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4372345f-bfc7-4c26-bf1b-b9d5a7260abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2303b8d-d7e6-4241-9c72-ffd8a7253388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31403ddb-0992-4245-b647-63662743aefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bbda6d9-4eb4-4d73-a5b2-cb0c9df6169f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49dbe2a5-d45d-463a-8947-f8198544ba20",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15be73d3-daa2-4779-86bb-5948a1df445d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891b5c60-2be2-47a0-8a82-29ab39d7b5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c98f46e-f0c1-4c63-8c35-a622187b9598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "115381f2-d922-4fa9-8080-958cad86e8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0f2f33-0989-4a0a-b968-ee327453c71b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240002aa-b075-42d1-9915-b48d52d6100d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7082d85d-d212-44d7-9130-cb5c639584f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9312fe-490a-4910-91a5-0b811da5f437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "819392b2-9b9d-4660-b8c4-b9b62b5a175d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7368dafe-2eeb-4049-9bc5-bfae0bf17f65",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77cea34-45a6-4269-8c04-1f4cd7214f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b526db-ddd9-4a51-a3fd-96f617ef5ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b676820-2f32-4ecd-a440-52506d2cad41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7bf03bf-5c02-4243-a84e-e8ace4949f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9899d3bc-b054-4f66-868f-fd02aef8bbc0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a9724f-38e8-43ee-81d1-b011278e6a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce17bda-dc55-4c71-aacd-f97f6d920e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5297f454-ff2a-44ca-8e65-905ab0ac5c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "381c7a33-bdf3-4b4f-b620-040912d80af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07249c3a-9637-409e-9537-4d140edd3b5c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c97d1a2-019d-4a22-b41c-c1fa3a013fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933faeab-77e5-4113-8e29-9ba6f732b5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd3ab3e-8b56-4802-a2e7-d7bd771cac9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d96581f7-63e4-4105-b945-86b13128b3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba67d005-fbe2-4108-90c5-ca0c83e91d76",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4638a082-0686-4517-9805-4924fc1b4046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b07ea30-7e69-485f-babf-387bb9a47bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d179b604-403b-4d97-b35e-121dac696ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8945859f-946f-4d8c-b983-1a18ed945701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b113fb4c-6bad-4184-acdb-58b435b2a0de",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ffe6f7-75e8-40c2-aa7e-4d937295f080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa89720f-d7af-4790-9804-b195db61c76c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45821d09-975d-4a5e-b469-19ceec0ecc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5314032-78fa-4baa-b8a5-a2b74e9809e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dea691a-3f99-4083-bbf9-2c91ddd35a74",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5511af-d5b0-43be-a09a-719f66ef94e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af35543-95ad-425c-bd3d-6d64d7b28360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c810a14f-1fe4-4e45-ab8d-5b16b22e4af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd1fb27-453e-46db-8078-d44c56a6a89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c15ad4-6921-4409-85c7-3bf064b77f40",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b46ece3-c902-4e2f-b30a-980e9dbc36c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e032c84-0b12-4617-a71b-56d42e5925a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f029600-fbb7-4c83-bd75-dfd06bcc1e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94c6bf23-0ca3-4c41-a682-4c91cde3fdf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e9c5ec-3c59-49c4-86ca-10756907dc0b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d45fe5-8f0d-434e-bce5-48d5446b891a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a597bd68-1781-4c67-af51-ea8e068d2d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5249bab1-624b-4b01-a610-db25f3cf6c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c04e52-2d50-43eb-948c-373316ef70f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5136037-36dd-4c16-9710-230b9bb872d2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fd0600-fdac-4aa7-9c8e-622cdbc3d8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356ee03c-60f4-4390-ab5e-95518e65d5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24556a9-6ed8-4839-b275-90fc61315773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55f5085d-9d6d-4cac-b5ea-bed1daaaa41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e32e18-decc-4800-9805-9dc514d52644",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9982a2a5-fa60-41c6-b6ab-80231f405cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382e0300-fa67-45c6-a7e1-1cc77690abdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5eea3b-223f-4129-99d5-8145f1309388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8b48b8-76f9-4e51-91f6-08e5857951eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b2d5c3-25ce-426d-8717-f6b01031157f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db41e49-173a-4757-b6d0-c11f3200c350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd45c585-35b0-4a30-a0ab-8aebbb59afc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8f9d7a-3e82-4188-85c8-e2cd9c0b1b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4dca585-8962-4ef8-9ccd-e365e665d6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81bbf43-807f-434d-81ed-f97f249efd2a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a89b2f0-cade-493d-9a06-f5119618e77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9a61a5-4016-4440-8744-a8514b996bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6dfbdf-2246-4864-937d-2bb221b4154d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29a56a81-51f6-4339-a3e4-c5f3dfb66b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61718c0-5ddd-4d82-a2eb-5e44a4e1c2b9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6dfd885-3e90-4392-ac6f-b9ff0d6aed02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce55a6f7-a01a-4ae8-8c96-84af6e6aa57a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f42e776-b196-4456-8e89-eb68b202622f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7922cae2-e9a3-487b-807d-06f2fee11c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccde18ec-765b-498d-88ef-c70f95a26832",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7bed55-764b-45ce-8646-1d31954c3f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ebeefff-d71d-4c8a-8436-688f2c550d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a3b79e-2e91-47e0-9bc7-20231b470f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d483fa1e-f229-446c-8f5b-df6124141136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b041ee-b6a1-4e0b-a255-982262e55917",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c234d2-3890-4bbe-9367-21766f17b65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979d2206-962e-4214-85ae-e46b62d7fd82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be54990f-23b9-4a1c-9bf1-3d857bba2fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b17217d6-e99e-451a-8faf-04406ffb24d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb86375-a551-4ea4-9c11-eab72b6dcde5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a424e199-0c5b-42e7-9bd0-8e4ca9ceaa79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37d00b7-6589-4d9c-ad77-a96ab1afb4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9f78ce-aea2-431f-95aa-f657de0f89be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ebb2a5-c97b-40a6-9dd6-eba204dc8b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3150bc68-68da-4489-b174-581735d0d4a9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f95a24-7e60-49a6-82d1-25341fcba608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b07a47-cffe-4773-b0c9-7106cf44f4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23d5589-cce8-468b-a7d1-98cf688a8962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d30ee5da-54f7-4e95-bd7c-a194184077ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6b8a96-83f3-4f1a-99af-5480259f79c1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14511c1d-60af-4adf-bb16-3f132a86055e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5dd4ea8-a0e9-46ea-91c2-841c77c36892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43988391-4fe7-4594-a218-ea2f415aa969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b620aacf-9269-4bdb-9c4c-c91201a98ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a159cf2-bc29-48ae-911c-469b07324934",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26a4a36-229c-466a-9d37-e12a313cd0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2c1abfa6-0f5e-408e-a092-d9193b5437fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de24767-830d-4ff9-86ed-27de817f0fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "552e794b-8b97-4464-92b1-b35379cf4609"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "34aabe39-176e-4648-bbc3-e9de47c31b3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "096836a0-b91e-409b-97ac-efb8921b66af",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f871fba4-fd11-46ad-b509-113e560463a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73eeb1b2-f0c1-4713-a37b-301648098def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0050d4c7-0ce9-445a-96f5-ec1277483171",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8c8cee0-349a-4fa7-91f5-47fcf3a6450b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125aa448-0e88-49b8-a15c-88e0b5d305cb",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c89ccba-d72b-4827-a152-bbc4c9a957ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b923c20f-1a7d-4f5d-aec3-5fce7b6cbf17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf691aa0-7a77-4c11-bac8-0541703d1989",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7edc709-234e-4ad4-b4f4-360977b7a3cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59f8f381-9f02-4856-9666-5aeda3ab559d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8aca2de-290d-4aa0-a85c-ce749d309d6e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c99194f0-6c24-4d69-9823-62e3938350d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32373506-93bc-42c7-9183-c35850acedfa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8ae32e5d-40c2-4349-b728-fc199c33e5c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d6d5b970-d23e-4453-90b3-66abd201b2d2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "90dbc7c3-d6d5-4381-a2fb-a92af519e600",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d811815-efdc-4b83-afbc-7f10159fd2b7"
                }
              }
            ]
          },
          {
            "id": "d7f23a1e-681f-4070-ae03-0ee1bcd760c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "093bff38-5983-4c1c-9d14-4a28272fa822",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2d1f414-c3d4-43c3-b770-c6080e0a2850",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4c72478-ad08-475c-9233-5386a7b4a659"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b56f322-d75c-4048-ac15-9bb1a17efe4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bd8d62c3-05e7-4f80-b22c-4cee739bfded"
                    }
                  }
                ]
              },
              {
                "id": "e934945d-c20f-4dea-bef3-c19540b225a7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1c61812-796d-4fb6-8bc1-d5d6b63dacf2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03b252ed-cae3-45ed-b006-e9edd99bd72d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5eb8818c-6bc1-41e3-9cd6-cc42f7147b93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4ec227f2-fd3f-45f0-9d44-356d98975610"
                    }
                  }
                ]
              },
              {
                "id": "38fdda20-671d-48b4-b2fb-2badaa5616e9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e9c94a2-6621-4a9c-b5ff-1ea3306737e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d03e202-c202-44ce-b756-16b7ebf2d1a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c96049ff-d99e-411e-a02c-87d01fae67ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "093e86d1-6859-400c-9aff-5d950f734703"
                    }
                  }
                ]
              },
              {
                "id": "d8c93be6-40fa-4cf5-8e83-6423b3d9515a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80bc3eea-d438-4215-a8c7-eaa8a3f9fffa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d86255e-60ad-4ec0-96ef-3b4a9d57815e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d36f98b-bf7b-43bd-800f-11a587e24814",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ec285e7c-a21d-4434-b397-906de01e28f7"
                    }
                  }
                ]
              },
              {
                "id": "13df6df7-9e1c-4243-9de1-d3075aa77ed5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fea041ad-0fec-4526-bc8d-d03a2328c174",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7dc40415-e476-48cf-b820-c6f7391ad597"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1335988-9570-4eb9-86e5-ee7a56bfe031",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "61c63b44-88eb-4c80-8e2e-6e4852c72997"
                    }
                  }
                ]
              },
              {
                "id": "206808f9-9134-44cc-8ebc-48b8213fda95",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5298966-fc3f-402b-95bb-a1223567b4a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f819be31-2a19-4177-8c20-a400ea708e6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ec2d15b-6def-45f3-bdb1-4a51cdcb83f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "de31889b-a520-470e-86fe-a5e131fc3cfe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7d0fc39d-53c2-4379-8194-e43cfa655e69",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9e7558a-04ba-45cf-a0ee-217300d1a94d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0fd1fa99-4128-42c0-9894-e860fec05bb4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bed43bb8-723c-49ad-9682-9eaf2d5160fc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b584973e-5227-479a-8716-da02fa3ac85b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "16111f26-e1df-4909-9eeb-0a461335d1f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8523394c-a775-4727-b9f9-bead68544df1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca26cb17-57f0-4554-998f-f177cfabb4df"
            }
          }
        ]
      },
      {
        "id": "0696d0e2-c6c6-4c62-a4b3-1422af684132",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "765a3bb7-d01e-4248-9c87-f03e74089ccf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a255b53-5277-459f-842c-3cce7684d382",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1a2cc20c-db31-45be-95dd-27fb1778b2d7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1ff70c-899d-4e1a-a9b5-63e034da9be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff29fc6-760c-42e5-89d9-7c399ea80d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d24820-452a-4b37-9426-1c922b1055fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "268fa0a5-4c3e-44d5-9d18-1c30fb794316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3261e3e7-986a-482c-b5b0-974186b35edb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1935c7c2-6875-4ed5-a6e6-a7c5f172741b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd0f318-d234-4b3a-a8f8-fb7585859df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc6e5df-0e1f-4823-9ae3-7923b63eb13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb766a3-4e78-4f8b-ab24-2710ad01abfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf1e989-fde4-4376-ac2a-ea61062c05ec",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8664de-b6e3-4bb7-8534-693d4c26c744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da98ab9-c766-4aa3-8780-62074c544a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0f9444-c606-4445-b274-d3657374a72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d68cd40-b35c-4966-8666-215604f9640f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8332544-bdc2-4e98-911a-b1f12d7ff84d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fcfb95-26a9-44a7-9641-fba2196bd949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ead452d-a080-4858-9fdb-c1ee40a97838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d982c358-f616-4367-875e-ba3494fe74bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb58ebe-59bb-4dce-9af6-03e6d8e1c7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcf13aa-a947-437b-995a-a8d5bf700240",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4163894e-0758-4733-b437-3152af12b152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee111f9e-1818-4c98-aa61-4dd749db6c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dafc6f6-d01f-4e8c-8e74-e86cc8ba76fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bedcc4fc-29c8-4cb1-95e5-8b83336d84ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f247573d-7343-46d9-bb76-71458df463a4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7e0039-35bf-43c3-8a8b-907322f475bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a641b0-9649-400b-bf1b-59798218d494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5a0539-86ac-44ff-bcae-552db3908c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce5b7c7-643f-4423-b884-8a57c8d4c1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c914b75d-b226-434a-9557-3c5e5eb16b28",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca49add-db55-4b3c-91b1-078b1f1142b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a923ba-f252-4e5b-84da-4e10908554f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff206807-b77d-4a39-b18e-bd805cc3df09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4af5295b-1196-45ef-ae7b-fae8b93771ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb3ce5c-d01d-4195-8ac6-491290580e0f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f8961b-70ca-4675-895f-b86983491e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7ba9d3-5ae9-4d63-ab1a-1a8e50faeb80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4076a3a3-a54e-4cd7-a901-a5e2397692d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0167143f-22a2-4937-9200-87e18cccb1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f753213-e775-4487-bafe-57f69a4f54e9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7bf15a-7f01-4795-900f-e475206d17b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a25dbd1-4771-4e8d-92ea-edb91e20c69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898cbf87-4283-4a6c-99f3-c56a3b4a9bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6df6f68-7ee7-4edc-a77c-5c3abca9c629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f94de6-e234-4874-b1dd-abc2176211af",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00202188-2b8f-4de6-befe-f79e12139e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad6f59d-474b-4bbc-be1b-9c60519ce698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bef412b-78b4-4bba-a0e4-df3ae535b292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6ed2e7-76e6-4901-83c8-c2c0ead59574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862a9014-39e6-49a9-9b09-dd33a4d7e9bb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f810ed1f-a943-4c75-964b-d59e0e30b29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87716f89-77bb-4e73-905d-6bb59abf3ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d33232-49d1-4961-ab2e-753844242435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5f6434-7c5d-4cec-a2c6-1a0d0f8bde02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81a1c18-b936-4e71-8308-c6ebe6f651f8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987f7ef1-1887-41a2-a3a2-fa104d72178a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c85c4f9-ac2a-4d23-98f6-a2c75dac8a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a6432f-1e96-472e-9937-122a7eec2531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aed1e70b-6819-4f63-98f6-8b46bb494fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eabedb5-c47b-4ce7-a222-963c88fe1458",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a7d460-d8bd-471f-873b-ada9040f405c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e559c80-0d83-4c24-983d-db90795cb8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3daccee4-1ae8-4e60-b931-20d206aa8c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fac86fac-b194-4d04-b9e5-dd0b895d6d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204e7f6a-055d-44d5-8556-b1198560a821",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6e7264-3ec5-4349-af27-42213e687f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baefd31c-7341-4329-9fba-88ae259c51d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36708192-90b3-4bb1-bdae-619602687443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb81eb1-fc14-4951-ba3c-846fe94073ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436f4655-e93b-4598-a358-38c7465221f1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f687d49a-bd5d-489b-a1e2-5085be0a9b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee558c4-428c-457d-a132-cceb00f4917e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1380f01b-e6b1-4926-9acf-ecd3dd8bf415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "09bf9031-a58e-4787-b366-8ae768f82499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716aa581-ac2f-45a0-a91a-fb477149a7eb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4f0f6b-f807-4250-9e43-8eb50c8e0e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9f79e8-eb80-42ee-85c2-421405c91638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6f3263-ee8e-4132-9469-52593752a215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "822a7f52-cfff-4b4c-8f6c-ef7bbfb24216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ffa14b-7fe7-4d99-a783-80d2f34a58a5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "decb579c-6706-4680-977c-cd9410529310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0db8263-54ba-4d4a-988c-c30df8eff12b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee7f4de-cccb-435c-9311-c70c2eec3789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "be94609f-40a4-493c-9789-1a2f28ecc035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492d6cfd-bb2b-4442-a53b-50f72e7f49e7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71ce651-61b8-4eb8-8bb7-e243a619c95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683053ed-9eff-4f5f-8c1d-5365d24afc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfb6f57-4cb9-4550-854e-26417d7a77f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "08dcb76f-3c19-400b-a3bc-5da4b85d9f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40632e6b-126f-4848-9c29-f7de649756df",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7719bd4-0629-4300-a40b-eaede1d24ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5376952-bc1c-4cff-a05a-7d147e9c7330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84b7a04-9c5d-4470-86c6-bff7dd79b686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5176798-86cb-4d1b-a7cf-a97eaccb72e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d7fbd7-ef7d-4a00-b6fc-3e9ce7c01009",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef009b6-3ba4-4eeb-908b-f3a27fb85147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118b46e3-f5d3-4d80-882c-77f77964528e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4bf34d-f223-44dc-824f-f1b1c9ee6e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f70c61c-2e89-4c4f-b17c-719b7f6d2f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f592bd-ec50-4bf5-b8b0-69b9ebac1dc9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12cb6ba-209f-44e1-b695-826111008163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6bb28e1-6025-4962-b721-425ac0591113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc3cf04-f768-4e72-988a-01c4b8017226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed81bc9e-7eef-4f16-9861-9d8df4a6bc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3c904b-0ac3-4993-8bed-a59a3f403bce",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e831acd-ba6f-4fc1-a61e-0686ea9d8a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbfacc7f-4019-4be3-97f6-df09c4d1944a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec41d7b6-4d2c-436a-b8fc-760365e7d312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "120fb996-b5c0-417f-9252-85e53208ea39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d27538b-6225-42d9-9909-c1bb006544a7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc11d63-853b-4f89-b885-c5c81ea5f597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21bf694b-35e0-49ba-a8df-70f3a5b65850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e1c65e-bb65-4590-9d6f-0f9067666e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00ed9a41-a653-48a6-a725-f44ed023f063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5c02f9-d9dc-4e14-b29d-22d115f01f59",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a545d9c8-e5b2-441c-a4d3-03f69eafb21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55232c67-c2eb-4b8a-92e4-84452d7f5fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81188e8d-45fd-4c62-8036-03209f4e99ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb69639f-1f77-436a-b2e9-8b765619e08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73c8eb8-db60-4407-8ed2-75f1dc893d39",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2b793d-ddb7-4c2e-90af-c31de5c62ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa85bcb-928b-497e-9264-eb1f56a1b0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9624f61a-f825-4167-a1b3-27cff818b5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93bae0dc-326d-41de-b87c-62a7209b7eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c670f236-5c55-475a-a0d0-51de6ebc431c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea688b1-da33-4cd5-aff5-1ff7587fb4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ccc8465-4e72-4b93-b6bf-e326eec6044b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2812f2-45d2-481a-8b5e-0b8091e9b473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfeebfed-97bb-4311-bbe2-37b4f4e9127a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb04a8ca-bef1-4014-9c76-9f75114621fc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01c6428-1847-49df-8c4e-9f9eeb667b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0acba0b-f6fb-46b9-8d50-a6f71bce00bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0484bde-b7ea-4f9a-8e8a-6312103d734f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c0c81b4-921d-4fc2-a40c-e448e388924a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7a5b29-1f45-4e4b-8324-311b3f688bc3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ce6c50-5627-44ef-80b7-6e540b7563fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80cb13e3-d885-4079-9df8-f4591c0b9117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa2144f-bcc6-474a-917e-ccc23a954e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65f2d0d2-3c23-4a18-84f8-0d707c0d94f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d4d86b-6e6b-45df-9233-f57fa23ca634",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca8b46d-a1b8-460f-ab41-011d3c0698c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef1c082-c049-40f4-a3f2-57c6f71fbe7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8c888e-53c2-4388-9071-10b3b8c52f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "975a8e0e-f81e-47fb-ae73-c7dd137a7d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced65874-0bcf-47e1-9179-a861196fc9bc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d490e6de-2d4c-467b-8f83-c9792615f0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72da4585-d938-434d-83ad-f24102b90e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480009ff-2306-4c2d-a0ac-6a56ec3ed225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba7a46a-a8e3-42d8-b685-34ca71d9c932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511b7fb1-4812-4327-a95d-da57cdcb36d9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109a5992-0392-4aad-b8f4-efbbbb31c1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf22e00-919d-4b76-bb5e-2badfe6d6083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecbef73-ba57-42be-bc08-0ca374929822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "749026a2-0cf0-4d5c-acad-125a4db4667f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6373a37d-8718-4e47-a090-7f192c951201",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9b76fb-ac17-4cc2-be71-407931cd0b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef9eeb6-370c-49b3-b08f-e153bb22f9d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be99948c-48c8-45bf-bde5-4cbe72481a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c9ab96-fd58-4b2d-b2be-1e9df36e804b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2e810823-67f7-4a1a-8e91-5c4844ffb108",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e22baf4e-03fc-42b7-9546-224a8145bab6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b70cd5-999b-481f-87b3-e0499a40330a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c39fb9d1-e9f9-4513-9c69-79694eb3781d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc74157-3b49-461c-847c-a5ab8651128c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c9a8f6e-6c4a-4749-8405-04f6dcfb1d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacc4b85-daa4-4694-9638-21bdb6ff9ff3",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f5289c-fac9-4333-81ac-646496d290f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "89d16077-0639-40c8-a550-ded1c52d3d55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "110aa6bc-225f-405a-af21-9f3456b8709f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51d61372-1e6f-49eb-9536-35ead8afbb64"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd576bef-0d55-4bec-8a50-fab505d60d7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb14eebc-8a8c-4231-bc1b-80b8e63e5cb6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "306ebb9d-7806-463d-93ad-c771c94aee15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6a8c0e8-42cd-4797-b625-9e683070a6ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a935575a-bf17-4171-a777-95f1660b57cc",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "18525d50-1927-415a-a706-bf0f6b5dad10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd1b3e01-b745-4788-b962-4d9b53fc8cc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23eb5243-f55b-446a-a72a-ff70b3a8d7b6"
            }
          }
        ]
      },
      {
        "id": "cf1afb7a-88bb-4c95-8ebe-87d98e2dc6a5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "99d9a2bf-d0a1-461f-a364-33f450ba7cb4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4acb2da6-f244-48fa-8170-a23dcc58e681",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1f30bd5d-9f4b-4ef8-8169-611a2eb93610",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce83534c-f26b-44a7-b480-c46eb4e94de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e9bf1d-179b-4f91-bab9-3ba1c3069afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f36a0d1-c3f6-4d5b-abcc-a8659020a1ad",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b095ce9-afb0-47b3-9857-9baca8372a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbaeded4-ac79-4c50-86d2-7f15ba6c32ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca35465-35f8-4948-b0cf-a6befdde35a2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e76449-8a7a-421b-8d31-0911884e75fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7e5d8a-d85e-4f11-877c-5eb5142dcb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d859743-c4c5-42d0-9178-aa6f1631d555",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0076384-af4f-4bb5-b667-6c6ee7105272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3bbd626-1f8c-4ab2-b349-c264cd9d2813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf27410b-0696-4cf5-9d63-54cebbac115e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b480b5a-b98d-440f-9787-1498e4b9450a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e242908f-5cb9-4e2c-914c-113158ffa6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03530786-041f-4657-9b7c-eff554c58d28",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101a3f2e-4c09-42e1-8925-81cbb6132a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3210a30-7926-426f-b00e-93c39a911130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7a7d39-dcfc-45df-ac73-90e15d903cd7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c750f112-14a1-4da8-8ad6-0a34cb6fe155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5cf73f-9ce7-429d-b595-64820f4bc510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1938ba-c956-48de-b866-259bc534a8bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cb8d9e-5d9c-4d76-a964-2821f812cc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63bf6b4-2317-48ec-81c0-f346157f4b66",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d35aba-d9b6-41ee-8daf-1f828da85c5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc81b14d-15a8-469b-939d-90d1202a7a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e94bdf-5c3b-41c3-93b6-c8e39ae3e6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a815e2b5-55c3-4263-98b7-fb0a7a1f47b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce41762-93e4-489c-ac01-2f8f63671355",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478d0038-19b2-49e3-b20a-0e62d65b83f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "415702e8-b042-4c62-9f36-95f7dbe2db55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f13a3d3-26c6-417f-bfce-84fe60999035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac72a53-9fbd-4370-a82c-6340e17d93dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4c3b1f-9074-40b9-9ce9-48a484da1cc1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9073e3-6cba-4589-be1e-aac45810c767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36186124-bd19-42b8-a208-d1a3f3c7c406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf23606e-7ad8-48a6-8c0b-82f845f62814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd54efe-b7a3-4488-865b-1a1612bcd7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99db31c0-372f-4a57-a9ba-ebb71fc81659",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e50c81d-6d51-4e1a-95d0-40cf1e9f48b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a622e2e2-ac37-44ba-b715-9022a33cb29b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156dce99-3a0f-4752-92cd-4f9f7c5725e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04268bc9-98f0-4653-bea3-ace9e8d63249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a55654-c2fd-440c-abe0-7d797112345b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e0486b-4d6a-45f1-8aef-66a7806de5ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f16b6b3-8672-4e01-96a5-a1e5a31340b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ea124e-b9db-4d58-9a46-3ae591dedde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a941b6e-7598-41e2-ba7b-eff994f97642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a89e40b-b9b6-4a63-a123-416834e3db5c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578c3a8c-17c6-4fb4-887f-08a6b8ed297d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2ac8fa0-65d3-4986-9bda-5fadc6e06567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "547fba2d-c3bd-4424-babf-2eca98079483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fa5ac6-e4ac-4b84-a9bc-599d3c13d807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660e79b4-f150-4362-a8e6-7b4a5dc0ef0e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0aa0e4b-f90b-4ef9-9e20-3d99177ad573",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cce6071-674e-4f9c-b615-cb7bb12b3923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5b2eb9-0651-47ff-9aae-c8dbbfb63fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c17da1-803b-4993-b5f8-ef4e4367077c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f8f02d-e68f-44de-9ec6-d92e15c4dc31",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37833cd-63c5-4b7f-b453-5515c62c6a38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2566289-f12a-450f-b579-fb90e2453522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4642c4d8-1965-488a-96ef-e3c4d46c12db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08beec9d-fb33-4d90-8568-19d91bf668dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a88224-4a61-415f-aecb-0afe27a0a8af",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941c5c6f-8152-4f3e-87d8-30bc1d1015fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f52de5c-09df-45cc-b80f-f12872371b20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25675ab-2762-416d-8d55-fa81f21ad3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af367c9a-9835-4baa-8b99-5233ae0bdd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09648d2-0af2-49c9-87f9-e0b1fcdbb985",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4469b90d-694c-4a6c-bd18-39968dcf3eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e54a5df-79be-44f2-9155-cb4454bb964b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "017c5962-5e33-4948-90eb-e2f61e2f9b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b653229f-79c8-4764-98e6-86304c598bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fa40d6-7f5b-488b-a348-c510fabbfe81",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad644ee5-c9a8-474a-94e9-47bba341abd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8791ea3-79cb-4275-a33f-89b549fad5c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b170cd-6415-4443-baf7-4185c91d7636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1aea9d-06a0-49f9-b367-2f6e447d78f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e507bb-092d-4c13-9285-7802855112b2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d520935e-2216-4eda-9f39-0d964500fb78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64800db-fdbe-4b0f-a106-7acc5dc5333b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af97d2f-536b-412d-8e31-7d6757a4acf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82e088d-c53d-4d4f-a505-6146e60ef3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e098a47e-4d3e-461f-a9e2-12cf40abb0f5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4955a2-cfc7-434c-8267-c6154bbb3add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b349b3-c332-408b-811c-eb7a1c06ebf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae2d367-b00f-4eee-8db6-9d4500fea003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4037ed8-ac45-425c-9584-13401c85bac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39441f9b-8820-4612-aef8-a2fa725f054c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2e4042-e388-4e94-82d1-a9d3d065ae88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c716606a-270b-44ca-be64-5565b24d82d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "984030e8-d13b-4a1d-9973-ab475072bbc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80607621-ee68-42ff-a5af-30d3149dd0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f61784e-fee1-4f69-a750-608eccdc5320",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6ff357-f814-4df1-8479-ce849009d2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab96ac2-df23-4c76-b8a0-131625614d22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3efac0-c50a-4d91-b539-f741a4bc4f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d49b089-4208-45c4-8c4c-f43e3b41dc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6455749-240f-424a-a2c2-6fc377456230",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126fd0ff-4bdc-4958-b72f-fadf1196851d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74257c6-a3dc-4a98-a194-923e076cfcef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b34f79-7528-4719-894c-25429bb7f632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4817d0d5-1304-45c0-8ed0-ad62f978b213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec06f52-e778-4649-8fbf-ea17c7da96f1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7acd3c9-bcb8-4e9c-b999-6703e4fd0e2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce08df70-dad8-4c88-9a94-8c94f8fdd8c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "080ed800-1eef-415e-88cf-2ded69f88adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b512082-bcec-4b1a-8736-222dd22e217b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76ded4a-8702-442b-923c-51869235dcb0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc8ba0c-9ca4-4979-9bda-aac572ce285b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df3d4e16-816a-445d-876b-11db13a5f721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "672e0cd8-0d10-491b-9ec2-7b936008efb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495d5179-6c3f-49d3-8a87-a204df98b6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed904b0-356d-4e6d-b648-34e9ef410896",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b43d50-6751-4ab2-9337-efc23fdf2edc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "963feb7b-cbdc-4770-8bf0-26ea7f8e9ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bac6f32-9da4-4fa0-a09a-2404f448b516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b7d41c-d159-4206-9eeb-29d2e4c4b0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50628f2a-5bd6-4b34-9d89-dcc73f197502",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2a9aa6-c2ef-46a6-9397-892f6e9faf3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "407be250-9019-49c5-93f3-3389ff1c8dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cad3cfc-36da-4827-a293-b33c1cd32e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5f648a-f15a-4337-858a-6d5b85c408cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10972481-1d73-4e3f-a341-7434997b99bb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6831620-30a5-4a4a-b3cb-82367948955a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8a2eaf-64fb-4a85-bf88-e6e576ca26af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5797ced-13e0-4d65-b56b-772612fe7548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164a5f77-dde2-412b-9117-e353819f145b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae9bf5b-9a45-4b99-b900-df426e716711",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee140de-1485-4c75-b686-bb86dc15a1d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d46c672-7223-4eec-8a03-9ce894c6cfca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9dc1c0-caeb-4124-841d-713a6b5d5576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3874b2-ecef-47e7-a993-4209746eb05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ee64aa-e362-4a35-829a-625be2ef6473",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06123cda-a509-427e-a443-7d6731431e90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51a75bf4-4678-476b-b3b7-d9279204ff91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45c7fbb-f666-4dc1-827e-d164761f9863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5942ae4-c48e-4cf8-beb0-1cadfe9c0874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691c1fb5-5103-4594-8eee-41828ba935b4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f4c8d9-812b-4b2a-8673-8e62bcb9cc13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4dc4cc6-175b-4a37-87c4-3af6ca51b197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2209e101-a230-4593-8cba-073dd82392cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afff47c1-5bcd-4f50-a792-51cedf283d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fab1d36-4e30-40f8-985c-f8ecf53ca1bf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca3b6f7-6594-4d14-8f2b-111044879f1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af1f7c82-373b-4372-8a03-edc14e744fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4897fda-c330-41f8-8a14-c7141842b9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7958afda-da79-4d1a-99b0-7051caf2e70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5185a015-b60b-4920-92d0-39ee5335d01b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0574822-56e9-496e-bb2d-68ed48c6f35b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ee8c217-8071-4927-a531-74ec5287500c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43d6057-4441-4b8f-8370-fae6bec86984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e481293-ae54-4485-add3-c7ec69983164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6f895e-0dd3-4329-a3b6-b33e5ae551f2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae63700-1d5e-423d-b153-ea7f8e511373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94bf402b-16f1-40d5-9b7c-f4842bf74975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8c8d46-9180-411d-b09b-7120417048f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73aa0f9a-58bb-433d-95d4-53d6b0462550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b97b18-5f2c-43e2-bec6-c28f407ac4f6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300fcdc0-6826-4cdd-90e1-0492b3a800df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedabcaf-d8af-4a7b-92e7-cede5d39ec08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3383ed7c-d90e-4519-a8ae-594e35cba205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2fd242-dcbf-4a7a-9d76-6c682116c54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4477830-6c78-4ff8-a21f-cec89179cce5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff79842-025e-4b7e-a6d2-ecd3eafeacf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed69235-76c2-4aec-8999-a8bae49f2383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4514f41f-3d0e-4de1-a913-a958f0aa169f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0396c57e-b91b-4e18-947c-0067dd1a3d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9539f6-e433-4b5c-8dfe-38c5ad3a21cb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b3d195-f24b-4c00-9e8a-cb04f55c434d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0310f3-a7e5-4f9a-a53c-b01b3a444e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63dc27b6-3435-4c97-bed8-a8e1a416dde8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9cd376-a67f-4dd0-b506-9a71e83e2468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3b2e4f-9025-4bd0-a338-0fbfea51eb52",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a50592-5577-4274-a8a2-2f4c7fdb4fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5040660-8032-4eaf-9805-5a920936f993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9eae4d-fa90-4547-9659-81b8b67277c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5305fac-dc21-4262-956a-d14ac664d9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3752a9ca-c459-45fe-9a60-e894ed00fefd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d5265f-0989-4f5a-9f49-439fd4c9a463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3d5237-8145-4b88-9e24-ded3f9736e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d8b98b-cfee-478b-9e84-98797f8a5484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a82219f-ff31-4ee4-beb5-854893d588da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5263fba-8812-435f-a9b2-dafca8731ecf",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9af89e-f146-40be-8b5f-340717e5510d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b89244-6839-486a-9c12-6364212d3169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5026d240-be54-4852-acba-a99754a3d3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37891600-f799-4ab3-b121-6d26e8361371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ef16e7-8133-4b71-9b82-ab0ab65715d8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46dbb1b7-94a0-4210-9d7c-b857e20ce18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd11582c-4871-4952-9b8d-1619715df34e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0666fc-f53f-48f1-8e8d-032284a2a214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214685e7-8f42-4e94-a0d5-1c8179e94425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4ff396-acf7-4956-b1fb-caebb5df9e0a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0605f529-bc6c-465a-99dc-7c9630fca45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a91deb-ff7b-4502-9e5d-c2730127b69c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d45a662-51a7-4190-8992-60b68a03522e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a54982-a56f-4037-ac9d-59c44e6996a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a898a1-6b05-478b-b4b9-54b0e979bc8c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd61029-2cac-4ac5-b8f0-94ab873edbe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54a7aec-1538-40d2-a210-d08ed3a1690f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "255fef12-63bf-4e04-866d-f5e0b417282a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724a0fec-1aaa-4d76-8acd-2ff8c7ad9425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4e6622-87e0-42ec-80e5-8865ba5dfccb",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1418722-dee1-47d2-8536-2c09d983630c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0c27d6-b8dc-4d99-afe4-19115aa8bf31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83becfec-a69b-4abd-8133-0e0fd24139ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab413aa-5ec9-4031-a8d6-643e7b44fd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbdcbed-cab9-4b11-8e0d-f8a7d526fb60",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee93c8a-cad4-4ae1-98de-0263c0e23bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4501bff1-98b1-47aa-8158-fe81e924911d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14944214-256d-47b3-a287-c3190bb9e476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcda11c8-eb0e-415a-bd1f-890944f60339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561632d3-d767-434f-b00f-18c9dca0bc7c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fec8337-2f82-41ea-895b-b0598f7eb4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb25297c-ec53-418b-8354-5f35e0d31e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798b5f1c-e4d6-492f-8c31-49306604bbe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e4b0c0-c43f-4cfe-810c-f0351fdda140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f9b8ac-fc54-4ef0-93c3-6b4378ea4077",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba793ede-b68d-4608-b6fa-fea27fc0df19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2618642-2fe3-45ab-b98d-69f7d6911b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271ecb0d-973e-4a57-a68f-36cde9f6aad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e729f0a1-deb0-4030-ae07-86f0dcafef11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f96b2a0-fc2b-44b7-a82c-5a377cc4a0e0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ffc41a-7744-4925-b68d-e1cc315bd929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dde0f4a-be97-47ab-828f-840987626d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995f3508-8118-44dd-961e-479075ca5058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5ed0f5-f338-4e6a-95a1-b6a430b0391b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9e9c1d-2287-4aef-abc0-71c2587682e6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36bcfb6-be1e-464c-8055-854a4009fae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd0e88f-9294-475c-8d54-a040e0c77664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab32a2f-7328-4a11-9cd4-00acfa5e435e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9649dc-c74a-404c-a8db-3277557a4398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58dbaf35-005e-4acd-a634-c1e7241e8e21",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549301c9-c75b-4e5a-8ad1-1b1632bb971a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61371aad-2e17-4cdf-91f8-7c7242b742fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7dc207b-0f27-4bde-81cb-3857e2a62e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd84ad0-0b65-435f-8b6c-a688d428fe70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3054e34-3341-4763-a954-31adf2701a4d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d53aba-c23f-43a5-8d5f-f2fb281837c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56f844e-2f17-40dd-8998-7fce42d93e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "039c5e42-1deb-4d7c-92c3-4c345c3e1e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2e0cc4-ccc1-4bd6-867b-423ca2eeb731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c613bc5-9ddf-40c7-bad9-8973e93ceb3f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3759a989-d6ac-4014-b6ea-eb8b495031b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8046e7-858e-457b-946a-616e13d58931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee39d8e-661a-4804-b344-815ab1725ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc1ca13-6614-4020-95e5-67f4761959d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6bf4d6-e6f7-40b1-b9cc-f5aff0094d2a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fded5ba-379d-4189-a7ff-7b3a7cf24d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3e669a-cf0d-4e9b-b9c9-cc249f9600c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c2ce03-6af9-441f-bf2c-444f9543d3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56695d9-7d90-48e4-bf39-24b3ccc28434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabb5493-69be-41c2-a562-0eca5641d977",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f8b137-b538-4f32-a474-d0a7caf75c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138ae259-d72b-4a64-9cab-c778cc22684b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabd0624-d259-4483-8107-b3162832ab0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3d459e-35c0-4aaf-bfb6-849f21c93d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a20de17-48c6-4212-97e0-d4946ae3c539",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f758e149-0702-49d7-a08b-6ae2c96c04e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f63ef3-2ec8-4165-8d6f-127a2045ffb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e98c736-c7e8-467d-bc67-8338a44b46aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e8f1ab-ddae-4111-82e6-99a030676802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90f9bcd-3d71-4a66-822e-00fa22d6a27f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427c1fb1-d9f3-4a90-baa1-d2cf2c7f0270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4854527-4404-4dfb-832e-5d54f9c2b7d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541059a4-f8d5-4cfb-a7ea-0e662580aee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4549eb-cb3a-48ef-b11b-ec0611db784d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e617fb20-3dd4-4214-b4dd-135376d7668d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0852b8b7-d4bf-406c-8448-a69f334c63c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6cf12e-2516-410b-84d4-b0ebb0b0bb91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af6ee92-cc0b-46b6-9349-ef1b37e452aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717e0cc6-7219-4d72-ace6-f42e126f6ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9af2ff9-77e8-401a-a5e9-c3a86b955872",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257da180-c535-4df7-82ec-619064331606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea366097-0cf7-4445-ae31-30b97418f546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78046b0-385c-419c-967b-3dfe4f9c372a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a90c95-30c0-426e-8046-27ce94bf675f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7bcb1d-463d-40d7-a03b-198220aa3a5e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99d2a9f-ab61-4c05-91e5-9fc10f9f8461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d1593d-33f2-4a92-8250-de5d4e00f788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5278e5-27b2-4b16-9e4d-8b9c07115fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f87da32-be81-4d33-87b1-0fa0c9cafce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb7c353-7fda-47c5-b250-c1486e7ded42",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc0fe16-aef5-40dc-ad7c-cb5449a31006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16218d2-428f-4a51-ab00-7783770c6e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdbbdb1-1b8a-4cc7-8941-86e902df805e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d335b8a9-057c-4458-ab68-ae73834a8683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4242863b-3c1c-4bad-9d50-0d16b02c087e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed203a7-5605-47b6-acb9-08836d4ff8da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06763aa-a479-4565-a23e-b6f13b31bfb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e459f90-3383-47fd-a711-d1db9e7337ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "210a9da3-20cf-4f3a-b266-b0ebeb87c7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08c45ca-2a2c-4f12-8bc5-933154791760",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1068511-ce82-4185-9918-9f1c84667fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f52ff33-dab4-41e8-8718-ca262cf23716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d3c734-fd58-4330-8ab0-57e627e9c2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2868f2-df74-4f27-a92c-437914365dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c495ac-21ec-4a83-a588-0905001d2570",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94211afe-2d23-4313-85f3-264184577479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db208dee-229f-40be-b8cb-a2140c82601c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f782c2d-2ccb-418c-bb43-ffcbb04197d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d291646-22b3-4153-8f68-62cf2fc1d094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48295787-c4e3-4c3b-82b8-87b6eb12522b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c92f785-8a94-4097-a746-e816e95a0233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ad5781-eaf6-41e0-8dc2-6d38508ec94a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6178b80-9c96-4f35-bb93-d8a8f7bba58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50df37c8-e89c-4ef9-ae65-fda9fea96a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cc4eaf-55cd-4dd5-867e-92d13aa3a65e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad1986d-0d09-499c-a858-88cee2aee7dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "881339f1-6f07-46b8-845e-db66e1b77b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cc7016-b6a5-46aa-8126-6f8c6cb7c334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad75f5e-f994-4a69-8968-fbd100391235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a29d981-70a0-4ffd-9f68-9ca7455af86f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17b6e1d-8333-45cf-9fa2-060763fc5dfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb3fd6ac-d686-4ae0-b98e-7b295b90b270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df82b93-20e4-43de-b9f4-1a49a6a7500a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b1b9c8-fe0d-48a5-8be6-ab883d4fa9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7372152-186c-49c8-8dd1-3934daadca68",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502b308a-79c3-4135-80e9-513d3261b899",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "464b4cdc-7d41-4d9f-95bb-e2ea915ab9ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e62a1de-50e9-4b7f-bab2-d88aaf993860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d7d14e-7cd0-462c-aa21-3f96bcd46675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c390c2-a505-4346-8e6d-ef2648b87332",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6697650f-dcbb-4acb-8b50-eae3f1f66028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25b7c552-5720-423c-9fba-e744e8b7ea7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cba7d0a-457b-411b-ab67-1730ac5aba05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be751678-32c5-4770-af2b-ea2497bb314d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d89c7e-ddce-439d-a45b-bbc861b35a9c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41217d4-8337-492a-a702-4a6b7b50c695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "922dd006-5b0e-4a18-9218-7f26af0146a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39c0332-0ca7-4abd-b4a6-749290aaae78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3ec73c-1ac6-4d54-a406-e87ba9f521c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7827c7dd-992e-4866-b547-7b25e56f272f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2851b03-4c22-419e-9007-f5c16c56011c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0fbbb47-4b96-4150-a5c9-d1464a02d624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9570636d-971d-4d28-a606-5d96dd988f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b1c2db-95b4-46da-9fb0-e823dbc87b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae71494-1919-4bbe-897e-e170fac7ece2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5637944e-2cab-4bea-8f17-c6650be3eb6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c0bbd22-9d8a-49a1-9ac2-abaa4afd59ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21526724-0033-4db0-bba3-bb06c9578a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d75842-aa9a-474e-b31f-4fd854e44897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d3d599-311d-42e4-a1e9-d34edfc1393a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b225b2a-21ae-43db-b8b8-13f16fb6bc92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ee70482-8e33-44ee-97d7-6b365d32c8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9c6b1c-17b7-40cb-8f64-35580dd7216f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c57526-1f55-4b4b-aa2f-eb6c39cd653c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493474a0-7770-420c-849d-9626cb5d6029",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e631b9-7ecd-4f9c-82b0-ac3d831f75ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce22c38a-623b-480e-b7ab-127cd73c572e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2274ee1-e5c2-4332-b49e-5e20fb3d6fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "542292bd-8157-4092-b3c6-c4eec1a14935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e51322-c195-4a54-9c54-fba174c47ef7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cefc62-2968-479c-a85b-19d65b53b77c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9f4d513-fe67-4c38-a8b6-fbaaadf3266f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1bd83b-8ead-4456-844b-cff50d1a8619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63777673-0ee3-410e-b0ca-a1d66ebf0df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefec35c-e706-48df-a3b6-112f73458bea",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3511b01f-0cb4-47b1-8490-1cbf1ce04768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c900a1ea-a8a6-4075-b1f7-6d5bcdbbc372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6da2708-76eb-4a06-9ed2-e1192c6feb06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0de4b46-84b9-4981-93e1-d4666170812f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7cafa3e-498a-4f78-ba3f-7055b67bfde8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f52f12-d04f-4187-b0f5-06e11b158356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0e352a6-26e2-4472-8062-70a5de798ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "659ebe83-8582-4c7f-86e3-32d367c82b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac47bb1c-e495-4018-b4c2-7d46a1fd3c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef13042c-bc03-45f4-a475-eafda50e7900",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233d330e-04b8-45cb-a60f-d1d34da8f9dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07eeff76-da64-410c-9cff-a6ee6553abd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "306304a9-3776-44f4-a324-e1ccf4394de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64113c35-6dad-453d-a0bd-5556055a8291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15b093b-15c1-4db1-bc49-b82b6ec4b265",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c968d8f-b37b-4a31-829c-903178d51b48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fab9109-e95b-46a4-8c92-63daa5b6a125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82f481e-8ccb-441e-b8f0-bb0e219b9990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3faca2e-01fa-484a-ac20-5c5aeb5b62cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567a84fb-7931-4830-8646-5b93f1b136ec",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8379b6-fd15-4d8b-abd5-e71645f0d102",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6742b95e-c7a0-4cbf-99c7-776ac6f4214c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8581bb-5139-4818-bbff-69bcd8a4aea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a715ca-0549-4328-a5cc-4b8534d79363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67778b7e-53e0-47c8-a9f6-d17b57983c73",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ee4ae3-359e-44b4-a824-3af95b431e40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cae8a18-7c11-4c7f-9e5f-f51737af74b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee24aa3-b78e-4df1-9844-2376a1c39950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cdcb221-6168-43d0-ac93-67c28417987b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215b5630-d639-47c2-a9bb-23515790d051",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77ba8d0-337f-4bd4-9cb1-4d87c28652d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4216b21-71f7-46e9-b9d2-97415c598a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e5facb-a1eb-4c6d-ac02-132609e9b342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa69d806-632d-40a6-9fa3-342ea89619a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28153cf9-e9f5-45b0-9a94-54863c6171ae",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387fc957-5cc9-4908-ba27-37e3ee6a4136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e244977-a1c3-49f8-9dda-4e2f4e6f471d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e95131-c34a-4022-8056-a9476edd45f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256a2d63-6d17-4b74-84af-214cefe28dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4390cdfe-9d28-4af1-9352-445d5d731419",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ef44fb-95f8-45bc-a19a-a42cdfcc2070",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aac11319-2031-40cc-a504-267331c7b98f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfc262c-dd1f-4d4e-b384-0fbda76e96fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c503d0-fcff-4601-8382-d3089cc7ebcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0d5603-2ae3-46c4-aa86-0595805b579b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a926ecbb-e1f9-42a4-94d3-aff81a00fa62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa6d7eab-76cb-4a3f-b965-7d89f019b721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b27d9b-d07c-4164-8501-2924fdd52ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df47d2e6-cf2c-44b1-81d3-bcf0e035be9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f622fc-25c9-456d-866b-1e2d630c846a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb29011-8069-4307-8498-b8856816f5c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82c945ed-86f9-45d2-92a5-17f87fd8d6ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dde2aa6-822d-44c8-9450-b9ca0d94adbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15ce12b-7a6b-4f03-badd-3e8138fae3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e27b1ad-57bb-4162-9eac-e72714affb98",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2490104c-2984-4097-994c-7e05aed4725e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "519c2e12-cf97-4d6e-b359-aee85edc7961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "135ec1ab-98e3-45bb-8411-ca99acf82806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d959eb-d622-4694-95b0-03acb56e56a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7580ee31-039d-4289-8b74-34fa03d24729",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aded04e-c377-413e-8686-421ffd9211ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e2cc2dd-f1c2-46de-ba22-89b09f6f0166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c48dab0-dc4a-44c4-939f-d36f422939f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df483037-0ac6-4f83-b033-5c6caafd270d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a432e5a7-8469-48f6-9fbe-dfe3a6819c41",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df4b968-9058-4649-8f8c-ad9afb351378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f49795ea-84d2-4237-9605-22681cd4cb63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba9d195-5e7e-4c65-895a-bbc82f8edd8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37982bf8-732b-49b4-b6f7-b29f81beb2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c78e8cc-f90a-46a8-ab9c-4770007af2fa",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82249b8-5a85-45d8-9130-63a15c466bb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1046f3ff-cb99-4cae-ae11-c3d68d3342ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "345fb14f-05fa-4021-a945-f4178cf798a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb6cc23-6dc7-4164-8577-733ada9b659f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee4763c-fdb8-4824-ade4-75706a5ca9ec",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4bd119-4f0f-4af7-8fad-a82630a4bdc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b7a57c4-a309-443a-94c4-d43899940bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d15530a-08fc-47e8-9bf7-1dd2a6c2023a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3d6e6d-9e03-419e-b119-36d0fc8786fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e57b67-ab82-4cd0-914d-d6fb76765235",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38904a7-f03f-410f-9553-4eb4d32a83ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2272dd67-d42d-47df-b9f4-8349edd820de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dd55d9-0eb2-41bf-9e0c-304940a29816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b57d66-1f41-4e4b-b3ff-acad1f6ceb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a440fa-d98c-4fbf-868e-440276847a1c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d041410-4034-464e-94f1-2b1eb4351433",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c574f14-48b1-4398-96ba-60f966177c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b72cd26-3b55-4129-81b7-058af290aca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc728e9-c743-4aa2-a689-3d436f65141a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918e97d8-9962-449f-a403-12c4749403bf",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acca5b23-aced-476b-b3f5-bc517208d7bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f9629cf-6912-445f-a46a-9e0700de50b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a84f32-6fbe-46a7-b98c-396fe3a90a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91699e4a-a1ed-4ad4-a580-5dfbef1a9693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988e994f-f673-4bcf-b2a0-3e6f6775ecca",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7140f87a-f29f-4ca9-b4c0-10581f38a4eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9595f0ef-c6c3-4b35-8338-6f7cc14edb0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab6088a-9d10-4bb9-991c-0643fbb5e108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c42e52d-d7d6-4fa4-ac79-064ab9cb88cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aedd11f-4a2a-4120-87bf-01a13b33176d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39dbe4a-780c-4acb-be9a-2543efadfa61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2810dde4-9555-4c22-a51f-0e51fbb7f10c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7bede1-1060-4746-9e8d-71e6ec57930e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8123f259-cdbe-4dcf-ac05-47cf1da0d35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e155fa16-a06c-4921-b20a-8bdd2023e591",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd7cb15-468a-4378-ac4a-afef92e81fca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3bc18bc-39f0-43e7-8712-02b1293a8a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10cfbdc-ddd3-4adc-b710-f04626f939e3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0931f480-ef88-43c8-bb53-6a5e7010f5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19255270-293f-489b-9237-6dae6f8bab6b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fbf9d1-f495-410a-b8a1-32bf85c49940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31d03495-16a8-48d1-9db0-6657fcdc50fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8e8547-bc1a-49c8-8237-0e2e0e15d800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be035b7-839a-4141-a016-a9850a964330"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f441016b-6f31-407f-858a-08750076965d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "890cb2b3-1a17-4132-95c7-f43a50537f2c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09f2a355-9e38-4b0d-8674-68d1613eb145",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebaab149-81ff-4b1e-8f94-15feb5b4f3a7"
                    }
                  }
                ]
              },
              {
                "id": "4e15e899-6fa5-4f8b-afbb-7869e2765503",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12dbbbcf-252b-4451-b672-c4c7b130be93",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22a0e73-85dd-46da-a7fa-103711c9bc16",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1480af90-ffbb-474b-9349-b59e42fbf141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8e8111-4bbd-4320-b8fb-d7ec1620feb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29a9216e-2c1e-4002-a9f1-748d62dc2b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0899bc2a-fd38-4d0e-945c-e2f28331bde2",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa54dbdc-cb04-4369-a708-413809136e07",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b43fd81b-d457-4835-a14b-be4b9449f849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6105b418-fd9b-4d85-a9f5-1c68b0455cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d33a5909-500f-48c2-a666-e71e8239dd3a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4f88d60-5c1c-4365-b7ed-9fd6e52364b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9417de99-d3fd-445d-be44-c6a92ab61cf8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c453a41-be4c-49de-8c02-0bb8cbb5e6c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af750e04-56fd-423e-ba9f-4a4081bbb882"
                    }
                  }
                ]
              },
              {
                "id": "49c80add-ec5c-4ed3-aec6-49dd115ca960",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "75b8334a-3b55-4742-bba4-c25d5bdc188e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4071a899-5488-43c1-b29a-e937dec6e0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7b5ae353-2795-4d37-a5be-76e5e01f5b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c782001e-d195-4290-b8f9-c5621ff48aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db20a3d8-647e-4788-abaf-03afd2709b32"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ef3bf713-3a87-45a9-8c53-ba5e97000389",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d3a3839d-344f-429f-8c64-dbe34269aa5c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b383aef3-59a0-4fdc-8279-43f06fe6020a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b78c9db6-4aa2-4582-b50b-f0a62fcc5faa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1eefabc1-38a0-40a7-a817-f5692bcc82bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48e25401-3076-49c7-a596-f4047a005528"
                    }
                  }
                ]
              },
              {
                "id": "86275140-e362-47c9-9ebf-83a45956dcb6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ae1f171-34dd-471d-b4ad-ae24d334aced",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d70c54a6-ae68-4ba8-a2af-bf95a9c13044"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60aab26b-e621-4156-9755-0a80ddc2e943",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "165283a6-7d9f-477d-a847-45dbf49fad8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a43f825-f263-4554-ace3-540d3fd8f532",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a5065f1d-0fb7-44fc-b5f9-cda57953db36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48a7fe66-3c5b-48a2-b60c-7f9fd4eb7ade",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6e5bda55-1f31-46bf-9ff6-096385362d83"
            }
          }
        ]
      },
      {
        "id": "40d16d32-7263-403d-87c8-26356b79adf1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9a98e863-c4d9-44dc-8718-91a4fdcd0939",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcfe0f02-79c7-4ac4-aa62-34528af67a0a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d1942f7-d25f-40bd-ad57-c21f78509e69",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd21821-27c5-4b53-b131-235800aef30a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a3f131f4-1d6e-4f79-b55c-5e173804ac08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb56d7e-cbea-4977-ab60-da19f02f5a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d10e4f1-1538-4510-a132-66c49b90eb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8f2e13-739d-40c5-8cc9-5f5cc913ea34",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246e3bbf-84ab-4a6d-916b-c280244ed988",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cae27ae5-08f1-4197-ab06-5b36ca0495c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b07e6a7-ea91-4ca5-be71-cb73ef29b69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3c60525-a226-4437-aab8-d7cad5fe2630"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8240ee42-56bd-4798-a8f2-5f5950d1a5cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1a8e90d-0777-4a85-8539-f2de554474b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9706a9e7-f31f-429d-bd34-de9cd8bf176e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "309efe62-0f54-493f-badd-7e0d05a9ec74"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "727e6252-c8d6-40e8-9897-e41e6b76c3e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c26006c6-e022-4108-9b2b-6eff58fd2d05"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74670023-d3cf-48b4-84da-80fcf5131416",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "788d107d-5a17-4a8a-aaf5-ef10ef8e6dfd"
            }
          }
        ]
      },
      {
        "id": "9242d13a-836d-462a-80ff-b1c541fb040a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "160fc69d-0d60-443c-8291-a60ebae55aa9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e45e966-ec7a-4513-a7fe-d951629b4872",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25fb1c8c-85d1-4131-8d92-c3348373dd1c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a243542-a87e-44e9-889b-c18884f62439",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e902258e-2191-4ec9-9755-ef5a7cf636b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36dc5c8-6d7f-4d91-a178-a8f607781599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49b1bc58-e040-4de8-abdd-ca18cd372140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7326600d-8118-4439-803b-df52d44a0e73",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adcf5d5-58b5-4935-a43c-8e0265a428d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8dda17-837f-4185-a8be-8e51fe47cae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3056f0ac-4660-488f-a00a-f2c4ad130b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bff260e-f81d-47ff-9a32-538e987900dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44389c3b-95d5-43bd-9277-6047d4d2b497",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "669402f0-b445-423b-944c-ef3e61204c99"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcf80bcd-4686-49b7-a58e-d1c59277f107",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f8e6185-acba-4fe9-8b11-778f61177c5a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b978199-ab96-46ff-82f9-6a77d59c1328",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c43f8070-c417-4009-be03-37fe0d38c692"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cfc63fa5-e383-4b4f-97f5-ca879d2cc972",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c7141a1-9916-4e70-b0a3-f1c7760dbfcf"
            }
          }
        ]
      },
      {
        "id": "38ba3cd5-e08d-465d-82e2-d3acc7f1b394",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0f503faa-6783-4a7b-a68c-50f19f1e4e75",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6173d89c-1d64-49e1-9642-2779f963b257",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0fcd3e42-a88b-445c-a660-446ec00e5511",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f46bad-5141-42c2-ab37-6bf259aaac74",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cf67944-066a-49c5-933b-6a75fdbba07c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bce6a1-b40c-4586-bcb6-8f49cc21ddb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2080593c-8e7a-40e8-a98b-ec4909bbf8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532ce6ec-daf5-42d7-9f63-9b3ffa98ed10",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedab4da-e3f5-49b8-a069-c56d206de6f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bf571486-89c2-4ff8-9f85-d3de3797f085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33eb5d1b-a520-43e8-9c4b-a52959ea9fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16630676-fba5-419f-a159-595221ebb9b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a76ac284-0ba2-42e4-9010-95dc57660a51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c96b084-595e-426e-9f41-ce9870414a08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42de62a2-c8f6-4dce-ad32-c8cbbc8bf441",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5abc4e6-40f9-4052-9f59-a614fa90e294"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "876ddd2d-4970-45fa-8375-75d2cd2297eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6e91b720-2cd3-442f-8be5-99e2435eb5d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "895e5c92-93e3-4b89-ae0b-6b03da260df2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01839a7f-e525-4579-9bc8-2b964989fdfa"
            }
          }
        ]
      },
      {
        "id": "2922386f-ad56-4cb5-8a03-1ecd7dccf554",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc551e7e-b3c1-4542-8122-67f986b298e2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04682585-926f-48b0-b08a-b0b43ae87c04",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a5f1d9d3-c6fd-488c-a718-b1f1cddbbcf0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a923bfc-6929-4b25-b344-52a51d537fce",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5842f71-8338-4990-b3a5-0307411d2d81",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.949999999999998,
      "responseMin": 3,
      "responseMax": 419,
      "responseSd": 43.50262370513721,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680482232047,
      "completed": 1680482246343
    },
    "executions": [
      {
        "id": "c6fa5468-6fa9-4e2c-ad16-c9c362ef42f3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f3a6b7c8-2f41-4893-9775-40704eaf3045",
          "httpRequestId": "c6f1776f-5572-47ed-b3b9-4184d4bece6f"
        },
        "item": {
          "id": "c6fa5468-6fa9-4e2c-ad16-c9c362ef42f3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "aead4edb-d0d9-484a-85d6-071997afb333",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "71674703-f237-41a9-a99f-196866c403e4",
        "cursor": {
          "ref": "08af142f-35a5-4bf8-b9f0-7788ce13ecd6",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "952fb305-c944-4ffc-a452-f8793296e934"
        },
        "item": {
          "id": "71674703-f237-41a9-a99f-196866c403e4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e4995460-5fa0-4af8-babd-1ceef00542a3",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "fdb2be00-03dc-44c1-a844-11f4de3bb23c",
        "cursor": {
          "ref": "648948ff-0c71-4395-9e03-90c0e1663c18",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f510a1c1-19fe-4009-8d38-f944ffbc709a"
        },
        "item": {
          "id": "fdb2be00-03dc-44c1-a844-11f4de3bb23c",
          "name": "did_json"
        },
        "response": {
          "id": "415309a7-ad9e-4596-bd82-33e8ef9e54a2",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d0b913-6d06-47a5-a042-aefa488223db",
        "cursor": {
          "ref": "e30c09de-0903-4667-99de-c7fb4372b773",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7feb266d-8dd3-4bdd-ace9-03a120b0bd72"
        },
        "item": {
          "id": "87d0b913-6d06-47a5-a042-aefa488223db",
          "name": "did:invalid"
        },
        "response": {
          "id": "c702cc0c-dded-46da-b76d-fb27f5269346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d0b913-6d06-47a5-a042-aefa488223db",
        "cursor": {
          "ref": "e30c09de-0903-4667-99de-c7fb4372b773",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7feb266d-8dd3-4bdd-ace9-03a120b0bd72"
        },
        "item": {
          "id": "87d0b913-6d06-47a5-a042-aefa488223db",
          "name": "did:invalid"
        },
        "response": {
          "id": "c702cc0c-dded-46da-b76d-fb27f5269346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e71753-ff71-4ce8-a6e1-68e8239371a9",
        "cursor": {
          "ref": "f4cfcabe-21ab-4ead-a4e3-de3d957f519e",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "01c13387-65cd-49a8-9011-5c9735f99e9e"
        },
        "item": {
          "id": "16e71753-ff71-4ce8-a6e1-68e8239371a9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2919d147-0f04-447f-b5df-bc2742d9266e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1259e9-15d2-4836-a97c-0c52298b5b7f",
        "cursor": {
          "ref": "99e29bb6-0928-4aca-9429-9c9998c10f70",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fb557bde-f698-49f0-8e00-44338ffa4be6"
        },
        "item": {
          "id": "3e1259e9-15d2-4836-a97c-0c52298b5b7f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ac9f765a-3d90-4361-9d49-ccae505ac52c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca45de85-0b62-46d2-9a10-5417cb6f4948",
        "cursor": {
          "ref": "240abfb9-1285-4f5b-9bf7-3a1765167ed5",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6686002a-f92b-451a-995a-55030cd0d6bf"
        },
        "item": {
          "id": "ca45de85-0b62-46d2-9a10-5417cb6f4948",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3f6a031f-fe8f-4acd-9fbb-4f547fca20f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74aedf91-254c-4b2e-98e0-77bd6c47610d",
        "cursor": {
          "ref": "3fee75e2-fff2-4bb6-8342-b1ef454d8456",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "095e3328-443b-4802-8708-e31082af9fd1"
        },
        "item": {
          "id": "74aedf91-254c-4b2e-98e0-77bd6c47610d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7cc66018-30cd-446e-a3fa-92904529606a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74aedf91-254c-4b2e-98e0-77bd6c47610d",
        "cursor": {
          "ref": "3fee75e2-fff2-4bb6-8342-b1ef454d8456",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "095e3328-443b-4802-8708-e31082af9fd1"
        },
        "item": {
          "id": "74aedf91-254c-4b2e-98e0-77bd6c47610d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7cc66018-30cd-446e-a3fa-92904529606a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929225a1-ead9-4b36-b50e-33d33bfb8f0b",
        "cursor": {
          "ref": "6831d79b-020b-437d-9c7e-f8f37b2d7bb5",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9495977f-fbdb-4ba5-8f89-76be4d19e200"
        },
        "item": {
          "id": "929225a1-ead9-4b36-b50e-33d33bfb8f0b",
          "name": "identifiers"
        },
        "response": {
          "id": "ed4b7ebd-18d1-49fa-a15b-b19cd61c6729",
          "status": "OK",
          "code": 200,
          "responseTime": 151,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da061ce-1eff-467e-8900-24302d80fff3",
        "cursor": {
          "ref": "25ea5035-1d39-45c7-984d-debd31d27767",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "786c5b5d-583d-4e8b-8c03-4c97d022c54a"
        },
        "item": {
          "id": "0da061ce-1eff-467e-8900-24302d80fff3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7e7c7a4d-8542-4f48-98e1-120e4825f0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da061ce-1eff-467e-8900-24302d80fff3",
        "cursor": {
          "ref": "25ea5035-1d39-45c7-984d-debd31d27767",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "786c5b5d-583d-4e8b-8c03-4c97d022c54a"
        },
        "item": {
          "id": "0da061ce-1eff-467e-8900-24302d80fff3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7e7c7a4d-8542-4f48-98e1-120e4825f0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fff975c-2ffe-447f-994e-be2ddcc6b2f5",
        "cursor": {
          "ref": "231f41da-f6fd-4aa7-bf6c-57c4856df068",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4157eacd-27a1-4d92-8122-943716c8e9c0"
        },
        "item": {
          "id": "2fff975c-2ffe-447f-994e-be2ddcc6b2f5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "447c080e-3390-4e5e-9682-d00f857457a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00f4965-3e30-4d44-808a-1c9056e3cc93",
        "cursor": {
          "ref": "f9183c94-53b9-4f54-85cd-df6f0fdaba59",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ce962432-1bca-4f65-b63c-a0f78f781f5d"
        },
        "item": {
          "id": "e00f4965-3e30-4d44-808a-1c9056e3cc93",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9de79d03-91c6-48ae-87b8-169542512111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77e4798-4fb5-4a1d-8802-3b7a3aea52be",
        "cursor": {
          "ref": "a4e1ef0f-7ac4-4446-98d6-b637c7cda273",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b0704e42-f36f-459c-a11c-16cc647814ce"
        },
        "item": {
          "id": "e77e4798-4fb5-4a1d-8802-3b7a3aea52be",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cf8d69f8-bc5b-461b-8645-ff979583b81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77dda78-8803-4b57-9e1d-98132fe92314",
        "cursor": {
          "ref": "485942cf-2ff7-4efc-8357-1c932e0a88f2",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7d74ea3f-004d-4ae6-b41c-b1bcbe5702f2"
        },
        "item": {
          "id": "c77dda78-8803-4b57-9e1d-98132fe92314",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6d575149-570e-4d04-bbe7-7f7d69d459fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a337d4-db7a-4b01-af53-882c6f2c5a30",
        "cursor": {
          "ref": "4ae869c4-b78f-40a9-a8cb-6e1611afb4b3",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "37492702-8324-4ba9-aee9-eff26d051e10"
        },
        "item": {
          "id": "30a337d4-db7a-4b01-af53-882c6f2c5a30",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4be1f7dc-7035-4418-b71a-3c685214acb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc08075-aba4-40ed-a9e5-7bc669a8932a",
        "cursor": {
          "ref": "87128705-a108-446a-91ba-7419a09b55fa",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f8043e61-cab3-4fcb-8e33-ef6af5aa0af9"
        },
        "item": {
          "id": "6bc08075-aba4-40ed-a9e5-7bc669a8932a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8e563081-2580-48fa-8ec1-237e411982fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419cc476-9626-4b52-bd2e-cbe75da64b02",
        "cursor": {
          "ref": "19007edb-145e-44a8-b344-bd79e3baec0c",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3601debe-0ce0-48a1-8312-7326252fbd9e"
        },
        "item": {
          "id": "419cc476-9626-4b52-bd2e-cbe75da64b02",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3d0df150-a9f7-4717-8609-a842c52d00f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632e8478-5916-4743-8342-fd8b1ddceed1",
        "cursor": {
          "ref": "43a32345-10ba-4a45-a54c-f2737dbfd6c5",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fbc4b620-d69c-494b-a187-77e530a88d8c"
        },
        "item": {
          "id": "632e8478-5916-4743-8342-fd8b1ddceed1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1035a21e-da0c-41ba-bd76-a6c9e2d32b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765881f9-475f-4384-9c63-b2305a421337",
        "cursor": {
          "ref": "ceef1bc6-8cf6-4f44-b31b-cf00acf297e7",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "40a20063-557f-4671-b559-051921ad26f0"
        },
        "item": {
          "id": "765881f9-475f-4384-9c63-b2305a421337",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "56a6c961-a514-47f2-992d-2c6ce0169c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcadada-0320-40db-b666-00a36804151d",
        "cursor": {
          "ref": "595eb198-a31d-4146-b835-27d7fe38304e",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4390bb38-3fc0-4f3e-82fe-3ccd76c98327"
        },
        "item": {
          "id": "cbcadada-0320-40db-b666-00a36804151d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "78acff02-507c-4655-844c-d0d4f5a9deea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73f10d7-8107-412e-92c3-e824d0719b92",
        "cursor": {
          "ref": "cffcb1c5-cbce-4811-9c84-fc5d8e443166",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cbceed7f-bd8b-4968-9d62-2d54435c1fb4"
        },
        "item": {
          "id": "b73f10d7-8107-412e-92c3-e824d0719b92",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f53030c0-36b2-457b-b225-a37cff6fb7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2d56df-53b0-4a62-84cf-5b3aa722efc5",
        "cursor": {
          "ref": "c7c1bed6-be78-4e6a-8f87-10d5fce88380",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "82f7e437-e763-4623-9c2c-bcef826bd49c"
        },
        "item": {
          "id": "fc2d56df-53b0-4a62-84cf-5b3aa722efc5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "08ba0bec-65c4-44d9-9d3d-9841c5bbe37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4be1c9-9bc2-4b9e-a3d7-b61bcc510059",
        "cursor": {
          "ref": "64a9385b-d799-48b7-a7b9-9aaa75afc7b1",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "eb86aca9-ab9f-4dee-aee5-00f06a2bc083"
        },
        "item": {
          "id": "ef4be1c9-9bc2-4b9e-a3d7-b61bcc510059",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d3d1e5cf-cd39-4acf-b4b3-8024f0cad2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4319c55e-ff15-4f69-82fb-f2ca72d4157a",
        "cursor": {
          "ref": "9a6e3258-f467-4119-b25f-b823943f8b2e",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2fd368b0-d42b-467e-a3c9-2dc3f22188d9"
        },
        "item": {
          "id": "4319c55e-ff15-4f69-82fb-f2ca72d4157a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a50de558-202e-4062-994a-97e0edb023f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a52b20-be01-4aa5-893d-e919de6fd1ce",
        "cursor": {
          "ref": "8c0be6d4-d5d8-481c-a7af-c3242a8976ab",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1fca78b1-22ca-4752-bfcd-6c174cc93226"
        },
        "item": {
          "id": "40a52b20-be01-4aa5-893d-e919de6fd1ce",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ffc84ceb-9c26-44d8-be7d-16d6437709f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324bdc73-a0f3-40e3-a8a2-840be3049637",
        "cursor": {
          "ref": "82d5e929-74a7-41d8-ae66-c06e0b380885",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5ce1f41f-1692-4e6e-9f2b-c34db79c0940"
        },
        "item": {
          "id": "324bdc73-a0f3-40e3-a8a2-840be3049637",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2d3fd66e-efde-45c8-bbd8-94fe1d74d4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46859af-0b94-44a7-b6cc-29d0f7a0e681",
        "cursor": {
          "ref": "a1d17bfb-64f7-464e-9dd1-a95cf2326089",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e7e3c82c-f06c-4da6-8ebb-62b467c7d53b"
        },
        "item": {
          "id": "c46859af-0b94-44a7-b6cc-29d0f7a0e681",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b452a396-f6f5-4bac-95be-0609a169c7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0054dd-32d5-477a-bca2-2e8805693db1",
        "cursor": {
          "ref": "29f83ca8-87e2-4f0b-9b7d-3a567da8d5dc",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "34df699f-aa50-4465-b533-2371e597ce72"
        },
        "item": {
          "id": "4d0054dd-32d5-477a-bca2-2e8805693db1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f56967c6-b89a-47a2-b820-893cbca0453b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00a8e72-1959-4aec-b488-52b3fd50a11a",
        "cursor": {
          "ref": "023a619b-b735-441a-955d-e432b9edb70d",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "71690879-5648-4c10-8a0d-6145d61027b3"
        },
        "item": {
          "id": "c00a8e72-1959-4aec-b488-52b3fd50a11a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3487d94f-0719-44f7-86a9-ca159c9e290d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846091d1-d1b7-4bd5-8dc7-2c2b7afc57d1",
        "cursor": {
          "ref": "6e8b3fe4-dfc3-4873-9699-30f4d97dabf2",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "577bc281-20e7-4958-aa9d-8d304dc4f4a4"
        },
        "item": {
          "id": "846091d1-d1b7-4bd5-8dc7-2c2b7afc57d1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "85deb01c-364a-4b90-af51-2cf684f91190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd2170e-816a-4fd6-94ca-a7189f71810b",
        "cursor": {
          "ref": "adb21b9e-37ca-4d63-a77d-36d064acbffc",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2acf9205-47d7-4056-9d0a-551c2b2ec42f"
        },
        "item": {
          "id": "3cd2170e-816a-4fd6-94ca-a7189f71810b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "78b653ff-8813-4da4-95a4-95becbe51cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a6b22b-c5ae-4ddb-862b-b1185e0a1ede",
        "cursor": {
          "ref": "9b812672-0a44-4e73-9e5a-6447ae9c8a3e",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b4b16a3b-c780-486a-a23b-ddbd08ae71a4"
        },
        "item": {
          "id": "e9a6b22b-c5ae-4ddb-862b-b1185e0a1ede",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0cff656f-12c6-4f09-936d-1dc097831431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7379e63c-061a-4da9-ba4f-53522501dbd7",
        "cursor": {
          "ref": "ab7275b3-ccda-46ea-bc4c-31f7c35ce83a",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a61025fd-4f54-4923-a7d0-efa230824655"
        },
        "item": {
          "id": "7379e63c-061a-4da9-ba4f-53522501dbd7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c6a0b925-75c0-4571-8bc7-2c4a445d5958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9dd402-8818-4fce-b672-7e57438c7ead",
        "cursor": {
          "ref": "5f375415-2518-433b-be02-05d09387f7ac",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c35eee1d-83c1-42ec-b1ea-9f636d7f9283"
        },
        "item": {
          "id": "bf9dd402-8818-4fce-b672-7e57438c7ead",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f920b604-9a6f-40a7-adbd-416dda9d0107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ae6761-f978-40c2-94be-4afc378b4062",
        "cursor": {
          "ref": "2c49e724-bfdd-4da8-8726-78d766728fed",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5b059812-6cd8-4924-b89e-d46c43f715d7"
        },
        "item": {
          "id": "74ae6761-f978-40c2-94be-4afc378b4062",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f6298abb-1ab8-47f9-b2c8-2cf369fd8b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f749a75-f006-4104-82be-19fd6ee886bf",
        "cursor": {
          "ref": "c8ba0fe0-e4fe-4755-91ac-07a2ba3971ed",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5329f5c7-6dff-4529-83c8-963631676b63"
        },
        "item": {
          "id": "6f749a75-f006-4104-82be-19fd6ee886bf",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "dc3aa2d7-beac-4949-988a-8d4158ed1622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6dfb0fb-036b-4537-8175-21da3d265461",
        "cursor": {
          "ref": "3b9d5213-65b8-4067-9343-e6820dc83029",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e158bc4d-cd8e-4ca9-815b-b1c233bcb547"
        },
        "item": {
          "id": "f6dfb0fb-036b-4537-8175-21da3d265461",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5019b39b-0371-4c49-ad83-31418cf1e109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b25118d-428d-4efe-802a-cc79c77dbd2a",
        "cursor": {
          "ref": "af8c119c-aba4-4353-992a-3b7dba32d199",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "692cda59-15f0-482b-94a5-891c8530e9f4"
        },
        "item": {
          "id": "1b25118d-428d-4efe-802a-cc79c77dbd2a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "27dae310-50b8-4cd0-b98e-c03c680fc717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e32cf7-8c59-4963-8eae-09500ced7cd6",
        "cursor": {
          "ref": "b4bb9b5d-5c91-4b9a-b22c-c548c9fd12fe",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4009b6f6-9f8e-4275-a9fa-dc08afc5dd76"
        },
        "item": {
          "id": "e4e32cf7-8c59-4963-8eae-09500ced7cd6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4f2dbef4-b207-4935-b912-a2340857e7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8d397e-4111-4763-8074-f2b04ebbdf87",
        "cursor": {
          "ref": "dc6021f7-b313-430a-81a0-6e681323ee06",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a7518856-35a2-4a7a-a905-177c2ade1691"
        },
        "item": {
          "id": "9f8d397e-4111-4763-8074-f2b04ebbdf87",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "46c0dab0-0864-4b53-b8a9-68c49f5220d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d97958-04a8-4987-92a2-f2e2cb12d009",
        "cursor": {
          "ref": "e2539c9c-52aa-4f7b-aa81-c5ab499b88fc",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7bdd9022-7458-4367-a146-48b188773a3f"
        },
        "item": {
          "id": "03d97958-04a8-4987-92a2-f2e2cb12d009",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3be77cde-6362-4be5-a461-db500004cb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8c0064-3f0f-409d-80a4-46b1d95c9335",
        "cursor": {
          "ref": "8e4d6239-7707-41d7-b480-9151d87c9e56",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "250e59d2-c52a-4d5a-9314-65597fcd6118"
        },
        "item": {
          "id": "6c8c0064-3f0f-409d-80a4-46b1d95c9335",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "646eea75-4bbb-4b38-835b-e2be3380763c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c4b43a-2621-479f-aba8-cacb08527dde",
        "cursor": {
          "ref": "80ff6a4b-8fca-4f45-8439-72634ae0b657",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2249fae9-ceea-4b0e-a25d-bf9a0257a838"
        },
        "item": {
          "id": "f2c4b43a-2621-479f-aba8-cacb08527dde",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4294051e-292e-42a3-8a2f-7a8248db2b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7c792b-7f0d-4051-b6b3-e5f4f70632e1",
        "cursor": {
          "ref": "4f592719-6085-4043-957a-f4f02b028411",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "38c50a72-4f2a-4eb7-a6cd-48ca0cc97291"
        },
        "item": {
          "id": "7d7c792b-7f0d-4051-b6b3-e5f4f70632e1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9021cc91-554e-4426-92fc-452f31e22bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8760000e-29d4-4a40-b9ca-e0ebe26fa096",
        "cursor": {
          "ref": "68907270-9ed3-4412-b48b-caf0d4eb934e",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f9d4ca6c-25d5-42b2-a128-68915fc660f5"
        },
        "item": {
          "id": "8760000e-29d4-4a40-b9ca-e0ebe26fa096",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "85a82ebe-eb89-4fba-a95f-edf78c940b3b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb695cc2-7d8c-4d5a-a7e0-947474f9420a",
        "cursor": {
          "ref": "e1e26321-f31a-4caa-b0fa-8f8162600800",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a7017caf-090e-47f1-8b3b-cc61b8728dad"
        },
        "item": {
          "id": "bb695cc2-7d8c-4d5a-a7e0-947474f9420a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "69454138-54ca-4c0c-991d-b81d3e5297bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c1cc43-53a1-4957-ad7e-de7b61701779",
        "cursor": {
          "ref": "4b6f69df-6427-4f6b-b709-cb15ba69d15c",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "21299132-b866-4ded-b8b8-bdf6c8205c3f"
        },
        "item": {
          "id": "d6c1cc43-53a1-4957-ad7e-de7b61701779",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b3a8ebc7-ceb9-437f-bcc4-c57f076d6737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1136d20c-73ba-487a-9db2-7d8dc3f99086",
        "cursor": {
          "ref": "6f6afbfe-5a71-4d0b-9f84-0866a05e7098",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "20521faf-2d7f-4a83-990c-75cf53a20d9a"
        },
        "item": {
          "id": "1136d20c-73ba-487a-9db2-7d8dc3f99086",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "73e449a1-2c51-48eb-8a73-4b1c39cd4c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983f3a84-1938-40aa-a75b-e3c29a2da0a3",
        "cursor": {
          "ref": "2c1c3168-a95c-418d-88a6-252f40e9916a",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b45f4d99-1137-40f5-9060-3da7d2eb7696"
        },
        "item": {
          "id": "983f3a84-1938-40aa-a75b-e3c29a2da0a3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8bdd9965-316f-47ad-ae89-e040007be70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d350896-1305-436f-920d-811fc959844a",
        "cursor": {
          "ref": "8dabd18d-b7f5-41c6-a8ed-65f3d32ad64f",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e5074240-6fa9-4be0-8ef4-a953850c1ded"
        },
        "item": {
          "id": "3d350896-1305-436f-920d-811fc959844a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "151386ed-4d21-4399-92e1-3429a7c72bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c24a40-27ac-4f8d-ab69-9e2bc5679ecc",
        "cursor": {
          "ref": "9c96ccad-e691-4c46-94ca-c0d7ca4aedee",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f2e5c5ab-21e1-4bd9-ad7b-83ec3d46d528"
        },
        "item": {
          "id": "b0c24a40-27ac-4f8d-ab69-9e2bc5679ecc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5a102812-0818-4831-a43d-a509ae64d534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8ad45a-fdc0-42e6-8169-d444977313bb",
        "cursor": {
          "ref": "54b14ca7-759e-442b-b900-6985c762c59c",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d0e89ec7-1614-4987-9be6-356cbb1273a2"
        },
        "item": {
          "id": "bb8ad45a-fdc0-42e6-8169-d444977313bb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "73797f40-c243-4709-b2ae-63dd69ae54a8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc09ddd-c04c-4c1e-9d90-72e63abba503",
        "cursor": {
          "ref": "026ceb3b-d52e-4608-a1e7-e02a65dddec7",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3f022a83-d35a-4480-91dd-29d9a5c04972"
        },
        "item": {
          "id": "8fc09ddd-c04c-4c1e-9d90-72e63abba503",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "448f3b3c-4325-4706-a77a-764de1fded27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0caf01d-7d29-4c3f-8b35-3c922643876e",
        "cursor": {
          "ref": "43b1aca6-6b55-4322-affa-0dcc64880ac3",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a3ccdaae-f17f-477d-b832-8dc418a44e05"
        },
        "item": {
          "id": "d0caf01d-7d29-4c3f-8b35-3c922643876e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b7b0b6b2-f8d3-44bd-ba07-5e9183ef4a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82865b90-31b0-4587-971d-3e85307e0983",
        "cursor": {
          "ref": "ab716ea0-90fb-4a97-869c-3157ea2097e0",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "93f79631-cd46-4d54-8cc2-6265d1d3e174"
        },
        "item": {
          "id": "82865b90-31b0-4587-971d-3e85307e0983",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "594f7204-78ff-4d05-9354-4577ac812b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941847f9-53f9-4146-becf-ac6f9e8b2d89",
        "cursor": {
          "ref": "9480ee4f-d015-41e9-b847-81a608a453a6",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4278f39d-b703-4041-a99a-c94af68b3a8c"
        },
        "item": {
          "id": "941847f9-53f9-4146-becf-ac6f9e8b2d89",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a2968278-e4b8-4a22-a1fa-0380c057c659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba22d43-7152-4367-9171-ce172292c127",
        "cursor": {
          "ref": "d4e66723-2636-41a5-b43d-525998ee7d26",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a2c6546c-b32b-4079-9e7b-7c48e0544d19"
        },
        "item": {
          "id": "aba22d43-7152-4367-9171-ce172292c127",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7685ffa0-372b-4e9a-8c00-b8e6640ea760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87059a6d-0623-411b-bead-6381533ae905",
        "cursor": {
          "ref": "262f4087-ec80-449b-869b-be6d0fe8f40b",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0537d3b7-0711-4f7a-933c-585ef939bdd9"
        },
        "item": {
          "id": "87059a6d-0623-411b-bead-6381533ae905",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "81ee8c74-dfad-4145-9a5a-83d5751c162e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6209f75-8765-484a-bdce-27a4314e8b2d",
        "cursor": {
          "ref": "47adab03-e6b0-4953-9d12-a80060eff584",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a8346143-1c18-4bd3-bcf6-8f68d0d8e722"
        },
        "item": {
          "id": "e6209f75-8765-484a-bdce-27a4314e8b2d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7dac3ffa-cd9f-4adb-a2bf-a410ff5da94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018fc6bc-7a5c-4a69-97db-7b99110f069e",
        "cursor": {
          "ref": "50847a85-363e-4d70-9339-def85f5028d5",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4a74c7e1-dcc1-4c03-8964-35e770bc0b39"
        },
        "item": {
          "id": "018fc6bc-7a5c-4a69-97db-7b99110f069e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "60072ad1-531c-4b53-8ed0-614419c984d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7076992f-be53-4517-b500-bbcf6d050fb8",
        "cursor": {
          "ref": "2de9a5a7-de83-43f0-9a85-bd7a82dd265e",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b0cab1d7-e89c-401c-b022-ae73a64e5711"
        },
        "item": {
          "id": "7076992f-be53-4517-b500-bbcf6d050fb8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c50b5aa7-aafc-4669-b847-c04561bfe8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d196f6ce-666f-4e91-a814-57e00bed00de",
        "cursor": {
          "ref": "f60bd10c-656a-4ff8-b4f8-dabce1fec704",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c4b90f5a-2a05-494d-9ce8-b5b3b3ce9d24"
        },
        "item": {
          "id": "d196f6ce-666f-4e91-a814-57e00bed00de",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b3d7a3c3-1a16-47c7-9a65-f5a2e097dda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcf2b2b-65a1-4f4c-b96b-01381023d776",
        "cursor": {
          "ref": "be689762-9148-47ae-92e2-70d13b735192",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e74a3dfe-d60b-44a5-bbd1-d1b35277c817"
        },
        "item": {
          "id": "fdcf2b2b-65a1-4f4c-b96b-01381023d776",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5d926fab-5cd6-4052-a6c7-83728f954dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb602de-cac8-48d6-b0aa-27f1627aeb7a",
        "cursor": {
          "ref": "439ff7bd-0229-4380-b21b-2c6414431ce0",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ac559743-8b60-4a36-afc8-6ffe55c8168f"
        },
        "item": {
          "id": "6eb602de-cac8-48d6-b0aa-27f1627aeb7a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "def0c1c9-cbcd-4918-a5e0-f917d9ac4930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaa0123-2872-4e5b-971e-54f48a1fa057",
        "cursor": {
          "ref": "d533961d-0145-4c79-88a8-50efa9f4ac80",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2c907ba6-0ea7-4332-9342-6dee5bea463a"
        },
        "item": {
          "id": "cbaa0123-2872-4e5b-971e-54f48a1fa057",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3dda62f7-323b-4f4f-9fb5-0f092c05ba6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94656ce3-745f-485e-b693-15582b7a9131",
        "cursor": {
          "ref": "229da310-1859-4021-ba54-a038e31b6148",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ad6e67fb-d365-4d40-a9e3-dc98e011501f"
        },
        "item": {
          "id": "94656ce3-745f-485e-b693-15582b7a9131",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7436fde6-a560-4583-8f3a-1c1b19dab1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e996f655-6e43-4163-9e7d-1c06d45cf02a",
        "cursor": {
          "ref": "853db910-75c8-4810-abcb-0e10b5096f19",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fde3634d-9bb1-4904-9449-eddaf03331c1"
        },
        "item": {
          "id": "e996f655-6e43-4163-9e7d-1c06d45cf02a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "651c9039-462c-45b8-9126-db7d5d1f2705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f8d713-3ca5-4c51-82b7-916014c4468a",
        "cursor": {
          "ref": "171082b1-8155-442f-b635-6a13746b7cb8",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b0a9a5b7-652a-4944-8a43-883b4c518bf2"
        },
        "item": {
          "id": "41f8d713-3ca5-4c51-82b7-916014c4468a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c7e87cef-e649-4030-a7be-e3f942d8b66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfc34bf-aff0-40d4-a7ea-15113700294a",
        "cursor": {
          "ref": "2adf3cad-c6a1-4ad6-8b36-56c9aaccb909",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "505e767a-7755-4639-9997-cb7d9935dfda"
        },
        "item": {
          "id": "5bfc34bf-aff0-40d4-a7ea-15113700294a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "00a16cda-a930-4cdb-8f3d-a9e7faf71a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e58afc-2c79-4214-9b35-7068b394da12",
        "cursor": {
          "ref": "efebcd8b-0a35-4c1e-8877-bb3a193ca574",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b9c5b51a-8152-460e-b784-79ac53a4c535"
        },
        "item": {
          "id": "c3e58afc-2c79-4214-9b35-7068b394da12",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a45067a8-47ed-4dfb-b3c0-824bc4921840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcc7bd8-902d-4680-b9a5-268e682e1883",
        "cursor": {
          "ref": "f0859663-0e42-42e2-bc2f-65e72db42217",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b2be76c9-7f52-4510-aad3-b64fd5cb5d10"
        },
        "item": {
          "id": "7dcc7bd8-902d-4680-b9a5-268e682e1883",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2079b020-a1ff-4151-8e70-7df2bfaff445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a547e189-0b35-486b-8c79-755aae51a2a2",
        "cursor": {
          "ref": "11668dc3-e2a4-45f3-b091-a0e2c44f61b8",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9610ab97-6856-4ba9-b2dc-6f9efd1b915a"
        },
        "item": {
          "id": "a547e189-0b35-486b-8c79-755aae51a2a2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9ef6c405-639f-4491-8d6e-e08c92a5aa8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a6c0a3-ee0c-4d31-8c48-d10abdf3d92c",
        "cursor": {
          "ref": "41a12edd-9dac-40fb-9955-34224e4546e4",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "400e8e2d-1d88-4dac-ae53-a2f1149273b9"
        },
        "item": {
          "id": "f7a6c0a3-ee0c-4d31-8c48-d10abdf3d92c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4de01bb6-a3fa-4432-b866-0a2f7784cf9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0380ba4a-04ab-4f70-a2b9-a50952780f17",
        "cursor": {
          "ref": "8dbe461e-529e-4d7b-bf4e-943a3881ebdd",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "645655e6-fbd4-421b-b693-d01d67dd53ff"
        },
        "item": {
          "id": "0380ba4a-04ab-4f70-a2b9-a50952780f17",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ead21971-a8df-41bc-b569-eaddff1f3b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96569fef-79fc-4725-a185-dcf7b842d16d",
        "cursor": {
          "ref": "087cb95d-9dea-47a1-a432-432de8fd79db",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a1dd17df-9fd0-44b7-97e4-6cde08c2b5a8"
        },
        "item": {
          "id": "96569fef-79fc-4725-a185-dcf7b842d16d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "45bc38b3-6a1e-40d3-a97b-2d63cf6628c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2165c63-2102-4ee4-a427-a9faac8321e0",
        "cursor": {
          "ref": "4285fa99-56a4-4d43-beef-ba2bf931b7bf",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e479c978-3932-4d9e-89c4-d43917215e11"
        },
        "item": {
          "id": "c2165c63-2102-4ee4-a427-a9faac8321e0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0ab09e87-b75b-4b4f-b5a2-e8d95b1ef284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ceee94-c508-46c6-9b96-3aa76cdab060",
        "cursor": {
          "ref": "7a13e31b-d5e5-4c70-88d3-5b4025ecbbf8",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8a19ff7a-7347-44de-b697-cfd03bd5501c"
        },
        "item": {
          "id": "c7ceee94-c508-46c6-9b96-3aa76cdab060",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5275c698-a336-4d0d-8d21-4bd62b1b86c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd56106-105e-4040-9164-70255953061b",
        "cursor": {
          "ref": "9ee285ce-e517-4263-9687-cb46060e6cd2",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d8a4f2a7-3aa2-4b64-9f95-ec2eb3269bb9"
        },
        "item": {
          "id": "1cd56106-105e-4040-9164-70255953061b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d4e8a09b-6cbd-4be3-b2c5-3268ddfcdee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50e5425-cbcf-4a3c-86ec-9e55d7008834",
        "cursor": {
          "ref": "cf4386fd-01b2-403f-b071-685ea9e18926",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fa091b25-0cc8-4618-8026-1c6b32966c68"
        },
        "item": {
          "id": "f50e5425-cbcf-4a3c-86ec-9e55d7008834",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6166c515-8ad0-4417-81d9-165a01eae128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c7ead0-ed0f-499f-bbf9-470cea183584",
        "cursor": {
          "ref": "c12845e5-1434-47bd-884a-0898a2a1787b",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6de45a33-6dac-4e3b-b289-4996ed34db21"
        },
        "item": {
          "id": "30c7ead0-ed0f-499f-bbf9-470cea183584",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6cfd3b1e-802b-469a-826e-fb7316fbd051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49dbe2a5-d45d-463a-8947-f8198544ba20",
        "cursor": {
          "ref": "ab57f0a8-592b-439b-a9c2-7fec22d4a584",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7b54e122-e8f0-4136-9a07-daa9f0cce08d"
        },
        "item": {
          "id": "49dbe2a5-d45d-463a-8947-f8198544ba20",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c091099f-d51c-4157-a26d-d14ecb3e407a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0f2f33-0989-4a0a-b968-ee327453c71b",
        "cursor": {
          "ref": "cf9c9780-7e36-4f98-918f-d7befbfc3100",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a06d09fa-da04-4fe0-a085-d8096e01bb97"
        },
        "item": {
          "id": "8b0f2f33-0989-4a0a-b968-ee327453c71b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "36c38249-30db-4fc9-b229-db63928be74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7368dafe-2eeb-4049-9bc5-bfae0bf17f65",
        "cursor": {
          "ref": "0e4364ac-251a-4185-b46c-46499825e6ca",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "70d28257-37a6-486c-b3d8-16b5029ac83c"
        },
        "item": {
          "id": "7368dafe-2eeb-4049-9bc5-bfae0bf17f65",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1e01ec4a-60fe-4b2d-8050-c99d73e6df57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9899d3bc-b054-4f66-868f-fd02aef8bbc0",
        "cursor": {
          "ref": "65e559ea-88cf-4f7f-8628-d6d4b06f064b",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bb433c61-0284-4eb8-8f11-845666822870"
        },
        "item": {
          "id": "9899d3bc-b054-4f66-868f-fd02aef8bbc0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ca8f3142-bc45-44ef-8ff4-593295d145f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07249c3a-9637-409e-9537-4d140edd3b5c",
        "cursor": {
          "ref": "970e4dac-d538-4376-890b-622ea1470619",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dfcced39-24b7-45e8-b7e7-52799ecb3551"
        },
        "item": {
          "id": "07249c3a-9637-409e-9537-4d140edd3b5c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "25baffcf-7740-438b-be72-a6f4de11aeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba67d005-fbe2-4108-90c5-ca0c83e91d76",
        "cursor": {
          "ref": "417f9646-f9e5-49bf-adfb-4b07438bc320",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "40bd3afe-80e7-491e-ac7b-aa611d73193d"
        },
        "item": {
          "id": "ba67d005-fbe2-4108-90c5-ca0c83e91d76",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f1c39459-2919-438d-9fb4-b26d7abe5c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b113fb4c-6bad-4184-acdb-58b435b2a0de",
        "cursor": {
          "ref": "a4428901-d7da-4824-89c5-a5ce99ae963e",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5f42b2c9-913d-42ef-8322-54d11c5b7d0b"
        },
        "item": {
          "id": "b113fb4c-6bad-4184-acdb-58b435b2a0de",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "20f71dae-7cc7-4219-857c-2391825684d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dea691a-3f99-4083-bbf9-2c91ddd35a74",
        "cursor": {
          "ref": "15e87888-9ef7-4cc8-932f-18fe65806e8c",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "93d398a8-6058-44c0-a253-509c9d3fdffa"
        },
        "item": {
          "id": "4dea691a-3f99-4083-bbf9-2c91ddd35a74",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e1d87eac-798d-4e26-9f55-48265e382cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c15ad4-6921-4409-85c7-3bf064b77f40",
        "cursor": {
          "ref": "b00542e5-4d17-4e4c-a768-9d5ac3062f97",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9a48a824-2b63-4477-9e21-ac422b2645f3"
        },
        "item": {
          "id": "c0c15ad4-6921-4409-85c7-3bf064b77f40",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "191f21a1-61c5-41ea-8ae0-3d6f1e026dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e9c5ec-3c59-49c4-86ca-10756907dc0b",
        "cursor": {
          "ref": "e4b02b85-39b4-43a5-8563-593b5207d394",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4f134c42-9141-4c3e-a327-c286a378c737"
        },
        "item": {
          "id": "49e9c5ec-3c59-49c4-86ca-10756907dc0b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "590f2b32-9506-49d8-982c-6109e8d15efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5136037-36dd-4c16-9710-230b9bb872d2",
        "cursor": {
          "ref": "140a0a64-d732-42e8-af67-ea8b2950d3aa",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8c5d2cff-f40b-4670-8c6d-475871accd7c"
        },
        "item": {
          "id": "d5136037-36dd-4c16-9710-230b9bb872d2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ffaf0299-8630-4e6d-becc-7380e095ea5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e32e18-decc-4800-9805-9dc514d52644",
        "cursor": {
          "ref": "5652ef7b-f331-4b4e-8db1-89ca5f9d0b67",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7bfa6112-b667-40c1-8450-b334f55ea013"
        },
        "item": {
          "id": "16e32e18-decc-4800-9805-9dc514d52644",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "130f2f86-c9bf-4642-9c51-71e6fba00a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b2d5c3-25ce-426d-8717-f6b01031157f",
        "cursor": {
          "ref": "89859d45-788f-43e5-8efb-d334cbd9da93",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "42185b5d-d936-4d7e-a5c1-8af18e11f728"
        },
        "item": {
          "id": "88b2d5c3-25ce-426d-8717-f6b01031157f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b62aa105-5b3a-4370-a49a-1999c93c3729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81bbf43-807f-434d-81ed-f97f249efd2a",
        "cursor": {
          "ref": "8b066691-e7b4-4036-a815-75bf696b939b",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "35ce9136-e3e6-459d-a05b-7be96b0ffc94"
        },
        "item": {
          "id": "d81bbf43-807f-434d-81ed-f97f249efd2a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "77f469d1-88ad-4ed3-a757-f94e3dab09e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61718c0-5ddd-4d82-a2eb-5e44a4e1c2b9",
        "cursor": {
          "ref": "9eff4b37-c3de-46ef-a5d5-08a3825cc55c",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a968b463-5855-44be-a112-15528a979f90"
        },
        "item": {
          "id": "e61718c0-5ddd-4d82-a2eb-5e44a4e1c2b9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bc3dfb3f-e377-4018-9a3e-ce1cfe059d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccde18ec-765b-498d-88ef-c70f95a26832",
        "cursor": {
          "ref": "9c9a5956-3ca3-4965-b274-aa0ac4ed0212",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e128f202-d656-4570-9170-dc3ff564bd56"
        },
        "item": {
          "id": "ccde18ec-765b-498d-88ef-c70f95a26832",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c1a4a265-9630-4478-ac31-cc631cd1b8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b041ee-b6a1-4e0b-a255-982262e55917",
        "cursor": {
          "ref": "8166c48b-f4f5-4a71-9b2b-0b003d4913f2",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "72d960ab-e7ce-4d4f-8a86-b72a465a6b93"
        },
        "item": {
          "id": "44b041ee-b6a1-4e0b-a255-982262e55917",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "18bbdb3a-e41e-4fe5-ba06-b2afee277e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb86375-a551-4ea4-9c11-eab72b6dcde5",
        "cursor": {
          "ref": "4750c835-8e87-4da4-ac7e-1bdacd50ef14",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2a586220-3c13-43c2-9592-72e08f1ba5e4"
        },
        "item": {
          "id": "2eb86375-a551-4ea4-9c11-eab72b6dcde5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ea9d8903-6e78-4f5b-a8cc-7f6c19b243a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3150bc68-68da-4489-b174-581735d0d4a9",
        "cursor": {
          "ref": "ce8e2ecf-c4d6-4e28-98a9-c004aa4f6ce0",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c6301921-5984-43a2-8970-f6f44e8c0ca1"
        },
        "item": {
          "id": "3150bc68-68da-4489-b174-581735d0d4a9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "99d6b33a-f74a-4927-9237-b955e822f81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6b8a96-83f3-4f1a-99af-5480259f79c1",
        "cursor": {
          "ref": "121f684a-3f4d-4099-b157-5af509eae0ad",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f9072025-faec-42f3-9252-a3f209f08ed0"
        },
        "item": {
          "id": "8a6b8a96-83f3-4f1a-99af-5480259f79c1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3d62f67f-a923-469a-a8fe-7817bac654f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a159cf2-bc29-48ae-911c-469b07324934",
        "cursor": {
          "ref": "ca6fc5b4-2dea-4bad-9c87-c8e6942cf69a",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3b1ee153-a446-4198-9d31-2b1c45ffea05"
        },
        "item": {
          "id": "2a159cf2-bc29-48ae-911c-469b07324934",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "10213714-a4a2-492c-9954-d4e7b800a23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096836a0-b91e-409b-97ac-efb8921b66af",
        "cursor": {
          "ref": "23de0d0c-73ed-4349-8708-35ff9ad104a0",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "eb47653c-de2a-4728-a35b-0a0c808484da"
        },
        "item": {
          "id": "096836a0-b91e-409b-97ac-efb8921b66af",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "eb84deda-3579-45ea-bf78-13920982487d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125aa448-0e88-49b8-a15c-88e0b5d305cb",
        "cursor": {
          "ref": "83f42eaa-93a0-4fa8-b6f0-7f22c268a2cd",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "26f138cd-0c86-4e3b-9b57-69ae2c6ee86b"
        },
        "item": {
          "id": "125aa448-0e88-49b8-a15c-88e0b5d305cb",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "7a4beb12-7821-4e89-921b-63d0a68561a8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 35,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093bff38-5983-4c1c-9d14-4a28272fa822",
        "cursor": {
          "ref": "09b11013-300a-409a-9019-5d0d58b29bde",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1168e246-397a-4d04-9da0-19dccd69312b"
        },
        "item": {
          "id": "093bff38-5983-4c1c-9d14-4a28272fa822",
          "name": "credentials_issue"
        },
        "response": {
          "id": "efb2b2c4-0f46-4336-af8a-8f2a0226fd9a",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e934945d-c20f-4dea-bef3-c19540b225a7",
        "cursor": {
          "ref": "e95a7cf9-26d8-43cb-a92f-fa03efd6120b",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "838691c2-b054-46ea-b696-295c9255fa03"
        },
        "item": {
          "id": "e934945d-c20f-4dea-bef3-c19540b225a7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5852c22a-0a0d-4291-bae1-6b202e9d4771",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fdda20-671d-48b4-b2fb-2badaa5616e9",
        "cursor": {
          "ref": "0128c899-70ca-46af-bad8-ccd25eaf5ed6",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6877fd12-2bd6-4d3f-a0ae-b57743a85c19"
        },
        "item": {
          "id": "38fdda20-671d-48b4-b2fb-2badaa5616e9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c42e38dc-4027-4b3c-84a6-727220dc24e7",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c93be6-40fa-4cf5-8e83-6423b3d9515a",
        "cursor": {
          "ref": "2e00fca5-ae44-4af1-9eae-a2c74825949e",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "157bb17d-e98f-4a2e-a6f4-9a986b149a68"
        },
        "item": {
          "id": "d8c93be6-40fa-4cf5-8e83-6423b3d9515a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1d423c84-fb40-4693-a50d-c58cd9ed9cac",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "13df6df7-9e1c-4243-9de1-d3075aa77ed5",
        "cursor": {
          "ref": "3553ba0a-669e-4854-ad70-0f2129d7391b",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "aa342f6d-6737-4a9d-8df7-680b4cebf3aa"
        },
        "item": {
          "id": "13df6df7-9e1c-4243-9de1-d3075aa77ed5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cb41d87f-6622-491b-b662-5ff2790e7802",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "206808f9-9134-44cc-8ebc-48b8213fda95",
        "cursor": {
          "ref": "fbb1fed0-54c8-401a-8373-ea541dd88b6b",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4d21e926-b6e5-4d33-acae-c12d39ab3f71"
        },
        "item": {
          "id": "206808f9-9134-44cc-8ebc-48b8213fda95",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b0a8a52e-f672-48b6-a367-4e96350870d1",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2cc20c-db31-45be-95dd-27fb1778b2d7",
        "cursor": {
          "ref": "161cade5-38cf-4bce-8463-a6a005c426be",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "748a8c02-51b3-4a9d-bef1-5b5ee4718e6f"
        },
        "item": {
          "id": "1a2cc20c-db31-45be-95dd-27fb1778b2d7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4937e430-790b-4d9f-a8cb-73bbd4e11c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2cc20c-db31-45be-95dd-27fb1778b2d7",
        "cursor": {
          "ref": "161cade5-38cf-4bce-8463-a6a005c426be",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "748a8c02-51b3-4a9d-bef1-5b5ee4718e6f"
        },
        "item": {
          "id": "1a2cc20c-db31-45be-95dd-27fb1778b2d7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4937e430-790b-4d9f-a8cb-73bbd4e11c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3261e3e7-986a-482c-b5b0-974186b35edb",
        "cursor": {
          "ref": "642d15d6-f103-48bc-992e-3225848b5263",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "85f0ce2b-bfd0-4691-a9d1-fa0b0671c2b8"
        },
        "item": {
          "id": "3261e3e7-986a-482c-b5b0-974186b35edb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f18b837e-b298-4e04-9d02-fbc87d234a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf1e989-fde4-4376-ac2a-ea61062c05ec",
        "cursor": {
          "ref": "eab0d775-f2c3-4db9-8352-939eac1b774c",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9b606010-6351-4933-a0d8-4161c44125da"
        },
        "item": {
          "id": "abf1e989-fde4-4376-ac2a-ea61062c05ec",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "00155032-da59-4794-a705-c8ef38908ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8332544-bdc2-4e98-911a-b1f12d7ff84d",
        "cursor": {
          "ref": "6ece442f-ffd3-4cef-81ff-879ac7e3bd3a",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "003f238e-eb06-4285-b315-84d3ffa7d0fb"
        },
        "item": {
          "id": "c8332544-bdc2-4e98-911a-b1f12d7ff84d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7a629449-7002-4b0c-8771-7b0a49e3b08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcf13aa-a947-437b-995a-a8d5bf700240",
        "cursor": {
          "ref": "f6527432-9d1d-4398-a015-f943ea219d74",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "99f7d4f3-1b7a-416c-9515-3510a19c6218"
        },
        "item": {
          "id": "4bcf13aa-a947-437b-995a-a8d5bf700240",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "29e03e51-4988-4468-8087-16ef3f835c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f247573d-7343-46d9-bb76-71458df463a4",
        "cursor": {
          "ref": "81f6c980-8568-4183-a9ca-be75601b766a",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "49b5ce66-0fbc-4f21-a088-69b283022e75"
        },
        "item": {
          "id": "f247573d-7343-46d9-bb76-71458df463a4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5b07058f-2b93-45ec-b690-6f7a3ff5f554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c914b75d-b226-434a-9557-3c5e5eb16b28",
        "cursor": {
          "ref": "cb97f593-8458-4011-ade8-d19c17e5d1d2",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6d787a95-e3f2-4d6c-af9f-c2753ee62763"
        },
        "item": {
          "id": "c914b75d-b226-434a-9557-3c5e5eb16b28",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1a4d14ae-b96a-47b9-bcd2-67ff1d326b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb3ce5c-d01d-4195-8ac6-491290580e0f",
        "cursor": {
          "ref": "55eda0d7-68f4-4e81-8ad1-5f786b0e671a",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "77d6fdca-12dd-412f-a08f-e6d23c0f31aa"
        },
        "item": {
          "id": "4eb3ce5c-d01d-4195-8ac6-491290580e0f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "65039fac-c977-4c97-80a5-899cf937923a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f753213-e775-4487-bafe-57f69a4f54e9",
        "cursor": {
          "ref": "25f97820-7d54-4964-84bd-bbff767d59f4",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a513297c-b1e2-4f36-82be-6325d789a6cf"
        },
        "item": {
          "id": "6f753213-e775-4487-bafe-57f69a4f54e9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ff364398-ced7-436e-bb2e-7661d347a26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f94de6-e234-4874-b1dd-abc2176211af",
        "cursor": {
          "ref": "bf3256e4-75e5-4740-95da-d74439997d21",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a617325d-dd0a-4b29-96a6-2c72ddd8be71"
        },
        "item": {
          "id": "81f94de6-e234-4874-b1dd-abc2176211af",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9d9bd3e3-edce-4985-aa68-8b1d88e6edf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862a9014-39e6-49a9-9b09-dd33a4d7e9bb",
        "cursor": {
          "ref": "cd3e7cd9-c9b3-4f4d-9f11-4efb7feb979e",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fca126c7-dac9-44b6-b136-579b6b9127da"
        },
        "item": {
          "id": "862a9014-39e6-49a9-9b09-dd33a4d7e9bb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a1950303-0f16-40f7-b6fd-c5ee2aefe767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81a1c18-b936-4e71-8308-c6ebe6f651f8",
        "cursor": {
          "ref": "241c46f1-6fda-40f6-aea5-1c7ce67861bb",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fb24821c-4ee7-4e38-9831-45c22e8e2894"
        },
        "item": {
          "id": "f81a1c18-b936-4e71-8308-c6ebe6f651f8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "287a0229-9fc9-44ac-a10c-6a364c360492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eabedb5-c47b-4ce7-a222-963c88fe1458",
        "cursor": {
          "ref": "3167f06c-bed6-43b1-8628-9b3a75cdad30",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1d0460e9-a954-4604-9950-d807ba510c2f"
        },
        "item": {
          "id": "2eabedb5-c47b-4ce7-a222-963c88fe1458",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "845cc00e-764b-44e2-89e5-e80018e832ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204e7f6a-055d-44d5-8556-b1198560a821",
        "cursor": {
          "ref": "6ab01e96-6228-4981-81a0-844cfc811075",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "13083921-d51d-43d6-8727-059067bbfd28"
        },
        "item": {
          "id": "204e7f6a-055d-44d5-8556-b1198560a821",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "58f16b84-ec4a-41bb-863a-5e0bfb265da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436f4655-e93b-4598-a358-38c7465221f1",
        "cursor": {
          "ref": "d2187d60-63d0-4b1e-babd-8216de73fedb",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "44853913-2744-45e1-aadd-2970474ec49f"
        },
        "item": {
          "id": "436f4655-e93b-4598-a358-38c7465221f1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a357ae67-5561-40a5-a83e-1777509a000c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716aa581-ac2f-45a0-a91a-fb477149a7eb",
        "cursor": {
          "ref": "92fe22ee-19dd-4e7d-915c-182b2c9b1e36",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7595687c-fe5d-4809-bcb1-a5d891f19087"
        },
        "item": {
          "id": "716aa581-ac2f-45a0-a91a-fb477149a7eb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3257d3a5-9ad1-40c4-9095-cd4e8058c53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ffa14b-7fe7-4d99-a783-80d2f34a58a5",
        "cursor": {
          "ref": "9ba3009d-a66f-482f-8f70-d4bbc53744bf",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4156b51e-d71b-451c-a3fd-5fa6b90a8b67"
        },
        "item": {
          "id": "90ffa14b-7fe7-4d99-a783-80d2f34a58a5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c201495a-5d79-4066-a661-6e3001194d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492d6cfd-bb2b-4442-a53b-50f72e7f49e7",
        "cursor": {
          "ref": "5e2d3870-7867-4538-9200-10a734518d3c",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "319c929a-d1cc-476b-bf24-5ab93eff54c0"
        },
        "item": {
          "id": "492d6cfd-bb2b-4442-a53b-50f72e7f49e7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ca7e4ab2-12e1-42c8-b505-248c9e1e99a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40632e6b-126f-4848-9c29-f7de649756df",
        "cursor": {
          "ref": "067fa20f-aea2-49e5-a516-9e34b9dc59de",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3e646cd8-dd12-430c-96f5-91a4472f03db"
        },
        "item": {
          "id": "40632e6b-126f-4848-9c29-f7de649756df",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "661373b3-fa86-43fa-99d5-4df59669a464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d7fbd7-ef7d-4a00-b6fc-3e9ce7c01009",
        "cursor": {
          "ref": "283daaf3-2544-476e-a8c6-e747fbf66130",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8636516a-b1e3-4bbb-a307-a9c851fbc2fb"
        },
        "item": {
          "id": "e3d7fbd7-ef7d-4a00-b6fc-3e9ce7c01009",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "68ce17aa-b64a-40cb-9df3-121d67247fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f592bd-ec50-4bf5-b8b0-69b9ebac1dc9",
        "cursor": {
          "ref": "505c3eea-f16b-432e-8ab2-6732cb15830e",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "84533e74-89c5-4638-808c-eca288c39d68"
        },
        "item": {
          "id": "20f592bd-ec50-4bf5-b8b0-69b9ebac1dc9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1be4f37b-929a-408b-b25d-33a99fa76655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3c904b-0ac3-4993-8bed-a59a3f403bce",
        "cursor": {
          "ref": "fe656a69-e6aa-461f-8474-f77ed3250d97",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8d0dc6b8-9780-43bc-9e88-4e9ebec51505"
        },
        "item": {
          "id": "8f3c904b-0ac3-4993-8bed-a59a3f403bce",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "833605cc-f643-4dc8-adf7-f3fee1a71071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d27538b-6225-42d9-9909-c1bb006544a7",
        "cursor": {
          "ref": "2b9c012d-0761-4131-b909-84809f56a9ad",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ee3d5012-d485-4735-9e47-9d6acbc30134"
        },
        "item": {
          "id": "4d27538b-6225-42d9-9909-c1bb006544a7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "08c599d9-1b75-4d17-a3d9-ae0798f53482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5c02f9-d9dc-4e14-b29d-22d115f01f59",
        "cursor": {
          "ref": "d71c0264-dd47-4d1e-bc81-1d470855eb78",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7e0eddff-a64c-42bd-b0ff-e82deebf51b0"
        },
        "item": {
          "id": "6b5c02f9-d9dc-4e14-b29d-22d115f01f59",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d0baba2b-e22b-4b10-b10f-ee41140e6b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73c8eb8-db60-4407-8ed2-75f1dc893d39",
        "cursor": {
          "ref": "eba3fe20-01dc-4c50-9b60-a13ea24b506b",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "45fbaedf-968d-41be-b1cd-6308293f8f29"
        },
        "item": {
          "id": "e73c8eb8-db60-4407-8ed2-75f1dc893d39",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "402827ff-2f96-4fad-b584-869ffb427f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c670f236-5c55-475a-a0d0-51de6ebc431c",
        "cursor": {
          "ref": "b15d45b5-7f19-43a2-99ae-9153f6a7af54",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f5f13b53-3eb9-46b6-9f0f-a7a51b07324e"
        },
        "item": {
          "id": "c670f236-5c55-475a-a0d0-51de6ebc431c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e8c88787-ae0c-4b91-9fd9-5c640178c6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb04a8ca-bef1-4014-9c76-9f75114621fc",
        "cursor": {
          "ref": "922fa041-ef23-45c3-a298-cddf1f8da57f",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "65224e51-258f-422c-8015-87340b56fe6a"
        },
        "item": {
          "id": "eb04a8ca-bef1-4014-9c76-9f75114621fc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a7810d6f-f839-4f51-bb48-f01d6abf0c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7a5b29-1f45-4e4b-8324-311b3f688bc3",
        "cursor": {
          "ref": "66b68355-d5c2-4e7c-8bd5-af6a949da0c6",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "76d3e38d-65f3-4b09-a496-4024e5ad6b2f"
        },
        "item": {
          "id": "cb7a5b29-1f45-4e4b-8324-311b3f688bc3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "aa62c994-8f2c-40d3-a670-c2ca3c4d5114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d4d86b-6e6b-45df-9233-f57fa23ca634",
        "cursor": {
          "ref": "c21d1572-4ceb-48eb-8cac-47c0eae4d151",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6b09a575-ded2-4a43-8d05-73788dc48693"
        },
        "item": {
          "id": "95d4d86b-6e6b-45df-9233-f57fa23ca634",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a588b0ae-dd27-492d-9d4d-058999a25b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced65874-0bcf-47e1-9179-a861196fc9bc",
        "cursor": {
          "ref": "75490842-2f42-4004-bbc4-6de88d9bc0f1",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9b949542-dff6-40e6-9328-66e203e888b0"
        },
        "item": {
          "id": "ced65874-0bcf-47e1-9179-a861196fc9bc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "435cbe46-fdbf-4e83-b928-eb06f38705dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511b7fb1-4812-4327-a95d-da57cdcb36d9",
        "cursor": {
          "ref": "c5eb134a-dcba-45a3-b862-c5943f70359b",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1c3b27d7-942f-4a7b-869b-ab04f7c30622"
        },
        "item": {
          "id": "511b7fb1-4812-4327-a95d-da57cdcb36d9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8c495c4b-be8d-4fca-92d6-07c4f2fa29f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6373a37d-8718-4e47-a090-7f192c951201",
        "cursor": {
          "ref": "03d8f055-b340-4d40-9a14-3b8936796370",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "989d5c7d-1210-4e6c-8f1c-34513293da84"
        },
        "item": {
          "id": "6373a37d-8718-4e47-a090-7f192c951201",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5c46ec8e-8ea2-46bd-ae6f-9d07bee26001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22baf4e-03fc-42b7-9546-224a8145bab6",
        "cursor": {
          "ref": "d4da03fd-4fa2-4cdb-934c-98c8f08bae0b",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cb4802b7-0008-472b-9798-fdf306b6b931"
        },
        "item": {
          "id": "e22baf4e-03fc-42b7-9546-224a8145bab6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0ff174d2-9150-438d-b9ff-b82ca3554a0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacc4b85-daa4-4694-9638-21bdb6ff9ff3",
        "cursor": {
          "ref": "5eb48ba6-9d1f-48f0-b139-d63cae6f7deb",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c7eaa608-8e56-4408-9022-6d173d30e848"
        },
        "item": {
          "id": "cacc4b85-daa4-4694-9638-21bdb6ff9ff3",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "34638072-0769-446c-b654-f7f86f691c42",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f30bd5d-9f4b-4ef8-8169-611a2eb93610",
        "cursor": {
          "ref": "5431977c-b438-4eac-bcf6-9c7205484b62",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a27bf768-7969-4948-bdbe-99b3319ca617"
        },
        "item": {
          "id": "1f30bd5d-9f4b-4ef8-8169-611a2eb93610",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "82311184-ec59-4914-8015-1d41d21b4447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f30bd5d-9f4b-4ef8-8169-611a2eb93610",
        "cursor": {
          "ref": "5431977c-b438-4eac-bcf6-9c7205484b62",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a27bf768-7969-4948-bdbe-99b3319ca617"
        },
        "item": {
          "id": "1f30bd5d-9f4b-4ef8-8169-611a2eb93610",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "82311184-ec59-4914-8015-1d41d21b4447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f36a0d1-c3f6-4d5b-abcc-a8659020a1ad",
        "cursor": {
          "ref": "ff54c75d-fe01-4db9-9171-786f4b197907",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "81318f95-d9fb-44ec-9ef3-7443854a94b2"
        },
        "item": {
          "id": "4f36a0d1-c3f6-4d5b-abcc-a8659020a1ad",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a2afd370-a74f-4c6d-b15b-1d2d78e4f4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca35465-35f8-4948-b0cf-a6befdde35a2",
        "cursor": {
          "ref": "b65ce058-0fea-4aaa-adbc-5ba565774628",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "def64aaf-d657-46df-8a83-aa482a96fe8c"
        },
        "item": {
          "id": "3ca35465-35f8-4948-b0cf-a6befdde35a2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9e4870d9-8bdf-48e9-8a6a-47ef7b7cba70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d859743-c4c5-42d0-9178-aa6f1631d555",
        "cursor": {
          "ref": "588691b3-2c69-461d-8903-6645318b0dc7",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "77fb6f9e-4289-4558-8ca5-1a5c9b03c9d0"
        },
        "item": {
          "id": "3d859743-c4c5-42d0-9178-aa6f1631d555",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "60bd5bd7-484a-49df-bec0-6b1d3413e5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf27410b-0696-4cf5-9d63-54cebbac115e",
        "cursor": {
          "ref": "99c86fd5-073e-4b18-bf02-80fd52943137",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "83e2326b-b490-4ddc-847c-fffad7f970e5"
        },
        "item": {
          "id": "bf27410b-0696-4cf5-9d63-54cebbac115e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "62b51bba-d37f-4422-98c5-58a762d16e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03530786-041f-4657-9b7c-eff554c58d28",
        "cursor": {
          "ref": "6a3c2a09-72de-4feb-a357-da7db8f0e683",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "81ef09bb-2a3a-4f2b-90e2-cc0995ceab4a"
        },
        "item": {
          "id": "03530786-041f-4657-9b7c-eff554c58d28",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "04e2a5cf-fa1a-4545-8197-ef4c756df3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7a7d39-dcfc-45df-ac73-90e15d903cd7",
        "cursor": {
          "ref": "f89d9578-d6a6-4ea6-9c14-86c911c4899d",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "06a79d0e-2efa-403a-b778-bdbce54969f7"
        },
        "item": {
          "id": "6a7a7d39-dcfc-45df-ac73-90e15d903cd7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f71c2411-f4a7-4d77-b231-5d098b7eb447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63bf6b4-2317-48ec-81c0-f346157f4b66",
        "cursor": {
          "ref": "35bc2567-eec8-4930-a926-18adb381d590",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b675b8e8-d31e-43f4-be88-437b8cd0f3c0"
        },
        "item": {
          "id": "f63bf6b4-2317-48ec-81c0-f346157f4b66",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "05fb7bd0-8226-4257-8c0b-88bfdfc94500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce41762-93e4-489c-ac01-2f8f63671355",
        "cursor": {
          "ref": "ab8e9395-063a-4183-bcc1-59a5776a6fe0",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9d61e670-0ba2-45e5-8b0f-574aa56c9697"
        },
        "item": {
          "id": "dce41762-93e4-489c-ac01-2f8f63671355",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a2db5e94-cde0-43f2-a865-b74b7ee2250d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4c3b1f-9074-40b9-9ce9-48a484da1cc1",
        "cursor": {
          "ref": "c6b48477-7f3a-40e5-901a-d8a375c2c764",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5bf939f2-13b2-4456-9c20-cbe5f34fd00f"
        },
        "item": {
          "id": "7e4c3b1f-9074-40b9-9ce9-48a484da1cc1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1dfa6c18-1d2d-4c2c-8ec7-0c72739b79b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99db31c0-372f-4a57-a9ba-ebb71fc81659",
        "cursor": {
          "ref": "2cda579c-0646-4dd7-a319-d119354581eb",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1239f65b-9ae2-4350-ac2e-0e5ace4ad05e"
        },
        "item": {
          "id": "99db31c0-372f-4a57-a9ba-ebb71fc81659",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d98223ec-4187-411b-b918-c23ad93b7d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a55654-c2fd-440c-abe0-7d797112345b",
        "cursor": {
          "ref": "02d36573-cc29-4506-9be6-ff3232bf082d",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b1691aae-01c0-4ad0-accc-eca6adc02db3"
        },
        "item": {
          "id": "76a55654-c2fd-440c-abe0-7d797112345b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d491568c-3836-4956-8f5e-52fcb2c03425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a89e40b-b9b6-4a63-a123-416834e3db5c",
        "cursor": {
          "ref": "6ca3d363-39ab-417d-9fd7-d514ee884afc",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f2bfd19a-343e-4047-a9fe-995a93815691"
        },
        "item": {
          "id": "6a89e40b-b9b6-4a63-a123-416834e3db5c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4fc36462-afa4-4101-b5d2-3381295e0225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660e79b4-f150-4362-a8e6-7b4a5dc0ef0e",
        "cursor": {
          "ref": "b0366f55-4bd7-4c04-974a-1891f43ee485",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "534a1e36-78e6-4f26-9653-1acb2ad4486e"
        },
        "item": {
          "id": "660e79b4-f150-4362-a8e6-7b4a5dc0ef0e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "62e40886-7570-48e5-8672-467570710a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f8f02d-e68f-44de-9ec6-d92e15c4dc31",
        "cursor": {
          "ref": "3b8a759f-b1b4-4812-bfbd-569091a4bf6c",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f0b51255-7271-469a-8104-b701960e44bf"
        },
        "item": {
          "id": "55f8f02d-e68f-44de-9ec6-d92e15c4dc31",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "eb5da139-8e5b-44d8-80f1-bbb68c00cd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a88224-4a61-415f-aecb-0afe27a0a8af",
        "cursor": {
          "ref": "0c2472c5-10cd-43a5-af33-7fc8a80e60a4",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "07bb64d0-a986-4333-8e7b-c8ed5c53ddfd"
        },
        "item": {
          "id": "66a88224-4a61-415f-aecb-0afe27a0a8af",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d7fa85c3-18c5-4143-a4a0-d4d1321fb139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09648d2-0af2-49c9-87f9-e0b1fcdbb985",
        "cursor": {
          "ref": "474dca9c-0738-4c9c-9adb-9117bd092990",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cd37626c-f06c-46f0-b610-2d9b7ba0e079"
        },
        "item": {
          "id": "b09648d2-0af2-49c9-87f9-e0b1fcdbb985",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c03bfd55-e79e-4586-bca4-b5e219b8ad51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fa40d6-7f5b-488b-a348-c510fabbfe81",
        "cursor": {
          "ref": "22bfa892-2475-437d-a0cb-278bb1031541",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5a91b1bf-e391-4f3d-9127-069cc2cfc2ba"
        },
        "item": {
          "id": "14fa40d6-7f5b-488b-a348-c510fabbfe81",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ee23ff14-d92b-4b61-ad3a-473799f002c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e507bb-092d-4c13-9285-7802855112b2",
        "cursor": {
          "ref": "347ef7d9-302d-49b6-b9f6-5252ac5cb43c",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "29ac3426-2737-4c65-95db-10ea89338f19"
        },
        "item": {
          "id": "31e507bb-092d-4c13-9285-7802855112b2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0aa904ee-3265-4fdf-86ca-d2b38dbf53ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e098a47e-4d3e-461f-a9e2-12cf40abb0f5",
        "cursor": {
          "ref": "0a06819c-8370-42ec-b084-4056b56705e6",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8fed03fe-7003-4fe3-a40b-7159a55495b3"
        },
        "item": {
          "id": "e098a47e-4d3e-461f-a9e2-12cf40abb0f5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "40d3b8f0-93ae-46e8-9712-ed7ffe7b4688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39441f9b-8820-4612-aef8-a2fa725f054c",
        "cursor": {
          "ref": "e9b5157e-f7a4-4bff-8fab-8f75125a017c",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d3c3065a-2a52-4693-8207-89820bbcb519"
        },
        "item": {
          "id": "39441f9b-8820-4612-aef8-a2fa725f054c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3e42a49c-9e6d-4ec2-ac84-9c04c5a5a414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f61784e-fee1-4f69-a750-608eccdc5320",
        "cursor": {
          "ref": "85c4dbaf-d7b8-4f88-be22-2456126bc860",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c8ee4d9d-e65b-4c5b-b909-d492b51b1b8a"
        },
        "item": {
          "id": "8f61784e-fee1-4f69-a750-608eccdc5320",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "071e1f10-55af-43f0-bdbe-d6a8aa47978b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6455749-240f-424a-a2c2-6fc377456230",
        "cursor": {
          "ref": "e280c6da-e731-4983-8854-15a0d5a0a7a6",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c9df1b92-1218-4b98-b52b-89c534f30d5e"
        },
        "item": {
          "id": "f6455749-240f-424a-a2c2-6fc377456230",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "533a6b18-c6f2-4978-9dfe-92a86b20f520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec06f52-e778-4649-8fbf-ea17c7da96f1",
        "cursor": {
          "ref": "9cd76b88-cf18-41e9-b756-ee1bf155bd23",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "852aa1e5-4cf3-4d72-8872-e57368f1d7bd"
        },
        "item": {
          "id": "bec06f52-e778-4649-8fbf-ea17c7da96f1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8fc597e8-1593-41e7-a12a-60599de05e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76ded4a-8702-442b-923c-51869235dcb0",
        "cursor": {
          "ref": "7fb1567f-f8e9-4f9e-9528-e6d2c0fff483",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "55a0ffd2-9c64-41c1-9af7-80b0136b15be"
        },
        "item": {
          "id": "b76ded4a-8702-442b-923c-51869235dcb0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f0803b67-742e-4a77-981c-496893640a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed904b0-356d-4e6d-b648-34e9ef410896",
        "cursor": {
          "ref": "a634dc18-715a-486e-b8ea-b26e2b64bbc8",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6b26ad9f-ea51-4f8f-9153-f665073a7fa7"
        },
        "item": {
          "id": "2ed904b0-356d-4e6d-b648-34e9ef410896",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "29ac2625-0e2b-40d3-8fb1-e1692060d7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50628f2a-5bd6-4b34-9d89-dcc73f197502",
        "cursor": {
          "ref": "7cbfab07-e0c2-4c92-86e6-dceeb71c4de4",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "91e45523-d23f-49ca-9c5c-9ccefc63dd6a"
        },
        "item": {
          "id": "50628f2a-5bd6-4b34-9d89-dcc73f197502",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bf0bea86-3dab-4bbf-9e1a-84835d3af80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10972481-1d73-4e3f-a341-7434997b99bb",
        "cursor": {
          "ref": "dca70c94-4ebc-450d-b64d-4a11270468df",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "809a0cc4-51c1-4275-9097-b630a9c6f225"
        },
        "item": {
          "id": "10972481-1d73-4e3f-a341-7434997b99bb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "309ce38e-ae01-424e-9701-8a8ff1637b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae9bf5b-9a45-4b99-b900-df426e716711",
        "cursor": {
          "ref": "c389721e-309b-4dfe-886c-8e6b3c8aad07",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3690c102-5637-42d4-abdd-b9b90e718199"
        },
        "item": {
          "id": "4ae9bf5b-9a45-4b99-b900-df426e716711",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "252decff-cda4-413f-b9b4-c101aea9bf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ee64aa-e362-4a35-829a-625be2ef6473",
        "cursor": {
          "ref": "6743743c-0aef-4303-8213-0443ceddf17f",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "391a1c80-680a-47bc-b741-daba2bed9243"
        },
        "item": {
          "id": "e2ee64aa-e362-4a35-829a-625be2ef6473",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "36eef4d8-85cd-45fb-bc01-99c102573e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691c1fb5-5103-4594-8eee-41828ba935b4",
        "cursor": {
          "ref": "eee9c712-76f8-44ad-9ce0-9340519a1c94",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f1fd4fd9-1dbb-4fa9-a6ac-3b3222063bda"
        },
        "item": {
          "id": "691c1fb5-5103-4594-8eee-41828ba935b4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e5d45104-8d61-4212-9d48-e1bf3e14f09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fab1d36-4e30-40f8-985c-f8ecf53ca1bf",
        "cursor": {
          "ref": "7a68173d-b56f-4251-8f3f-4962ed6a8860",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b2d70a03-acca-45ae-be88-de94ac8a4047"
        },
        "item": {
          "id": "0fab1d36-4e30-40f8-985c-f8ecf53ca1bf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5897a5cb-fc6a-4d64-acef-21179e00bb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5185a015-b60b-4920-92d0-39ee5335d01b",
        "cursor": {
          "ref": "5bb1361b-b219-4559-aa31-22219e081e77",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a203c853-3d7c-4bcd-b49b-6f4be8293585"
        },
        "item": {
          "id": "5185a015-b60b-4920-92d0-39ee5335d01b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4058caea-59dc-435f-93a4-cfd96af2cc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6f895e-0dd3-4329-a3b6-b33e5ae551f2",
        "cursor": {
          "ref": "97309a18-b8bb-4336-8d50-85b29ff90fde",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "583838c3-60dd-4cc2-a8a1-0431782728a5"
        },
        "item": {
          "id": "5b6f895e-0dd3-4329-a3b6-b33e5ae551f2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "28a7b848-598d-4598-81d5-5351602cfd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b97b18-5f2c-43e2-bec6-c28f407ac4f6",
        "cursor": {
          "ref": "96523fc7-d34f-4dd8-b9e7-c2ea2a437844",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3c26fe05-8045-4b2a-8291-a88ba377c0f5"
        },
        "item": {
          "id": "a3b97b18-5f2c-43e2-bec6-c28f407ac4f6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dc22be12-7f7a-49aa-810d-dc1d7e452c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4477830-6c78-4ff8-a21f-cec89179cce5",
        "cursor": {
          "ref": "fc7a51c5-7477-44d7-ab62-83c65f1f7e73",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "35420122-f900-4ba2-a9d2-f574a6ea4adf"
        },
        "item": {
          "id": "c4477830-6c78-4ff8-a21f-cec89179cce5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "423b17bf-575c-4541-bf80-47d97996012a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9539f6-e433-4b5c-8dfe-38c5ad3a21cb",
        "cursor": {
          "ref": "57540682-758e-4d45-aa09-bdccf09fa2d8",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "586b2820-0b5a-4e84-ac85-55d67a72e88e"
        },
        "item": {
          "id": "2f9539f6-e433-4b5c-8dfe-38c5ad3a21cb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0721d1f9-ace2-487f-834a-cab1982ffcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3b2e4f-9025-4bd0-a338-0fbfea51eb52",
        "cursor": {
          "ref": "b3d29932-6c15-4ebb-bbae-945bf0d69719",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2128c035-75c1-48a3-b32b-6f88dceaee20"
        },
        "item": {
          "id": "9e3b2e4f-9025-4bd0-a338-0fbfea51eb52",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "af5d1026-92b8-4ee9-815b-51484c8511d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3752a9ca-c459-45fe-9a60-e894ed00fefd",
        "cursor": {
          "ref": "5daa728e-646c-427f-bca6-929b420f51a2",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bc378636-1b4a-42af-afa7-217fa02cd0df"
        },
        "item": {
          "id": "3752a9ca-c459-45fe-9a60-e894ed00fefd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e0ba1a18-e706-4c45-aaed-c94367ea7dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5263fba-8812-435f-a9b2-dafca8731ecf",
        "cursor": {
          "ref": "d5db8615-2271-4b91-8234-f9dcc7564cd3",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "27953c81-0842-47f9-a743-e9df8cee8ec0"
        },
        "item": {
          "id": "d5263fba-8812-435f-a9b2-dafca8731ecf",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "85515905-d249-4dd9-9a7a-58ae59bbc9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ef16e7-8133-4b71-9b82-ab0ab65715d8",
        "cursor": {
          "ref": "4959a207-47f9-4595-9aa0-0688fa72fcb4",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f3ea9843-bb00-462c-a7c3-e31a693ef618"
        },
        "item": {
          "id": "d1ef16e7-8133-4b71-9b82-ab0ab65715d8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "275c8f14-0912-4968-a187-f15d95167eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4ff396-acf7-4956-b1fb-caebb5df9e0a",
        "cursor": {
          "ref": "2c161837-330a-4ed6-9e07-5bffbd424297",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "197cd973-3f64-4246-9ac4-6475fcaa4e26"
        },
        "item": {
          "id": "cd4ff396-acf7-4956-b1fb-caebb5df9e0a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "613fd5fd-ad93-4e7a-80da-129e1581c0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a898a1-6b05-478b-b4b9-54b0e979bc8c",
        "cursor": {
          "ref": "4a06edaf-2677-4847-a947-050857eee29f",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bd747128-b293-44d6-b3cc-221bf1244c6e"
        },
        "item": {
          "id": "81a898a1-6b05-478b-b4b9-54b0e979bc8c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d86f3e53-9088-4219-ba7e-58de8af1b90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4e6622-87e0-42ec-80e5-8865ba5dfccb",
        "cursor": {
          "ref": "2231a78c-a448-44e9-99c1-72d69de74e66",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4caa368e-7f33-4842-bf00-4907d495c0fe"
        },
        "item": {
          "id": "8b4e6622-87e0-42ec-80e5-8865ba5dfccb",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fa57551f-be7c-4e21-b00a-ef558fb37187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbdcbed-cab9-4b11-8e0d-f8a7d526fb60",
        "cursor": {
          "ref": "0730a516-14a0-4844-bfea-32d9aa067644",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "52080132-9c2a-4b9f-83e6-47a0da88303d"
        },
        "item": {
          "id": "ddbdcbed-cab9-4b11-8e0d-f8a7d526fb60",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e012b59a-adbb-48f8-82a1-b96a52073524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561632d3-d767-434f-b00f-18c9dca0bc7c",
        "cursor": {
          "ref": "b532f191-02bf-4996-a551-ec43d6d50d85",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cf7af41f-a695-4bef-99e5-9ecb17940974"
        },
        "item": {
          "id": "561632d3-d767-434f-b00f-18c9dca0bc7c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9dee8e2d-6f14-4580-8fb2-0d0bee845ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f9b8ac-fc54-4ef0-93c3-6b4378ea4077",
        "cursor": {
          "ref": "c5739e6e-0b0d-4a61-8287-d13db0a5a25b",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "17794e12-c980-4a06-a9b9-49a5a5555f1a"
        },
        "item": {
          "id": "05f9b8ac-fc54-4ef0-93c3-6b4378ea4077",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e5782487-2f9e-473f-9427-b535fa03bf1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f96b2a0-fc2b-44b7-a82c-5a377cc4a0e0",
        "cursor": {
          "ref": "32dd3af8-4394-4194-bda4-22b433d1c565",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "23f26207-742e-4c8a-9ebb-d962e075cc39"
        },
        "item": {
          "id": "2f96b2a0-fc2b-44b7-a82c-5a377cc4a0e0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0fc3c046-dafe-43c5-bfe4-58ca438e55e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9e9c1d-2287-4aef-abc0-71c2587682e6",
        "cursor": {
          "ref": "72421b24-ace5-464e-9fd9-0af574114437",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9f926b53-eea8-47a5-8f6c-7826c0ae0bc6"
        },
        "item": {
          "id": "ce9e9c1d-2287-4aef-abc0-71c2587682e6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3d2c57e4-4ead-4d3c-a6d1-6985a9b45064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58dbaf35-005e-4acd-a634-c1e7241e8e21",
        "cursor": {
          "ref": "c2b60fdc-5d84-4e48-b9ee-faaabd5ad3b0",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "259c3027-531a-4b0d-8b1f-1ddefe5d12d2"
        },
        "item": {
          "id": "58dbaf35-005e-4acd-a634-c1e7241e8e21",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "11d60757-eb62-4f9b-a212-02c62695f66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3054e34-3341-4763-a954-31adf2701a4d",
        "cursor": {
          "ref": "39b8c57d-a901-47d5-b0fa-bcaad6acdffb",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6b5734ce-cc25-4204-af7f-465370dbdd1c"
        },
        "item": {
          "id": "b3054e34-3341-4763-a954-31adf2701a4d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "63ea4781-39e6-442f-8a0a-2cab9f0a2d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c613bc5-9ddf-40c7-bad9-8973e93ceb3f",
        "cursor": {
          "ref": "e1192c06-0348-459c-95b4-8f2cb3efbb45",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6e5e0674-eeaf-431e-977a-9742c4e3478d"
        },
        "item": {
          "id": "6c613bc5-9ddf-40c7-bad9-8973e93ceb3f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "139fec60-22ab-4e13-a585-7df84ffce3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6bf4d6-e6f7-40b1-b9cc-f5aff0094d2a",
        "cursor": {
          "ref": "e04af8a9-d173-43df-b431-3dcc8007cffa",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "47d06444-87b5-41b4-82c9-3625db9f8b58"
        },
        "item": {
          "id": "0a6bf4d6-e6f7-40b1-b9cc-f5aff0094d2a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "db471f28-db57-4aea-950d-a104246262b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabb5493-69be-41c2-a562-0eca5641d977",
        "cursor": {
          "ref": "bc487ab7-cf6d-4ddd-b0c7-c3347687cd11",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1c0ce026-c593-47e0-86d3-9b01517fad32"
        },
        "item": {
          "id": "dabb5493-69be-41c2-a562-0eca5641d977",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ac53cf52-94cc-44b7-8ed3-466a126e0e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a20de17-48c6-4212-97e0-d4946ae3c539",
        "cursor": {
          "ref": "1ee33c3f-7c33-4b77-b362-45905fb409e8",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "86dad30f-8dd1-4fd3-86bf-6641b6834110"
        },
        "item": {
          "id": "9a20de17-48c6-4212-97e0-d4946ae3c539",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0c7991f5-5acc-4086-8a1c-1c08ec4b75f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90f9bcd-3d71-4a66-822e-00fa22d6a27f",
        "cursor": {
          "ref": "53ef860b-5a80-41a5-8801-c0061bd307a2",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2f34a3da-26c3-4b24-85d6-052dd2d8f7ce"
        },
        "item": {
          "id": "f90f9bcd-3d71-4a66-822e-00fa22d6a27f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fd183380-fcb0-4e7c-91d2-2b6c5b705edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e617fb20-3dd4-4214-b4dd-135376d7668d",
        "cursor": {
          "ref": "e94e0ec3-8444-47cf-9bb6-5d07838c6b7d",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "da84f24d-6144-4e52-b5a9-790dbc9fadc2"
        },
        "item": {
          "id": "e617fb20-3dd4-4214-b4dd-135376d7668d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e4aac9f0-1bfd-4fa5-8581-9c6192370906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9af2ff9-77e8-401a-a5e9-c3a86b955872",
        "cursor": {
          "ref": "1e813ddc-6020-4ecc-898d-3a0e1e97ab5d",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "15f1a662-ee80-41f8-ab4f-de3acf460b9a"
        },
        "item": {
          "id": "c9af2ff9-77e8-401a-a5e9-c3a86b955872",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2f614857-7e8b-4fd7-baa0-3e3e42e74706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7bcb1d-463d-40d7-a03b-198220aa3a5e",
        "cursor": {
          "ref": "a2098dd5-edc3-4705-ba65-db814049ae44",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7de64ddb-53b8-42a4-b74c-99de2391671d"
        },
        "item": {
          "id": "fa7bcb1d-463d-40d7-a03b-198220aa3a5e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c75c5b7e-9847-4de1-9588-c29b6ac9b429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb7c353-7fda-47c5-b250-c1486e7ded42",
        "cursor": {
          "ref": "84a40b22-addc-4d85-ac40-5415aa01f45b",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0a4fd720-04e4-4862-a339-f7b1db742a62"
        },
        "item": {
          "id": "5eb7c353-7fda-47c5-b250-c1486e7ded42",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "69ec9352-4191-4fbe-b38a-838bd92b62b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4242863b-3c1c-4bad-9d50-0d16b02c087e",
        "cursor": {
          "ref": "6e7179d5-6504-4abf-b758-5590d25ce1d3",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "238f5242-5f6c-4e0b-ae56-a17785550b96"
        },
        "item": {
          "id": "4242863b-3c1c-4bad-9d50-0d16b02c087e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "88f95b71-6297-49a0-8293-4b25fdcd3b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08c45ca-2a2c-4f12-8bc5-933154791760",
        "cursor": {
          "ref": "9a998b20-8b30-4368-a034-15e5af1975c8",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "052c053f-d532-4415-a816-33438aa4f230"
        },
        "item": {
          "id": "f08c45ca-2a2c-4f12-8bc5-933154791760",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "efa7d665-1504-4ffe-bdd7-f4b5d78a9974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c495ac-21ec-4a83-a588-0905001d2570",
        "cursor": {
          "ref": "1e6e1b2d-49f2-4078-9876-7f6762d2783a",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7074489a-10df-4630-bda5-5d390c01b736"
        },
        "item": {
          "id": "60c495ac-21ec-4a83-a588-0905001d2570",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "83cabfe2-632c-455e-a740-50e9a060edd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48295787-c4e3-4c3b-82b8-87b6eb12522b",
        "cursor": {
          "ref": "c7ac29cc-9451-4c43-b719-bcd43886de97",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e7bbbab9-1c52-411f-a762-205174453f1b"
        },
        "item": {
          "id": "48295787-c4e3-4c3b-82b8-87b6eb12522b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3326b884-96ca-4f6b-9b84-2c6de9ccccac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cc4eaf-55cd-4dd5-867e-92d13aa3a65e",
        "cursor": {
          "ref": "60a3ba53-510d-4dfc-8459-e0241fae99b1",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "baf55597-c799-4eb6-a7ea-b93488c396b3"
        },
        "item": {
          "id": "57cc4eaf-55cd-4dd5-867e-92d13aa3a65e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "40994ce1-1c46-4f78-91e3-2a6fdcde1f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a29d981-70a0-4ffd-9f68-9ca7455af86f",
        "cursor": {
          "ref": "f716027b-a6ba-49a2-89f3-3abfb7a24a3a",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3e81f4ca-5cd1-499b-8f0e-c65cc24d1135"
        },
        "item": {
          "id": "3a29d981-70a0-4ffd-9f68-9ca7455af86f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8ce6f68c-9ac3-45c0-bb9f-de16c86b71bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7372152-186c-49c8-8dd1-3934daadca68",
        "cursor": {
          "ref": "9bbc613f-40fa-45fe-9c30-d089a84218f8",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9685c20f-795d-4eb5-841b-40fc60a815d0"
        },
        "item": {
          "id": "a7372152-186c-49c8-8dd1-3934daadca68",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "42e69867-87b3-4b77-9841-fbb7e97bdf04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c390c2-a505-4346-8e6d-ef2648b87332",
        "cursor": {
          "ref": "46b74be4-138b-45b7-ae80-59747b214a4d",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "49f501b4-ec22-4b33-bef5-8fcc246cfd16"
        },
        "item": {
          "id": "e9c390c2-a505-4346-8e6d-ef2648b87332",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cd23a042-e072-4fe3-a362-d0d362f85f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d89c7e-ddce-439d-a45b-bbc861b35a9c",
        "cursor": {
          "ref": "b659284b-b17c-443d-91c7-ee0c4b7c285d",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "52975624-fa0d-4bf1-9583-1cbd83a25138"
        },
        "item": {
          "id": "a8d89c7e-ddce-439d-a45b-bbc861b35a9c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1bd12777-cb67-494a-8935-fd4f79ce5d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7827c7dd-992e-4866-b547-7b25e56f272f",
        "cursor": {
          "ref": "e786ddcd-10b9-427f-9031-52822b8fde72",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3c392415-0dd8-411a-87eb-540b7d60e1d2"
        },
        "item": {
          "id": "7827c7dd-992e-4866-b547-7b25e56f272f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b817fdb7-8a90-406c-9618-f04d7ce01713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae71494-1919-4bbe-897e-e170fac7ece2",
        "cursor": {
          "ref": "5103ce9a-2fc2-4561-b04d-19909274eb68",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "db0787a1-4add-41de-84ea-329728c629df"
        },
        "item": {
          "id": "9ae71494-1919-4bbe-897e-e170fac7ece2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7b1561df-ffd6-4193-8536-f9fde0472dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d3d599-311d-42e4-a1e9-d34edfc1393a",
        "cursor": {
          "ref": "154f3ef9-6fba-4c6d-85bd-743dfe8f688a",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0ff1360e-b9ca-4f5d-a0e3-4ba2137021c5"
        },
        "item": {
          "id": "24d3d599-311d-42e4-a1e9-d34edfc1393a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8cd87e6f-2c50-494d-ae68-b9f78dedaee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493474a0-7770-420c-849d-9626cb5d6029",
        "cursor": {
          "ref": "01709343-7cfa-4815-b40b-143155b8a921",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e8206052-5a19-4f7c-a112-190af74aa7ae"
        },
        "item": {
          "id": "493474a0-7770-420c-849d-9626cb5d6029",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c59c38ca-7e5a-4d19-9872-dd07c33d63ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e51322-c195-4a54-9c54-fba174c47ef7",
        "cursor": {
          "ref": "6361caa3-c4bf-485b-8872-bbeb690f07a6",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "18d4defd-68d9-4ded-b305-24a00edd93f1"
        },
        "item": {
          "id": "54e51322-c195-4a54-9c54-fba174c47ef7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "475c19ad-2331-4aae-a517-0cdeef66ee44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefec35c-e706-48df-a3b6-112f73458bea",
        "cursor": {
          "ref": "ca053d05-4b8e-4f8e-b5c8-165712bec739",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4390f694-8e89-406b-a0eb-0ffc0a89e936"
        },
        "item": {
          "id": "eefec35c-e706-48df-a3b6-112f73458bea",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bac550af-44ca-43c1-b05f-1cdf30416512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7cafa3e-498a-4f78-ba3f-7055b67bfde8",
        "cursor": {
          "ref": "05bb4df9-434f-4d1a-805e-3ca254ba087c",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a0d94f07-d3f1-43a6-a110-00eba4cfcb3a"
        },
        "item": {
          "id": "f7cafa3e-498a-4f78-ba3f-7055b67bfde8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2b9a6db3-2864-426e-9d3a-f8f795aa43a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef13042c-bc03-45f4-a475-eafda50e7900",
        "cursor": {
          "ref": "4bfbea00-dcec-4769-8ea1-5c254716b24b",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "954a5f53-4ff6-4647-9629-82866c74de2f"
        },
        "item": {
          "id": "ef13042c-bc03-45f4-a475-eafda50e7900",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "016cd823-8f89-47c0-954f-67c9f2de930d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15b093b-15c1-4db1-bc49-b82b6ec4b265",
        "cursor": {
          "ref": "c77ad101-c732-4d04-b217-4ea11f43fc5e",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c82f1082-92b4-41d2-b969-74653cd31804"
        },
        "item": {
          "id": "c15b093b-15c1-4db1-bc49-b82b6ec4b265",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8cd55810-d863-4dfd-932e-4f83c81ea45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567a84fb-7931-4830-8646-5b93f1b136ec",
        "cursor": {
          "ref": "b6f0d043-fb84-4804-a58a-374ef7abd99a",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "424bf8f7-689c-424c-94cf-e2c86509ab16"
        },
        "item": {
          "id": "567a84fb-7931-4830-8646-5b93f1b136ec",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5c797f45-c4e8-41b2-b830-94086a3ddc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67778b7e-53e0-47c8-a9f6-d17b57983c73",
        "cursor": {
          "ref": "9fc058d0-b417-4ae2-b6cc-411224fbcfad",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "10f64ae3-81d1-4e06-a094-b809a06f866f"
        },
        "item": {
          "id": "67778b7e-53e0-47c8-a9f6-d17b57983c73",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "da0601e4-0199-4f54-bfcf-19ea1dfff7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215b5630-d639-47c2-a9bb-23515790d051",
        "cursor": {
          "ref": "f2355de9-a47a-455f-90b2-717f768c0724",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c27761e6-b594-4ddb-9eb5-82bfb2871c70"
        },
        "item": {
          "id": "215b5630-d639-47c2-a9bb-23515790d051",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "de98d874-7ed7-42aa-94f9-6383f9c84e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28153cf9-e9f5-45b0-9a94-54863c6171ae",
        "cursor": {
          "ref": "a2b9b23b-a151-4da6-82c0-7e42f518c1f7",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fb19b152-5a14-478c-b894-786a3a12d13a"
        },
        "item": {
          "id": "28153cf9-e9f5-45b0-9a94-54863c6171ae",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "20e38c72-9ad1-4cd5-833c-878057c7a02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4390cdfe-9d28-4af1-9352-445d5d731419",
        "cursor": {
          "ref": "4f99e6e9-b7b4-4265-891b-b9f42dadf7bd",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ed87368d-8ddb-48ad-840d-2b9f2c153df9"
        },
        "item": {
          "id": "4390cdfe-9d28-4af1-9352-445d5d731419",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4c959f1a-7fd4-412f-83f1-bd63e1c622c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0d5603-2ae3-46c4-aa86-0595805b579b",
        "cursor": {
          "ref": "2020fe12-e301-402f-8108-fb740c74c00b",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f8ac84f9-4776-408d-bb24-9a829a58f5a0"
        },
        "item": {
          "id": "8a0d5603-2ae3-46c4-aa86-0595805b579b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8e0ee111-ede5-4233-96ac-5477349ee47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f622fc-25c9-456d-866b-1e2d630c846a",
        "cursor": {
          "ref": "eee75c12-9941-4a76-bffc-45bf0c04ebb8",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e5e34552-6e16-412a-bee0-ab714c5e6278"
        },
        "item": {
          "id": "43f622fc-25c9-456d-866b-1e2d630c846a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d362451a-35de-4e75-bfa3-f0298403949d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e27b1ad-57bb-4162-9eac-e72714affb98",
        "cursor": {
          "ref": "50fe1ff2-d288-49ba-a8fd-a93e92624c8e",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b01ea79f-d017-49b2-b2f1-eb46072f6d97"
        },
        "item": {
          "id": "8e27b1ad-57bb-4162-9eac-e72714affb98",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "41b05422-f1f1-4b24-a8b6-b936e0803151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7580ee31-039d-4289-8b74-34fa03d24729",
        "cursor": {
          "ref": "11db2e32-293e-4c78-b42a-fb331c90676b",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e8d6781e-9450-417c-84f5-364294a85cda"
        },
        "item": {
          "id": "7580ee31-039d-4289-8b74-34fa03d24729",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f420c7c5-e4d9-4542-ad18-9a719f205280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a432e5a7-8469-48f6-9fbe-dfe3a6819c41",
        "cursor": {
          "ref": "f72b5d85-c95c-4152-9d4b-cdbca37cdf5e",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7f785eb7-d5ed-4bfb-8563-d958c3f02817"
        },
        "item": {
          "id": "a432e5a7-8469-48f6-9fbe-dfe3a6819c41",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ac5aa33d-7456-4447-a6d3-c2ce1823bf91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c78e8cc-f90a-46a8-ab9c-4770007af2fa",
        "cursor": {
          "ref": "f46faa38-00e1-4c9c-9290-7d6966515999",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a594af03-d637-4570-a92a-5df5ab456d8e"
        },
        "item": {
          "id": "1c78e8cc-f90a-46a8-ab9c-4770007af2fa",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0da989da-716c-433c-975a-f8bdb8055944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee4763c-fdb8-4824-ade4-75706a5ca9ec",
        "cursor": {
          "ref": "67364db7-3108-4821-bd47-46273021ae45",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "41c151fe-7094-403b-804f-8aa1be2e57c4"
        },
        "item": {
          "id": "5ee4763c-fdb8-4824-ade4-75706a5ca9ec",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0df3fbd5-e537-4166-b562-f802b8450569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e57b67-ab82-4cd0-914d-d6fb76765235",
        "cursor": {
          "ref": "0af1cd20-6849-449c-ab01-f5f55d664285",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8278a2f2-ebdd-4fdd-a3fb-c3717696cbdc"
        },
        "item": {
          "id": "d5e57b67-ab82-4cd0-914d-d6fb76765235",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ac63d160-f344-428a-99d5-720d5c685e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a440fa-d98c-4fbf-868e-440276847a1c",
        "cursor": {
          "ref": "0e561f5d-3e44-4bd2-b97d-54a846a4a13c",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cd86610c-623c-4b89-ac27-6ebb5aebd44b"
        },
        "item": {
          "id": "f2a440fa-d98c-4fbf-868e-440276847a1c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "32a0f605-b160-49b8-91dc-1cab728f38b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918e97d8-9962-449f-a403-12c4749403bf",
        "cursor": {
          "ref": "998eef11-412e-4bcf-9922-ad85d5544d90",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c55cb262-2d8a-4252-86a7-74c8bfe56fe6"
        },
        "item": {
          "id": "918e97d8-9962-449f-a403-12c4749403bf",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f87421ca-5ad7-466b-8bc9-64e305c4fdbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988e994f-f673-4bcf-b2a0-3e6f6775ecca",
        "cursor": {
          "ref": "73f30d59-4776-4755-b07b-753e191312b1",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2e5fabcb-0620-4c3e-91d6-6c05818ab788"
        },
        "item": {
          "id": "988e994f-f673-4bcf-b2a0-3e6f6775ecca",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bf1a3c4b-c8be-49c6-9417-e3c5b76e4085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aedd11f-4a2a-4120-87bf-01a13b33176d",
        "cursor": {
          "ref": "35e9c9c1-06d7-47fe-b3de-0ffdee2e27b7",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "92c6203e-a608-45e8-a966-ad7091aeb00c"
        },
        "item": {
          "id": "0aedd11f-4a2a-4120-87bf-01a13b33176d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f88ccc2a-66e6-4dff-86d3-731d6e58ac23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e155fa16-a06c-4921-b20a-8bdd2023e591",
        "cursor": {
          "ref": "787aeb73-7cd9-4884-8bb4-0f7a39664648",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c59d2441-8416-4ee4-b131-d111ff4d4316"
        },
        "item": {
          "id": "e155fa16-a06c-4921-b20a-8bdd2023e591",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2b4c7088-d515-4c76-be00-c9ace9ef3cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19255270-293f-489b-9237-6dae6f8bab6b",
        "cursor": {
          "ref": "8003044b-4f48-4e96-8293-c41394bb2388",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "54766dc2-0125-426e-9cf9-3b47c4132672"
        },
        "item": {
          "id": "19255270-293f-489b-9237-6dae6f8bab6b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a6013b06-dcff-4d2e-8ebf-413813d9089b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dbbbcf-252b-4451-b672-c4c7b130be93",
        "cursor": {
          "ref": "3ebfaf07-4f35-470f-aa81-02b6be1ac7c5",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bc9b07cc-6849-4f36-877c-7a56bb6a9569"
        },
        "item": {
          "id": "12dbbbcf-252b-4451-b672-c4c7b130be93",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1d3cc06e-29cd-41b2-a3ca-509a41a74246",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0899bc2a-fd38-4d0e-945c-e2f28331bde2",
        "cursor": {
          "ref": "5e87b0dc-7378-41c3-9c25-7ffffdcee80d",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8fdbb096-7eee-48c4-b5fe-19c55b2db43e"
        },
        "item": {
          "id": "0899bc2a-fd38-4d0e-945c-e2f28331bde2",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "158addc6-d860-40fa-a37c-7750193e3913",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 3,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b8334a-3b55-4742-bba4-c25d5bdc188e",
        "cursor": {
          "ref": "f3c31035-c188-4812-b7c1-529325c30e6f",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f6728717-416d-4fb6-b66f-6d2bfb40caad"
        },
        "item": {
          "id": "75b8334a-3b55-4742-bba4-c25d5bdc188e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c730edbb-4555-47a5-9d14-712d426d0dee",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a3839d-344f-429f-8c64-dbe34269aa5c",
        "cursor": {
          "ref": "f6013cfc-fc67-4fc9-aceb-5e887d10efcc",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d2f7efc2-f325-449d-9e11-fde3416fc051"
        },
        "item": {
          "id": "d3a3839d-344f-429f-8c64-dbe34269aa5c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3df9c042-628d-492e-9799-e3c3be1b18d2",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "86275140-e362-47c9-9ebf-83a45956dcb6",
        "cursor": {
          "ref": "bf7a7b12-025e-4604-8630-c4a2afb80b82",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4a004bbf-504d-45fe-a5ef-68c479c8e919"
        },
        "item": {
          "id": "86275140-e362-47c9-9ebf-83a45956dcb6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a1ce397f-5670-4115-b3e2-e9434b81f365",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1942f7-d25f-40bd-ad57-c21f78509e69",
        "cursor": {
          "ref": "60e47d1b-6044-40f9-a368-f92af852fdb6",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c9a8b2f0-00a1-4547-9116-c6bdc1b2f151"
        },
        "item": {
          "id": "8d1942f7-d25f-40bd-ad57-c21f78509e69",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "824f0893-a300-4e24-8418-980dd5a2933e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1942f7-d25f-40bd-ad57-c21f78509e69",
        "cursor": {
          "ref": "60e47d1b-6044-40f9-a368-f92af852fdb6",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c9a8b2f0-00a1-4547-9116-c6bdc1b2f151"
        },
        "item": {
          "id": "8d1942f7-d25f-40bd-ad57-c21f78509e69",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "824f0893-a300-4e24-8418-980dd5a2933e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1942f7-d25f-40bd-ad57-c21f78509e69",
        "cursor": {
          "ref": "60e47d1b-6044-40f9-a368-f92af852fdb6",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c9a8b2f0-00a1-4547-9116-c6bdc1b2f151"
        },
        "item": {
          "id": "8d1942f7-d25f-40bd-ad57-c21f78509e69",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "824f0893-a300-4e24-8418-980dd5a2933e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8f2e13-739d-40c5-8cc9-5f5cc913ea34",
        "cursor": {
          "ref": "e7a5b054-8bc9-446a-80ee-b7b7f7dc2db4",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "10995e39-492b-40ce-929e-a7ff0fb68312"
        },
        "item": {
          "id": "3c8f2e13-739d-40c5-8cc9-5f5cc913ea34",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "81278d52-f7c9-4171-920d-aa8f22819c18",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fb1c8c-85d1-4131-8d92-c3348373dd1c",
        "cursor": {
          "ref": "8e029214-513d-4171-a272-a78e585a6a4e",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0a01e2c4-a8a8-45f1-a33e-31f1c6d24ea7"
        },
        "item": {
          "id": "25fb1c8c-85d1-4131-8d92-c3348373dd1c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f9331bbf-6623-468a-95a0-d16b230cf2a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fb1c8c-85d1-4131-8d92-c3348373dd1c",
        "cursor": {
          "ref": "8e029214-513d-4171-a272-a78e585a6a4e",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0a01e2c4-a8a8-45f1-a33e-31f1c6d24ea7"
        },
        "item": {
          "id": "25fb1c8c-85d1-4131-8d92-c3348373dd1c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f9331bbf-6623-468a-95a0-d16b230cf2a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7326600d-8118-4439-803b-df52d44a0e73",
        "cursor": {
          "ref": "a94becc4-12c1-475f-9637-b14302e58eba",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "496db312-ee1e-4e35-8837-accc0a2fac60"
        },
        "item": {
          "id": "7326600d-8118-4439-803b-df52d44a0e73",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ade6d7cf-466b-4204-b38c-f668b017b529",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 3,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcd3e42-a88b-445c-a660-446ec00e5511",
        "cursor": {
          "ref": "5045448e-2e06-4194-90b8-586168a7dd16",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "67085d57-857b-49b4-bf82-e91343740bb8"
        },
        "item": {
          "id": "0fcd3e42-a88b-445c-a660-446ec00e5511",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "002fd7cc-1b25-4f23-b7e7-a01c7edb9670",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcd3e42-a88b-445c-a660-446ec00e5511",
        "cursor": {
          "ref": "5045448e-2e06-4194-90b8-586168a7dd16",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "67085d57-857b-49b4-bf82-e91343740bb8"
        },
        "item": {
          "id": "0fcd3e42-a88b-445c-a660-446ec00e5511",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "002fd7cc-1b25-4f23-b7e7-a01c7edb9670",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532ce6ec-daf5-42d7-9f63-9b3ffa98ed10",
        "cursor": {
          "ref": "39b8fb3c-4fb4-41ff-b018-ea63b468a99e",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0cfd402e-d259-4a99-95eb-2f4cda70f2ab"
        },
        "item": {
          "id": "532ce6ec-daf5-42d7-9f63-9b3ffa98ed10",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "d9b1fc10-8aa3-4880-9024-933954ccec32",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 3,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}