{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "86e335e5-0f29-4677-94ac-60229816163d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "521b8df8-ebd8-4444-b820-8e81bad0ed67",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "561d3df6-53f0-4a49-8cce-7ec30aaefc2a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a3e51da9-73cd-4bbf-8ccc-7e4c1a7829f8"
                }
              }
            ]
          },
          {
            "id": "8b8e23ea-2f73-4f6b-80ce-ea8e53d2e147",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "67e0d7be-240e-43db-ad55-8a68e11df571",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7439b044-5cdb-457d-9852-b678ce4b5f22"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "23f45fb5-08d4-4b6a-9a45-6f7acbe0fe07",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8e2fdd67-1ee0-4ff1-b813-e84f53992336",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5b2f8525-35f3-4177-a001-96ebf9c8cb2d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab64a1bf-8176-4911-ac4e-b7e1c9339a47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca492c37-55a5-4836-b9ea-9c29f56b96a5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ab783945-068f-400c-ab43-db542aa6518c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "52ba0811-4d73-424a-b613-a23b4a900d3a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "45baaec4-a0f2-46a6-8393-734e75652fb2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d46076c7-5385-4c87-aeb3-edaf94edc161"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d09b2abf-3730-4c7e-8b03-6ec01febee5d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fa906051-5c56-4766-bf85-2dd3ae37a59f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d68ca88-c61a-4ade-8abb-06bc4037ccb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fecca2cf-c50a-4aaa-99fd-aaa33b23ecd8"
            }
          }
        ]
      },
      {
        "id": "e3d7e055-bd20-45ca-bc27-ef80c53b5a2a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "423b16d3-812b-4639-bf2f-930e56e233c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0de2d13b-4f24-4736-8d66-05455d2e5bfb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "489cee8a-3ebd-4d73-97f8-ccc39f39adaa",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576b9368-f5ca-482b-9f54-ac5a7da0942e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4459d290-6fe8-4b65-b633-ad72484603a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1968803-8871-49f6-8523-752b41354f64",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7554386-8724-4112-9aa0-5516cf55bd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53b8912f-7c6d-4909-a799-2094ce0a6525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ff7ccd-eade-41a3-b94f-aea46d2f5240",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165d5351-4a79-4395-82dd-888a804a395d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fd152f2-9bd7-42a6-b7d3-044cb5c798e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e169364d-2ce8-45e6-8fce-340a120d0c20",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db1a10df-c7cd-4cc0-819b-4c362818bbe1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc7d541-0ca5-4de3-9d68-3109964ab465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd0a730e-961d-4ad3-8555-db69e5c7d45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf89d4bd-d64b-4c0b-8637-9ae0d9945384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519855f8-4da1-455f-bc14-bb824753ba4f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6a4269c2-b2f3-4cbf-8890-654102b8d82c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f550dbe9-6b11-45b9-8df7-206869737059",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4aae7ec-69e8-46aa-a721-21d0beace5e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "73d2adb1-cd65-420a-a49d-4a14cf050aa1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ce4bec6-f053-49a9-9f77-2bf44a7ef69b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8dccd517-9e31-436b-a965-bf8ca4bcc933"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a70399d-89f0-4eca-8426-73152190570c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5405e663-f0b6-4fe4-ba6a-925c6fe9340d"
            }
          }
        ]
      },
      {
        "id": "76e04f30-bc9b-4881-8d24-9708e1eebc35",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2dc4a632-7881-4dcc-9dd2-db9bc7f2b3b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c06eadfb-d369-4cb1-9a31-5d1a171ef372",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e6e71bb3-6ca0-402b-a0aa-f412afa44513",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be95062-8a97-441b-8131-b8e1ef993d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f73f08f-4700-4573-8ce1-ab638497e69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa20e4d4-33a3-47c9-a784-8e3957708e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72b85c47-0bc1-4af5-a09a-98033c258703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06beca6-76c1-4b32-9087-a04b2336f1ef",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1513a1e0-4d40-4cdf-bd1b-30c7bb4b1247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7881aaf0-c286-439a-9133-2d463c3883a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f12913-506e-4136-8fdc-fe85a65442a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5aa66ced-d516-4287-9c7d-545b71606bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84757ab5-b86c-4420-9f45-a6304fd8a53e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbc9ed5-adcb-4646-ab8d-5fb2e89d708d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad2617d-b0a8-41b8-b8b7-387ca5901e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec447fa4-4284-400c-9a17-83d873093bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b712fec-868a-4b08-a154-b3ee373ded68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8764ad-2d4b-4cd4-95e2-d191fa214b1e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d21132-d81c-4117-8c5a-fb6e8c3957a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3639c8-469d-4e77-99e6-6c6d14134098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e93f742-dce5-4ebc-9b8c-cf3cb3a390b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e14fdb8-d673-4ace-b744-11d53b8e7672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9b1e0a-cdc7-4be8-b8c1-c931baf7c059",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c09cf9f-b244-4b36-9b5d-2313be3bc9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9945bc12-65c4-49fd-9527-4779dcb06718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97140175-6f15-4342-a9fe-999185446449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fff2593-e3c8-41e3-99dd-e49bb645249d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54952e1d-1000-4799-ae68-a184bd8ed778",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b49fcc3-d6d1-43bc-83c4-1650934fc3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa7c6cb6-40e5-437c-880e-9caa5d8af68c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f151a5e1-06f1-4db8-8721-37f2417278ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51d74e38-3a9b-4d75-8c9a-7e3158bdba91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c610546a-793b-46cd-80a3-bdc56463326c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7c01b3-a051-4277-b783-f6edf925b5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e685d3-4c77-4d5f-a966-d15a0dd2cd53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013f2ee8-3b9f-4be8-8763-54d1405d7136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ddf5bde-9a6d-42c4-8869-2dcc6238dd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3d451f-a188-4a30-a574-daa06307490c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6222bf22-ca92-423f-ae18-83e7336e6f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e312ba-5ab4-4551-986a-bca4be76faea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c251a6-e044-4031-8be2-715a3a4263ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb491db7-74ca-4e30-b22d-061da03a8f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459c9c29-69d4-4fb1-92d2-24b7bd32386a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574dac4a-87d7-4bf7-8aad-b000d85c4f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b78e253-faaf-4265-a5ed-527387d2870f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266f2ff7-48af-44e0-b0fb-9eabfc877483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccfeba43-052d-415a-93d4-5ca4ded915aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e60edc9-1ee0-407b-94f7-0d2b944c6b5e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8daa55-a71e-4ae6-aef0-b50bd3ba74b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42333e76-b270-4d2b-af3e-fe4d4f5b4d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6437ce-e49f-4e77-bc4a-5384baec0d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63e39fb6-e9ae-43e5-b453-968954ecd1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14881df5-bd09-4b3b-a5fd-abcba1b183b9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfc9834-bc42-4f3e-b9b3-0805ce648105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeedf8dd-ec2a-4957-be00-c4fa8375ece0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57d3f44-0326-4847-9537-944bc7e84528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79458a48-70b9-4c98-951d-73e077e128dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23906aa2-fad9-4879-b44c-182adefadf81",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77513603-4480-49cf-aa2a-0e6e1d52c735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9959db1-b681-42e0-b5e9-3784da5e6d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6c9b8a-fe03-4eae-9e84-728ab35dd914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8625caef-8688-4157-96e2-fd596e41fa5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff9d002-9ae0-4bb6-be69-3e71c997089e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175639c9-453d-401d-9778-ad1aaa9f78e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a16b5a-cd9d-497d-8678-05181e3e9584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c8650f-6dcf-4227-9577-696cbcb0092a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ab036c3-c0b4-4e06-997c-ec85e7cc2400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214b3b49-947b-438d-82e2-14bcca6be59c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15737e43-026b-4c69-87bb-9b236a4f587b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358ba29a-bd0d-4ef2-9922-75b1cc05ae43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c736008-9f2c-4245-924f-689783e99ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e51fd3fa-715d-493f-88f9-895b4efc4291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59bdf10-8cae-4b8f-a88c-b972bc054e02",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18a5648-7e32-43dd-b17c-65c9aaa54d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e8ce99-4049-4eaf-b51d-bdd3c1f097d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd955d3a-4686-4d51-81d9-d73f5e2d1ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2b7bb9e-2e3d-42a7-8513-c6f5770b418c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a0aacf-f149-48ef-ac91-57c17513b64f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35fe229c-fb57-49f9-b3fd-f4ef35c273bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da884e5-1c2d-47f6-b8c6-4ca374287ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e36393f-2d51-4574-9d8d-581a2b9d826a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9159d3f7-2c80-40c0-b1e5-12be63dc0657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929b086a-e6c1-498e-b488-5e55326e8e3e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e47383-294f-4f77-ac9a-9479b713a018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fabef974-fb9b-4a9b-853e-e599667e697d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74bc232-b788-4ec1-8ae4-f3186040ee4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2a06691-4c96-4d28-a29d-ebccc1da8598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b192c57-ce34-47eb-a3bd-819871a6563c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1b02ca-a471-43de-9501-7f023f8728f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec08455e-9c38-4752-a2d3-68961311407c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb15b9c-850c-4c28-9fb8-b61ab7518b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0fd633-18cb-4009-9001-6d08dcd8e1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b2b546-2aaa-462f-9bc6-b42786e274cc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02aad048-b0fd-474d-8005-b079bfc03dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c7bd65-fa98-4dbf-9669-e8bb5052fe6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b194a9a-81f3-4f01-9822-ebacd2d05bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a35326c0-e5b7-4786-9fb7-444aaff772d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90b6149-53e4-4d80-b729-edfc6417bb22",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a358e30-f38d-402b-b7ae-d4b2bfee416b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "457bfc0a-d901-4305-a743-ce83151dc650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0d502d-bc9b-4829-b030-7ca1e42ce20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "773ad03f-08a7-4ba6-ac27-17d04e7b9dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13908764-0a98-4e2c-961d-a6f84719c849",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf221e0a-cf12-46c5-b746-cf782dcf5b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44535b94-bca4-4a72-9bed-d6afaa8d65db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bd0b4c-4733-4c0f-99d9-fa754211b18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e089671-e217-45ba-a6c5-29a423d416fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe5f9ef-dff0-4094-82a6-371149512b14",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d79ced1-db7d-4c4a-9a66-79421def4b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12020644-3f66-4deb-a926-7a0cb063151e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154152f2-3a46-4072-aa37-053b33f2e6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6003502-9c0b-472d-bb79-aff955e11a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873155c9-0cd1-4e32-8827-6c2cc4f3e078",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e354a8-effb-446c-9295-123fbebd4ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b7ed8a-0826-4f7a-b038-34614bd9ba44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4650a104-3f30-486c-b155-e5ee5ca66750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c253483-5ac9-47a3-abd0-031dc9faac77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e6eab2-04f8-41bb-a949-78641714625a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073af1a2-5885-4e7c-8225-bab75986c029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b9e81b-3de2-42ee-be5f-b4a823e7ae5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae34540a-e0c1-464f-87a5-c2a02cc63150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2150b44a-7db2-4aa3-9fb9-f016bfa2b026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3dbcee4-16a2-4383-aeb2-e37cad7dbf7b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0991a027-c2af-4f36-a831-8db1d967218b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1738d4b6-493a-43aa-8c42-ef3d23177f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4c952a-7a02-4060-9291-fbe8e8736d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fea399a8-ac2f-46d8-91fb-0a8bbb64dfd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04748d40-5ffa-4a49-8bad-ca021923cf03",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c20e85f-01f2-4ddf-a45b-2df9dcc6dfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d8aa7e-7400-45ad-92a7-7e3f0176c6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbbdf57-2ddc-4f63-9a07-0bce1a82624d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f6149e-616b-4915-8400-4b4e64f64c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34922d2f-4dc3-41c3-8aee-5d5d41524a92",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0c7e44-ae6e-4cbf-9638-364926426bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f5d032-3fa3-4d6d-b259-bda665ef18d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8b886e-5a4a-43c2-9b41-3f8b32312b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "545852ed-c046-42c0-a82b-66b4cf8137e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b57a69-36fd-437a-bc60-74268fb9f116",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac9fd15-6fbc-4374-b3bb-6d6c613b375a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039e7c97-2ae0-44e7-b6ae-b3497f982435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420ac080-4eb0-49e4-882a-d24f4929a7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d902047f-e29d-436b-a2c1-cc7055865a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a1dbcc-ff90-46a3-bf1f-afbcad409150",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8062e5-fa2a-4706-91a9-2612200c996f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d093b7-048c-4c7e-b447-738db2c7f446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e347383c-5ec2-40b5-851c-76c2a9e0d290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d88b7ff4-a689-4d87-8f54-527cbb80eb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108ff802-5326-4c24-ae98-3b190eafa38d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3467190e-800f-4b32-a417-1448fbdb2565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05281f17-a60a-49f6-b78b-3435f0545dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ccdedd-ac3e-49d5-8bf7-8b3c73d5c373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "97be84a6-47ce-410e-9ba3-ca70b7568d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dcdc9c-e540-443f-adf0-e83ed5f4818b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54210aa8-3c8d-4d6d-b526-87290d525d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709a830a-01d6-4724-a607-190d26ff411d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08802969-14c3-49eb-ac6f-1573e07dca39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "52e68b75-aec9-4f70-8fe8-c1721eb60b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8528e255-e51b-43b9-8ba4-0fa08fe2a5e6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659feac8-0e54-439b-b043-939870bb33ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95980f5d-c778-4a0d-8b15-ab422555bac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7539afae-ffe7-45af-b898-799d61c7b270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb4fd56-f157-4a46-893c-681e8d67886b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b82af62-b740-4a61-806a-d7b97dce81d2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96b486d-9b7b-407c-b4e7-354223a45fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8024baa5-661c-4377-9318-3c183f9fd8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c11cf5-4a3e-4ed8-9963-6a921d49ee58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73c8ad7c-d10b-45ca-b9f1-2da1dd34b4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d00ff6-f773-411e-9926-8f6e9d0eb5e2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbde4b3d-c7cf-443a-9f3d-1fc59885dfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b986ae-b399-4d3b-86fc-d91c71b544e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db62620-f603-4c54-b975-d7c647b59366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb2152d-2abd-477c-8354-85d88dc9013f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999da781-657b-4292-ba6e-f497b9de21d1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35daa98-03b4-4169-bb3f-066243a2443c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e65086d-48a8-42af-882e-74dd66204eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fec705d-b72e-4a2d-99b5-5469390372cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2aabb331-5204-4a85-a076-045240f257fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699e91f2-dabc-4efd-b498-f1f6f96d0b3a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d4ab03-750b-4759-97d7-ba3948d45b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ea8669c-4784-4344-ad3b-5a4028c8f5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391dccac-049c-4483-b51d-e24ac502db23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "022b70ad-4dc2-4972-8782-bc8740e97b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e7a0aa-21ea-4fbe-8387-6e0994b0c2bc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549fe63b-0619-4c8a-a3fc-26b870109273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c256b2-e356-42df-82e4-56943ddf28c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f95bfcb-3d55-41cb-8d91-f49c0f32d66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd00f563-584b-42d8-8976-c358d6d7906f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11f8d4d-cb5d-4f09-adc4-fcfb97f9e58a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fbe799-f442-4b18-b118-ecf2a1f9ceba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1813e1e1-bbfa-4dfd-9ce6-de8b4206a069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff2ac87-1631-4fec-a6f0-e385930e2c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3eec4409-6fcf-4c35-984f-9506df3e3745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7b5cde-f2e7-49e6-acd1-eefc1d43b5b9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdd7a19-daf3-4ac7-b72c-2c4a29c0bbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ef383f-6c58-4bc8-8751-9aacbfdc662f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389a1264-080b-4c5e-9c71-83406b37d6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "920b6a49-e0ef-438e-b558-7cd279a41268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974cd802-85ef-4b21-91f0-951c39fc13ab",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63635e7d-62c9-4c79-9de7-d8e0b1a4464c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90ef28d-31f3-461c-810e-c091bedfde15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02564ff-5ccb-4308-afeb-86e46e121c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "31f4afc4-1a93-4c70-a614-49438fdb3056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6e8a1c-9e86-4725-b9b8-e981a748859e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b38553-8e3c-41ee-80c8-aa15bd49b748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d32d9e-9607-4c47-9222-0bc18fc75914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f099f664-869e-4ff1-b64f-a39071963cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "95f8ad89-44c6-4a64-8aec-71c1708a6c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d76c7c0-abdd-42f6-9c66-7acab8548aff",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74eae957-0d7f-4be7-bca4-8e7f47472277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13062362-fb4f-403c-b2e9-250c65201d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3ce0b7-1567-4c08-affe-491ee5c65bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "93e67383-a940-45fb-ae8f-5b9baa86bee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c84c08-4d03-4a97-9ff9-0e2f5d03fdca",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccc0cb6-67b1-49c5-a0a6-d8ec72c38529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956523ef-387d-40d2-ba67-79b4d8a71428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0efb26c-3a85-4d0c-bb42-ccf2bb795336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a66088b-dc51-4d94-8322-47ecd87806d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3d27e8-e82f-4005-bd40-7d39cafec314",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdda5d55-c2d8-4cfa-869d-7764b05472c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e9a1b6-3b55-4937-97fb-7a0114f1213d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24d2714-e083-4598-926d-0ce411fd2e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce27aead-2a66-4859-93bc-d5b80c8574f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97720b4-0c1b-4cc8-8013-827fdcf434b9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a80d2c1-647f-4728-bcf2-24941e2ad15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f659f55-97fa-4169-8d1b-81ebee66acf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7acc53e-94c9-47ce-a9f9-0d5d3383b726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ac3495-9eaa-4fcd-b584-430a6bcbfe95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38955b89-3956-4b22-82d5-c7b715a55f71",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eebb2b1-1bc4-44f5-bb71-704f5ddd7bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca86946b-20c6-4975-a09c-2f953cbdaebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde2df57-30cd-4672-9667-c68c2b5b9b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6fc6c21-cca2-4ca6-89c6-54ff8fbd0f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27ef99f-3f65-4f30-834d-68bea373908a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ec6576-a9b9-4834-a8a4-5ebdf7e9dba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a12bf3-2adc-4bbe-b69e-a183be4a2404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0076a7d-3fb5-46a3-b069-f12b768ba87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f789e551-1e21-4674-b7de-3f4f3188618b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83753b49-eda7-45f2-a8a2-102b474484b4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2d1fcc-3ed6-4823-ad96-124629e872a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88710c04-1f0a-4ef7-b411-38030575fdda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba8a939-2042-42de-bb06-21be5e990ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca981da0-3c77-4c8e-8d25-614a3e59d099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4d4e6b-f537-45bf-a9be-ef3d3462ba92",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10d7190-1e71-46a4-9f07-d3ade60af67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a0aba6-b5b7-407c-b8f3-294093750df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466c168a-6fc4-4673-b94f-f6dfce3bb20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ca4b11-f61c-4e15-9e4e-354d009b3ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7a1139-a7b5-4ee4-be4a-5ff1dc49071d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79aa806-7608-45cc-b90e-64636e9bd888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c36002-59a0-48ca-bd9b-eb8cf6d3f072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890c758d-ebac-455d-897c-7bc4f8ded436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7ffd06-70f5-43b1-8f18-5f43db25639f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8e68df-dc54-40bd-8beb-32f8ca0f62be",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b76b03-1b0d-4735-8d51-22255a06afe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fab096-7290-4fff-96da-f46123b44388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716ff1e0-4bb0-41aa-8d42-752741f3cef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0389e29d-2a68-4052-81f4-0a22536e78cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a8fd28-71bc-41b1-add0-d41d4af4787a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcfc1ec-3291-4494-8e6e-e2415d8c667f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d8ee5c-3ff4-4018-9a24-075e565f29a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ff3f4c-153e-4da4-96ea-3b323ee327b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "145c84f7-7991-45e6-adbb-89763171be37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d439f7-451f-4b7e-a44f-0e8fb5542b2a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d1de67-091a-4315-a509-8c0b2a11c76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7c31a0-291e-486b-beee-eb29ecf7a546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32a9699-c120-4415-8fff-49918038f9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8714c0-75fd-4ad2-b25a-88999a14eea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f7abc4-416a-4464-ae85-423efffaf635",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214a3f3f-728a-4fa7-9230-774beae30f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "206e0f34-9066-4aa4-a0d1-93d16b0157d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b63199-0dab-421b-9e21-235c96ddad38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57ffe623-4469-46da-ad26-555b1569d4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce70518e-dda2-4740-ad61-17970d62b5d1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d5dce7-4615-433d-b936-0364e98c9b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f9c2f4-a824-4617-805f-68c56b4c7d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d6b297-db6c-48be-b37d-edf7c8b6798a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e17b83-0e1b-4a41-89d7-08e08c848605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3ef6ec-b003-4214-abfb-d97efdaec2a0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33593d7-1398-4cb2-b0ef-52182acf9b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4270e1c-9762-48f1-a4bc-214edae18bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61d46e5-0c84-4b2a-9c69-933779febaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "713fe318-da5d-409f-82ea-e81d90517451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05af28ca-d774-4d8b-9e8d-41b39495863f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491289d2-6d4c-4c92-a9b2-80263a829e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef37a48-8f2a-4429-81bf-b2868dd8c4e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2888d8e9-92e1-4ffc-a121-e09f2d4a1bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "985e3823-22ae-4b2e-b3b5-2330c6e8c74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869c6b21-1fa2-4b61-a8d3-ef2fb06529cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0a7dae-00b2-4c86-b0c0-ccf5c6b59330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1bea25-58ee-4f6a-ac31-76e3b305afec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28e2783-8ca3-4b6a-b54d-c2282ef21ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9242e5e1-1a4b-45e8-a798-9753c50e6d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198356c5-7a94-47d4-83e7-b7b0a273270f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de3e5e3-b94e-4172-b93a-e41162b97763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd297ab6-da23-4225-86d8-616215c0c130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a625a298-e364-42a1-b8b2-c06573750f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dac8a1b-ac6f-43bd-82a3-3d4b80e4332e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d57742b-bf0d-4579-b7b9-4fb5b932e681",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e933defe-d034-44ad-8b09-04f9ffb04978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce3fb4b-3766-47df-88a7-99a1a3152977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0503d51-ca6d-43af-802d-60d2479e99eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7754c38a-5dd8-4d51-814f-789b08331156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a56611-6991-4783-8dfc-642f464e8571",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7011a10-855f-46e6-93fc-4705c2e6d948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3defd3c0-6b5b-49a6-afbe-9163472849d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c6a46a-1ad1-4ae4-b968-bff20ea94f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5cc8ba2-2076-4ca2-8488-f4eadb1425f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f003de5a-ecb9-4424-a0ee-127e4404e927",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bcfdb4-eeb1-4093-8bd9-cbca8d1ed26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12ec69e7-be7a-4c51-8f45-a9dd2a1dced8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ab57b8-de7d-448b-b25e-b34288c90b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9da0662-177b-49d4-ab70-88c4e32cb925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4a0799-28ee-41d3-bf62-39f0747ead08",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c088c13-3487-4223-8d5b-86d9679a65d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe457f3-1c06-432f-b154-625432280d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7648cc-4024-44c6-87b0-5b9167cb8b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c22b02c4-c95f-457d-abd0-b0d4e1b76938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65b3bc6-d8bc-497a-9553-ac8d143d6237",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881cea43-723c-44c0-89a6-dd6f89c44594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba472a0b-8963-43a9-9cda-b61e08194c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4e9fe3-fbee-43a7-a0ff-5ab20eab5e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d73a4b66-b293-4b86-8fb2-0df20a26ca6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de49c07-aba1-42cf-b0f9-8d3c6a760134",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf807342-9397-4a49-a6e2-37ae514e5963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "090cfef6-7667-474f-b75e-af3045367486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8512c5db-9eb6-4c59-af42-693164c5042a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d82411f8-ce31-4619-9fac-009c608f1d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb982c9-a3c0-4dbc-a3c3-4b629d951d6b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef44a5a-523b-4f67-b554-5b217cbe1ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5809fbc9-d5a8-49c0-ba2b-9fd4e1d12643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c190e02d-9570-4860-8efd-a471c02361ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84393753-e1ce-41d6-8aca-0f6323cb0d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcacd1b-1e0a-487e-897e-21f1e0b8b7e9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1389c7-ce43-4771-a8b8-71a5712267af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1456e2f-eac2-4f5a-9490-2c606ffb9bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75a1380-a648-494c-ac3f-4be814e42229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66104e1c-5034-41ad-87d0-5eec1817c44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b135fd1-c898-44d9-966b-bbc17da72151",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6fd6fc-632a-48d4-9cf0-ac1a4eba37d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741ce0b8-d7f9-4e9e-ba2e-62b0522663fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee9b5cf-9ba3-4346-83d6-ce0a7dbf57fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "93ceedc1-cab1-4438-a144-6c386504e3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80257cb6-00cd-4c21-bd82-9a5ac31979f9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade6c475-e9f9-4a78-a1f6-1b4928d94cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6dfd40-5d25-49bc-9497-d25dcd5b7c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2f7cd9-ab5e-4772-9397-077cc9a58823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "73cb231f-7c69-4d8d-8efc-c44702eb2b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5038010c-ab93-40b9-a3f2-cb5b002f7bcb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd78470-a864-4ff5-82fc-b99759dc26a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9723224b-df6e-4b04-8b54-f731869ef36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ea9438-30a4-427f-ac9f-2a68f0254f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d00d46c2-825e-41b9-91f5-8d9672b9c0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adcaa97-0452-455d-948d-ca4d56c48802",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02071b13-1ac7-43f1-97f9-0cc33c588bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45816435-df55-4e87-889a-cae1516a3d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ebd9b7-fc7f-4461-9f5e-0874db2d3477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3069d0-1456-40ee-92c4-240c50475531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1692801-21a9-4e13-8b03-5f883cf40c31",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58301d3a-996b-4b0b-8501-545fac287b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7869cadf-c1f9-42a7-b80b-37496bfa6f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0cf1e5-af8f-4461-a2fd-b843dace823c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a120947-470a-4e69-b545-bd0d617cfeaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05af74d2-b1df-444a-99de-17a3c80f3dfe",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5814d0-86de-498e-93e7-c14b2a464847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33529dc-c103-473d-a171-5454f04fe714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d19a3dc-b515-401e-ab29-ca503b528fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5fb47fa-d66a-4bc7-8683-5c46cdc4712c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941848c3-1ca7-4b28-b5c5-0a27433ca7f4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e26063e-6cb9-4d92-8141-1562daf3daff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88780147-9289-4f81-b584-40eb10eb971c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a48c24-90b9-43db-aff0-06124af18264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "018e0b14-9807-445e-8cfa-e794387860a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325f1cec-80d7-4632-a217-06ceafd43254",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7146b1-96fb-48fc-a461-b87969be8188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b005a4c9-621f-41f1-930b-d72135064c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0916fb5c-5cfa-4c2b-affd-ae46e8dc2d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6801ae-ece7-4e64-8bc1-0c3d70eafd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3dec19c-70db-41c2-8032-e536803b28ea",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febf1bc2-82b3-4ab7-8586-d88fd1ed10e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32dfea13-b653-4acd-84cf-9e07cd4bef36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d6f084-d644-47c7-8106-b9bce45ea018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df450946-6bae-4e8a-b33a-a6b5d92694d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4847aa0-f3ab-42ad-9712-9a2d89e3b2f7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e49718e-f1dc-4b44-9698-1a2946cc5c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af5d701-c32f-45d9-8952-dadca2f6a486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60d56c5-fdca-4379-9f74-24fa53557265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a68025-6aa5-4e42-899b-ae0bc7653345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa7656e-dda9-46b9-bb1d-92c12121f59a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d57f96-6a23-4662-9363-3f7108f45e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76cb07f-5f86-4229-8029-dab06dfd793d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e01d06-d514-4f77-8ad5-ef964f550914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c68b2aa7-7cba-46ff-bc01-e9a65185aac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cabeb3-ff0f-48ec-99ef-b68c0ee49dc7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acb11a3-ec2d-4dc3-9ce7-f91ebe446218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a6c873-ea0c-4d67-86a5-c098fb5981aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1366a1b9-29b1-45da-884c-241e0359d38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5acc325f-bbd5-4353-b3c5-8d195bd9f954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b63c973-b494-42f3-b6df-5cace5386def",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb38117-1e84-45dd-93fe-6577a6c28031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b9fc1c-817a-4543-8a57-6c489ad00806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f4a985-a560-4528-b8a3-c454061c16b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "762c08a7-a5d9-4460-8b68-038c68aeec35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e43923-05aa-4219-b10b-574087f48995",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e046a4d2-1a72-4194-994e-88d800ae59f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b5b760-22c7-4c88-8021-ee9e4ebb1b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb486dc-9fd4-4161-9852-5e85ec470723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e76fe88e-288b-463e-8c74-6f0b195a58e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bfa6b4-8b86-4ea5-a50a-4971dbbdc457",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00542072-9da0-4a49-bd1a-856c86920fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7d57e6-9836-41e5-9f10-dd917c2f9d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92944df4-3fed-43f2-8005-130db6501fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "260e14ee-bc77-46c0-bccc-230efaa11bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a4b9a4-31c0-48f0-81f0-f21d9f501d56",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987b7c96-edf9-4267-a3f1-f8b601bf31bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6ddbd6-cf7f-45e1-83ab-c5db80743661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefb31bb-4a91-44a9-8cfa-fa599727d9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "364c74fe-33d0-4f5b-8bf6-f50d51d92283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273b67be-a492-44bb-9632-ef17af7f32bc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7405d65-b724-4096-b019-cbaf768a1c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52ad360-9fb6-4828-b8b0-c695d2bdf406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08154aa7-d0ea-4651-bad2-fe14df67a7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "019ca32d-c8e8-4dd5-b84e-753f1ce55bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc86e70-a08f-412c-afc6-ca6f8614427e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71d7b85-bcb7-42f4-8b9e-a4cb40e38673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb9f31f-411a-447f-9290-cc30f636f7da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43090cbb-9a63-46fa-8604-be58257f5e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb39499e-cfd0-45ca-a584-041854d0ff62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81711695-0bc5-4334-8b9d-1a4be2466aba",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740a2700-0347-4d6e-b4f9-a9216449a484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512e992f-8954-437f-a5d7-c3d863fbd88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e33e87-0bad-424e-afcb-9769a467513e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab4842b-630a-487a-87a1-51c092ce4a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82dc3ab9-0d13-4d44-b623-571866ed1765",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e9019d-b39c-44c8-971d-4999359edf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f377b6f-05ad-4639-beba-a1868acc37c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b356ae0-b7d9-4272-8b7e-a887ca7884bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c44ec240-695e-4022-b31e-9bc4fd0b351b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179b396b-868d-4d58-b89d-f9ba15c76a96",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9feb2fe4-24d5-41d0-8b61-f9cbfbcafc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9211e2-c701-4946-becd-1c7f7cc1ae3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e516f5b-84e4-4ec4-a21e-61e74cffbd3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "66662a35-0ae7-495c-8d7d-4ad4e607f947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76b95c3-a9bd-462c-954f-b5d8bceda389",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93b77e4-1fe8-4579-ad2c-07ef2eea5f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fb3f54-c744-46cd-8149-07d7212345fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5711fc-4c0d-4c32-9cf4-74c30d8d2502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "97408c79-dcec-4b08-8fee-9a1cc921d1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3661793-6c77-43d1-93d5-3a5fa74fdef2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79fee34-3472-48f4-92a3-9586a7c4518d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdca87a6-9027-4177-a4cd-dfe50fbedb2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56be2f47-b1ec-45b8-95bb-df3b035361fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b76255ab-54aa-4850-a503-0291a9ba8688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd79a702-76b5-47a0-9a98-5679988a9980",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d076f4c6-56c3-488c-ba38-5efd325ba5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afd8429-5fa4-434f-ae1f-1523d4f179f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2c2a3e-1c64-4db3-96ce-9ba251b8aa0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bcde1a7-0ba2-4c25-aab6-38e99b77f617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39988f84-d736-4880-8935-be3fd879e767",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24052421-74f6-4cfa-b5bd-1c2d2760ea4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3c0870c4-18ff-40af-be57-e3142cf1735d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddca69e3-941b-49f3-8869-543ee8edafc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfebe528-b95f-4f2c-a948-319de23f8ebf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "614b2d2d-6492-44f5-a945-ab4d28bd5cf0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6434132c-4f82-4ff8-b5c1-6466ad5103f5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82739c0-c919-4b4b-a1f2-7c12fd47de1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cc32fc6-1912-4953-8744-90af40e5d0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19eed003-11c3-49b5-a99b-87774d648e69",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02941274-484a-467e-90e8-e7ed276910e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a339ab87-560f-4df5-b03d-5cf4e9f38e7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03cf140e-52e7-4bdd-848e-f3073013cd3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cca0e5e-1827-4d74-96f2-cd8d55239438",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "673e8ef2-a783-4103-8ff5-79504418ca2d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1cc34526-1dbd-4baf-9530-5bc13c03aeb3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5387df09-c030-46cd-887d-244ad90a1560"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f843d469-aa7f-44f7-8503-233cd27215dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0749be84-821d-454c-9f99-de64ebf13d38"
                }
              }
            ]
          },
          {
            "id": "bdbf4701-1d9d-4a4c-9610-518035076a80",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec246e40-d3b2-46d7-b198-59680add2adb",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "822b1b21-1d9b-4d07-84aa-cd80b2fa8d55",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b208b2c4-7fb5-4f99-a658-f83019b69e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "49c4c877-987c-490c-a501-bcc95bf75f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa00d2b1-4862-4c7f-b319-bf1243c830a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba31b2d-5a1d-4160-91a7-e1ff10679a88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e6b59a5d-ada8-4d9a-b8c0-877cbb1047a1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef01b1ff-cdec-4d70-bf53-087c4e1827e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f1748582-eeb7-499c-aa6c-8ed235a44eaa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b992572d-ad3a-4c06-957e-58a4cc748f13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fbeab8b9-56ce-43e7-b7f3-2d590753ae8c"
                    }
                  }
                ]
              },
              {
                "id": "79f60efc-4f30-4449-b12f-620fffc1d2fb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "acd2ec92-f6e9-4e1e-8ecc-74a15b3eddb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b84cf655-d057-4340-9bce-6ddf415d8673"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a2f59dc-0a28-4a3b-85bb-7e63a96c7efd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6c5703fa-c7cf-4733-b8b7-8766aa81985d"
                    }
                  }
                ]
              },
              {
                "id": "e9dd945c-6226-4bc6-b8e0-a4074b6d8268",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3f1aa0f-3ef2-4da9-8be4-0e0460053384",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c66a3293-bd8b-4a2b-ba14-6c6b675c591b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27eb8b89-cbab-4b41-8eb2-52ca9f3ca431",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "056bb8a6-55a8-4aef-b489-15591bafe372"
                    }
                  }
                ]
              },
              {
                "id": "9e5e6eae-79f4-4945-9e5a-1bfb183991c8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e6c3fef-eb6f-4e90-ac10-c1b63e1d8a20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "31a8cf83-44ea-4019-87a6-743a43d04cfa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cad2663-dcf6-4b0c-ab73-377287514198",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "813c081e-0e12-4cf6-bdb0-bc697e0dd39f"
                    }
                  }
                ]
              },
              {
                "id": "e34d8412-7510-4f71-93d4-21e16c42e518",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14ad6eb5-da4e-44e4-84d0-67486306a06d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0ec7c00-6130-49d3-850a-f1fc8c0aa733"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd16ce39-0d7b-4825-ba30-d1975391b438",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ef1fb87d-dbf9-4cd4-a0a6-4efb3ed432bc"
                    }
                  }
                ]
              },
              {
                "id": "cfdab317-1617-4c32-a5ff-2278bd2ca816",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e32ec749-8b73-4584-9496-b99631ee3bf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75de589f-035c-4884-907e-8e92c16a103b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e596a524-d92b-41f9-904c-d7f32e34d00c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2469f798-12a1-454d-b09c-b498e721f991"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "573a92e0-7a6c-44c9-be1c-c558d151ec75",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad65e2c3-511e-4dad-8467-fcfc7b109c70"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ef716572-479c-4ef8-8a94-bc35e73c845a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2af02cf9-b3f0-4518-b2bc-0c27e37e604c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "880c6e24-4d11-4451-97f2-3fcdc26a2638",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "44d00234-d957-432a-8b58-4d8388369947"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48847cf5-91f7-4951-ac04-714f6c77048c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ca32537-3ca9-414f-b840-b3b45775cc0e"
            }
          }
        ]
      },
      {
        "id": "5c6d2f93-a165-4df0-ba9f-437c41c72ef0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "25124585-5649-498f-8a40-e9418f996be6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e39e0527-dca6-4ecf-b40c-f87eef6a1606",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "db0610f7-b7d1-43c2-ae72-153a92d9c02f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6840e2be-ec52-4fef-84e0-861d4580aa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98df94d8-bff2-4aea-88f8-d4f57b0cc1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e76afff-573e-4988-b0a6-1ecf09237563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd32e852-bed3-4ae1-b91e-06748ce75a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259c20eb-3238-4041-a63b-0d2f87420d2e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562c36ca-244e-4c7e-9160-256da9f95560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "867e312f-a170-4f10-a07f-ba5791d64ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb34390-4065-434a-b40f-68c2c01f7365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a596dcf2-0f3b-4382-bc5d-bafc8221aee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d39b56b-3001-4699-a931-9869573eca27",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1941ca6d-dcb9-4f5d-a42e-b0f92f6ca223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dabc2730-9932-4170-91cc-b5d8e5ac37c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41476be-0825-40e2-93e9-21acfb509f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1ad1e0-f811-4b6c-9ac3-cd16e0b4be0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4b4927-bbc3-47e2-a587-f3e877000e1e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf805c0-552d-419b-bcd8-891a44fae9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839944a3-49b4-4263-a3ae-31158f8d9599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed155a66-18ad-47c2-b06b-7d44396bb6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17adc8a1-b2ae-4f1c-8e81-c2c691b91297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32559dcb-678d-41f0-b627-884133a437e7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac4270c-1fac-4a56-8858-893ff6e87175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa4358d-d3ad-41cf-9903-596f4b661c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29c8835-3aa9-415c-9cab-5080664bb808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83905929-f67a-4246-aa44-35e52e570875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ce1d77-c05f-4341-bea0-aaa7ae7ba972",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f3c6f2-de0f-4f37-b6d5-bf3d74e85737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67be50da-95a7-4aee-a073-376438076232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a20495-d87e-43e1-8521-a4c6e59dd3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b811e8a-8fa1-44ad-85c1-722fa53692ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ca8591-eaa0-4185-86f0-2227fa9072df",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4093e395-8c71-406b-b3fa-be8568bc6a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ede79a-2dbf-4e1a-ae5a-d63b6bd76bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b363a5-f6a2-42d9-9fe7-2513d27e721e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf32240-1884-423d-af3a-c36e6c1872b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38fac18-b3a1-4bcb-a984-5d9c7ae1956d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc45c1b-173e-44ae-9f01-055594c85f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c2a53c-9fdd-411d-aff5-75387d96ff77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5ae733-3c9d-4ff6-8564-74e04e5a606e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2986b8f5-2974-4975-ad86-11aa0bf1a306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e90ad97-15b7-4709-94f7-a3a2f5ac5b98",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d09cac-c102-4f83-91c5-74309b9307aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ddc41c-431c-4a77-a8f0-541e112b3fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f3c93d-0b6b-4d5c-b064-a4eb07f88158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9811f3c-a50d-497c-827d-99207d3eba0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eff55d7-1e71-42bf-bdd8-9f0116b272e4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38442919-0594-4abd-878e-ec01037d1985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42cae90-4dc8-464d-a4c3-ceacdd546f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad04de2a-22d4-46c0-baa7-465262e15603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "687e53d4-7109-4a6c-acfc-e63a58c1eec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac83b787-4b4a-4ba5-ac7a-32b03888e8d0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f3f9c6-53bc-49ca-9754-49ca490ae541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87e8c07-2805-4f4e-966d-70333960e44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15d5705-dafe-4753-9d13-43e4e30ab8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ec10ed-324d-489e-860e-d6fe38e63681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f17ee9a-5e0b-4a51-968c-3ec23693f2a1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad19259b-721b-41f9-b52d-6a1daf559555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5163022b-6453-4266-ba2a-c6d49d875fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee15b8d-e034-4eff-902b-75f748b56bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b1d0f6-fe99-472a-9547-b6f475c9ef0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535b5a42-f86c-41e9-a06e-381146768beb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7ea946-4f5b-4288-9eef-1cbc28718b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d705a48f-1bac-4adb-8170-9288dcf4ac2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7ff8d6-9aa7-4680-81a3-92ed9e08dc33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c48aef-10c5-4525-97e1-a7f3c87b6fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c139cde1-49fc-4cc1-a0ce-4fe8f8a1c831",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c3204f-302c-4f99-80ca-40fb06a74157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02451dfe-cf8b-4941-8e29-e99573308473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45feed3d-7967-40b3-84e9-714fdff3d990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "62956701-d925-4c06-8a2b-a6d708709c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32b035e-068b-427d-a472-e44782def3e5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29f4e17-eb36-4658-8a3b-9d6a6ed7a497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e1a160b-1f21-430b-a8cc-0d9c97a9d1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e110ca-6730-4183-be97-8d2d7e6ea3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "50867ab9-82b8-4d5b-86fc-9bd0738f36f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49ea0e7-3c29-4b70-bcb2-4fee957b6332",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2692941-4c6d-4d62-b5e8-fedb8639a094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da1c411-7c58-4639-bf22-36f52afa224e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45f4a5e-b1b5-4055-8cb4-f6b0abb8a9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "76acc9f4-ab59-475b-b3fd-bfc811513897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9b81f3-a63b-463e-980a-18c0b4e7d489",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a568f62-05fa-4824-96bf-88b1e07927c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2f1b9d-93f9-4643-b38b-68926cbeff35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f663189-088c-4853-8edd-0784b950a964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f98718c7-d381-4e83-b137-d01e610a65df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf74f428-1d0d-4abf-94b1-7f77b3630cf6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c56ef54-f214-4628-86c3-3aa58d143836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bbc0948-108e-4ebc-adf8-0f1c198dab8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b4a146-1bcc-4440-b1dd-95b162c64cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0e018c-a95e-4160-a087-63e8bb7d3a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4a29d9-e447-414f-a57e-07fa3fd94301",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce3dd0a-fd64-4da5-8452-e58e695d1bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4057e1-1611-4ec3-97f8-019338e5bf0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71941e2-7422-4f82-a25f-e0d3b1e4c3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eee1e120-2f32-40ae-b22d-fce99baa6488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abd0c95-ffcb-400a-87df-c27499bbd32a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842a4b36-1c06-494a-bc18-26d4e4a213a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a293325-0246-4a8d-b476-0fdd7b2ac767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad920c3-4b87-4f23-bb95-d7f11cd344b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fbf4ff3-84cc-4313-b95f-3d6f201b8fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4fbd70-8576-4be5-ad4c-e2d61b015ac5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ecce66-64dd-4b1e-a623-b84b609e5196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af630039-280a-4afb-84d5-588bf764ba5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cd0524-feb2-454d-bc66-3b033874dc0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1b96f1-59cd-4ee7-8973-7ccf6370869b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e2e16c-e84d-4275-bbd5-54888738c338",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f1df3e-28f6-426d-92b9-cb44f4f3f0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676f02aa-7140-41ab-b453-0af15693a44f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98ba3a2-ed8e-4eb0-a218-2330ab7c14fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e073c16-e110-4ed4-8032-f8b69ef9d8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e19602-231a-447a-8e76-d55838de89ea",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c01b2b7-dc93-4855-a704-3d6363a9f52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562ea696-c3e5-4103-9981-7f019a961c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe199472-4dff-4b27-b9af-83347508d73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f86a80-b05a-462c-baca-849fd8baf61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1aee6d-6f15-4987-b83b-924348ff159a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a104c29-75d7-40ed-8a79-61ae7ffb2b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde5987d-edfd-4c4b-b6bd-8099503ec1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0812e968-fec0-47e8-8ddf-ca6e06eee49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64f40f0e-324a-4e79-8559-96a75ae8f75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2ebb24-2ffe-4f00-8829-6129bcf13f19",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84509117-aa13-407d-9a99-4cb74909d9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16608568-48aa-49c7-84cc-83f80ca8d065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3de7bc-0e0f-47e5-8109-588f0c332c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19266ac4-60e7-4158-9f9b-58f4f9f5ee39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e5a9e2-b543-4343-bcc2-25968ee6f9f8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f91f5d1-69ee-4a35-9626-91159fd1cadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b6f2a4-6e51-4bf5-8157-d65e8a9e100c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e90ad82-f349-4227-9b9d-db82a06ce10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eabd859-53e1-45d1-a0c9-c5c09b2e0335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1067f9c4-c8c1-416e-af1c-fbe2038d12ec",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54cdea0-84b9-4828-9dbe-61051198ac23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596f5f89-3149-4091-8659-c88ae734d479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f94760-85c4-418b-a258-50b6e62b83ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9a5575-cacf-4aab-9d19-cf7a21fd117b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44479a3e-1fa7-4fc3-b2c7-d61b68e7c1f1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba993d95-95c2-4492-829f-4072db45c85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4001c593-d7e5-459f-9d0b-fcd1901ffae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cca6aa-89c8-4ce4-ac56-c7ef471cb3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21876b1b-38bb-460a-80c1-7d007f5eb87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6910022c-26b9-4389-bff8-735279a84cc2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ec8a80-80a2-4350-915b-d3311c1967e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c116bb4-3c19-45dd-afe3-5a6061aa3729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430b9d47-1225-412d-8d42-6b5527fcea57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66d774c0-c21f-447b-8772-0d7bf3b58467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de635e5-cb0a-4fb7-bf94-f5f1a90bdb33",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f90657-292f-4d67-a6ae-b5a5d731be21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aaaa7de-c274-4c95-9bd4-9e27b09d6b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c365b795-8155-4fd0-ba92-3a6437b1c5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08c93044-5a5f-472a-8779-2f71cee18055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71c581a-b6da-4bf9-9b78-7c0727ffd33e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dff0809-f878-42eb-b2c3-3274d190b250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dca5b24-8709-4406-98fd-080ec42b4367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a5e0ef-3812-438c-8a9a-f8554da7de7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f957cbf-766a-4117-9d5a-01f27f7ee7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db807774-cd07-4e0f-8bf0-5787902384cf",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461e8f9d-7562-46ce-afc0-af626ae5f3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e74b6b6-863d-4ccb-bb5d-62cc232f3a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3a2a61-269e-42b6-ab52-e57e4b5888e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "438979d5-6c38-4639-9ba5-6ccbe7472bc0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fcfdc6bf-a47c-4321-a36c-a946fd209262",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1682ca64-c1ff-4b47-ac12-46282549e2b6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdb425c-ebf9-4f0d-b7cc-41054cfc09ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "41515eaf-d1cc-47f4-8b93-1241d457d9d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830fb98e-7a60-44fd-8a3d-0a54604427f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "969b6988-ef62-4307-bf4d-cbcf4ffbbfce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6908fedf-c4e8-431f-b377-20b0df13c2db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74224bc2-1286-4d39-bd2a-43f6702dfe52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da78e6ce-374a-4d57-97e4-0a1a3dfb3ff2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "573b62ad-28ff-483c-9cf5-2aa64cd0f97e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c20fd596-6ba7-42be-b1a2-a1dfdb99a23f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c3c35175-0bc8-4e6a-8f0c-e5e0f7a702ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14ae001c-c6b9-4624-ad7a-1630d44eb44c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad290eff-14c8-4f8d-87be-c3cc2da82bb4"
            }
          }
        ]
      },
      {
        "id": "66548752-567a-40b7-8397-3af90fe683fa",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bdd0fe2a-1f25-41b5-a700-362936a05c80",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f66be8b0-7345-48f7-bb52-171a861e5330",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f69f4df8-3a7e-4bfd-8044-e380d10ac726",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2513de-9cef-42e1-9c69-3fc1b35aad2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce83b2e7-0238-48b0-8bde-a222118f0507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0d8a62-4403-4373-bd15-1b64f4d7ba19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d431b88-7bf9-4695-8800-e4fa80c5d8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7329ee90-72a7-4114-a0ab-3961dcc5c9a1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1383513e-5ded-425f-a34f-1f41a0fac71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05b857f-a45c-4c3b-907d-7488d71115cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315589fa-bba0-41df-9f9a-8f1127312584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "44359194-3122-45b7-b5f5-0eacc69ec09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ea0c1b-9356-41ec-a6fc-daef20bef5e6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbd01dd-a65a-4fb1-9216-9c78368cddf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae4e19f-2aed-42de-acfb-c3a59d5ccc03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821a03a8-bb63-4cbf-8365-dbf8e8d5f5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c78fdb84-80e1-4737-847a-972f3d731521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46911b82-5e68-4690-9f8c-483551748236",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e8e5ea-6428-4c63-b1e1-ab62ae08f9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a28695a-b6d3-4b90-9125-44b9c3ef1e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df906fa7-c8e5-410d-9fe1-7aa8173ccb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9181a42-5c85-4e0e-be42-49d578620715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e7ca83-a9c1-4613-b6d3-b892efc95596",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb105e4-e2bb-48a4-818d-ed8c4081bd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2f3c4e-0d56-4527-9572-98f91ce5fb5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2050d59-0cdd-449a-8dc0-3a7fa2abeebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "550f77f3-cadc-43a8-94c6-0a3046d96513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc89fa0-944d-4f74-8024-0790348b5152",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9230a49-1038-4d28-9d06-71214534ff6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c204ec4e-4e08-437e-a19a-0f00792cf525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431b425b-b763-4576-8186-893d9e11f923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3be4c30c-cd67-4474-89b8-d152e429b925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ae7cbe-0685-4256-83c9-2849eb6694bf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2384f63-9e59-4d8b-b378-cf326175da39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6bd363f-f11f-469b-bc91-d96d68d3ac47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c55c58a-c6b3-455e-8fa6-e54f83cf2a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bdda0da-cb58-4123-8678-b96e1a711990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b810cd18-5c96-425f-b251-1d454b1eab16",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775ffcdb-1345-45b0-b5e9-0ba718cd4460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726db1b1-f260-4aee-9264-97b8dcce7d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38fb3f2-22fb-4056-998f-eca6f2e28d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cce5128-58bf-4766-8728-d2111bb9b904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a017bbcf-657d-4e3c-9040-b05d606b9f51",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9770da-58a9-46f9-93cb-45e71f38370c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7dae5e-5817-41bd-860f-10a6482b724d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5945f6-d3bc-40cf-bd84-1ec3038c4191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8202429-64a2-4700-84a2-39f0bf571fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa6fd69-19ce-435c-8332-908293e35a6b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7caf5a8e-2fca-46dd-9b60-cecef0dbe8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b6771a-9df2-40ee-8807-ec3b27ba5d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b162cd13-717a-48b0-9c18-64f0986552c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d353d4b-afad-4b26-9bee-603f02d59a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a72ff1-a804-45f8-a692-50ada2574588",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e184723f-668b-4df4-81b1-3dfdaf8dbf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea922fe3-4721-46d5-8975-e250d353a769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfacc448-9264-4e22-8ae5-fd3ffb6fff55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc67983-3b49-49fe-a036-d7f6fed79b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8607db-a5c6-43d4-a775-10de6871c168",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e160d02-1997-47e7-aea6-dfb8d5e01007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b60a794-3119-49db-a9f1-a60362463566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9252988a-1874-4c5c-99b7-c8e056413f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09360416-af98-4f3e-b6cf-31fdb0c030f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d001bda2-4408-4863-97f0-9bd8cd24e209",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4bdc6f-176f-4fc6-888f-1ddce5b0dd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06411110-ab43-47dd-8592-e32b8c3a1ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbc252b-4194-4c49-916c-bce40262ebfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "52a9f59d-a0c9-4a85-95df-f6a8ae74ee04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697e27d8-ef80-46e4-997e-c7ad70e7f24b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e07186-bfc6-4410-9561-aee867964d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7629845-dfd8-4f8a-9c46-f251d937780f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654c5da9-70db-43fe-b537-0ea88dcfec21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "81af67c2-293f-4440-a827-ae07aa9f5335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afb8fc7-1546-4c02-836e-ca86681fde2e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214f1b4e-7cbf-4018-8299-9f2989d38341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4298b0d-6908-4e84-bc57-2e850dc6675c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb567dd8-a5c6-40bb-8fa6-2ced7f01c47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "59efa5bd-3a64-4095-bc86-d5345e05e610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debc3476-9016-43f9-b2d4-a1ea1d1684c8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d913978-e8a8-44a9-9f78-ac9c9d77afc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cc1cc6-ff25-4cac-a476-34ab273ec00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f52fc55-cc61-4dad-8634-ebdc75b5f985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b93111f5-0e90-4c95-9375-2aef490908e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791da232-8956-45ab-b94b-14a603559b35",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb47884-62c7-4d76-8380-27235464dcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b6597a-6419-41d2-8b83-6b6d195eb54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95300f6-7013-4842-93dc-705bab21c707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "63db2354-43f0-4b18-a7e5-fd26b2a962fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1c5e99-63bf-4baf-a54e-b3a751abc098",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103bb486-0f17-47a3-8489-ee150a595319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6182f19f-4638-4f07-b5ad-5e517ea94852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f5f471-a444-40e1-b244-381c845a4b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "27c5f7ba-04d6-45cb-bbf0-a0d3bedb6389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712e0846-9c31-4433-b26d-702c6f7e523a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c18e79e-0869-4fc1-94f7-cde531707317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd84583-4ea4-4fa4-8e78-f7d69dac3cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873abd67-0978-4658-97fe-d5cd4dfcd75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da05b7e9-7aeb-49aa-8a49-6145ee4b9083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c2db2a-fcd1-494e-a7d3-4787c2071b5c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daaf4309-3c5d-43e9-bc34-c60da1b8713e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae64228-a2e2-4063-bf71-cd1cc35f51a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4eee33-75ce-44f9-9481-eb185698830d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91662ba2-9f0a-4e89-b134-101424d3e63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b49671-7855-4991-96c8-dbbc4a06d960",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee901d21-2515-4b5a-a463-607ac4722a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e398bc-3573-4482-b14a-98f476f3a31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff7aaa7-caf2-4b9a-9d3b-33615257aff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4c4099-3970-492c-9d03-7553065beae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b426659-089b-42c5-a262-02e088fb8a3c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29683ef9-46f9-4f0e-b4df-4915e6577288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e1ed17-098f-4033-9676-8dba9cb24398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700c35c5-d002-4b96-8a8b-92420f541b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ce6ad2-58a0-42e3-af9a-1b2245e8af59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726db299-7f82-4808-97cc-0b8efdb57017",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7cb511-f05a-4445-878f-b26ba13e26f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf5c50b-7911-41ac-a61b-289b526d2116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f23842-9fa3-4363-8f67-9344ea72f6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7101d9ef-a249-41fa-9200-f194d02877fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7896e0-159a-43fb-b663-84bdf9393dbf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acfe636-36c6-4499-a3bd-3381768a70af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad168fb9-98a7-4f0b-8b97-843eb7e580e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebc99af-f779-4871-9406-fca7f1a3adf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba66ef7-71bc-420a-8602-783caa57e66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79136508-d792-4767-a4f3-d81e4b634c51",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d5e935-ed98-4a4a-aceb-9278bb957f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720956f1-d2cf-49b9-9c0d-fa0c13dc79bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5615a7-aafe-4d46-a239-e662cbed3566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1bc604-8a51-4412-b5db-f9af380d39a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5937d5d8-408a-4cd2-a093-f0d9e2095824",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56122d8c-163a-4a7f-b231-b0d18f546dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a61fb1-bbfc-4985-af36-20641d9b96bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7e51a2-8bc6-4ff2-a270-005d2c15073c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "987066d6-9a27-43aa-bc8b-2110c8dbf883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3744ab7e-7012-4af6-b209-57f90dd21331",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a2e6b0-14d4-4b7f-845e-0eb9eb10776f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a210a986-f83e-4444-aaf2-7b1c6795943c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08386f94-763f-4a67-888d-b9c470a0a01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbd1aee-1c63-4e24-99ec-17cfd9b4f1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6caacfbd-6e16-4015-ac3b-5ebebd149f3c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18545e91-969a-488e-8334-a9beaad0bb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db423e4d-521d-423b-a5da-5783f35e6c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e97df0d-4ec2-4d24-9c5c-84d33e98cceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52cae93a-3237-4de1-a986-10c5794ce59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b2bfa8-d32b-47dd-a24f-c1af3e098618",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae37723-d10e-4b8e-bdfe-6072c6833575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b737d6-a0d6-411a-96a2-1181be1718fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f007b1b8-5802-4327-99ae-145f278d7d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "810f3203-9f47-4f7c-b3b1-73e4438431bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8809a55-3a67-4572-ab26-9fc9a682bce1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314b1f9a-c4b4-4e9b-9571-d1fc770bde11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec394295-f051-4cf2-8843-751025e9ebe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d2e1c2-e9c1-4d65-9602-de8f77e01e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8236cf8c-ed33-4690-83ef-e7b87afe976b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b9abaf-c1d4-4985-aafc-fac22774704a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9593e4b5-b5aa-409c-9386-68f61f436aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb4b609-be7a-4a6b-85cc-404b5e00661d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c2862c-d8c2-4293-88a0-489dcb8db055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac497fc0-8fa0-4b3e-9f04-d16c06766beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc5d1e4-76c9-41ce-aaee-c9bcbf1eaa8d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee21129f-38e9-499e-ab2e-2395ffd94e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb3ea56-b6b2-4924-9379-387e81b70139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59edbaa-a11f-42af-a9c4-841211abf0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61317ffb-3823-4461-9aa9-85c0318de49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7b55db-7db5-45ce-9107-745f50425799",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa325ce-61d3-42b1-b61a-21dfddeeaf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9786eb-6ba9-4736-bb3e-268256a54fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364951e2-daab-46c3-9df1-b4f56a3f55af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efb7f5a3-64e1-4a35-a6f2-5cbc3cea0778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a913db6d-74bc-4c3e-a2b9-d68585af6090",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb5170c-5b33-44be-8bf1-02924489e48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ead46e9-3ad9-4ddb-9efd-9f063552581d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a99ab4-714a-4faf-884a-68a65e6c99d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a97f99-6e5f-49f3-b4e9-3232744aab01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11590de4-7157-4599-ab80-768ba40e9a5e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742c639a-5d15-438d-acec-ad9ef6e3de2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e64fff3-24b5-4146-8f1f-2be3243e49c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c1a7b0-678a-4070-b257-ad524f72d4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39d661b2-5275-4118-abf0-d897f2dcad5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426dec60-5b76-4d4d-806e-429152052557",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f28c90-01e6-4b8d-9ade-dc88d6a0d0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40a0b7e-d522-44fe-a3bd-fd2b7c5bb382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3434781b-2dae-41e2-99e0-a32bd8ec725e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70d3786a-d6d7-4d3d-aca7-7cfd187e771c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfb46a3-0a58-4e30-a02d-103030ee3cc5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd89ddf-68ab-4656-bd46-aba0aebd68cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6885b705-503c-4c2c-af4a-7e073afc4f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31da910-98e7-4541-9ca9-691a978aab4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6716efa3-1b3c-489b-b3cf-4f65ef191403"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b075be29-b123-41aa-a467-618b1ebf252f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a422e6d5-5781-4686-bd18-4467c5281eff",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8676a25c-872f-411e-ab6b-a4e85b7f2ad8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1f17fe46-501c-4791-a5f0-ad657195b374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7570441d-f50a-4dc7-b626-b874163eadc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e59db9e-cb19-4bd8-9c1c-3e19aa5dc4d9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c583289f-614b-4867-be6e-1e2ad51e8fab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d66a8e6-8f65-4399-9bea-1e1c7dede0df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "601ee81b-7a64-4879-8bb0-87b58cf7e30b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9042d122-7455-4039-b802-89ef0ab56972"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58a49a49-dd6b-4e7e-bfaf-99833816e100",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e9579c73-97f8-4910-ae47-819f51b8e756"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f97c74d0-d263-44d3-8795-950b070850b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44cc0627-bbbc-478e-bfca-9bf69ecdffe4"
            }
          }
        ]
      },
      {
        "id": "61d13699-d433-4d63-bd8c-3c196a4ec923",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8a23f8a7-613d-43d9-aec4-1fd423e3226a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "539c4714-1a0e-40f2-b993-81653cfbc007",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f1914105-c056-4c56-a44e-cf6576ee4509",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9e40a1-4ef5-49f1-9d04-dc4dfd305e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4b7141-30ac-4abf-8a26-e844000a4a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6161ddd3-c511-4071-a96e-042813fcd7e0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f1e3a0-966f-4563-a7bc-56a7a18132cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a703e08-38bf-4d3b-8e64-d9c67f3ae05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab96962-feb9-47e9-9277-1dbb4177c335",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b37123-9ead-4734-a349-719c588e80be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d8b2a2-5dc7-48aa-baa6-6ca1ffea6e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b73445b-4bf6-4bf0-a908-01c18438b9fc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cdf6f6-072a-4695-b5ac-d0ad0122bb4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616f7d75-6428-4eae-8273-521376f9fffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538e67ac-5329-4874-b993-ff07f6c8c29f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93981e4-876b-4185-ad1e-9c76b88fe104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff5a865-8ad2-4067-80f9-0d9e7f8214e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ba1099-633c-4e0a-874c-c3213b27f5d3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70daeb4-7ccb-49c1-93ef-28987c221e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ab9008-b453-4b39-8402-aa76ff5f7f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6368926f-e300-44d6-9bc1-990a4a9ac883",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded9d05a-384f-4a12-859d-205812513a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb822c3a-bd6f-46e2-889e-da414c9cbfad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6ae282-e409-4dc1-9484-12b48f8068cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e212ed2-fa70-4d82-accd-741c9943a078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1e9f27-cd24-4f90-9c4d-c98f2c630544",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97cb999-b7aa-41bf-8005-8ed712908375",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e946b9ac-8322-4b62-98fc-b978cb65a22f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d399ab45-0571-4365-a590-431a81fa0b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed37b25-56fe-4e64-89a8-7e6955da34fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7b71f1-2624-4f4c-9f22-6350d5b1e501",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089c9d09-5bef-4b21-85f1-5a10cc64c1e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b9f6266-74f5-472a-9346-f8221846c93b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232011ea-31e4-400c-8d22-29b1f1012ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9772bbdc-d2d2-4947-9396-28478486820c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116623ae-7726-491e-9230-74c8c7b3655b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9bbeb2-fcf6-42af-9309-362747f78694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c5fddbf-1a08-4d3f-80a0-630662b9953c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6cd3d6-8d88-4c39-b064-37238adea852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce82da0-b2d9-4296-9e92-b429cfb6ed06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cdb44e-c433-4cfc-a7e1-eecfe512d3f7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4595fc66-7fb2-4c4d-8353-3d9f14924e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c4c4a3-4b72-48b6-b87e-833c03189669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f619aa-3cf9-4b3c-a0f8-de3598decf68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568c1463-b023-4ee4-b38d-940e9a784b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b242116-2d17-43ac-997b-0a9caf6c0e0c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03451030-05cd-44f4-96ea-2556bbb0d419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e97045-2369-433a-ac7b-c9dcf8320176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c6a77d-3982-4389-ad3a-7bdf5d8800e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08dc268-da6a-4d24-b389-650370380734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de79f4b-82f8-475f-ae69-dd37a8793959",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f377a2-c7b2-4d40-bbfc-280bbb4a9383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e7f9f54-1280-4b59-9d5b-bef1ea82d200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52894e3-e00a-4de6-bc2d-66785ab8fdfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe4cb5e-e303-49c6-8d26-624fc54cd36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41d1cb9-31f8-480a-a314-24f683665a5c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6568f0e3-d0d3-463b-ad9a-b2f7648409e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "045051ef-f025-4922-bca9-3ebb04d5afc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fe9624-53e6-484d-a6e2-7b72e47d9103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067183dd-8c7c-4380-876f-e6ba82a27935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cef343-0b6d-4b16-bc60-68394d111ddd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb730c8-3c86-4697-ab4c-3118abeb8b5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c89c6d51-c683-425d-ad33-926c3e66f2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40193681-c35b-4c37-a7ef-1628946d2557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7a6805-46dd-4304-b1bf-1312e15a0c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3e7907-c41a-47c5-ab1e-d5c9a87099be",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c756b8-d480-476d-b41e-4f790e4f213e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9e19c0c-2c1f-4ac3-8c53-3d6e1766c528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "216a8c3f-fad6-4c8f-97b6-ed40d6785b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37be60d3-badb-4348-a6db-9bd295716788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a15fe43-609b-4331-b32f-3d23820e147d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c94ee4e-5cea-4986-8def-76f39251af72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b2737a1-80b4-4355-846f-584228f63259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "075213f2-8f37-46d9-a25a-413c973e5187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4afd4d15-5312-4295-af4b-4616f6ab258b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bc7693-d4db-4756-8af3-934622aae62b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a9ea4c-e98a-4e85-aeca-189ca0844d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65e4c78-76ab-4396-8b45-212090b6d3af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc1294b-ebb9-41d5-ab61-fd59f1689285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134a7821-fd10-4a19-a1fa-2ebf390d317b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a88b90f-563e-43b3-bbc9-583460299d9b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8419e52-c8ae-4ab7-921d-5aaf15b9b86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f636fc-082d-42ce-88e6-82925fd76b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b24ddf-4c20-40fb-a673-bdc26b137888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8af749-ed4f-41b0-b007-22b45c6644d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce9e3f6-f312-4b80-9c40-d665113f6baa",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8067f9fa-660c-4090-8458-955bb130fbb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c25e32-63ec-45ad-8e6f-0f84cc98b584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9cd116-79e7-486f-9123-8f648b50e283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c22eaaf-b6a6-4e9e-916c-8794a27f1ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af77bdb4-0a9d-4ad4-8c90-60b05aa6f412",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f2e2d2-603a-4776-ba55-a8716a6b16fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7133f379-d947-42f3-9c26-c0e8db2f0576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d6ba3a-a54d-44bf-ba94-ff2798eab667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8509797a-542e-4017-b0bc-27805497c2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af26cb5d-e51d-4e0c-9da0-41c61fc3011f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6b68b0-1132-44c1-a92c-37797d623065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8106d6-b8d5-46f7-adca-84c84b7455de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3db416-3f01-4587-b42c-bfdaae18c442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bce83ec-9621-48bb-a06e-d684dc0e832e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263903e1-e495-41ff-be86-028d53599002",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b025caea-761e-4fa6-bf70-cd362da1e885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a48ba3-7456-4f47-bb08-614ca3d22815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ecf7a0-8c5a-416f-a09f-a29504b8479a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7433454f-66be-45bd-b5b9-40e1843dec46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c85b30a-c3cb-48c1-af37-0360aaa76c82",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba314cc1-bd68-4bda-a02e-015e8b3fe8d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a4c97b7-0121-41ca-af4f-1e465b0377c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b709eba-99d8-42e1-9d24-ae049fac54e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e1d6b9-4cc6-4f50-abfc-c939bc048e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc72ed3f-61e6-4d49-b619-c87b986a17d0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c1ab48-4236-47b1-af1c-8d2412c5633f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88aef559-a98d-4239-86cf-f74838f0cf97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bf5399-e6e7-423a-94fe-36a11cce9833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74bd5e95-b660-4113-89ef-2cb11047455a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5e6eb4-7a0f-4227-b162-49d96e8fd844",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2128210-34ee-4372-b2e2-1bd76fbd646e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "669201bd-25f1-4e4f-9cc1-3fd3aab554b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e849c36-73c7-4fd2-b663-ea43b9fd5ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9034e9-5456-4a42-a52b-c9820083d1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46d9642-8878-41fd-aba2-94880d136789",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829a8dcf-7012-4ce7-b2ec-a012aa130efe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c159b27-8444-49fa-b2a4-1c36625fa2c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8378e1b4-76de-48e5-9298-88b269589794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77596b67-7997-444b-9c44-cf8cebc59794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8bf81a-2a0c-4d31-b81a-45130b487bed",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60738783-d998-407a-bc04-c71518ae3826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1964c444-0c29-401e-b4c2-45a5826cedde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c4b0e2-65f8-47a9-830a-0bb9ee17df33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa0c9b3-5f17-45a2-8508-424a99c40bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6341132f-2569-4b2a-b283-f10706e67643",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410f5a3e-da80-4952-905d-c09baf72d11b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa21e13c-0ecc-495f-8b66-cdc5915684ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7058fd5-f0b3-444d-8ba5-fbf947901a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55433dba-afb3-4fa0-8f2b-c42b52fa737c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617769d2-c02a-4c60-81e7-25b1bb2f77c1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab4d607-ae44-4673-a544-46fd84e9ca7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb1af863-5127-4e41-8a1a-77398888c005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6b29f6-14fd-4ae3-aa09-7fb579014173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af783afd-b87d-46f2-b15a-671f12de9c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbe6970-9103-4cea-9c75-a9ae7d2940a1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1706c678-a87d-46b3-b4bf-1aa6f173fdda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a907cd30-5f1f-41c0-a932-ac324ad50f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4921a2af-d4d0-4582-955d-c46d6b1159d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54be0675-fd27-4745-9806-0e91e41d5f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee8211f-5f3f-42b2-9f47-671f11125e4b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61834bc8-aa79-4aed-97f6-a0c2205963d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d94ab30-cbb6-4f35-a671-0e366b9ded28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6711d9-9959-49be-854c-b363513311c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba87f259-56a0-4163-b003-ddb667662650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e98944-bd17-402e-b869-021be320cce9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86850eb-e102-46c4-8034-110635bdf3ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc4996d-a83f-4fce-9260-db79508e2f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d08b2c-7688-4c39-8870-570047a13660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad619cc-df9b-4da3-a3b7-b1cada1ce6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11955107-7dd5-49b3-b61f-b5188ae53d13",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7224804b-38ba-4278-92ec-ce165fceb04f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3160c481-3baf-482d-9c74-1e502e63f72c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e921e0b-d338-4332-8816-944d5dedcdec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96418275-ea1e-428b-bd8a-fe5c264ef516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e446272-4048-45d8-805d-08ad19e216b1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe1866f-b960-42fc-bc91-b0b5bdbe0e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc9d8b1-6734-461b-bf6f-d1501dfebf3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09dbd7b5-70f0-4f92-88cf-44fa9c53edda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e5d272-b237-467d-9f51-b78d107361a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fafab19-4dd7-413a-998e-37b6cebea790",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22936905-ea80-42fd-a510-c2cea84a4969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cdb8928-8ce5-490c-ab71-34e67368eb17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "172803a9-fc52-4cb7-855e-826bdc6e7aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60580916-ab04-41b6-a9bc-f865bbf21eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbffd48-2e1f-40cf-92a7-41a4c74f64dc",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddb769c-ae93-48cb-a22d-4e7d03d706e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222eab63-8da6-4398-9e61-4c6e03c541cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "affd25fa-ffd5-4092-bd84-a1046eaef9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af96cffb-df5e-4fd9-9980-261aa8ca772c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a91055-cf09-4e6a-9139-6915c7b9d099",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c04597d-0aeb-45c8-aa99-774a6d2fdd6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964c190a-7a2a-420b-8635-2c3b6b8f4a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5086c775-adcc-4402-b371-927b43767c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0aabda-284b-47fe-9b40-3c928b02e130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e30540-4974-481b-a432-2bb89d527676",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca650a3-441c-40b4-ad52-87d6e53dbfd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3362ae-c758-4436-aa67-23e474eb3439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d66f4a-a444-4ee2-b079-9ce3d778a4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a1508ba-40e5-42c0-9be2-884098979d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a27c51-8baf-4de6-9197-a1b03b588782",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3477b1f4-19fe-447c-981c-f38ee7c56eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9cc4fdc-67f6-43eb-aed8-a4437c8670cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "832d9e3d-912e-4206-8cff-7caec8249c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d57565e-4115-4d61-9691-28cff359633e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a52a156-a0cc-499d-ba5d-6b6f5239a416",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277046b8-80a1-44be-8d6d-e38eeb147d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081e9b54-e03b-4f20-ac8e-233ee0af1712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475f27f1-5aa6-41bf-a1c5-1aeb234e36e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ca3741-be6b-42c8-bc90-34d4703f9d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a764a53-f5de-4700-bece-af213589d535",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b301d64-9c83-4294-a50b-7c837bc0f5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df20e63-2095-48ee-851b-34a3baf23efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a808c2d-4760-4314-83fa-d8eb6aa6015d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a64aac0-f3c1-4912-87c9-76576af5e6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d40cb5d-218e-4906-8dba-a5b5ca9de563",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bb5c6f-0dc7-4570-8ba9-09d06ad3e4ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcca1ad-5959-4d5c-8b71-fc06c3d74cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "241b88ed-8896-45b9-b0da-b5c4334dad30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc47894-30de-4d94-8f60-f4c7ee936463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7733834e-28e5-45bb-93ca-98ca00926814",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedbc077-5466-496e-b198-cdd9e90de9bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c5bb5d-fc8c-4b34-acd2-eeafdc59857c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4617af-6e40-47f4-876e-13e0de37193a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29e3dba-18bc-4988-942a-bb9d366c6272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9259b14-1246-4bc4-b27b-907644f2493d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1583ef-1e30-4924-9d72-a3ac40ebfc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a8a7276-5be5-4ef3-8155-c28e89b5d5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02aa4480-74a6-41fc-af12-c20ee884fec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de00d422-af51-4fe5-af3f-092fbdb5412b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998025e9-ab94-4c7a-b8ce-f28834a0b442",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f439c6fe-9175-42cc-b655-22ebdfc1006c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7559c57c-5ef6-43c6-8ebd-f9d167afea80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4df3a9-7852-4099-be15-09eec16a8a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab547bc-a380-44fd-93fa-ee090ba25369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f640720b-50b3-48be-9ade-dcda1aff05f7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbf68cf-4bc4-43c8-bf16-dac20d9b6ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4fc9ba4-e292-4a67-87dd-29d300014945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b04367-6ccf-43fa-bcf2-47f1156017dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c227df6-10f3-449a-bdc4-ce10a9a2e638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d5e1a3-6fe3-49b4-9ddd-59eb1e09325f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8d72aa-f759-4542-af6e-85fc47333f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c4a117-8d09-4889-b389-ff02d001429d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cee619-7107-4863-a574-db00ebc4c0cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504d41b8-f694-4b09-8def-430d53ede45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810e84d5-05e4-4ec5-a58c-d644d4ab1d7d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6bd4e5-f651-4b16-805f-55134e806ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5efcb6-eca1-4cc9-a1b6-e87916221d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf55efe-3d73-4af9-8e77-9cc32a90e550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a8292f-80f9-4380-86af-192c07f9d861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f92734-f1c4-43e0-83be-52630fb47d66",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa56825c-fdf6-4efb-a1af-766d4e7c7bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6f2d39-5dec-4029-8f67-79697b38d27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59f96c8-f503-4508-a0d6-7679851ecd93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26b8641-45b6-4be2-8fd0-2d654d035210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29eebeae-b298-48ac-99e6-4ac8951e4e69",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d14697-b5a4-4e74-bd4e-f10186254c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68fc091f-7e70-45ee-8fee-db4c056a4dc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc8e99f-542b-4465-bf61-98e01310d69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92e8e10-619d-43d0-9eab-f0f3604546f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c68923f-a753-4625-aef6-09419de1c322",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3e32c8-32b3-4e38-b678-63b0c610ef00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ca4487-b73c-45bd-8f42-cb04991e0fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87e3e92-5ead-47f3-ad43-b55d0b6fbe5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aab64c7-7cca-4a39-aa8d-cec1fa8855c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47646375-7b82-4357-b39c-8658aac85bef",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48df5846-4e05-4acf-aa72-514fcc39f8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61256c2-6eb3-4ba8-a520-c62b5a9f54df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbe051f-c791-4722-aab6-8906ae59ade2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e77b54-b0f7-4345-b693-83ec6c58df2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0defe74c-8497-4adc-acc6-41ee5fdcf3e1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8222c6-1255-49ab-8245-787de241862d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9275891-92b5-48ac-b25b-03ae56bc3a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5c0faf-1eb3-4785-a769-4d90d2a34ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b49bce-42b1-4096-8001-3e670d93a442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211499a5-0ec3-4655-b5a3-d72b48f991b6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09a2ca9-9b88-41ab-85f3-494130e530e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46216b3-687c-43ac-b93c-db402157557a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4965395d-8987-4195-8fdf-d30dea8a14d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9321571e-b55b-44bd-8b07-f54fca45a568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd8e936-e128-4619-aefc-e1f9e006413a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5756d7ed-b1a6-40f0-9581-ed400c2e26ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c263f08b-509d-459c-b3a2-003d87323361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c785033a-fcef-4ebb-845c-28b58c26da6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daef07e8-3d17-4541-a453-99a0aed37efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f758814-0a43-420e-876b-a9bad629fd83",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37a8d0c-3955-4772-9f8f-46d8ef11a4cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6a5f04-4ac8-4aa5-a9a1-bf102b4b732c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba280ebb-6b75-42bb-ba88-5b600a46564a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2011ed-6415-4572-897a-abeba2fb77a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77478c1d-8738-45cd-abcc-499870bacd08",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41aee67-6dae-4950-b336-9abad6659542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f89683-687b-4d96-b391-a2d8bcbaf99f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091cf668-d74d-47e7-838f-36b61afd824c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f44f919-122c-40d6-b93c-35b1073ce57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a849c2-a8e5-4f5d-a712-7399a1ac8839",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660f7802-a8d0-45da-8046-58ae83a710af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20992dd-48c9-43fe-987a-a5ac7760fa6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c815e62-eef4-47d1-8145-dd4a9dd43e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0230cf28-f937-4a91-8f2e-d12248289bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9231f5c5-4790-40e9-9177-e150f19f6c31",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bdbb2f-fd04-48db-a04b-2c4fbd85538e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128e4859-ec8a-4261-8e11-6d262f03af59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab76f27-5925-4a1d-99f7-d7a19c53fac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58db6117-b7cd-4368-bb93-8a9ea91ea0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e81b331-de45-47ec-b479-cd54d7c0baed",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a592745-f470-4bd2-83ce-0c77f6529bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6535f5ce-2580-43f9-a8e4-7be5565a1188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c72e89-ffe3-4cd4-8230-b57b5dea5f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035e09cd-1b1d-404c-ba0b-9a00f42ef014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d993499-bbf0-405f-9f25-d8d2b8395b51",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba25919-c563-4731-b7dc-4c0e2f6d4d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b24d89-2c80-4ddf-8d54-5442fd49e4c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa4d208-b7ab-4634-9840-5eb524296dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b62b51cb-c7b1-4f89-8064-4acda3c9c0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6720fe8-80c7-497e-9774-9ce415df063d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d7cf67-4ae3-4df2-b45e-aef3c20dbb26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6bb72e-491f-4cc6-9d04-d88ea2153326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c3d875-549b-45b7-b11f-bc51d4a9dd22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5310c908-3ca0-4188-8651-d290a205d0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c6e6d9-0d5a-40ae-8afd-c96dcb0a8afd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c313fb8-326e-4cd3-a1da-1a4429089362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e2fc78-4cad-4ab5-aa2a-c68c404091fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427053ad-a6d1-44e0-b11a-34d770867c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6649491-830c-4576-b3f4-a33a718cefe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcb2706-7e49-44da-8721-6fe4f01e4386",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de204579-120d-42a7-9fe6-c639f3419547",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "623a59a4-6532-49c2-82a8-cbb680c93b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f595a7b9-80ac-420b-805d-9ac0675d8876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec262e89-fd76-4ec9-bbb3-dab60fe77d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe75d794-d1f3-4fda-ac55-b3e67179fc5b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1d749b-0645-47a4-9e4d-64ed28cfc492",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fea6316-22b0-4f7a-83e3-e1c28b2ea4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f426d1-68a7-4d6c-ae87-2a7e16f46077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7338a135-5b01-4e72-a420-b5f451c15770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe729cb8-9b4a-4cc7-ad51-7e55847ce1bb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e36ee08-9085-45b8-98bd-ea232068b413",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b12f836d-9641-4317-bd50-1df8d0f654ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef13c874-3ceb-4c51-bb74-5a24a30ac9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc711eae-5a7f-4fd2-8d31-9ee1a5650748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d21187-86f6-42d3-afcb-cbce11d36776",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cad5c4-1979-4922-9b54-23f3df2635d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "703d67cd-bf6a-4a4e-b1f6-940e4497ff55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69684c0f-0b9d-44ea-926c-cb9ff567fa68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7397d7af-22a3-454f-ace1-ecb69f68b4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb900a87-dc06-443f-90a0-f1aa81c301ab",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe67b551-a5aa-4a28-913b-c939175df901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70ef0375-897a-4f20-a476-f6048f7c87fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6d80f2-407a-4773-b8a7-a8d5ccaa37f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c7fa71-3b9c-4032-9f5a-8ae8cf9966a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82452d4e-e512-4560-9176-0cb8706ec375",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37dae06-d167-47c2-a8cf-4cd6cf386320",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4dc0231-2715-4edb-9427-0e7c5b9b9edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19eb636-a05a-4b76-93f4-560055a15869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb124176-1097-4d10-baf7-d109f2159cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c99655-cb5a-4375-8f8b-ae399fdfddf7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57abffc-d8d2-4016-89e6-5c362f5c4aef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cbde386-7f0f-4a59-844b-23f00a3f12c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b3c4ed-1bad-43f6-962c-c1d4018ab2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2621ac5-e556-484d-baf0-dfee6d11d5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cad88f-6fce-42c7-8fd7-59617a340dd7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ad541e-3061-4380-8238-bc6fd8cd7ad3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "707e19b9-2b0a-4185-a029-0035613898ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be06b74-0aa2-46a4-ab45-5d88b1845256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d091b621-501c-4a22-9423-b81fc48f6aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a07e8a-2920-45f8-9c58-92f12a1027be",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0ebe60-0889-46b4-8949-fd87a45530b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fab06fee-6221-4d04-b03b-f245b2ca0bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b88646-a96e-40ae-b286-9a43a83d3e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c246db-553f-43a4-b2b1-445398e0ab79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52da858e-0e67-41fa-911e-39fbc6800fda",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d1c5e7-cbb5-4a91-abf0-01839abbc188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6ce5fed-5f43-48cc-9d47-adbda679a451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccf351e-fa97-4ea6-8641-8fa5f60e3c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75abe255-ad95-4b56-8bf6-68813b6ee26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cb9c9d-5e4a-4175-8c38-2243141c84b7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278a3bdb-9319-438d-832f-e2620e08642b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e3368c6-83a0-4fc6-bcb3-26003f84bb63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdaec00-ed8f-4283-9301-357206fe3345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5912ea4-43ac-45a1-99d6-2606b7308217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ac4c6a-8041-4486-a8e0-6642c5bfe74e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d242f14-c095-4dcb-b55f-370c97d06f11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf6d17ef-df32-4cb8-8a7a-de84e3e6c835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa295c1a-a6d3-4a27-921d-08fd5127ef15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e703d84-ad1c-4bef-a26c-c27cfb5589e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1931e0-cc1f-46f0-a14a-29ac708fc1c1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c7a716-40f4-41cd-9e4f-97480a68f21f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a66ad5-c59f-4831-894a-85038ef4ca6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dac7136-05b9-487a-8de7-48b1f9272a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed8fbc2-d712-4a5f-bb98-845f910a667b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec30c33-581c-4429-8315-20b6e7c7fae8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963779b9-b7d6-487b-9288-f534fd83f6db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f804f146-828e-40ad-b5ed-50a293e9f402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1950de72-6ca6-45c9-aff7-acb8297f1583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea849f3-a049-4eea-b51b-80275aa2c79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81adcd26-2d88-4837-9820-63ea6da86233",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459b252d-3e96-42a2-937b-c8ca28cfe835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bc894c5-84e7-4171-8eaa-2109ac339322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d2f862-827b-40d4-8024-3f1e14de6574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9a26a4-354d-43f5-b989-68aeeccf7c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e8d841-4df0-40f3-bb10-90f8c76c02f1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4facd256-40ee-4546-8111-a074570d4798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc8ed135-9d60-478b-9ab7-9c1973887f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabb9514-55a6-47e7-9fa7-ae39871356c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee958b6-3f48-4b88-bcd3-32d23858c330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9b8b31-f81d-4bc5-a153-ca00da6ac33b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9b2015-0126-4f4e-9d17-65f73a7aa5dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf55224-9e51-4fa5-9a05-8523caf236cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f411ff6c-5977-4ec6-a245-0ddc946527c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a666597c-f589-4787-82d6-a1330daaf1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021f142e-1034-490b-99f5-b9f872456cc6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb355c16-43be-4475-938f-7b998ed71c4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d44b8674-4160-4139-8980-fed9b7fb23f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed068a3-ee77-4bcd-8773-51e7350a1473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb935be-1e74-4bb9-a0bf-865890f5c845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd478ab-1724-44c4-b358-aeed9b9f0845",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7720058f-b674-4284-9f35-cc61e1468918",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff17c8e2-290a-4f66-8ff3-091593f2fa04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b668cb7-015e-480e-a46e-04fd7c9b4c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d50428-02ac-485e-89d1-ad7b2ddc0718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87014a3-17e7-4601-aa67-ad8815d81b25",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae81f08a-2879-49f4-8302-a468967ba097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89f467b9-044e-43e8-acf3-d1a26bd3baf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c73d3d-c266-4c9a-89b7-a014a9ed60c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc3ad07-74bf-4ee4-80c8-1861d476f262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89d3363-a4fe-45d7-8cca-385162694b9b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7fb8c3-6ca5-4bc2-acf1-ab98f3257083",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bfbf9db-e81b-4d6d-8515-e487a4e5f85d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d271e9b-7213-44f3-b3f5-14d904c16eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faaad41b-7b27-40de-a813-5995134e3e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6092072-11d5-48c7-868d-6065cdc85dfa",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3f602a-481a-4902-8e47-2bfc18d32ac1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14cbf44c-5520-4189-a465-50a0fb9dce3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6f1a15-ac20-45ed-b80d-f9a2a23f3e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5a38a8-b9f1-40a8-95f2-175951903cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0ae00b-9b85-454d-ae1c-03d5f6c2a111",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42740f0-754f-4211-afc9-ed3cd2e43293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ecfc12e-73e9-482c-8d4f-5805973df7ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0494e14a-cbdc-408d-be73-e4382f32f2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c475b17-8321-4de7-b662-e1142f29c9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8cbdf7-1a36-4fbf-937b-6ebfc65b4cc6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bedfcb-9c27-43f3-b9ae-9365866b54cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37df8f2f-39cc-47e5-bcf1-3382ccd910c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3a8315-d802-4882-a211-540ba82b4c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65debf33-cf6d-4d09-bff7-9d99f6f525f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4fda75-fb92-48d9-b160-474911dfc2e0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae5135d-3904-4c38-901c-b60071adfd6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b84f252d-b360-448f-ac3c-34188935b2b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb2e126-1358-4400-9c45-ab5beda9bd93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3a6635-1ea6-431c-a561-84afb2f6625c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a684db00-ca5f-4bcf-91f4-666effbdeebd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227d4e33-0519-4440-84f9-bc45c85b038b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7cae303-b757-4cd9-8a16-690764159b80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee926bc-f815-4a55-8d6f-a58d4dd28232",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d423b016-0612-4a6b-816d-9df3764f507e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312eca03-d75a-442f-a0be-57a1aff42092",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865d8c04-0c06-4c1c-84f4-f61ac636b2f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f5072aa-000b-4917-8d7e-1cbd2e7e0225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d8ad8a-bb5c-47da-b60d-54d52880765f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055f4924-ffa9-4910-a295-62d0c3c5b56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04307c82-6071-4f00-9771-7a77d9826cd0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1bd1c8-d6a2-4768-b8e5-d30f3f875522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac56fafa-f564-465c-af0a-707b32df3c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f94b779-920f-4d8f-9a3e-557fa4f47433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7717fd-ef6a-4b6b-8fed-26781cd09227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c736da1-ede0-449a-923f-c407712ca34c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220dbf90-669c-4dc6-b8da-4440bd07aefa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f40ce6eb-c41a-4d3f-a01b-14c48e68c1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59813afe-a485-42d5-bca1-276fbd33fb78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476924fb-81d8-4f73-998b-c49eb7f78ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9572ca47-689f-4dac-86b0-c9320acf473e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fc2485-cc0c-4c71-8a2c-adfbe882ca38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5982455-af93-41ea-8d6f-6389a8dbd8f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e37220a-e814-4ceb-9af9-dff59a6d89f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbdf2b34-d3dd-41e1-afbc-b7b0241bbe1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a43e67-1eb0-4776-a00d-0180a5ca6b9b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f93f36-7e30-40e3-bd91-ddd9e01010c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f3e906e-a311-4676-909b-c69be34d2b09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52cf0a0-2e50-43b2-b298-57044ea77396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbccc944-38f2-46af-98e2-a01cc191987c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ca55fa-ea57-488d-88ce-daf34bbe3f9d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9267ae8-061b-49e3-a3a1-7154c96c64e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9af55693-aa06-4f65-bc24-0c9232a3437b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca06c47-f90b-4590-9aae-2431eaa253a3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bcb268e-a745-4ad4-bfa9-e301a54f0145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf3557a-3f3d-476d-bd23-adc5ff76453b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0220ee3-619b-41c8-8e52-1f1b83afc9f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19038575-d424-4338-94f1-e647abb64f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11df1c6-aaee-40ea-8bcc-99fcc38e2b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7fb02e0-0db0-42de-bdac-2ed1c3eed03b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11ad539e-39b1-4b5b-b36c-852d7b3d5821",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a928db4c-94b9-462f-b405-f408750bcfba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ca61dd1-7fec-4f61-b0c6-df57ac6d638b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "423c289b-b858-438e-8723-7abcdfe3f54c"
                    }
                  }
                ]
              },
              {
                "id": "13f82616-974b-4b4f-9030-4dbafc22b39f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "821cec27-a850-4bac-96aa-771534770e3e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaca56c7-0fd0-451a-9e1d-5ec11bf2a655",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e3222269-2d29-4021-bba1-3c04dbd386c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41755817-f285-4eff-a6ac-57cea6366c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f5a5557-dc44-4b0d-a993-67d54d059aa3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5f465b3-7240-4da8-9f3e-5faea4fb3d7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "988e137d-d897-4d2f-80db-cc1c6f485fd5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ce5f18c-89f5-411d-b493-ac956af37c6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fc61dd8-56c7-4096-af69-98c7aeac586b"
                    }
                  }
                ]
              },
              {
                "id": "02bc382e-804b-469d-967c-70230856a9fd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "781a52e1-eaee-4b50-a5e6-28fe555ac83c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc2b29d-a22b-4c53-8d9a-c1161ab3824f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "67dc5795-5596-4397-b401-86daf15208cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9b9b07-1e5b-4646-99b0-0f8afdf9b811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c54e63-4f5c-4e1f-99bf-8ab38abe7f82"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0bff9718-9c8f-43ff-93d5-6e62d22aec78",
            "name": "Positive Testing",
            "item": [
              {
                "id": "097c5ada-4da9-4763-833c-83aae2cebfb2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cf5b3a7-daac-4eb9-be8f-b100148e1173",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b58d2c19-bcb8-4a9c-aaed-dd6c4dec0e70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35ab2c64-3dbd-403a-bf3d-cf4675488a3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5422800-b987-416c-8bb3-f65ddb6c8a75"
                    }
                  }
                ]
              },
              {
                "id": "4f115f2b-bcb7-459d-9cf3-ee9a0781ef81",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e2ad200-1c47-4850-bb5e-3fc9a9a6d9c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e83565f8-4a5d-4aeb-866a-7de87923d740"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e12841f2-313b-47da-8367-d60f9ba89774",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f0a657a-39cc-4d36-b00a-fde4d7d85deb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e01af0f2-5e70-479a-bbad-1243e0972616",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c1a29889-be62-4d59-98c4-6e52e1730acb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a704dc03-3712-4e99-aa24-d466f6d6407a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2e17253-0fb9-4798-b56c-1b7cf9edf873"
            }
          }
        ]
      },
      {
        "id": "9311dc6f-525b-44f0-9e17-fc1e9f36833a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a4d13270-4d6f-4c1d-bd14-a3df3a90ffb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a990203f-7a4d-481a-8e4b-8baa833195a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ee88bac-9653-4dbd-8ca3-0b28087038f8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3542cbe3-4f91-4bdb-ba9c-40225676b953",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d551c889-5bb2-45e5-bcd1-2b2b19959560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f7590a-3d5f-4587-8a38-d204d9a94b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2f1a298-10de-4bc3-91b2-8b6d43c03e6c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "198f07a6-99b4-4060-8cc7-c7acf68fbf14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c507a3e1-0a17-4176-939a-2569f0d1817c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a3095fc-09b9-41fc-9e2d-1090209a35db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70a32d21-ef90-45fc-b1bc-fc4d921e63f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2461ac28-e7bf-4f38-ab4b-dc7ddcc46a73",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "84911cfb-6a27-43b7-836d-fdf4e49538aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b368d35-ed19-4620-b2ca-c97f4817528a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2dd59962-c8fd-492a-8ae2-78295f8fdff8"
            }
          }
        ]
      },
      {
        "id": "310e07ef-8433-4d00-a093-c30e85380519",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "220b5efc-6387-4ae8-869b-35a22dc94e9e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "426abacf-01d7-462f-b3e8-1f696a1a3db4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aaf78920-5a92-4257-816b-e43fe1029909",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0656236-d626-4712-b508-bffb43045e89",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a3d3be4-cf0e-45e3-ad93-455262e805ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa294bd-a6d9-4b4a-b4a7-7695e1fb57b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5640b77f-8224-4165-ae87-3483356cdcf2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1565fcc7-824b-41a4-bcc6-537edcec68bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0792738c-6292-4eaf-bdcc-3d81ce3a0be8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21724f3a-fd97-4165-bc2f-974d114d5f82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c25c455-fd1b-4101-a79f-45a27fcece32"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6edc7d9f-6bc4-402e-88ab-f2ab6868153f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cd76de54-b56b-4aca-98f8-3b6a24556ac4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0ed073c-f4f3-40e3-964b-3ad8d5b7c3db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9fc22600-1edd-4122-8ada-bdfa4ecb6906"
            }
          }
        ]
      },
      {
        "id": "8a045eec-43d2-48c8-ba68-06e80a742c1c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "243e21e5-ae04-4512-b696-b375628b394b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ef2a346-c0b3-4da8-bbaf-0c5f87bac937",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c74e94da-60b2-475d-85d4-4d8d4d834c35",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79aae572-ef4f-4f65-80e8-2aba00633e86",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e17388dc-ca5f-44bc-bc76-62b2e16e9799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ececac07-d462-45e2-99ca-5714cfac07c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a7ffc69-1029-4049-b884-5bb90fb595a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b2e2b2b-6549-4c31-81ff-314d12782eab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49370e1c-b406-4d39-9198-9edda16ae77f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7d8ac5a-7dd5-4f10-9e74-ff33cb78a177",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c052fc3-35bd-4bc9-923f-5d79070b3b1c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9d7ad10-0e7f-4d63-820d-8c3fca43dcb3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "856ed1d2-f9a5-44ed-9fb7-6f50c201dd89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85ef7777-07d9-4a2c-94c8-8dfd1a58745d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a32aa756-d0fb-4d20-a92f-fa804b31013f"
            }
          }
        ]
      },
      {
        "id": "af39976b-add8-4ece-8fd4-8ed162dad054",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "440801ca-050b-4c8a-b8bf-d4591e83336d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f684517c-8ab3-40ae-81df-1d1fef26f587",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a21d9391-f98b-4831-995c-9c62c50b9ff7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fefb5fe-d73e-4230-a6c0-86c7a93297f2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc3a130d-5c90-411c-9fd9-66987cfc949c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 89.92982456140346,
      "responseMin": 4,
      "responseMax": 8302,
      "responseSd": 552.4065328465509,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708648418089,
      "completed": 1708648452850
    },
    "executions": [
      {
        "id": "521b8df8-ebd8-4444-b820-8e81bad0ed67",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "27b23554-9a22-41dd-a2b6-6cfe17351a8c",
          "httpRequestId": "d09aab21-c235-4bae-9b76-4a6786d2d8fb"
        },
        "item": {
          "id": "521b8df8-ebd8-4444-b820-8e81bad0ed67",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "433b1ce0-3c4b-4918-b2b3-8f740582960d",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "8b8e23ea-2f73-4f6b-80ce-ea8e53d2e147",
        "cursor": {
          "ref": "5e0f1f89-e04d-41fe-8eda-8b88b2177edd",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1db70bbb-6316-4903-9f0e-36761d49a53e"
        },
        "item": {
          "id": "8b8e23ea-2f73-4f6b-80ce-ea8e53d2e147",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3cf5915f-f8a8-41da-b2ee-16f058ec5f05",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "5b2f8525-35f3-4177-a001-96ebf9c8cb2d",
        "cursor": {
          "ref": "8a94a7de-706b-4474-9684-9ad9fdfc13f2",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "84bd1969-e0d1-4d94-9a56-2c3a8dcbf898"
        },
        "item": {
          "id": "5b2f8525-35f3-4177-a001-96ebf9c8cb2d",
          "name": "did_json"
        },
        "response": {
          "id": "c02a1f24-6105-4180-a2c8-bc9e0cf3dd11",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489cee8a-3ebd-4d73-97f8-ccc39f39adaa",
        "cursor": {
          "ref": "bdb51cfd-c9d0-4175-9415-39e14dda77b5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1728e154-74ad-4670-bb7e-5183747a9667"
        },
        "item": {
          "id": "489cee8a-3ebd-4d73-97f8-ccc39f39adaa",
          "name": "did:invalid"
        },
        "response": {
          "id": "a33675bc-40aa-4e1d-af79-b91888779e07",
          "status": "Not Found",
          "code": 404,
          "responseTime": 647,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489cee8a-3ebd-4d73-97f8-ccc39f39adaa",
        "cursor": {
          "ref": "bdb51cfd-c9d0-4175-9415-39e14dda77b5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1728e154-74ad-4670-bb7e-5183747a9667"
        },
        "item": {
          "id": "489cee8a-3ebd-4d73-97f8-ccc39f39adaa",
          "name": "did:invalid"
        },
        "response": {
          "id": "a33675bc-40aa-4e1d-af79-b91888779e07",
          "status": "Not Found",
          "code": 404,
          "responseTime": 647,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1968803-8871-49f6-8523-752b41354f64",
        "cursor": {
          "ref": "9ffa77f1-0b63-4937-9842-d01c3edb7652",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "105a8df0-eba4-48aa-8d12-f020eb281d3c"
        },
        "item": {
          "id": "e1968803-8871-49f6-8523-752b41354f64",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a78f1594-134e-4baf-98ee-91855a25882a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 27,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ff7ccd-eade-41a3-b94f-aea46d2f5240",
        "cursor": {
          "ref": "3e5afdc4-974d-49f0-949c-e8959e15bdde",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f2231fd2-1b72-4c1e-a833-05018a962fd3"
        },
        "item": {
          "id": "c5ff7ccd-eade-41a3-b94f-aea46d2f5240",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8be271b3-9e13-4321-aa5d-52b9a4a24dd0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 132,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1a10df-c7cd-4cc0-819b-4c362818bbe1",
        "cursor": {
          "ref": "6da8d7cd-07cb-463b-9bbd-48404c7a1d35",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5c507ee9-1ce7-416a-bdd1-b8528a6c23da"
        },
        "item": {
          "id": "db1a10df-c7cd-4cc0-819b-4c362818bbe1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0122f795-5bdc-4cce-9c11-c943fb7bbea4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f550dbe9-6b11-45b9-8df7-206869737059",
        "cursor": {
          "ref": "fd4715a7-e84f-469f-87f2-534b4cac1cc3",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ade856de-79f3-49e5-94a4-d94807ba5a90"
        },
        "item": {
          "id": "f550dbe9-6b11-45b9-8df7-206869737059",
          "name": "identifiers"
        },
        "response": {
          "id": "e8316bbe-045d-4397-9027-0ca8ce7cd88c",
          "status": "OK",
          "code": 200,
          "responseTime": 154,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e71bb3-6ca0-402b-a0aa-f412afa44513",
        "cursor": {
          "ref": "a5db793f-0819-4e55-85cb-c5e6b0627da0",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "87866db4-9031-46fa-82a3-f0b21b03fc0b"
        },
        "item": {
          "id": "e6e71bb3-6ca0-402b-a0aa-f412afa44513",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "848155e7-c49b-4f5a-8f06-c1a90adf1a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06beca6-76c1-4b32-9087-a04b2336f1ef",
        "cursor": {
          "ref": "42890068-787e-4f29-a8a0-d2eb249619a7",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4a6165ae-05ff-4bd8-bdcd-1867639ca7e9"
        },
        "item": {
          "id": "c06beca6-76c1-4b32-9087-a04b2336f1ef",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "302642ac-6cd9-4ae5-aff5-4d15208e21ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84757ab5-b86c-4420-9f45-a6304fd8a53e",
        "cursor": {
          "ref": "b6f26480-dc5b-4f7d-ac4a-9a975f90ba99",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "14dcf0a9-ded5-404f-853a-5c67ccca4871"
        },
        "item": {
          "id": "84757ab5-b86c-4420-9f45-a6304fd8a53e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1d7f3e6f-2d70-472a-b70c-1e9adde59759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8764ad-2d4b-4cd4-95e2-d191fa214b1e",
        "cursor": {
          "ref": "680f3b20-e65d-469d-b4f0-4267ca95c6d7",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bad4da9a-45a9-4430-8bc4-db438dcad481"
        },
        "item": {
          "id": "fa8764ad-2d4b-4cd4-95e2-d191fa214b1e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "856a5ab0-7f2a-4b65-9f4f-169ab5006705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9b1e0a-cdc7-4be8-b8c1-c931baf7c059",
        "cursor": {
          "ref": "def674ae-1091-4a4d-baf9-b336e032b235",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e7a92d55-9512-4ff3-9dec-f27ddb07c159"
        },
        "item": {
          "id": "2e9b1e0a-cdc7-4be8-b8c1-c931baf7c059",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f4e1681a-82fb-4e5a-91f1-1fd833523fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54952e1d-1000-4799-ae68-a184bd8ed778",
        "cursor": {
          "ref": "c12672cd-0e71-4b84-b641-f294e036a686",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2facd0d6-dc0d-45bc-986c-3383617af087"
        },
        "item": {
          "id": "54952e1d-1000-4799-ae68-a184bd8ed778",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3420f8a7-d4d2-4b8b-82e0-a598300c4856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c610546a-793b-46cd-80a3-bdc56463326c",
        "cursor": {
          "ref": "0f9e33d3-bc8f-4767-986c-0f354d3f5995",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0b7b9b9d-b3b0-4c5e-942a-91f8c2df6c61"
        },
        "item": {
          "id": "c610546a-793b-46cd-80a3-bdc56463326c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "77391ac8-7f62-477c-b49c-b83fa81f9a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3d451f-a188-4a30-a574-daa06307490c",
        "cursor": {
          "ref": "23e5c341-dede-4182-930c-6dccfa807844",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f4a81796-9b53-4ca8-a84c-9000acd5131d"
        },
        "item": {
          "id": "3a3d451f-a188-4a30-a574-daa06307490c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "af8d77d1-3ce7-41dc-9381-3d3277de4f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459c9c29-69d4-4fb1-92d2-24b7bd32386a",
        "cursor": {
          "ref": "6ab657b2-ce36-4d2d-99a5-dcd709de8137",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7987683c-0b6e-42fb-a363-83917cfda438"
        },
        "item": {
          "id": "459c9c29-69d4-4fb1-92d2-24b7bd32386a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "68e33e02-ea99-47bc-bbd9-d85b30efe2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e60edc9-1ee0-407b-94f7-0d2b944c6b5e",
        "cursor": {
          "ref": "aedcfafd-a9db-4cb2-8a60-5087c82eb3ee",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c99a2286-647c-4ed5-a556-a418852d3890"
        },
        "item": {
          "id": "1e60edc9-1ee0-407b-94f7-0d2b944c6b5e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d8b6bbbf-057b-4891-8195-f8284f14ca97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14881df5-bd09-4b3b-a5fd-abcba1b183b9",
        "cursor": {
          "ref": "146a92c4-6b0d-4140-983d-78272886e5dd",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e3119ec6-5ceb-47ce-b96b-20304e945f2b"
        },
        "item": {
          "id": "14881df5-bd09-4b3b-a5fd-abcba1b183b9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4d675448-0324-460d-9ee6-ee68e16ae28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23906aa2-fad9-4879-b44c-182adefadf81",
        "cursor": {
          "ref": "d11397ad-572a-4c6c-a234-1fdd38391cdc",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "969fde37-b8fc-4db7-88fe-9a9d54b08ccb"
        },
        "item": {
          "id": "23906aa2-fad9-4879-b44c-182adefadf81",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f4d0c41d-43a7-4abc-865a-4f7274a2591d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff9d002-9ae0-4bb6-be69-3e71c997089e",
        "cursor": {
          "ref": "3181a25f-fb00-4561-b997-51034d23fe8c",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "413a7a31-eead-4821-8064-36c2d6ecf33b"
        },
        "item": {
          "id": "9ff9d002-9ae0-4bb6-be69-3e71c997089e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "513ef8d7-ecbe-4e41-98cb-6bdc7a48e649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214b3b49-947b-438d-82e2-14bcca6be59c",
        "cursor": {
          "ref": "62f39493-d48e-4229-8351-a0834733edee",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d8d0e920-99d4-4cee-bab7-df48c94bc5bb"
        },
        "item": {
          "id": "214b3b49-947b-438d-82e2-14bcca6be59c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7bf19a51-90ee-4966-953b-1a89a9ac7b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59bdf10-8cae-4b8f-a88c-b972bc054e02",
        "cursor": {
          "ref": "4d968b59-4c41-450e-8eaa-29410d4194f5",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b7befb20-ea64-45e4-a995-e9c31b94a711"
        },
        "item": {
          "id": "e59bdf10-8cae-4b8f-a88c-b972bc054e02",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c800f3ab-391a-4ea8-ab30-254cf57c0ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a0aacf-f149-48ef-ac91-57c17513b64f",
        "cursor": {
          "ref": "00b11b30-83ab-46a7-8993-ba91c071fbae",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6ff81c36-d9b9-41ba-b94b-6c6fe847c83a"
        },
        "item": {
          "id": "b5a0aacf-f149-48ef-ac91-57c17513b64f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "eb7fbaf4-1bf5-4750-a6cc-01c74a0f34db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929b086a-e6c1-498e-b488-5e55326e8e3e",
        "cursor": {
          "ref": "49920a05-7098-4790-9656-b7582b0f9352",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b8866802-62e0-4780-8c94-183fb45832d8"
        },
        "item": {
          "id": "929b086a-e6c1-498e-b488-5e55326e8e3e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "92ef8ddd-d5cb-4989-af2f-57dd0091e5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b192c57-ce34-47eb-a3bd-819871a6563c",
        "cursor": {
          "ref": "c3df64ba-423b-4c10-8687-89e58d719817",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b71d68b4-4d36-42ea-be16-c8cc4d69b49d"
        },
        "item": {
          "id": "7b192c57-ce34-47eb-a3bd-819871a6563c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "63098320-ca16-4c68-9cfb-6cf2dff97e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b2b546-2aaa-462f-9bc6-b42786e274cc",
        "cursor": {
          "ref": "7f70b594-f5b3-436b-a094-c7a34df4181f",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ab8e14c9-c8d6-4314-94e6-3aa4eec432fa"
        },
        "item": {
          "id": "c4b2b546-2aaa-462f-9bc6-b42786e274cc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "30c184ca-4680-4af2-95df-fb56b85f1864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90b6149-53e4-4d80-b729-edfc6417bb22",
        "cursor": {
          "ref": "46a1089b-a488-4feb-ba9f-697e19405dc8",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2e502494-2504-4347-8569-a12d8184a3c7"
        },
        "item": {
          "id": "f90b6149-53e4-4d80-b729-edfc6417bb22",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "173f6511-9365-468c-bbd9-31c77f96aa49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13908764-0a98-4e2c-961d-a6f84719c849",
        "cursor": {
          "ref": "8439be5b-ae05-4525-a899-9560f6ceb390",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6fdf870e-e4ba-4770-bb86-ff20bb79d8eb"
        },
        "item": {
          "id": "13908764-0a98-4e2c-961d-a6f84719c849",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "98dc4e90-d710-49d1-bc97-d3ab0ee003de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe5f9ef-dff0-4094-82a6-371149512b14",
        "cursor": {
          "ref": "964263ad-69e5-4826-9a99-aab29c7607c8",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d50d71ba-4482-403b-9149-9efbaa40f219"
        },
        "item": {
          "id": "fbe5f9ef-dff0-4094-82a6-371149512b14",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2b3d27be-072c-4893-af63-f8bf3107496a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873155c9-0cd1-4e32-8827-6c2cc4f3e078",
        "cursor": {
          "ref": "dc6f9c09-dc03-43ff-8852-66b9f4b00e45",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ec5c00da-fdcf-4ca3-9168-9ee84ee422ca"
        },
        "item": {
          "id": "873155c9-0cd1-4e32-8827-6c2cc4f3e078",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "07572ad1-4350-43d6-83b8-754f57fa8b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e6eab2-04f8-41bb-a949-78641714625a",
        "cursor": {
          "ref": "11c903e3-2c0b-4223-9ec2-dbd7bda38bff",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3fe7cdd5-1fe9-4f3e-9dfd-673c878cb359"
        },
        "item": {
          "id": "88e6eab2-04f8-41bb-a949-78641714625a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1d5e81d4-b9e1-4512-a85b-29057fb4ce96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3dbcee4-16a2-4383-aeb2-e37cad7dbf7b",
        "cursor": {
          "ref": "f2b88a86-b351-4c3f-8401-00f8b2d0970b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "684449fd-c0fc-4453-9888-ccf388ff3aae"
        },
        "item": {
          "id": "b3dbcee4-16a2-4383-aeb2-e37cad7dbf7b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e1fc644a-59da-44c7-9455-5547fb1aaa81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04748d40-5ffa-4a49-8bad-ca021923cf03",
        "cursor": {
          "ref": "f01b9236-feae-4724-9fb3-043f25540738",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "58c88ca7-3fc8-4728-9c01-a34d27a2f90e"
        },
        "item": {
          "id": "04748d40-5ffa-4a49-8bad-ca021923cf03",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bd83c5e7-9134-4d4f-861e-ed28aed40661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34922d2f-4dc3-41c3-8aee-5d5d41524a92",
        "cursor": {
          "ref": "907f02c2-c4e7-4af6-8e6e-aaecead71be9",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "01786d62-1599-4e66-92d8-73884e5409af"
        },
        "item": {
          "id": "34922d2f-4dc3-41c3-8aee-5d5d41524a92",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b2237c6e-bc30-47fa-8a55-9c0f0212e875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b57a69-36fd-437a-bc60-74268fb9f116",
        "cursor": {
          "ref": "44690bac-c7d4-4ee0-a017-91041a26d79f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "647bdb12-000b-4a60-8b77-7c5e0e3068c3"
        },
        "item": {
          "id": "16b57a69-36fd-437a-bc60-74268fb9f116",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "42a60639-7679-4c1e-8b92-1bda0266ff89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a1dbcc-ff90-46a3-bf1f-afbcad409150",
        "cursor": {
          "ref": "c71e7f11-9e0d-4571-a92f-6ad5f2f036d5",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "82c465f5-2914-4ba5-984e-a241696e5e84"
        },
        "item": {
          "id": "a8a1dbcc-ff90-46a3-bf1f-afbcad409150",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0ec395c6-49cf-45f4-b7b4-e65136fcefbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108ff802-5326-4c24-ae98-3b190eafa38d",
        "cursor": {
          "ref": "05fdb6f3-1f1e-4019-9731-07b24e13813f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "36e5a2fa-d76c-4b05-8926-2f2826085914"
        },
        "item": {
          "id": "108ff802-5326-4c24-ae98-3b190eafa38d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "811dc875-d2fa-445b-9085-665a948b8618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dcdc9c-e540-443f-adf0-e83ed5f4818b",
        "cursor": {
          "ref": "cc98dd95-437c-4007-a68a-b3c9830300fa",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d758385b-3e73-437f-aee5-d9832c28a9b7"
        },
        "item": {
          "id": "33dcdc9c-e540-443f-adf0-e83ed5f4818b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e8d89906-7425-4946-98ac-b8317a0c2252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8528e255-e51b-43b9-8ba4-0fa08fe2a5e6",
        "cursor": {
          "ref": "ac8b4d04-39e0-486b-9a4a-a71d769adbc3",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "da86af89-8d9f-4c09-a4e9-d63608705c59"
        },
        "item": {
          "id": "8528e255-e51b-43b9-8ba4-0fa08fe2a5e6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "31168e75-626d-4899-90d8-6169e20abcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b82af62-b740-4a61-806a-d7b97dce81d2",
        "cursor": {
          "ref": "f4e2f408-7f97-46e7-a1c0-3a503f9a5c17",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1a2dc9ef-2699-4fbc-80cb-5374f5aedbcc"
        },
        "item": {
          "id": "7b82af62-b740-4a61-806a-d7b97dce81d2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f1c904d7-b68f-4ecc-882b-76d35a36e7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d00ff6-f773-411e-9926-8f6e9d0eb5e2",
        "cursor": {
          "ref": "33298903-95f9-485e-92b4-b31e1690bd07",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0f58de1d-3eed-4dc5-a5e3-3e0abdb6ebf0"
        },
        "item": {
          "id": "15d00ff6-f773-411e-9926-8f6e9d0eb5e2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8972e42a-99b6-495d-9fc3-0682d31baadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999da781-657b-4292-ba6e-f497b9de21d1",
        "cursor": {
          "ref": "65d9ae34-2782-4dd8-859c-fe7249d81839",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "277b7c69-d139-4e33-9c9e-018f0d91cf4e"
        },
        "item": {
          "id": "999da781-657b-4292-ba6e-f497b9de21d1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "61016263-8ac1-494d-a13f-2dd432695200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699e91f2-dabc-4efd-b498-f1f6f96d0b3a",
        "cursor": {
          "ref": "dce8b48e-7fba-4fe1-9e12-b08d2f1a1af9",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2bcca14c-17cc-4062-b735-6b1169ef9659"
        },
        "item": {
          "id": "699e91f2-dabc-4efd-b498-f1f6f96d0b3a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "43423c10-342d-4152-beb1-c48b8fcbe451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e7a0aa-21ea-4fbe-8387-6e0994b0c2bc",
        "cursor": {
          "ref": "cdd3d99d-7a85-42c6-b26e-f42b14ffd00e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d77aa51d-80cd-46cc-aa13-69668dedcc07"
        },
        "item": {
          "id": "a4e7a0aa-21ea-4fbe-8387-6e0994b0c2bc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bfc4b533-4e80-4c4f-b25e-67d6cb9d8cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11f8d4d-cb5d-4f09-adc4-fcfb97f9e58a",
        "cursor": {
          "ref": "be5cac81-8682-48c4-bcc2-2314fb203578",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a1b200a8-5281-474a-9173-a0e83818c704"
        },
        "item": {
          "id": "f11f8d4d-cb5d-4f09-adc4-fcfb97f9e58a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "57e9341c-ef8b-43de-aef2-01537168093a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7b5cde-f2e7-49e6-acd1-eefc1d43b5b9",
        "cursor": {
          "ref": "de355976-520a-48d8-a4a5-7b7fad4bc578",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1da5a661-be6a-4b62-a5fd-0c2b4ff2b9a0"
        },
        "item": {
          "id": "fb7b5cde-f2e7-49e6-acd1-eefc1d43b5b9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bc648c94-5eb9-4e76-a1ea-741ffe76f9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974cd802-85ef-4b21-91f0-951c39fc13ab",
        "cursor": {
          "ref": "1d3ac4bf-dde5-4e55-bc8c-41de110d0a39",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4e697a09-bd37-4668-9d19-b28274ac2fa6"
        },
        "item": {
          "id": "974cd802-85ef-4b21-91f0-951c39fc13ab",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7945c1dc-915b-4f31-8121-31b064421b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6e8a1c-9e86-4725-b9b8-e981a748859e",
        "cursor": {
          "ref": "983c6e80-d4a3-48f1-aa66-46af11892800",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "aadf8627-4f1c-49fe-84ce-a6ce4899a22e"
        },
        "item": {
          "id": "6d6e8a1c-9e86-4725-b9b8-e981a748859e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1d25d580-c3b8-48a3-a701-f2eced8a075e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d76c7c0-abdd-42f6-9c66-7acab8548aff",
        "cursor": {
          "ref": "f861fcd3-58db-4993-9bea-070b0eeb9813",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fd0d31d4-3b23-4e9e-a559-8911653fcc0b"
        },
        "item": {
          "id": "7d76c7c0-abdd-42f6-9c66-7acab8548aff",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fd9f252e-25cc-4333-86c0-aa7e47b3946f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c84c08-4d03-4a97-9ff9-0e2f5d03fdca",
        "cursor": {
          "ref": "f31feafa-702e-45fe-bc30-c7b2fac3186e",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "28f0a128-d755-4999-9ad8-85c3ce2fd55d"
        },
        "item": {
          "id": "19c84c08-4d03-4a97-9ff9-0e2f5d03fdca",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c67dc777-9b78-41b9-b5b8-2a1111a3904c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3d27e8-e82f-4005-bd40-7d39cafec314",
        "cursor": {
          "ref": "b7d92eca-a562-4210-b38e-73c0f72e83c8",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1afd7d6f-2d8e-498a-84db-66cc17c5a21d"
        },
        "item": {
          "id": "ba3d27e8-e82f-4005-bd40-7d39cafec314",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8c1afb8d-5b22-4bd1-8573-4187e787b63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97720b4-0c1b-4cc8-8013-827fdcf434b9",
        "cursor": {
          "ref": "4ec61fed-38a5-4d9f-b0e2-456892b4aa5d",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bea5afc7-f6d6-4fe9-a75c-078960ab1792"
        },
        "item": {
          "id": "b97720b4-0c1b-4cc8-8013-827fdcf434b9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "210df3af-d549-4bda-a856-785d64686d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38955b89-3956-4b22-82d5-c7b715a55f71",
        "cursor": {
          "ref": "1dab7a78-0aa7-4639-8540-5e9a55d7a732",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b5120bf8-426d-42fe-97b6-c713065b6346"
        },
        "item": {
          "id": "38955b89-3956-4b22-82d5-c7b715a55f71",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a06af14b-2d33-4f72-84bf-41bce04dbdee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27ef99f-3f65-4f30-834d-68bea373908a",
        "cursor": {
          "ref": "58f4d4fa-45fb-4e42-8592-2a79c2545ab6",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "717ae441-7e2e-40d0-85dc-f0b1627b009c"
        },
        "item": {
          "id": "a27ef99f-3f65-4f30-834d-68bea373908a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0f68d24f-6e69-439a-9b38-13d79299857d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83753b49-eda7-45f2-a8a2-102b474484b4",
        "cursor": {
          "ref": "17a4696d-a0f8-4944-b95b-03762d4478ac",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8b13692f-c2d9-44c8-ae2d-1408b3124543"
        },
        "item": {
          "id": "83753b49-eda7-45f2-a8a2-102b474484b4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "43f11484-edb1-4d4c-9505-81334604a9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4d4e6b-f537-45bf-a9be-ef3d3462ba92",
        "cursor": {
          "ref": "fc0dee39-b70e-45d7-9841-c5372870209a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a0927015-78e4-4256-a7e1-ec9daf3e860b"
        },
        "item": {
          "id": "0a4d4e6b-f537-45bf-a9be-ef3d3462ba92",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "46f990c1-96bf-4097-a05f-7042abd591fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7a1139-a7b5-4ee4-be4a-5ff1dc49071d",
        "cursor": {
          "ref": "7fd3e77c-5c50-4922-a266-242183480813",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bd26cb28-1edb-40f8-9afa-b08753e45715"
        },
        "item": {
          "id": "fe7a1139-a7b5-4ee4-be4a-5ff1dc49071d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1f0c1375-95cc-4952-82c3-9c7d3320c8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8e68df-dc54-40bd-8beb-32f8ca0f62be",
        "cursor": {
          "ref": "c1edd7d4-a4b5-4a8d-b909-feef3b539051",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7ba5050d-e217-4e5f-87b9-ab0300609914"
        },
        "item": {
          "id": "5e8e68df-dc54-40bd-8beb-32f8ca0f62be",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d230124f-b1b7-4eb6-87e9-bf403496db15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a8fd28-71bc-41b1-add0-d41d4af4787a",
        "cursor": {
          "ref": "511add9e-ce50-461f-accf-440b393ba528",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "87ede656-d45a-4e10-9b86-616617f4be34"
        },
        "item": {
          "id": "73a8fd28-71bc-41b1-add0-d41d4af4787a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a0fde217-da2d-4e9e-8587-caf97a492fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d439f7-451f-4b7e-a44f-0e8fb5542b2a",
        "cursor": {
          "ref": "f1355e2a-e57f-4351-96c3-bae6acda46e7",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9c29b4c4-23aa-4466-86c5-8088e2eb298f"
        },
        "item": {
          "id": "f2d439f7-451f-4b7e-a44f-0e8fb5542b2a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "55ab70d8-e9ed-4c0c-99af-81f636d0c71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f7abc4-416a-4464-ae85-423efffaf635",
        "cursor": {
          "ref": "403560bd-692c-47fa-8c94-34050139c7f0",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "be0cc3a9-5644-4eb4-82d5-084291e49fa7"
        },
        "item": {
          "id": "a0f7abc4-416a-4464-ae85-423efffaf635",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "68d07c76-5030-45b7-9270-b32016e32cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce70518e-dda2-4740-ad61-17970d62b5d1",
        "cursor": {
          "ref": "c01a8593-b620-4d8c-8569-1790a347effa",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "733dbce8-4da0-4e72-9b9d-3efdadb25b07"
        },
        "item": {
          "id": "ce70518e-dda2-4740-ad61-17970d62b5d1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f2d9254a-db2b-4f96-b59b-e0876f417af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3ef6ec-b003-4214-abfb-d97efdaec2a0",
        "cursor": {
          "ref": "060b270b-f32f-4b01-9701-300fbf9c9c99",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ae37a654-d719-40b1-893b-d3516d51d52e"
        },
        "item": {
          "id": "dd3ef6ec-b003-4214-abfb-d97efdaec2a0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8f0272b8-64ef-46ed-9246-7c16624f3514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05af28ca-d774-4d8b-9e8d-41b39495863f",
        "cursor": {
          "ref": "6fcae025-3281-4107-ae5b-8dd9b3dc9449",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b1010159-73c2-4fe6-b712-5639a084fc20"
        },
        "item": {
          "id": "05af28ca-d774-4d8b-9e8d-41b39495863f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "69a6da7f-9122-4240-a845-fc1d9265a30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869c6b21-1fa2-4b61-a8d3-ef2fb06529cc",
        "cursor": {
          "ref": "3850067b-e6ee-4c1a-b109-4cbfef196dfb",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a1e6cf6b-d03d-459d-bcf6-ffa12e03fe60"
        },
        "item": {
          "id": "869c6b21-1fa2-4b61-a8d3-ef2fb06529cc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "11425748-e442-4965-b212-9a1fb79e544b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198356c5-7a94-47d4-83e7-b7b0a273270f",
        "cursor": {
          "ref": "9114328a-71f8-41ff-84d7-e1262194b7eb",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b41bbb02-691f-4415-9473-c6685cf5f90d"
        },
        "item": {
          "id": "198356c5-7a94-47d4-83e7-b7b0a273270f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f1c2ed87-648b-4f44-9a3d-a7f50b1dc268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d57742b-bf0d-4579-b7b9-4fb5b932e681",
        "cursor": {
          "ref": "80cb25b7-7ef3-409d-8aec-4d4d84f597f7",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "67784933-20f3-4062-898f-5ead9f379294"
        },
        "item": {
          "id": "8d57742b-bf0d-4579-b7b9-4fb5b932e681",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b484e94d-3427-4a5a-98b7-c580fbe258eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a56611-6991-4783-8dfc-642f464e8571",
        "cursor": {
          "ref": "4ccc477c-917e-4f51-8a65-e905057b3893",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9e5aa69c-4725-429e-84c9-cf5d690ef0e7"
        },
        "item": {
          "id": "19a56611-6991-4783-8dfc-642f464e8571",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ee2255c6-284f-4c48-b84f-0c0e89858451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f003de5a-ecb9-4424-a0ee-127e4404e927",
        "cursor": {
          "ref": "428c7c45-5600-4523-a92b-dce3754665b6",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7e67a87f-17ea-487c-9a6b-f07f539c4353"
        },
        "item": {
          "id": "f003de5a-ecb9-4424-a0ee-127e4404e927",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2e2cd4ae-ca21-4e09-8555-c741039e6b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4a0799-28ee-41d3-bf62-39f0747ead08",
        "cursor": {
          "ref": "ff504b5a-8fa1-403c-8aa1-16e230a796f0",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "30aaa796-d312-4d38-a050-ae760f398cc8"
        },
        "item": {
          "id": "5a4a0799-28ee-41d3-bf62-39f0747ead08",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "850c7e1f-7ea3-4e91-b3ce-7ce89ece58ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65b3bc6-d8bc-497a-9553-ac8d143d6237",
        "cursor": {
          "ref": "29cd00fd-4f6c-48fa-b50f-da850af2efc2",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cf71d02d-a3bd-411f-96e7-310ddf6b82a3"
        },
        "item": {
          "id": "a65b3bc6-d8bc-497a-9553-ac8d143d6237",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b748c852-1295-483e-831a-692404e1c195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de49c07-aba1-42cf-b0f9-8d3c6a760134",
        "cursor": {
          "ref": "db8aad62-eeb2-42f7-8b31-bcdbdf222781",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ad22c612-6035-45bf-965f-cd83135a37d8"
        },
        "item": {
          "id": "2de49c07-aba1-42cf-b0f9-8d3c6a760134",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3ad9c7a1-1a31-46ae-942f-a4376f686b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb982c9-a3c0-4dbc-a3c3-4b629d951d6b",
        "cursor": {
          "ref": "b079e7b5-948b-464a-946b-78d05bf22215",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "53ddd10a-351b-4211-96e0-7982349a58eb"
        },
        "item": {
          "id": "1fb982c9-a3c0-4dbc-a3c3-4b629d951d6b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5f0c9994-f718-4aa8-8f77-d927103235fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcacd1b-1e0a-487e-897e-21f1e0b8b7e9",
        "cursor": {
          "ref": "e3ae501a-0f13-4947-9438-61a205c6c02d",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6a2485f5-7f24-408d-98bd-dac1e805978f"
        },
        "item": {
          "id": "ebcacd1b-1e0a-487e-897e-21f1e0b8b7e9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f1b81d31-5d69-4e2f-81eb-f02ca476dbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b135fd1-c898-44d9-966b-bbc17da72151",
        "cursor": {
          "ref": "4ea2fd09-57d9-489e-a5c7-7ff442afeb46",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f4525a22-6852-4cfa-9957-71adebed960f"
        },
        "item": {
          "id": "0b135fd1-c898-44d9-966b-bbc17da72151",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8b485cd4-d11c-465d-9e9f-90f2ac9f44a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80257cb6-00cd-4c21-bd82-9a5ac31979f9",
        "cursor": {
          "ref": "44aae5f2-7a6b-4a27-9482-e2935aa9c743",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0f97ca33-6872-4242-b553-1b7e296041cb"
        },
        "item": {
          "id": "80257cb6-00cd-4c21-bd82-9a5ac31979f9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3a40e057-c154-4610-82b1-005224139244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5038010c-ab93-40b9-a3f2-cb5b002f7bcb",
        "cursor": {
          "ref": "659fe92b-1b90-46bb-9e85-b83c4eded62f",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8f82b686-a5fe-4fa0-8e87-1a896274aaa6"
        },
        "item": {
          "id": "5038010c-ab93-40b9-a3f2-cb5b002f7bcb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "99a4e73a-4a97-4edf-937b-74f53765061a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adcaa97-0452-455d-948d-ca4d56c48802",
        "cursor": {
          "ref": "60509312-4339-4b4e-a3d0-1f94f8d8aa39",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4bdedd66-83fe-4c50-93ae-d4c3db655845"
        },
        "item": {
          "id": "1adcaa97-0452-455d-948d-ca4d56c48802",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3ba074ce-5729-4e96-b242-9b7c757e3de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1692801-21a9-4e13-8b03-5f883cf40c31",
        "cursor": {
          "ref": "03f339d6-22c6-4c73-b760-b00713f64853",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9566c353-9171-4d29-aa9d-40f2c2b445e1"
        },
        "item": {
          "id": "f1692801-21a9-4e13-8b03-5f883cf40c31",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "91342e8b-4c74-4128-9ef9-f6ad6601fcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05af74d2-b1df-444a-99de-17a3c80f3dfe",
        "cursor": {
          "ref": "ca64dc6f-714d-441a-9ab6-adeaab5a7e4e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f54add12-4894-4747-b200-0ed4bea5dd50"
        },
        "item": {
          "id": "05af74d2-b1df-444a-99de-17a3c80f3dfe",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "24186dfd-f02e-4e42-9496-c80b9cf0012e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941848c3-1ca7-4b28-b5c5-0a27433ca7f4",
        "cursor": {
          "ref": "25657c04-5186-44f2-89da-3b24fe8f1637",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7516e084-dd3f-4a3b-af21-378a3968a0f1"
        },
        "item": {
          "id": "941848c3-1ca7-4b28-b5c5-0a27433ca7f4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e008430c-c476-4e2d-be08-54b50f7e6dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325f1cec-80d7-4632-a217-06ceafd43254",
        "cursor": {
          "ref": "b0234a40-33ea-4667-a85a-38c3d38b26d9",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d326b6c2-4898-47bf-83c2-9564790a1bb1"
        },
        "item": {
          "id": "325f1cec-80d7-4632-a217-06ceafd43254",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "18463187-3d70-48b3-9e25-f48b8b8d85c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3dec19c-70db-41c2-8032-e536803b28ea",
        "cursor": {
          "ref": "6b38797c-ff4b-46b4-820a-727860f8b106",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cd5c06bb-b125-44ac-9542-b528545e2bed"
        },
        "item": {
          "id": "b3dec19c-70db-41c2-8032-e536803b28ea",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7e177688-071e-4326-b1b3-2ea915e18269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4847aa0-f3ab-42ad-9712-9a2d89e3b2f7",
        "cursor": {
          "ref": "02eda9b9-7ef9-45bb-989a-0d1decf6b478",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e161a302-6a4f-470c-9050-69eb89c87675"
        },
        "item": {
          "id": "d4847aa0-f3ab-42ad-9712-9a2d89e3b2f7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "558f091c-3565-40d4-b464-068c6a636c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa7656e-dda9-46b9-bb1d-92c12121f59a",
        "cursor": {
          "ref": "e453f52f-4113-46fd-b015-e4bfe829db86",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d0b501e8-7a44-4849-9fe5-6ac3ae62be35"
        },
        "item": {
          "id": "1fa7656e-dda9-46b9-bb1d-92c12121f59a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e94200e2-3335-4619-a88d-2fc0ca801211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cabeb3-ff0f-48ec-99ef-b68c0ee49dc7",
        "cursor": {
          "ref": "1d7aeedf-8362-4a3b-b2a9-d912d46144e2",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ff90ba71-6775-46b0-980a-37054af05065"
        },
        "item": {
          "id": "e0cabeb3-ff0f-48ec-99ef-b68c0ee49dc7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1baa09dd-1c17-404c-921e-c9e0c61cfc87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b63c973-b494-42f3-b6df-5cace5386def",
        "cursor": {
          "ref": "ecf68406-b712-4577-9286-fbd40ac5890c",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "20ddf27c-50a6-4040-8988-b6f21c3f369e"
        },
        "item": {
          "id": "2b63c973-b494-42f3-b6df-5cace5386def",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b2c0f41c-de9c-41f5-888e-cb0388f16bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e43923-05aa-4219-b10b-574087f48995",
        "cursor": {
          "ref": "6a3d4774-81e8-4db4-a819-3cda7c57e0af",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "96732f3d-3fb3-4d10-ba29-2be790ce23eb"
        },
        "item": {
          "id": "09e43923-05aa-4219-b10b-574087f48995",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "39a551d9-fa06-40ad-82b4-f8ed732e68e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bfa6b4-8b86-4ea5-a50a-4971dbbdc457",
        "cursor": {
          "ref": "847e89c0-2bb4-4eef-a758-9ee9718d17ff",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a6e73a01-b620-438d-83c4-45336dc95b9e"
        },
        "item": {
          "id": "25bfa6b4-8b86-4ea5-a50a-4971dbbdc457",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "470b246c-438a-40a6-addc-b8aed1dd3668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a4b9a4-31c0-48f0-81f0-f21d9f501d56",
        "cursor": {
          "ref": "dc1fa0a2-c39a-494b-816c-dcd101403c1a",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0cbf551a-74e2-467c-bf8f-8cd8e1e61610"
        },
        "item": {
          "id": "28a4b9a4-31c0-48f0-81f0-f21d9f501d56",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "70b05125-531f-4887-af7c-fa3101b6163e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273b67be-a492-44bb-9632-ef17af7f32bc",
        "cursor": {
          "ref": "4ff5523f-9f55-4387-9fdc-86fbfccc2ab1",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "df2c609b-3b08-4e07-9c98-389392e633c6"
        },
        "item": {
          "id": "273b67be-a492-44bb-9632-ef17af7f32bc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e17b1509-49cc-4ee0-8daa-46699789dd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc86e70-a08f-412c-afc6-ca6f8614427e",
        "cursor": {
          "ref": "2f8b3638-8585-44eb-b650-381269cb081b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1313a99f-42da-4ec2-8a07-91008e71c52b"
        },
        "item": {
          "id": "ffc86e70-a08f-412c-afc6-ca6f8614427e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9bfe1480-626b-434d-b639-e1bb668b72d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81711695-0bc5-4334-8b9d-1a4be2466aba",
        "cursor": {
          "ref": "9176fbff-efe5-40b6-939a-cae56753c107",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d004e687-6014-44cc-a504-f915c58ff320"
        },
        "item": {
          "id": "81711695-0bc5-4334-8b9d-1a4be2466aba",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ea50c74f-ba16-4302-82b3-361ab77dbb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82dc3ab9-0d13-4d44-b623-571866ed1765",
        "cursor": {
          "ref": "26cc5b02-6be1-4e6d-86c1-5dd39f7d769f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d54c3370-b9e6-4dd7-b69e-27abe6f443c8"
        },
        "item": {
          "id": "82dc3ab9-0d13-4d44-b623-571866ed1765",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "653a720e-f39c-4e3b-93db-002bc17638ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179b396b-868d-4d58-b89d-f9ba15c76a96",
        "cursor": {
          "ref": "a3346515-c577-47b4-ba1d-30a9d8c221fe",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bbd397d8-fb69-4777-8ddb-cf7b510aec0e"
        },
        "item": {
          "id": "179b396b-868d-4d58-b89d-f9ba15c76a96",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "01e2b395-f0cb-45ec-b85d-5772af9bf702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76b95c3-a9bd-462c-954f-b5d8bceda389",
        "cursor": {
          "ref": "3fdc70a2-0343-478b-b36b-b55a3cf6f01f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fab2d9fd-d109-48cf-90be-4aa90fd7fb61"
        },
        "item": {
          "id": "f76b95c3-a9bd-462c-954f-b5d8bceda389",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8b49b9de-2b4a-4341-a7e3-6b838e23bbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3661793-6c77-43d1-93d5-3a5fa74fdef2",
        "cursor": {
          "ref": "02b66e32-2046-4576-93a5-d365ace12c4d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "84b044c8-16b3-47b0-9f15-fa204fc6d870"
        },
        "item": {
          "id": "e3661793-6c77-43d1-93d5-3a5fa74fdef2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "55a5eaac-a25c-4e72-b3f4-fcd6f3c37a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd79a702-76b5-47a0-9a98-5679988a9980",
        "cursor": {
          "ref": "a8bfc557-3d88-4233-aecc-f65a5ee210f0",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "09117cdb-ea1b-48f4-be6a-7315c12b045b"
        },
        "item": {
          "id": "fd79a702-76b5-47a0-9a98-5679988a9980",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "03b85b8f-7a9c-43ab-8d97-83f642346fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39988f84-d736-4880-8935-be3fd879e767",
        "cursor": {
          "ref": "e7654e48-3330-4e08-8dec-a0ce4e465a7b",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bd5116d9-e494-447c-a70a-c66174c466f5"
        },
        "item": {
          "id": "39988f84-d736-4880-8935-be3fd879e767",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "da246388-9f7e-4cd4-a38c-79728aca41ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6434132c-4f82-4ff8-b5c1-6466ad5103f5",
        "cursor": {
          "ref": "fa516bac-9d36-4d23-baee-73f8fbd69ae5",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a6e48188-d34d-4bcd-9f43-c416b3dd6492"
        },
        "item": {
          "id": "6434132c-4f82-4ff8-b5c1-6466ad5103f5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "01aec709-d0e1-4de4-925f-fb69abfdc449",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822b1b21-1d9b-4d07-84aa-cd80b2fa8d55",
        "cursor": {
          "ref": "7e2af0d9-e7ff-4a5a-b5e5-f05e8a80228a",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "629a5e8c-b04c-409b-9968-0033170079fe"
        },
        "item": {
          "id": "822b1b21-1d9b-4d07-84aa-cd80b2fa8d55",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d63482c1-2c14-48cb-b24b-fa9f31da5c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e6b59a5d-ada8-4d9a-b8c0-877cbb1047a1",
        "cursor": {
          "ref": "7369f2a3-66dd-457a-a947-13ffe43e50e7",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "acd87be0-d7b1-4f9e-84be-5b8538810e8b"
        },
        "item": {
          "id": "e6b59a5d-ada8-4d9a-b8c0-877cbb1047a1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f3845383-37cb-4d83-b7c9-d042903e2e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "79f60efc-4f30-4449-b12f-620fffc1d2fb",
        "cursor": {
          "ref": "ec2e2387-97a8-493e-b83f-a91636dd3308",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8056bc56-e8b2-467c-9a53-a01240378c14"
        },
        "item": {
          "id": "79f60efc-4f30-4449-b12f-620fffc1d2fb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e94441a9-80f4-4d06-a0a2-93767a873e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e9dd945c-6226-4bc6-b8e0-a4074b6d8268",
        "cursor": {
          "ref": "d8fc92ea-9e65-47c5-97c3-88acfd08028b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b1759f36-a074-4217-a2c9-d4674505291b"
        },
        "item": {
          "id": "e9dd945c-6226-4bc6-b8e0-a4074b6d8268",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8964bcc0-7b9a-423d-a986-ceae1fdcbe57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9e5e6eae-79f4-4945-9e5a-1bfb183991c8",
        "cursor": {
          "ref": "542bf2a2-bac1-4fa6-a2e8-7b73fd9de4d3",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "facbc143-a9b9-4f46-854b-ecb1088249d0"
        },
        "item": {
          "id": "9e5e6eae-79f4-4945-9e5a-1bfb183991c8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "16b99fb5-3834-472c-b378-298d5c856e05",
          "status": "Created",
          "code": 201,
          "responseTime": 8302,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34d8412-7510-4f71-93d4-21e16c42e518",
        "cursor": {
          "ref": "3e844134-b0b7-44be-a5d0-1f548f7139a7",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c4ff4925-803b-412c-96b7-f11e9e974286"
        },
        "item": {
          "id": "e34d8412-7510-4f71-93d4-21e16c42e518",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "77ff6230-81e5-48d0-ad6d-8d8e2f742227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "cfdab317-1617-4c32-a5ff-2278bd2ca816",
        "cursor": {
          "ref": "250115ae-9bb9-43c7-aa96-a3f247317c8a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1255f9cb-d3c8-4b01-b430-d96cd61b5063"
        },
        "item": {
          "id": "cfdab317-1617-4c32-a5ff-2278bd2ca816",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "aad6f937-4b07-4f76-94ad-917bd9d42d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "db0610f7-b7d1-43c2-ae72-153a92d9c02f",
        "cursor": {
          "ref": "cd790aa2-f410-4c9a-a758-efa323403cbf",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "16a9f27f-1215-4acf-ad81-a23c7b639667"
        },
        "item": {
          "id": "db0610f7-b7d1-43c2-ae72-153a92d9c02f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9be1c3c9-5571-4f77-9ee8-3cc8d37328ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259c20eb-3238-4041-a63b-0d2f87420d2e",
        "cursor": {
          "ref": "aea4c2b1-5d3e-47c2-99d1-a296da92cf7b",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "443ceeb8-2255-44ff-b685-81365ae7bae7"
        },
        "item": {
          "id": "259c20eb-3238-4041-a63b-0d2f87420d2e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d88d9263-02de-40c1-b110-9e626480b166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d39b56b-3001-4699-a931-9869573eca27",
        "cursor": {
          "ref": "ad83b956-ceab-4a4c-863f-29031b850173",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b13d0e14-1b18-43d0-8499-dcece1c3db2c"
        },
        "item": {
          "id": "8d39b56b-3001-4699-a931-9869573eca27",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "76c72bfb-1432-434d-9bce-05ec0c0ef248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4b4927-bbc3-47e2-a587-f3e877000e1e",
        "cursor": {
          "ref": "c4f5bd1a-6afb-48a5-b072-dcf4da5a42d3",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e436aaf1-54f4-4340-9ae5-50726f1cf95b"
        },
        "item": {
          "id": "3a4b4927-bbc3-47e2-a587-f3e877000e1e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "510ebb0d-d278-422d-bca6-5efdac214747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32559dcb-678d-41f0-b627-884133a437e7",
        "cursor": {
          "ref": "a845217c-5677-445a-8348-cdd41708c670",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "77b3c108-f624-4637-89c3-56d63e42ff34"
        },
        "item": {
          "id": "32559dcb-678d-41f0-b627-884133a437e7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a6d2f556-cb52-4f28-b8ba-464947cd3205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ce1d77-c05f-4341-bea0-aaa7ae7ba972",
        "cursor": {
          "ref": "e4c608a4-d36f-4c11-820c-7d5a3385a003",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b80a7e2c-097a-434f-9c47-d8c19dd56e0d"
        },
        "item": {
          "id": "46ce1d77-c05f-4341-bea0-aaa7ae7ba972",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b0ad7a5f-c18d-43f7-b7e5-6336d238693f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ca8591-eaa0-4185-86f0-2227fa9072df",
        "cursor": {
          "ref": "d704a402-60eb-451d-a298-3266d74546c9",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d85c345b-d1b6-4668-8e41-e25889424bdc"
        },
        "item": {
          "id": "99ca8591-eaa0-4185-86f0-2227fa9072df",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d3ad2865-6dcb-4ab2-93d4-0d07c58b21ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38fac18-b3a1-4bcb-a984-5d9c7ae1956d",
        "cursor": {
          "ref": "531e5418-5284-4845-81c2-062c5967c0a1",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d8ab30e9-80fb-4d54-bc79-d767bc487239"
        },
        "item": {
          "id": "e38fac18-b3a1-4bcb-a984-5d9c7ae1956d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2a1e21eb-9add-4f4d-b32b-df136e5c4615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e90ad97-15b7-4709-94f7-a3a2f5ac5b98",
        "cursor": {
          "ref": "c521097f-9adf-4eb9-9929-3e55be6bd57f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7b4d11a7-7338-42ba-85e7-4a45b11d6c3a"
        },
        "item": {
          "id": "5e90ad97-15b7-4709-94f7-a3a2f5ac5b98",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1659b58e-b3c3-4f28-acaf-d6fa7c12622d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eff55d7-1e71-42bf-bdd8-9f0116b272e4",
        "cursor": {
          "ref": "06ea5a9a-e2c3-47fd-a861-f8eb95b3e45a",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2d1263b4-c18e-4d48-a040-fc3388435d83"
        },
        "item": {
          "id": "8eff55d7-1e71-42bf-bdd8-9f0116b272e4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ca84b909-8d2a-409c-92f8-970015cb5dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac83b787-4b4a-4ba5-ac7a-32b03888e8d0",
        "cursor": {
          "ref": "9d09782f-8a5a-464d-b825-07671e810452",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "75f4824a-7b10-427c-a37b-21d8b8ecc5ab"
        },
        "item": {
          "id": "ac83b787-4b4a-4ba5-ac7a-32b03888e8d0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "31b29aa9-31f9-40da-a789-30c49005d1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f17ee9a-5e0b-4a51-968c-3ec23693f2a1",
        "cursor": {
          "ref": "e59c2b3d-2b64-4180-81dd-fb2bdba03cc6",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9136f780-7832-4fc0-a648-992d073d51da"
        },
        "item": {
          "id": "5f17ee9a-5e0b-4a51-968c-3ec23693f2a1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2320d100-c13c-450a-bc4d-2d338e85a0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535b5a42-f86c-41e9-a06e-381146768beb",
        "cursor": {
          "ref": "3f371d8c-bb00-49d6-942f-31687d7856de",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a0bc9f9b-b6f3-48d7-9c6f-149a9eedc0b7"
        },
        "item": {
          "id": "535b5a42-f86c-41e9-a06e-381146768beb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "40a5dd3c-e010-417c-8314-44e0a5289858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c139cde1-49fc-4cc1-a0ce-4fe8f8a1c831",
        "cursor": {
          "ref": "bff5297c-a796-432e-9d8a-6c534fbccc85",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b5ac1a6c-fc66-4b1e-b69f-fce0876f4685"
        },
        "item": {
          "id": "c139cde1-49fc-4cc1-a0ce-4fe8f8a1c831",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c02ade58-5c9e-4386-b2e6-4ead77ed5791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32b035e-068b-427d-a472-e44782def3e5",
        "cursor": {
          "ref": "bac05e4c-44c1-4c8d-b8b1-7ed2baa92b24",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "04cdf2ce-dde8-49c6-9cd4-59344eadca9d"
        },
        "item": {
          "id": "d32b035e-068b-427d-a472-e44782def3e5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "12be1418-f78d-43d7-9775-23b7dd82dc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49ea0e7-3c29-4b70-bcb2-4fee957b6332",
        "cursor": {
          "ref": "b4987ee7-1c8c-44b7-8beb-a854c86a5ff0",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2f75a283-0f30-420b-b87e-e643ec601295"
        },
        "item": {
          "id": "d49ea0e7-3c29-4b70-bcb2-4fee957b6332",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7fe835e5-c3b3-40fb-b111-4e2a3d94a7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9b81f3-a63b-463e-980a-18c0b4e7d489",
        "cursor": {
          "ref": "a785dd50-8006-4f25-9036-913e39ae6f33",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c07a6c52-9200-4699-a581-a11d4af34207"
        },
        "item": {
          "id": "5a9b81f3-a63b-463e-980a-18c0b4e7d489",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "05f9582a-ca32-4fac-bf15-fa3b0a5a8d11",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "bf74f428-1d0d-4abf-94b1-7f77b3630cf6",
        "cursor": {
          "ref": "bd67be76-fa43-40ec-a67b-f1256350df2f",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "13924168-eeeb-401c-a346-cfb441bc3e71"
        },
        "item": {
          "id": "bf74f428-1d0d-4abf-94b1-7f77b3630cf6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ef582db8-1ab8-49ec-b432-b4746c470dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4a29d9-e447-414f-a57e-07fa3fd94301",
        "cursor": {
          "ref": "680af962-ea55-4397-b3ad-192f555d1ef7",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f713e17a-725b-48af-ba42-90130cafdb26"
        },
        "item": {
          "id": "3e4a29d9-e447-414f-a57e-07fa3fd94301",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d6c18333-e501-4684-9753-04a4823f2cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abd0c95-ffcb-400a-87df-c27499bbd32a",
        "cursor": {
          "ref": "a97a936f-573b-4412-b3a5-66da61cc523c",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e395e35d-77e5-419b-aaae-73de11eb488a"
        },
        "item": {
          "id": "2abd0c95-ffcb-400a-87df-c27499bbd32a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "097503f4-5b13-4800-b2e2-1848934dce09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4fbd70-8576-4be5-ad4c-e2d61b015ac5",
        "cursor": {
          "ref": "c7df8faa-31c3-4a28-8d29-3e256d863500",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0840aab5-075d-4127-910d-f712fcd7a00c"
        },
        "item": {
          "id": "6b4fbd70-8576-4be5-ad4c-e2d61b015ac5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ca7a300a-ae98-46c3-8eac-c54022baa856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e2e16c-e84d-4275-bbd5-54888738c338",
        "cursor": {
          "ref": "b864ef2b-17e8-4a72-9e95-d2ac61bdf3b6",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "31181b78-04b8-49b0-8e0c-b8ba832d5e24"
        },
        "item": {
          "id": "c1e2e16c-e84d-4275-bbd5-54888738c338",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f094170a-25b4-4aa4-9c46-04bc8a270e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e19602-231a-447a-8e76-d55838de89ea",
        "cursor": {
          "ref": "0c9fa528-b14f-467d-9577-2f86c10b7d23",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c566b667-38cb-4e8e-9dad-ac60d0e42498"
        },
        "item": {
          "id": "26e19602-231a-447a-8e76-d55838de89ea",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "af842fd1-8bb6-4ebe-a3c5-d17aa2bea9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1aee6d-6f15-4987-b83b-924348ff159a",
        "cursor": {
          "ref": "facb9687-586e-4604-be65-08e8a7bd41fe",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2d28f46c-d8ab-43b0-895b-6dec3946d687"
        },
        "item": {
          "id": "cf1aee6d-6f15-4987-b83b-924348ff159a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c61b6a8e-f654-4aea-bdfe-c68fa5bdefd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2ebb24-2ffe-4f00-8829-6129bcf13f19",
        "cursor": {
          "ref": "a09874e9-e4e5-4307-8541-333b4661e53e",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "34f26197-fff9-446e-8fad-c6bdca4d3c41"
        },
        "item": {
          "id": "bd2ebb24-2ffe-4f00-8829-6129bcf13f19",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6ffbb90d-88dd-4521-9273-c7d0aad9a8c8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 23,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "85e5a9e2-b543-4343-bcc2-25968ee6f9f8",
        "cursor": {
          "ref": "68450566-cc38-405b-8582-659f749ad9eb",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "719da9b1-8c09-49ad-b62f-1d3edbd39f1d"
        },
        "item": {
          "id": "85e5a9e2-b543-4343-bcc2-25968ee6f9f8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e4f986c0-b681-42c8-8789-f308a3bd6a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1067f9c4-c8c1-416e-af1c-fbe2038d12ec",
        "cursor": {
          "ref": "ccd5f287-2ec4-410a-b4b5-80ba980af041",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "30666045-d4e2-440e-968e-5de2d3d36df8"
        },
        "item": {
          "id": "1067f9c4-c8c1-416e-af1c-fbe2038d12ec",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "78947c69-0c3e-4085-8fc9-51a1710b7a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44479a3e-1fa7-4fc3-b2c7-d61b68e7c1f1",
        "cursor": {
          "ref": "f91beca9-1046-4b43-a018-3f5bcf5c11a8",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0104836a-061c-492c-940d-d5790378bd85"
        },
        "item": {
          "id": "44479a3e-1fa7-4fc3-b2c7-d61b68e7c1f1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "17792472-9927-43ff-b330-8f60498576df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6910022c-26b9-4389-bff8-735279a84cc2",
        "cursor": {
          "ref": "a8ad47d1-af3e-44d0-ba5c-87b0c824ad27",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "91620656-8df5-46e3-9de0-0f9021b97e32"
        },
        "item": {
          "id": "6910022c-26b9-4389-bff8-735279a84cc2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "94b0c436-c715-4d27-9349-0df38e3753ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de635e5-cb0a-4fb7-bf94-f5f1a90bdb33",
        "cursor": {
          "ref": "64082111-1704-4b8f-92be-afd50474676d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "518aa7a3-6120-4ede-baaa-a2bf6a667f6f"
        },
        "item": {
          "id": "7de635e5-cb0a-4fb7-bf94-f5f1a90bdb33",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3066e416-d40e-47e2-a007-934cbbd0ab97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71c581a-b6da-4bf9-9b78-7c0727ffd33e",
        "cursor": {
          "ref": "957ff323-79b5-4530-8c7a-f7f455157bd6",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f6576c15-cc89-448a-8ca1-dc0b83ac5e81"
        },
        "item": {
          "id": "a71c581a-b6da-4bf9-9b78-7c0727ffd33e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b9849c15-6e61-48ed-99f9-ae79a9a61f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db807774-cd07-4e0f-8bf0-5787902384cf",
        "cursor": {
          "ref": "c4715d63-541a-4ffd-b354-6438047b6366",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e1adc407-0374-4d88-b32b-0c3547d22b5f"
        },
        "item": {
          "id": "db807774-cd07-4e0f-8bf0-5787902384cf",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dff2807e-43d0-466a-866c-5246edf8956a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 83,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "1682ca64-c1ff-4b47-ac12-46282549e2b6",
        "cursor": {
          "ref": "1c73ead7-6e57-40af-83c2-474cfffeb5dc",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "88c6e53f-8dfe-470e-a85e-268820586e33"
        },
        "item": {
          "id": "1682ca64-c1ff-4b47-ac12-46282549e2b6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "74f98473-0dc5-41da-a3a4-f73f7c577e40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69f4df8-3a7e-4bfd-8044-e380d10ac726",
        "cursor": {
          "ref": "3dba5a7e-2046-49dd-9708-9ea9761294eb",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ceb1b6c4-63f2-4697-938c-7bb2dea0c6f3"
        },
        "item": {
          "id": "f69f4df8-3a7e-4bfd-8044-e380d10ac726",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dc624e56-fd33-4fd5-a556-a3cf47bee7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7329ee90-72a7-4114-a0ab-3961dcc5c9a1",
        "cursor": {
          "ref": "2c6991c8-2c84-4326-817b-cfe2c76b2c72",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f050bf29-18b9-47c7-aee2-541afd73701e"
        },
        "item": {
          "id": "7329ee90-72a7-4114-a0ab-3961dcc5c9a1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "016ca1a9-2e2f-452b-b3b0-51372c1a1063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ea0c1b-9356-41ec-a6fc-daef20bef5e6",
        "cursor": {
          "ref": "b1e8d2ef-86c1-4bb1-b942-d56728b08d26",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "18cef2fd-cd3f-4583-b6cb-4ed77c1f6a1d"
        },
        "item": {
          "id": "e4ea0c1b-9356-41ec-a6fc-daef20bef5e6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "57801a0c-6456-4fc5-81f7-ba79e49b00e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46911b82-5e68-4690-9f8c-483551748236",
        "cursor": {
          "ref": "af19fc58-a4fc-4dd5-a9cd-da31f457c670",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f6d2371d-d701-44b1-b02f-5ac34fad144c"
        },
        "item": {
          "id": "46911b82-5e68-4690-9f8c-483551748236",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d8e818dc-efd1-4adb-8dbc-5a2807cce3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e7ca83-a9c1-4613-b6d3-b892efc95596",
        "cursor": {
          "ref": "72c6f4fe-3879-4c3d-9305-d0b01730352e",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "aeada978-3791-4580-ba92-3fed40555192"
        },
        "item": {
          "id": "15e7ca83-a9c1-4613-b6d3-b892efc95596",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2f5de660-012d-4cb8-9cc7-ce077938bec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc89fa0-944d-4f74-8024-0790348b5152",
        "cursor": {
          "ref": "71492a7a-231d-4403-af75-4a0c725af099",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "02a47f8b-dd81-4063-a791-efb3afe4375e"
        },
        "item": {
          "id": "8fc89fa0-944d-4f74-8024-0790348b5152",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e0ad2759-6f75-4583-b0ba-ebef610f27bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ae7cbe-0685-4256-83c9-2849eb6694bf",
        "cursor": {
          "ref": "65a32e04-b00d-49c4-8e80-d487eadb0f6b",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "15c048a6-a9f4-4b35-8006-f549162f690c"
        },
        "item": {
          "id": "14ae7cbe-0685-4256-83c9-2849eb6694bf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "927e8644-1352-43f4-9661-2d70cb43864e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b810cd18-5c96-425f-b251-1d454b1eab16",
        "cursor": {
          "ref": "753c5152-2991-42ae-8146-4d15682a9efb",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9c8af937-5427-4fd6-9ea6-b37d1c98fd2d"
        },
        "item": {
          "id": "b810cd18-5c96-425f-b251-1d454b1eab16",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5251d95e-0feb-416b-ba81-f2af2f1dc7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a017bbcf-657d-4e3c-9040-b05d606b9f51",
        "cursor": {
          "ref": "24faab63-22ea-4c8f-bc7f-bd0f56a95d92",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0fc2a03c-32f9-4a5b-808d-14e6cb81c53f"
        },
        "item": {
          "id": "a017bbcf-657d-4e3c-9040-b05d606b9f51",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "13c99962-c0d6-45d0-b803-3e00d1ca0847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa6fd69-19ce-435c-8332-908293e35a6b",
        "cursor": {
          "ref": "1b93b81d-b32b-4e9b-ae13-ff196c84f177",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3661e8e5-e80f-4f1c-aab2-c26ec4a29edf"
        },
        "item": {
          "id": "1aa6fd69-19ce-435c-8332-908293e35a6b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0d4a9909-e2aa-482b-8c9f-443405af4f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a72ff1-a804-45f8-a692-50ada2574588",
        "cursor": {
          "ref": "de160611-1b07-4dff-b96e-c0a4a268b6a0",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "67653499-b3d5-4807-a005-1bbe23c00c3f"
        },
        "item": {
          "id": "12a72ff1-a804-45f8-a692-50ada2574588",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "85b08b82-b402-4cf5-b731-344758944eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8607db-a5c6-43d4-a775-10de6871c168",
        "cursor": {
          "ref": "483b451a-5dfa-43e1-9a74-899754223053",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e298dc77-904b-4b50-9529-e643aced9d90"
        },
        "item": {
          "id": "5b8607db-a5c6-43d4-a775-10de6871c168",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3f14f185-ed3e-493b-baff-b8ee6fddd8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d001bda2-4408-4863-97f0-9bd8cd24e209",
        "cursor": {
          "ref": "a1064aa0-82a0-4c35-99fa-ef33730bf746",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "dda3b1ce-92a5-44ee-951e-dbd737616b36"
        },
        "item": {
          "id": "d001bda2-4408-4863-97f0-9bd8cd24e209",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5ccfcdec-8e8c-4f53-a74e-5f430fd13c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697e27d8-ef80-46e4-997e-c7ad70e7f24b",
        "cursor": {
          "ref": "a91a5c17-0117-40bc-876d-19b58b997897",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "93c91acd-32df-47ae-9fc4-44f209b5f5be"
        },
        "item": {
          "id": "697e27d8-ef80-46e4-997e-c7ad70e7f24b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "63413879-54a8-47f7-b114-f70d63d662a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afb8fc7-1546-4c02-836e-ca86681fde2e",
        "cursor": {
          "ref": "20f38bef-7943-4feb-acda-f29ff8a0d4d3",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d322694f-922d-42b2-8884-ba94711c8266"
        },
        "item": {
          "id": "8afb8fc7-1546-4c02-836e-ca86681fde2e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2e3eed38-ad5c-4388-a156-e5a694378ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debc3476-9016-43f9-b2d4-a1ea1d1684c8",
        "cursor": {
          "ref": "eb79180e-8a7a-45a3-842b-f2916e8ac58c",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "07d26a2f-a8c1-411b-a3a0-a64e0c23d3ee"
        },
        "item": {
          "id": "debc3476-9016-43f9-b2d4-a1ea1d1684c8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cdcf4620-b13b-425e-8a42-8dbf03412db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791da232-8956-45ab-b94b-14a603559b35",
        "cursor": {
          "ref": "7e4ee349-035f-42b1-b13b-8efcc92eba4e",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3ec26e2c-e92d-4a13-8ee7-443694c29962"
        },
        "item": {
          "id": "791da232-8956-45ab-b94b-14a603559b35",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "10b56739-fb6b-48b4-abbc-a022f228cb24",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 78,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "ce1c5e99-63bf-4baf-a54e-b3a751abc098",
        "cursor": {
          "ref": "e533c069-d45b-4a0d-a619-04e0a49fde44",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "dc9b0aba-8434-4401-9344-3351d6490f47"
        },
        "item": {
          "id": "ce1c5e99-63bf-4baf-a54e-b3a751abc098",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4dbae89c-33e9-41f0-b481-bd99c6cb7869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712e0846-9c31-4433-b26d-702c6f7e523a",
        "cursor": {
          "ref": "fdd3978e-fdbd-4482-bbd2-352ee7711375",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "27cfb1e2-d0f0-47ab-99df-1db0be4acfbd"
        },
        "item": {
          "id": "712e0846-9c31-4433-b26d-702c6f7e523a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "83116bbf-d373-4fe5-9593-ec85fc3b2a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c2db2a-fcd1-494e-a7d3-4787c2071b5c",
        "cursor": {
          "ref": "a4ed0a40-7a0e-4fdf-b494-aadca040d2f4",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9ecaa676-6201-4399-80c4-1035376db92e"
        },
        "item": {
          "id": "16c2db2a-fcd1-494e-a7d3-4787c2071b5c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6f755e8e-96ea-4481-948c-5f8bd4fd898a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b49671-7855-4991-96c8-dbbc4a06d960",
        "cursor": {
          "ref": "6227c377-3a73-4073-b3fa-f4dac38ff79a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "323e02fb-407a-4220-8a3d-da3abdc733af"
        },
        "item": {
          "id": "b3b49671-7855-4991-96c8-dbbc4a06d960",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9c682d8d-d9b0-4589-b5dd-8d0443b61c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b426659-089b-42c5-a262-02e088fb8a3c",
        "cursor": {
          "ref": "9d0dd7af-e4bb-4ddb-b77e-921820565fa3",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "57a21217-b8e0-4691-9b01-edb445dc8bdd"
        },
        "item": {
          "id": "4b426659-089b-42c5-a262-02e088fb8a3c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1e5c1fd3-0585-4f09-b650-12cd09f1618b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726db299-7f82-4808-97cc-0b8efdb57017",
        "cursor": {
          "ref": "89170c2a-9540-4f25-a2d6-bc58e3f35a6c",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "838b02e8-c36c-4f6b-810c-97abe27c3405"
        },
        "item": {
          "id": "726db299-7f82-4808-97cc-0b8efdb57017",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1832cf4b-89cd-4ba8-a697-b01e505dcbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7896e0-159a-43fb-b663-84bdf9393dbf",
        "cursor": {
          "ref": "bed34bb9-d32c-42c0-9251-12e06d20a6cd",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b11a711f-f254-4207-b374-1132397d02de"
        },
        "item": {
          "id": "ea7896e0-159a-43fb-b663-84bdf9393dbf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "06e16af9-605a-4de4-a206-afae18f100f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79136508-d792-4767-a4f3-d81e4b634c51",
        "cursor": {
          "ref": "ce0c0eb3-de58-4bf7-9599-99ce002586dc",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e49cbe50-f521-4411-81a0-39cb4adcdadd"
        },
        "item": {
          "id": "79136508-d792-4767-a4f3-d81e4b634c51",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "36953d99-65c7-4d1a-80ae-fd0a9e6bf269",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "5937d5d8-408a-4cd2-a093-f0d9e2095824",
        "cursor": {
          "ref": "a91c798b-afd9-4049-9ebf-ac0fab574e2a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "de9088b0-f943-4317-aea0-49e68c81a4d9"
        },
        "item": {
          "id": "5937d5d8-408a-4cd2-a093-f0d9e2095824",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c89184ea-e0ce-40a8-a966-03c3ba6e06bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3744ab7e-7012-4af6-b209-57f90dd21331",
        "cursor": {
          "ref": "a40d10f5-a041-4a68-8e7c-a3ac780cd1a5",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0398519d-1d1b-4bf4-bfb1-d2b19bef2961"
        },
        "item": {
          "id": "3744ab7e-7012-4af6-b209-57f90dd21331",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0e69a2e6-f869-4a68-9b7b-ee5b6ff95dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6caacfbd-6e16-4015-ac3b-5ebebd149f3c",
        "cursor": {
          "ref": "ff4dec57-b0b5-41af-a6d1-7889029a1f4b",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "10972ecb-1d89-46ca-97ce-d29bdbcd68ff"
        },
        "item": {
          "id": "6caacfbd-6e16-4015-ac3b-5ebebd149f3c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b0d6f8b6-1a4f-4ff4-9c9d-207718bb95f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b2bfa8-d32b-47dd-a24f-c1af3e098618",
        "cursor": {
          "ref": "0b49bbc4-5764-4bdb-9cb8-a99c1de75563",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6be93d7c-eec4-48aa-8e82-cd02db238fe5"
        },
        "item": {
          "id": "c8b2bfa8-d32b-47dd-a24f-c1af3e098618",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9ebe6ee5-b535-470f-9e2c-60c458525b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8809a55-3a67-4572-ab26-9fc9a682bce1",
        "cursor": {
          "ref": "6a8c659f-3c7f-409b-9700-5bab10a03c34",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a3d70d9e-1053-4dd4-8dcb-a46672eade21"
        },
        "item": {
          "id": "f8809a55-3a67-4572-ab26-9fc9a682bce1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d68c7ab9-0c85-428d-a069-0d13667a0b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b9abaf-c1d4-4985-aafc-fac22774704a",
        "cursor": {
          "ref": "449bc08a-d864-48ce-abeb-8ede44e5da7f",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2c710d3a-5d6a-4b95-a318-aada06b899ca"
        },
        "item": {
          "id": "03b9abaf-c1d4-4985-aafc-fac22774704a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "991093fe-048e-4468-8ceb-8dd1549459e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc5d1e4-76c9-41ce-aaee-c9bcbf1eaa8d",
        "cursor": {
          "ref": "696a8278-63d7-4596-be13-295d6b4e40e9",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2f6392ff-c536-405e-a0b1-c8e8473a331b"
        },
        "item": {
          "id": "1dc5d1e4-76c9-41ce-aaee-c9bcbf1eaa8d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6d518138-9a80-4424-b20a-b396de7afe49",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "5b7b55db-7db5-45ce-9107-745f50425799",
        "cursor": {
          "ref": "bc79ab38-6e62-4497-8f5a-d3ddf868284b",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8583baa2-421b-457c-a6e5-1915b284d962"
        },
        "item": {
          "id": "5b7b55db-7db5-45ce-9107-745f50425799",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7be4f9f8-47c1-4404-a592-cd89cb537b5c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "a913db6d-74bc-4c3e-a2b9-d68585af6090",
        "cursor": {
          "ref": "488fd987-5258-4ded-bd01-f46ef0d5bc55",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "29057079-332f-4482-83d8-0e46d0aa2d16"
        },
        "item": {
          "id": "a913db6d-74bc-4c3e-a2b9-d68585af6090",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8e340e43-c85d-4bda-b9b5-11fb32741f3c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "11590de4-7157-4599-ab80-768ba40e9a5e",
        "cursor": {
          "ref": "aff7568c-6203-4ec1-9a1f-7dffcdd1fb9a",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3d5df4b8-418f-4885-96b3-a5f1b3d0e64f"
        },
        "item": {
          "id": "11590de4-7157-4599-ab80-768ba40e9a5e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "316e4c33-5892-428b-96ba-1632e11e338c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 28,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "426dec60-5b76-4d4d-806e-429152052557",
        "cursor": {
          "ref": "3813d6ba-94a3-49f2-9394-0b43e8e2d095",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b68f753a-fe00-43d1-abda-90c0eeaa2d75"
        },
        "item": {
          "id": "426dec60-5b76-4d4d-806e-429152052557",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f6dc6bbe-f20d-4b2b-aecd-e5bf9daf5499",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "1dfb46a3-0a58-4e30-a02d-103030ee3cc5",
        "cursor": {
          "ref": "53cf0a05-a6b7-437c-a2f2-9feb95540931",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bf75e28b-738b-470c-a113-95b08d76e4b4"
        },
        "item": {
          "id": "1dfb46a3-0a58-4e30-a02d-103030ee3cc5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a8b8f912-b58a-44bc-86c7-411cd4749724",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "a422e6d5-5781-4686-bd18-4467c5281eff",
        "cursor": {
          "ref": "52d4bb5a-2487-47e1-a5c1-991accf03916",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "143b66c2-c844-4d1a-8602-c4bc6ee32cb0"
        },
        "item": {
          "id": "a422e6d5-5781-4686-bd18-4467c5281eff",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "30412992-5200-4c48-bddc-c0009369cf2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1914105-c056-4c56-a44e-cf6576ee4509",
        "cursor": {
          "ref": "8314ff23-4ca8-4e13-aea6-3400765a6f11",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "034f33ba-ff38-4dd4-9af6-e0f7750f922a"
        },
        "item": {
          "id": "f1914105-c056-4c56-a44e-cf6576ee4509",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "18c0030e-30ff-4d1b-829a-60be6836820f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6161ddd3-c511-4071-a96e-042813fcd7e0",
        "cursor": {
          "ref": "eff3bee9-e546-4343-8ba1-b6fc1751e490",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "41e1a05f-a65b-4dab-bfaa-97e9ff3b26b0"
        },
        "item": {
          "id": "6161ddd3-c511-4071-a96e-042813fcd7e0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9ae0017a-1ef5-48f0-aaf5-fee101eccba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab96962-feb9-47e9-9277-1dbb4177c335",
        "cursor": {
          "ref": "55dd5bdc-ec84-4322-85c6-21f449f70f8a",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "573efed1-ca46-4915-8543-0f4f2322f408"
        },
        "item": {
          "id": "5ab96962-feb9-47e9-9277-1dbb4177c335",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fa4b0960-1e1c-4d3d-8ce6-c994ae3a05aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b73445b-4bf6-4bf0-a908-01c18438b9fc",
        "cursor": {
          "ref": "9632879a-7f51-4660-8a58-bb85f29082bb",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e4b93622-4c5b-47b1-a08f-b9c687df294e"
        },
        "item": {
          "id": "1b73445b-4bf6-4bf0-a908-01c18438b9fc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "97c34e62-e371-406f-8e5e-205b4247cc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538e67ac-5329-4874-b993-ff07f6c8c29f",
        "cursor": {
          "ref": "6fa1941a-33f4-4f22-a509-7930e915db38",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e3a7e1b1-76b4-49b0-bdd6-e31e8cef3d5c"
        },
        "item": {
          "id": "538e67ac-5329-4874-b993-ff07f6c8c29f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bef4563f-ecf9-45a8-9d90-381d2afc7ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ba1099-633c-4e0a-874c-c3213b27f5d3",
        "cursor": {
          "ref": "6552f2a7-5008-4fe9-abfb-aa9962b25aba",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "39f3da2d-fad6-4685-ac50-bb72e8bf6862"
        },
        "item": {
          "id": "16ba1099-633c-4e0a-874c-c3213b27f5d3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2db0a1c6-1fa2-4ad9-84d7-deb984cb7919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6368926f-e300-44d6-9bc1-990a4a9ac883",
        "cursor": {
          "ref": "2ab73241-e83e-421a-aebd-7681fe5560e4",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "28f6f864-695f-43a5-b859-234a2b248a72"
        },
        "item": {
          "id": "6368926f-e300-44d6-9bc1-990a4a9ac883",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "524779f9-463c-4a7a-b935-80611b31ec29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1e9f27-cd24-4f90-9c4d-c98f2c630544",
        "cursor": {
          "ref": "69d2642c-4da6-44ec-9435-60e83fbb2f2c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "35b71890-f27b-4dca-8791-c30067dbded3"
        },
        "item": {
          "id": "fa1e9f27-cd24-4f90-9c4d-c98f2c630544",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "082461c6-8622-4403-8e8e-e7fca643f65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7b71f1-2624-4f4c-9f22-6350d5b1e501",
        "cursor": {
          "ref": "f93547bd-d01b-4a8d-bb3f-049c0c314755",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "150a7e4a-e2b3-4006-be8b-d3c8ecf2ad09"
        },
        "item": {
          "id": "0e7b71f1-2624-4f4c-9f22-6350d5b1e501",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d4824514-c3c1-493e-af06-43f40b6479a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116623ae-7726-491e-9230-74c8c7b3655b",
        "cursor": {
          "ref": "d4b5ec6d-a94e-4bdc-865e-eeea6c078c9e",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "92dee211-32ec-4110-b9e0-922a0ffd48e3"
        },
        "item": {
          "id": "116623ae-7726-491e-9230-74c8c7b3655b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b70048b8-ebe7-4c69-b098-6748bb486717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cdb44e-c433-4cfc-a7e1-eecfe512d3f7",
        "cursor": {
          "ref": "1fa32c76-84f4-4308-b353-df37b827e6ff",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f3040079-31b0-4afb-b0ec-2f6efe53c456"
        },
        "item": {
          "id": "b8cdb44e-c433-4cfc-a7e1-eecfe512d3f7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1f807975-2088-4856-9d9a-0d99440c0182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b242116-2d17-43ac-997b-0a9caf6c0e0c",
        "cursor": {
          "ref": "4930ec4b-2e0b-4c65-a60b-1c15fa3e7211",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6450d872-9f1e-4fac-87b2-ecbfb13f3aee"
        },
        "item": {
          "id": "8b242116-2d17-43ac-997b-0a9caf6c0e0c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5d133a97-9d96-4145-b784-009a7618e652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de79f4b-82f8-475f-ae69-dd37a8793959",
        "cursor": {
          "ref": "5f3b6ff1-a6e6-442f-939f-a767fc689749",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "adc4794b-a091-4df3-b82f-515a1c31988f"
        },
        "item": {
          "id": "4de79f4b-82f8-475f-ae69-dd37a8793959",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "68960d7e-7dd4-47f8-92cb-4a2f2e2e8217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41d1cb9-31f8-480a-a314-24f683665a5c",
        "cursor": {
          "ref": "49ec4f12-bd87-4c53-86e3-994a0287e024",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ec9e7248-4196-4815-b26c-339a14c74a2c"
        },
        "item": {
          "id": "a41d1cb9-31f8-480a-a314-24f683665a5c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "50294dab-6c53-479c-bf56-9c7d75c45f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cef343-0b6d-4b16-bc60-68394d111ddd",
        "cursor": {
          "ref": "a6ac51ae-d3ce-4de0-b944-9c66ff994a76",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9ce2adb0-f800-4f46-b198-c98d72fbc489"
        },
        "item": {
          "id": "65cef343-0b6d-4b16-bc60-68394d111ddd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5878a6c7-2f75-407a-bf8c-c9e08f90460f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3e7907-c41a-47c5-ab1e-d5c9a87099be",
        "cursor": {
          "ref": "19ffd0af-c166-415a-9525-b9ab7ea1fb26",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3fa3fd74-eaa0-488d-b1ba-df94ce6cb24c"
        },
        "item": {
          "id": "db3e7907-c41a-47c5-ab1e-d5c9a87099be",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "27232c77-71a1-40d6-95a1-cd401e465707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a15fe43-609b-4331-b32f-3d23820e147d",
        "cursor": {
          "ref": "6b3626d1-d9a2-49d1-9115-75ac096ea3c0",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "eaafd868-ec09-41d4-8b8c-986d80b18fab"
        },
        "item": {
          "id": "7a15fe43-609b-4331-b32f-3d23820e147d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5e037e5d-b965-4780-85e1-8f664b68bb1a",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "08bc7693-d4db-4756-8af3-934622aae62b",
        "cursor": {
          "ref": "5b764511-808c-4bcb-9095-7d3f4c203150",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "af1c9e5f-0e84-48da-bbba-a9370a7c0423"
        },
        "item": {
          "id": "08bc7693-d4db-4756-8af3-934622aae62b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ecee2eca-c6e6-458f-ac63-fe14717424db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a88b90f-563e-43b3-bbc9-583460299d9b",
        "cursor": {
          "ref": "c4fb791f-e12d-4c37-9732-72a0282f4d41",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8387d622-5cd9-4e30-880a-b6e1c0aad0ff"
        },
        "item": {
          "id": "5a88b90f-563e-43b3-bbc9-583460299d9b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6f8c857e-0110-4b2b-b38b-52b55664fd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce9e3f6-f312-4b80-9c40-d665113f6baa",
        "cursor": {
          "ref": "34e1637a-0e87-492e-99f9-f3b71891e758",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "619f23c1-1a4e-42de-99bd-8698e9c8e76b"
        },
        "item": {
          "id": "fce9e3f6-f312-4b80-9c40-d665113f6baa",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a6917eb1-f80c-4859-a722-35b55c94c79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af77bdb4-0a9d-4ad4-8c90-60b05aa6f412",
        "cursor": {
          "ref": "62aa0ef5-2f78-4ea9-a6d4-f0bd0cd7b7c1",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d06b3d72-57f3-4561-bad9-113ca94b2d88"
        },
        "item": {
          "id": "af77bdb4-0a9d-4ad4-8c90-60b05aa6f412",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "72e5c1d8-1715-48d3-a571-0d2e04bd4e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af26cb5d-e51d-4e0c-9da0-41c61fc3011f",
        "cursor": {
          "ref": "cc994e73-0c77-47ab-9353-9f827adec327",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "80b6dbe8-5065-4422-8cdd-3a4d0edd4b18"
        },
        "item": {
          "id": "af26cb5d-e51d-4e0c-9da0-41c61fc3011f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "70396893-7125-47f0-b935-5604a35f2ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263903e1-e495-41ff-be86-028d53599002",
        "cursor": {
          "ref": "f092caf9-7892-4a5b-a119-87dc84c918bb",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "22650757-484d-4b6b-a958-1e87fd46130f"
        },
        "item": {
          "id": "263903e1-e495-41ff-be86-028d53599002",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fd530532-6655-44bc-bb31-e8c671ef2a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c85b30a-c3cb-48c1-af37-0360aaa76c82",
        "cursor": {
          "ref": "f93204f3-b252-448d-b2c8-b20734f0b350",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "348b59f9-51d4-4ec3-a7e0-8694170a31c0"
        },
        "item": {
          "id": "7c85b30a-c3cb-48c1-af37-0360aaa76c82",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b3c8c63d-9efb-429d-a765-3c3fd6f0a078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc72ed3f-61e6-4d49-b619-c87b986a17d0",
        "cursor": {
          "ref": "52c2af9b-39ca-49d6-b2fb-8b21678194d8",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "da14c541-99ae-43f1-bef0-93d7e3734bcd"
        },
        "item": {
          "id": "cc72ed3f-61e6-4d49-b619-c87b986a17d0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dc4c09f4-c956-4275-a975-0d1e99203f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5e6eb4-7a0f-4227-b162-49d96e8fd844",
        "cursor": {
          "ref": "36d74179-81ce-4a17-8941-b706ce122277",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cb37e49f-802f-4dbe-8d4f-721b58f91077"
        },
        "item": {
          "id": "ab5e6eb4-7a0f-4227-b162-49d96e8fd844",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "54d17746-f2e6-4302-9252-a15068f00d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46d9642-8878-41fd-aba2-94880d136789",
        "cursor": {
          "ref": "8c4dee27-498a-4f9a-9ff5-43206abc6225",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e29a1d77-d69b-4628-95b3-941d0d1b184a"
        },
        "item": {
          "id": "c46d9642-8878-41fd-aba2-94880d136789",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0f5c5fe0-d502-41bf-8e23-6cf27bd7be69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8bf81a-2a0c-4d31-b81a-45130b487bed",
        "cursor": {
          "ref": "8058e05c-f36b-40e2-90e1-fd732019d196",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bdfb30a4-a43b-40a1-86cd-b02a56964255"
        },
        "item": {
          "id": "6e8bf81a-2a0c-4d31-b81a-45130b487bed",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3ee58f1c-16d7-4b24-b59c-283ab247d7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6341132f-2569-4b2a-b283-f10706e67643",
        "cursor": {
          "ref": "cc42b160-be06-4a7a-b6a0-ec3bf86793f8",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8a73484e-3a89-4354-9fa3-09c7a060cb3e"
        },
        "item": {
          "id": "6341132f-2569-4b2a-b283-f10706e67643",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cf35eb00-9753-49e2-bd11-12863f525cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617769d2-c02a-4c60-81e7-25b1bb2f77c1",
        "cursor": {
          "ref": "a03e0488-09c3-40c5-9029-1ef7682e93e6",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d5179f49-6987-4a7d-b7d3-b2011098b3f8"
        },
        "item": {
          "id": "617769d2-c02a-4c60-81e7-25b1bb2f77c1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a5852b1c-59ca-4b87-9b7e-addac3a8a5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbe6970-9103-4cea-9c75-a9ae7d2940a1",
        "cursor": {
          "ref": "b74ce17f-af42-4d3d-a959-d0b8fe91adf3",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7bba8e86-54e9-40fc-a212-16ee8268e8b4"
        },
        "item": {
          "id": "bcbe6970-9103-4cea-9c75-a9ae7d2940a1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "dec95082-4304-4679-9f84-6e05bc37b5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee8211f-5f3f-42b2-9f47-671f11125e4b",
        "cursor": {
          "ref": "f6332d2f-1380-4c8f-a11a-523cc8ab8f82",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7b919d17-5616-42b1-87bc-69e010893cdc"
        },
        "item": {
          "id": "3ee8211f-5f3f-42b2-9f47-671f11125e4b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e5e3b9fc-921b-4935-9ef8-4742d301e2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e98944-bd17-402e-b869-021be320cce9",
        "cursor": {
          "ref": "049ed3c2-0f8b-4a1c-b03d-97cf4570a095",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a56eeda1-b38c-4b6d-a48b-784b554a2fe2"
        },
        "item": {
          "id": "84e98944-bd17-402e-b869-021be320cce9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1a05cbb0-bb06-44ff-8a9c-1774395002fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11955107-7dd5-49b3-b61f-b5188ae53d13",
        "cursor": {
          "ref": "a7775bee-a485-4f80-a426-1052832a3f40",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6441e2fd-ebc6-4616-b924-f609458b3c4b"
        },
        "item": {
          "id": "11955107-7dd5-49b3-b61f-b5188ae53d13",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "beddaffa-5f7d-4bef-8453-6210b00449b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e446272-4048-45d8-805d-08ad19e216b1",
        "cursor": {
          "ref": "e42cc772-8a44-4d17-a8a4-3ad01940991b",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "35d8efae-2dfe-4790-b67e-5b7b47af4ed7"
        },
        "item": {
          "id": "2e446272-4048-45d8-805d-08ad19e216b1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4c531785-087d-4ae6-81ab-a9d629cc878a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fafab19-4dd7-413a-998e-37b6cebea790",
        "cursor": {
          "ref": "b78aed0e-ea1f-4c7f-9a27-bac551633452",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ff15b698-a298-4828-8eb6-b5bb8ad8cc84"
        },
        "item": {
          "id": "8fafab19-4dd7-413a-998e-37b6cebea790",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d4ceedf3-ee20-4d73-8157-4541b68c9be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbffd48-2e1f-40cf-92a7-41a4c74f64dc",
        "cursor": {
          "ref": "2545f613-b57a-452d-a63a-a7f1c33c3465",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d826c7ee-c361-4a5a-a09c-4d75ee22c260"
        },
        "item": {
          "id": "acbffd48-2e1f-40cf-92a7-41a4c74f64dc",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a6a282ff-a406-4b06-a28c-8e6f0a2e68e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a91055-cf09-4e6a-9139-6915c7b9d099",
        "cursor": {
          "ref": "a674b43c-b6d8-4a27-bf35-04120583a2b9",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e77bc798-f931-4c21-8b02-c31805c143ec"
        },
        "item": {
          "id": "54a91055-cf09-4e6a-9139-6915c7b9d099",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "adc5e24c-2bd1-4958-a623-4302ffd27a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e30540-4974-481b-a432-2bb89d527676",
        "cursor": {
          "ref": "7ced0e4f-1e3d-42b3-9c0c-a3ea05434243",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a47c23e7-41db-482f-83c1-6e0a9b2e9590"
        },
        "item": {
          "id": "04e30540-4974-481b-a432-2bb89d527676",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3c505696-67b9-4474-b6ad-a773b51d13f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a27c51-8baf-4de6-9197-a1b03b588782",
        "cursor": {
          "ref": "6465de37-4567-4826-aa58-831c087c1c3f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "26279c26-bec7-4b16-85b7-74254a724bcd"
        },
        "item": {
          "id": "41a27c51-8baf-4de6-9197-a1b03b588782",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6681bdfe-60d5-4846-9d70-77234b88d8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a52a156-a0cc-499d-ba5d-6b6f5239a416",
        "cursor": {
          "ref": "a6a90284-4c6a-4fc1-bd46-81d64707a2ff",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ed62eece-736f-4610-9d6c-de88ce81829e"
        },
        "item": {
          "id": "9a52a156-a0cc-499d-ba5d-6b6f5239a416",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "77fa2e4e-ebaf-4fcc-b719-6f644e2de685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a764a53-f5de-4700-bece-af213589d535",
        "cursor": {
          "ref": "ce8077e9-f5c8-4221-b254-da5bd234299c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "deb87cd0-bd53-463e-9cfa-9db3593c41b0"
        },
        "item": {
          "id": "1a764a53-f5de-4700-bece-af213589d535",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "840c245d-4a58-4ca9-94e0-576baecf397e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d40cb5d-218e-4906-8dba-a5b5ca9de563",
        "cursor": {
          "ref": "7e67337f-2525-4f74-928e-ab27da7ce94e",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "07d10a42-2b89-40cb-920f-273d9be010de"
        },
        "item": {
          "id": "4d40cb5d-218e-4906-8dba-a5b5ca9de563",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c8e06551-e366-484f-8ed7-f39a4be98fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7733834e-28e5-45bb-93ca-98ca00926814",
        "cursor": {
          "ref": "baca3290-10be-45cc-85bc-540f83e2fff7",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "11350701-1bbc-4189-ae95-b8e6b69cf68d"
        },
        "item": {
          "id": "7733834e-28e5-45bb-93ca-98ca00926814",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c0719aa0-5f0f-455d-90b0-2d61f946959c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9259b14-1246-4bc4-b27b-907644f2493d",
        "cursor": {
          "ref": "073dacdb-996c-4b46-942c-9fd1bf1dbedd",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "44830c3d-f0bd-4228-b9fb-4da4ea645650"
        },
        "item": {
          "id": "e9259b14-1246-4bc4-b27b-907644f2493d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4cf26c1f-1adf-4a55-bf06-b1b5d4369312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998025e9-ab94-4c7a-b8ce-f28834a0b442",
        "cursor": {
          "ref": "9601fe09-226e-42df-b863-656068c244c9",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d78c217d-15dd-4ad0-a554-ea793ab7787f"
        },
        "item": {
          "id": "998025e9-ab94-4c7a-b8ce-f28834a0b442",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3d27462d-6e90-47cf-9c24-bd37cba6855f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f640720b-50b3-48be-9ade-dcda1aff05f7",
        "cursor": {
          "ref": "248b9dc4-2d24-48cb-97b0-4171a39891ec",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "562fe4fd-6ffa-4a57-be11-1c4be0571afe"
        },
        "item": {
          "id": "f640720b-50b3-48be-9ade-dcda1aff05f7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "50f2a1f7-ca60-4690-9576-289cfd66afac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d5e1a3-6fe3-49b4-9ddd-59eb1e09325f",
        "cursor": {
          "ref": "fdf6dbc4-8810-450d-9e18-6b768ea636af",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "575cef5a-05b6-4ae2-9b7d-f56b7a50cf9d"
        },
        "item": {
          "id": "35d5e1a3-6fe3-49b4-9ddd-59eb1e09325f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0e08c7b1-fbf4-4762-8fa9-2fc40da6604c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810e84d5-05e4-4ec5-a58c-d644d4ab1d7d",
        "cursor": {
          "ref": "fbb930cd-1ae6-4fc2-bb9e-1d3bb60c9c29",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "da5b24be-dcb4-4375-95d3-bee4cb5fe219"
        },
        "item": {
          "id": "810e84d5-05e4-4ec5-a58c-d644d4ab1d7d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6c365dd2-9a06-4199-a8f7-d755a8fa3311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f92734-f1c4-43e0-83be-52630fb47d66",
        "cursor": {
          "ref": "e1541d63-5713-4eec-8484-fa62754c819e",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a565b736-d330-445f-97bb-fef36cb4ceea"
        },
        "item": {
          "id": "33f92734-f1c4-43e0-83be-52630fb47d66",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cb849fa7-9a7c-4b88-90af-d39f8eb406a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29eebeae-b298-48ac-99e6-4ac8951e4e69",
        "cursor": {
          "ref": "ba7e1222-8609-466a-82b1-8a46c533c7fb",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0a50702c-6dc8-4f9e-b9ac-84f054096ec3"
        },
        "item": {
          "id": "29eebeae-b298-48ac-99e6-4ac8951e4e69",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "129ba487-0317-4815-bc3f-f0f583ef8202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c68923f-a753-4625-aef6-09419de1c322",
        "cursor": {
          "ref": "7f14460c-50a2-43c7-a0a7-fcc1410710e4",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "927999d5-f6b3-4aa0-82c4-ccfc91f644f7"
        },
        "item": {
          "id": "3c68923f-a753-4625-aef6-09419de1c322",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "633ea393-6ae0-4e14-aa0c-d01ffaaf6b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47646375-7b82-4357-b39c-8658aac85bef",
        "cursor": {
          "ref": "8a8b3370-e7bf-46cd-a836-35e647ad5ad4",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ad709560-a0eb-4814-9464-407a30dcd4ac"
        },
        "item": {
          "id": "47646375-7b82-4357-b39c-8658aac85bef",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7a8afaf7-ec35-4153-a48c-0dd6edf8fd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0defe74c-8497-4adc-acc6-41ee5fdcf3e1",
        "cursor": {
          "ref": "15bc525e-0a38-44c6-9136-7c81454bbaf2",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "471dfd97-5fe3-4eb8-ac83-efd64401279b"
        },
        "item": {
          "id": "0defe74c-8497-4adc-acc6-41ee5fdcf3e1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d4a185e6-6d74-469f-968e-618daf5c612f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211499a5-0ec3-4655-b5a3-d72b48f991b6",
        "cursor": {
          "ref": "eb070c51-be7c-4444-bc9a-1b4031cacb1c",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fd61077a-691f-41fa-831c-46b497969209"
        },
        "item": {
          "id": "211499a5-0ec3-4655-b5a3-d72b48f991b6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b3521515-03a4-4ea9-a6c3-fa665000082c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd8e936-e128-4619-aefc-e1f9e006413a",
        "cursor": {
          "ref": "3ddf7930-e513-46c8-8c9a-4a6bf9462634",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a4aa4d5d-2307-4546-9b5e-3e41ca4b890e"
        },
        "item": {
          "id": "ffd8e936-e128-4619-aefc-e1f9e006413a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9136927d-ca72-4333-b248-1a3f4ca79a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f758814-0a43-420e-876b-a9bad629fd83",
        "cursor": {
          "ref": "1069004a-0bc7-4fc8-a3fc-5724f535a423",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8c0e2d10-a0e3-4923-98d6-e3f965deba9a"
        },
        "item": {
          "id": "0f758814-0a43-420e-876b-a9bad629fd83",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9cf5aee7-43c8-4466-8829-5a8bbef10fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77478c1d-8738-45cd-abcc-499870bacd08",
        "cursor": {
          "ref": "4532f569-04cb-4113-8a30-53088ec33d84",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0c0dc6c1-d782-48c1-a009-9818163445e0"
        },
        "item": {
          "id": "77478c1d-8738-45cd-abcc-499870bacd08",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "37e66b07-eb7c-44d1-a0ec-01c91aca8907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a849c2-a8e5-4f5d-a712-7399a1ac8839",
        "cursor": {
          "ref": "83166b18-b8c7-405d-92fb-bdda3811808c",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "62508968-f4e0-4662-a9e0-01fc4d21995a"
        },
        "item": {
          "id": "e7a849c2-a8e5-4f5d-a712-7399a1ac8839",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "141acdba-0059-4b72-9ffd-b8ec0334bf7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9231f5c5-4790-40e9-9177-e150f19f6c31",
        "cursor": {
          "ref": "1dc2566f-09f7-4bdc-9d4a-d2540a705046",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ce16de02-0064-40ae-b090-f3a250aa1528"
        },
        "item": {
          "id": "9231f5c5-4790-40e9-9177-e150f19f6c31",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "10484c10-c08c-48cd-a595-12f8c44baa38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e81b331-de45-47ec-b479-cd54d7c0baed",
        "cursor": {
          "ref": "bd477f38-9075-4346-8bed-07a2b3169e7b",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "04cada49-220a-4b8b-94a3-64aabf2c5802"
        },
        "item": {
          "id": "0e81b331-de45-47ec-b479-cd54d7c0baed",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5d344733-158b-43d4-a70c-f7d0e2fac5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d993499-bbf0-405f-9f25-d8d2b8395b51",
        "cursor": {
          "ref": "20b9cbff-6850-43ff-bbdc-e148e806b1c5",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bd29ee90-2b57-4ca2-a89e-f0a1e156a40e"
        },
        "item": {
          "id": "9d993499-bbf0-405f-9f25-d8d2b8395b51",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "57b8a7a3-8539-43e5-805e-f0a57ab464ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6720fe8-80c7-497e-9774-9ce415df063d",
        "cursor": {
          "ref": "5e7bf1be-510d-45ba-95e4-a1a831fda54e",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "85c97bcc-16af-4970-8f57-79613b38c2c0"
        },
        "item": {
          "id": "c6720fe8-80c7-497e-9774-9ce415df063d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "af669890-3148-44de-bd33-eea035eeff40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c6e6d9-0d5a-40ae-8afd-c96dcb0a8afd",
        "cursor": {
          "ref": "d10dc124-4669-42c6-a44b-72c387b80816",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "241dfc10-aa7e-432e-b050-831e815865dc"
        },
        "item": {
          "id": "07c6e6d9-0d5a-40ae-8afd-c96dcb0a8afd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "34bd188b-d27c-43d9-8195-eb5bd3fe36e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcb2706-7e49-44da-8721-6fe4f01e4386",
        "cursor": {
          "ref": "56203c85-1eab-478e-94e6-61a94a1ac8d7",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "89a9bf46-1f22-4887-a7d1-c0ff53b33455"
        },
        "item": {
          "id": "6bcb2706-7e49-44da-8721-6fe4f01e4386",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "83c7a1fb-a5e1-40f4-827b-e6a90888f4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe75d794-d1f3-4fda-ac55-b3e67179fc5b",
        "cursor": {
          "ref": "c07dfc6a-0453-44bd-8d2f-d11d36c236b7",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5111ee73-aa87-4fb4-8436-88d69250180d"
        },
        "item": {
          "id": "fe75d794-d1f3-4fda-ac55-b3e67179fc5b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9258569c-c478-4c4c-80f0-73d04de608cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe729cb8-9b4a-4cc7-ad51-7e55847ce1bb",
        "cursor": {
          "ref": "75073927-61f8-4113-90f9-3c6be1e621f3",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b4ccbd5c-66c6-4dc3-b199-1267458fcbbd"
        },
        "item": {
          "id": "fe729cb8-9b4a-4cc7-ad51-7e55847ce1bb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f45a026f-3d6e-41fd-822d-f92034908ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d21187-86f6-42d3-afcb-cbce11d36776",
        "cursor": {
          "ref": "34f28e85-8420-4b8e-9db7-a1c80859e578",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d0beb306-9439-4a0e-a8fe-bb37acb880a3"
        },
        "item": {
          "id": "b8d21187-86f6-42d3-afcb-cbce11d36776",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "672c7154-fafa-48de-9afa-03d691cc517c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb900a87-dc06-443f-90a0-f1aa81c301ab",
        "cursor": {
          "ref": "c478a9ee-b01f-42ec-8de6-689dd3307a8f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "54de0599-9038-494f-9c07-b0b3bbf6a2c6"
        },
        "item": {
          "id": "eb900a87-dc06-443f-90a0-f1aa81c301ab",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d325ce7e-7d08-4e2b-a31d-b45704bfa578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82452d4e-e512-4560-9176-0cb8706ec375",
        "cursor": {
          "ref": "52a25cf9-a28b-4e2e-a659-2278b6b0c52c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8d1cd66f-5336-4643-8000-7e42268547de"
        },
        "item": {
          "id": "82452d4e-e512-4560-9176-0cb8706ec375",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "67d37960-4b0b-4c36-897e-b73235c9c43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c99655-cb5a-4375-8f8b-ae399fdfddf7",
        "cursor": {
          "ref": "5aae5629-56fc-4785-9690-12de6fa55264",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5fe094c3-7b7b-4413-b1de-72aecb1346a7"
        },
        "item": {
          "id": "02c99655-cb5a-4375-8f8b-ae399fdfddf7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "529df58d-d228-4aa4-92da-5c5970b33991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cad88f-6fce-42c7-8fd7-59617a340dd7",
        "cursor": {
          "ref": "6e3dffd2-9ec1-4854-bf6a-2e7c40631096",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4ef6a02e-a1e7-4281-87d1-67f877945c4d"
        },
        "item": {
          "id": "f2cad88f-6fce-42c7-8fd7-59617a340dd7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1168aa18-5230-4e03-953c-56ed11f4e92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a07e8a-2920-45f8-9c58-92f12a1027be",
        "cursor": {
          "ref": "f1343702-646b-4b1c-8999-965ec60c5f72",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dfcf2005-c22e-4e86-837d-02c898cddd76"
        },
        "item": {
          "id": "50a07e8a-2920-45f8-9c58-92f12a1027be",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4f953982-1bd0-4918-85d5-70174ba8c3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52da858e-0e67-41fa-911e-39fbc6800fda",
        "cursor": {
          "ref": "23c602fb-2d49-4dd6-88d5-72249c18eb53",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9e14b0e3-d8c4-41e0-8a7f-b2a7710bc16e"
        },
        "item": {
          "id": "52da858e-0e67-41fa-911e-39fbc6800fda",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2d38fea1-e8c4-4978-984b-ab1ed589467a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cb9c9d-5e4a-4175-8c38-2243141c84b7",
        "cursor": {
          "ref": "4c158e82-fb10-4701-9909-83721d0bfa32",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5f878ffb-89db-4fca-b328-abf4ed4fe6c1"
        },
        "item": {
          "id": "e4cb9c9d-5e4a-4175-8c38-2243141c84b7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8ef2f95a-fb7a-4151-87a9-1725af2b85af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ac4c6a-8041-4486-a8e0-6642c5bfe74e",
        "cursor": {
          "ref": "738d3cca-c3b6-44be-91ae-616c21ab99ca",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "21d7b5bb-4fcb-4af5-a569-51ca8069d037"
        },
        "item": {
          "id": "a9ac4c6a-8041-4486-a8e0-6642c5bfe74e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ac5d3bf2-20da-4b99-b731-e1c3b9d0a01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1931e0-cc1f-46f0-a14a-29ac708fc1c1",
        "cursor": {
          "ref": "f8e48c83-62f6-456d-9f25-d521eff029e1",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ff18fc8b-c478-4643-8d2d-137c853487d4"
        },
        "item": {
          "id": "cf1931e0-cc1f-46f0-a14a-29ac708fc1c1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e00b679d-749d-41a5-9add-befb4883e92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec30c33-581c-4429-8315-20b6e7c7fae8",
        "cursor": {
          "ref": "0e71746f-d948-49d6-b7fa-0924b482419e",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f09fa3b3-4b44-4c36-a140-f1b5edd2c365"
        },
        "item": {
          "id": "0ec30c33-581c-4429-8315-20b6e7c7fae8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "43edd370-3ed3-4238-b0e2-6be589cc8503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81adcd26-2d88-4837-9820-63ea6da86233",
        "cursor": {
          "ref": "eebc6650-31b9-4b80-99ce-cdf65858ccb6",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a9056b3f-398f-4109-980b-2d8e1bd89e9b"
        },
        "item": {
          "id": "81adcd26-2d88-4837-9820-63ea6da86233",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ec9e2203-5d43-40a6-93fb-50bda6c12b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e8d841-4df0-40f3-bb10-90f8c76c02f1",
        "cursor": {
          "ref": "b0ede51d-e0e8-4743-b8fb-1cff93854a9e",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "93ac60ac-e286-409e-9e29-f9b1d4eb9cc2"
        },
        "item": {
          "id": "b0e8d841-4df0-40f3-bb10-90f8c76c02f1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "359ec9ae-ffff-4712-a294-c1b76c64d778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9b8b31-f81d-4bc5-a153-ca00da6ac33b",
        "cursor": {
          "ref": "63c95fca-e31e-49a4-9912-fab097ace8f1",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "22705b49-51ab-441f-a37b-20c6ac36e7c7"
        },
        "item": {
          "id": "7f9b8b31-f81d-4bc5-a153-ca00da6ac33b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dee7df49-7691-4eb1-b8a3-fdb2271d930d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021f142e-1034-490b-99f5-b9f872456cc6",
        "cursor": {
          "ref": "c980adaa-1f47-4bdf-8df8-136dfe137b18",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "fe6c1a08-6286-4ecd-bdb0-0f911135e85e"
        },
        "item": {
          "id": "021f142e-1034-490b-99f5-b9f872456cc6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "dbfa5f6b-1785-40c4-8df4-29b656a513e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd478ab-1724-44c4-b358-aeed9b9f0845",
        "cursor": {
          "ref": "8ce0bd47-5bc5-40f0-8a7d-388378a2bb32",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ca134349-e101-4329-b76b-7624dac3fa9b"
        },
        "item": {
          "id": "6fd478ab-1724-44c4-b358-aeed9b9f0845",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4c8e09c8-49a5-450d-90d1-65178636e256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87014a3-17e7-4601-aa67-ad8815d81b25",
        "cursor": {
          "ref": "ad3ecb63-ac49-45d3-84dd-ceb59bde2c2f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "93a7d298-54be-4f05-b3e0-6c93eb629c1d"
        },
        "item": {
          "id": "b87014a3-17e7-4601-aa67-ad8815d81b25",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8fb5ef34-4b16-4ec4-836d-c77dc200427f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89d3363-a4fe-45d7-8cca-385162694b9b",
        "cursor": {
          "ref": "7acd7f7b-833b-4dd6-a703-67b2a67f198f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "cb7487ef-7dfe-4e4d-a3f4-5bbd0b28986d"
        },
        "item": {
          "id": "c89d3363-a4fe-45d7-8cca-385162694b9b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "551bc7bd-93ac-40bf-84df-3136502cfcff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6092072-11d5-48c7-868d-6065cdc85dfa",
        "cursor": {
          "ref": "d6587ca3-b8ad-432c-86a5-84e32a7a8789",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c3e509aa-0fda-4b1e-9663-29bc1968f53f"
        },
        "item": {
          "id": "c6092072-11d5-48c7-868d-6065cdc85dfa",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3e03020d-b450-48b4-8974-b1ae78858eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0ae00b-9b85-454d-ae1c-03d5f6c2a111",
        "cursor": {
          "ref": "8a3284aa-633c-4125-a232-c4635d5671b6",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6178a750-b5b7-49a5-9178-9ffae3a23007"
        },
        "item": {
          "id": "4e0ae00b-9b85-454d-ae1c-03d5f6c2a111",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "39bce1f1-6499-430d-8929-5c48ed2c3133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8cbdf7-1a36-4fbf-937b-6ebfc65b4cc6",
        "cursor": {
          "ref": "064668ff-6f66-49f6-bc8f-3f771a384707",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "54e7f761-f957-4363-8b62-d6d17f5d4925"
        },
        "item": {
          "id": "ce8cbdf7-1a36-4fbf-937b-6ebfc65b4cc6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "28b0d295-9680-44b8-8088-c4a84cfae456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4fda75-fb92-48d9-b160-474911dfc2e0",
        "cursor": {
          "ref": "b67f8885-e05d-4ebe-aa3d-f80e664e6773",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0f6d3c23-7293-4a13-9119-34c87e91c157"
        },
        "item": {
          "id": "dd4fda75-fb92-48d9-b160-474911dfc2e0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f4e3e1cb-b403-4dfa-bcbf-4cde7aa11e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a684db00-ca5f-4bcf-91f4-666effbdeebd",
        "cursor": {
          "ref": "0f69d2af-2312-4e40-9797-aba765b3a341",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3bc38555-b241-4546-826c-6fccece9637d"
        },
        "item": {
          "id": "a684db00-ca5f-4bcf-91f4-666effbdeebd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a797aafa-73b9-492b-9813-aed7709b4a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312eca03-d75a-442f-a0be-57a1aff42092",
        "cursor": {
          "ref": "6e06531c-c93d-40ef-be38-bbd90c3595ef",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e75d58d5-e3ad-4734-9d6e-7149959b7a68"
        },
        "item": {
          "id": "312eca03-d75a-442f-a0be-57a1aff42092",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6231963d-d9eb-4fc7-8b31-77954589ef97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04307c82-6071-4f00-9771-7a77d9826cd0",
        "cursor": {
          "ref": "29c877f4-805e-4d1b-84fa-fd93d6659221",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e9eda111-a979-418d-9dc8-c0a4d48aabe4"
        },
        "item": {
          "id": "04307c82-6071-4f00-9771-7a77d9826cd0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1acb71db-4ecd-48fe-81cb-51869c015865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c736da1-ede0-449a-923f-c407712ca34c",
        "cursor": {
          "ref": "9147213c-d7e8-43c3-a411-df7e7b4ab0fd",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b2057e44-71bd-418f-8098-7d8ea2a514fe"
        },
        "item": {
          "id": "2c736da1-ede0-449a-923f-c407712ca34c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c1434833-d3b3-4628-ba37-a9d9901213e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9572ca47-689f-4dac-86b0-c9320acf473e",
        "cursor": {
          "ref": "65e7ff08-32ae-4354-9236-0f721d04edb9",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1a3d30fe-4558-4257-878c-1d9932283f1d"
        },
        "item": {
          "id": "9572ca47-689f-4dac-86b0-c9320acf473e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "76907751-f8fe-4733-9ee4-bd8e9a2bf070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a43e67-1eb0-4776-a00d-0180a5ca6b9b",
        "cursor": {
          "ref": "85106f9c-58ca-4e8c-bd7e-61182f72769b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "89cac1f0-f7bd-46da-bf3d-76549d80dc9f"
        },
        "item": {
          "id": "56a43e67-1eb0-4776-a00d-0180a5ca6b9b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "77160745-c48c-46f3-b19b-432f167bac3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 907,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ca55fa-ea57-488d-88ce-daf34bbe3f9d",
        "cursor": {
          "ref": "b72f40ac-49b8-492c-a6b9-53531c6f549f",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2a8b1cca-27ab-4892-8f83-ad4c902d98b6"
        },
        "item": {
          "id": "b1ca55fa-ea57-488d-88ce-daf34bbe3f9d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1e82d267-3f0f-4de5-b9ba-d251553a1d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf3557a-3f3d-476d-bd23-adc5ff76453b",
        "cursor": {
          "ref": "e243d146-58b1-424c-b67c-d9f80012fbb4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "96361ccd-6d50-4d83-8065-27c895da8c42"
        },
        "item": {
          "id": "dcf3557a-3f3d-476d-bd23-adc5ff76453b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6ea49639-74e5-4ad4-9e86-76ff4d5833f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821cec27-a850-4bac-96aa-771534770e3e",
        "cursor": {
          "ref": "e7a0a0b4-bd9b-4b23-b00b-40f3a575b2a6",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4abb70f3-ac1e-4bbf-b451-91376eaa7167"
        },
        "item": {
          "id": "821cec27-a850-4bac-96aa-771534770e3e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1a42736e-fe0b-436f-9ca3-8da6ed83f818",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 111,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781a52e1-eaee-4b50-a5e6-28fe555ac83c",
        "cursor": {
          "ref": "249febaf-f98e-48d4-b28b-1df12fe8c99c",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f1589f00-1d0a-4d74-bd25-575e10ea79c3"
        },
        "item": {
          "id": "781a52e1-eaee-4b50-a5e6-28fe555ac83c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8016b662-e2d7-4ed1-894d-095ad13aed0a",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "097c5ada-4da9-4763-833c-83aae2cebfb2",
        "cursor": {
          "ref": "2d8f1b85-fd1f-4a96-919d-81617b627834",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3e92ef1f-c4cb-418b-9392-e6e693ce7d6b"
        },
        "item": {
          "id": "097c5ada-4da9-4763-833c-83aae2cebfb2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "516be941-5a56-4956-ae44-2bb1f2d183f6",
          "status": "OK",
          "code": 200,
          "responseTime": 2759,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f115f2b-bcb7-459d-9cf3-ee9a0781ef81",
        "cursor": {
          "ref": "0de26e64-0b54-444f-b04b-60539c94b8f9",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d197184b-b6c8-4a91-ae57-3f57a007bb01"
        },
        "item": {
          "id": "4f115f2b-bcb7-459d-9cf3-ee9a0781ef81",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "62d8ed97-b8f0-4093-b5d0-87d19bb3cc6e",
          "status": "OK",
          "code": 200,
          "responseTime": 2904,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee88bac-9653-4dbd-8ca3-0b28087038f8",
        "cursor": {
          "ref": "7b544489-7404-4f6a-9fd1-35215e3f15c2",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e7aab526-b3d7-4b2c-9a42-0c910db6f77e"
        },
        "item": {
          "id": "9ee88bac-9653-4dbd-8ca3-0b28087038f8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "09db2257-e29b-4e96-a4c1-8842656e920e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee88bac-9653-4dbd-8ca3-0b28087038f8",
        "cursor": {
          "ref": "7b544489-7404-4f6a-9fd1-35215e3f15c2",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e7aab526-b3d7-4b2c-9a42-0c910db6f77e"
        },
        "item": {
          "id": "9ee88bac-9653-4dbd-8ca3-0b28087038f8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "09db2257-e29b-4e96-a4c1-8842656e920e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf78920-5a92-4257-816b-e43fe1029909",
        "cursor": {
          "ref": "ef202fb1-0d32-4eec-b733-f39ad4864323",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ddfee8a3-12fc-4ce7-8651-9319e500b0d5"
        },
        "item": {
          "id": "aaf78920-5a92-4257-816b-e43fe1029909",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ed64ab6d-0d0b-4985-a1fd-86c92dd783fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74e94da-60b2-475d-85d4-4d8d4d834c35",
        "cursor": {
          "ref": "8d5bc046-bdda-4876-9a27-14e44ef2ddc9",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "c5e1864e-ec81-47e4-a92d-295d5933cc2e"
        },
        "item": {
          "id": "c74e94da-60b2-475d-85d4-4d8d4d834c35",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "abc08adb-1400-42f5-963a-be6c415673ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}