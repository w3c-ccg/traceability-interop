{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ee70a33d-41f9-4f03-9eaa-e2590c9c7bd9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f97b27ef-1058-4c73-822c-d90a10397449",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0e7a0c66-4d2d-42a8-8d20-5584cd0a8eeb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ef9f5ea7-b6d8-4bc1-9003-527a8cd955c1"
                }
              }
            ]
          },
          {
            "id": "a53ebf65-a8de-4510-9e80-07b382664ac0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "559a5290-7606-4569-aa74-45c03e642e81",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5735fdc0-8fef-4077-95f1-06db8f85a128"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "efcd3275-b026-4aa2-ae7b-55e7ab38eb8d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "54f70afa-e665-4c61-a00c-77a55057da85",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2c232ff6-a34e-44d0-9f0f-367a83036494",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "642b9a52-859c-4d57-b5ef-b6c09fd054be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6c4b0d7-e3a6-4dad-a152-e992f2eab5b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "be986ba4-dad3-4fd3-9935-baa13c9d2355",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cce8b518-b4fe-416c-8497-583ef9736b3b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e0602b73-84bd-4481-8e36-c51df4ad680f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dffe62db-d4c6-41a8-a217-77cabb812939"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a869f289-d7db-4600-9a39-386516bc5ced",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "86db6f12-ae91-4c4f-88a9-2162d982bc25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45a32b75-c103-4d02-90e9-8592a0b3e7dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a863937b-6b17-45c2-b7b6-17e338634df8"
            }
          }
        ]
      },
      {
        "id": "ed4d119a-2f9a-405d-b3b2-0b707815b409",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "00978062-4b9e-4c53-b27d-8879e228b3c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef6ac383-83e8-4191-8ca5-af9cd7d3390b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0f2eaff7-2df2-4029-8d67-e3608f2daf54",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cd3989-a2e4-4f4e-b912-8e3885202dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a947e712-a236-45fc-85f1-7ad75e2fc0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee68de2a-8bbc-4c40-8a3f-6b70a0dea276",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8886e2b8-c1f7-4a85-b9fd-d77c507d81fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a27c8694-b642-4f2b-885c-828efb192333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881526bb-1869-431d-83a6-dc4a0b18d589",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973cc5f4-2eb9-4bc7-ac69-d703470dc30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1380dd2d-c026-4555-abcc-429e3b46c5da"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04221d3e-f6db-4950-a029-b4aa5ba554ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86775601-35f9-4c03-a448-bcda15fe8225",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a57495d-0faa-4095-8b21-b4e130991aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10422bd8-363c-40db-b6a4-527703d656b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d76ae5-033b-4fd3-9a80-470cb1e6d58c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ff1e86-bd22-45f9-96eb-d9b5383a7ab3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c29b629d-b43d-495a-bb0b-2c72dc644b6f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3ab11120-ef62-49fa-8070-5d588c60b9d9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71c287fa-c0a1-4f47-9b63-15689b4a0930",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0ff7bf41-f99a-4f52-96e8-1b3a9bb02f51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0be5623-11af-4af0-b937-0f3ce476722f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f66d8ce1-de85-4c04-a281-e8867a5249f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6cac96dd-0ac1-4a12-a0c6-3552937b38df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd0220b6-d4f1-4ea8-888e-3769f4232965"
            }
          }
        ]
      },
      {
        "id": "497520e1-cef6-43cc-8c06-e9f8813e9d57",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2f2597d0-2fff-4503-b84f-aa09ba0d5f91",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab3b2dc2-fa6e-4baf-ac6c-fe2b29ee910d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "23055437-f52f-42ba-99bc-fa2771ef35b5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77565a6-2dca-44b5-ac2f-b17ae88f07c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b1c997-cd49-433b-b4ba-a7154bd6dca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4b22f1-4494-4b18-9af8-39fdd8282690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b54c435b-6bb3-48ce-a08c-777d77b94bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6995a91-287e-4102-b55c-9b5fd0c57ff3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2501f1a3-c9e9-4baa-9d4b-5cdb3fea1049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f95bdd-53f1-4216-a77c-08a8d681692c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ff986a-574b-4457-90b5-c6412a8e7884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9987a4ec-c882-4441-88b6-68b4ec6a2011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af5d404-2615-411b-8b5e-a691cf481389",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514b309c-d4a0-43f2-99d9-e06df4a8539d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c58a0533-1c4e-4d95-ab53-2126d480df18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e6d715-0cf6-41cb-b718-ec7c88d399ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70d916dd-5143-48af-92ef-396c52c7b195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a0ff92-fc1c-4126-8954-7b399505bfc6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8075f0-e27d-4c69-846c-b1f98b8cf299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf69da5-d06c-45c0-abf0-73329d2042ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5687b9c-8430-4eef-a25b-3050e23976fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "087b7ad0-760c-4ac6-b236-0e8fa10c6853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe1ebef-e014-40af-8fb4-0fac49a51600",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bede0754-aa56-4aa4-8f5a-56f9b28cdc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c7df74-1ab4-4ae8-b77d-dba204d385ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e0b659-ccaa-4212-9d35-8b5639a84077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2ad3393-9c4c-4e25-826e-caad2f74c2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876d4075-7b3e-4f23-8ee5-071eea12a951",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5aace65-857e-42b6-9d78-249f0d392a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b096138a-e23d-4d5c-9d45-3aef74493824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdb9c14-c04b-49bb-b264-5311ed59b985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d05da92d-e4d8-44b8-a69a-b7bf8a521d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0131a63f-9d2a-41a7-98f4-b5b66caa7b19",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16c6183-1b93-4f7f-8c2a-fd37a0dd669c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38664f2d-8880-46c3-a30a-c5107a288f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e710ca41-0a7e-414d-8a8b-8ad5c87800be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42a67edf-48c4-4540-a19a-c4f806e3b7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf55535c-7f61-4841-b9c4-03b9fb6c7dfb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a9c955-5476-451a-b48e-a1330888dbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77129d44-fc1a-4b3a-8062-fb53271aab8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c52d0f6-03a4-4212-8f6e-51b9f7c8a624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05165890-a70f-4cec-8550-65140576ca83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dd805c-b647-474a-8f19-a9b18cba2719",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d8678a-a048-4c41-bf2d-ff7b7631a432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24f6300-ccae-442b-baee-2a07ddb28c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad87eb3-4da6-4873-a8b2-960a65df7ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1a149ac-5986-4033-9cf8-4f990a96b2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086ba319-a360-4531-a3e7-f8ba7e431f89",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22dd74e8-eb33-4557-aff0-4058db6d39d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd87652e-1338-451f-b8e5-e3410e6dc798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a52b0a-32b7-4b21-b8ca-d20e4f0d1aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b2db013-797c-4324-afef-605ceb10d2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e830eb2-9c0f-4a16-9c46-6918a9eeb885",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3881c42-0d48-4aa0-a884-4c40ac6ca94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba13575-d6a8-4f43-bd83-af9c4a1fd0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a6a0a7-3885-4ebc-9212-cf5c3b53543f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5278f92d-6d2e-4eaf-bede-51af67832176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077c2c37-5792-4fd6-ab89-cbfe9fe7704a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3195b407-1195-4c6b-8bc5-3d8d0178e254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45f01e5-dea0-4d2f-9907-fac554464ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b263b6c-6f8a-4028-8233-3f7be9e9cc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00ef976f-30a0-46b9-b59a-f5986c301e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907d5071-e725-40e7-b598-1cb422330240",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88454b3-4912-4c80-9f2d-0af37923cb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f83cf03-821d-43c4-a4f9-477daa7093af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466f7cea-cb3c-4a08-9a96-275f16fd5b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a2725a4-93ad-45f3-b16c-b52bee1750c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5474fb63-fdcd-44ec-98cb-f2770f08a2e7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff98c7a0-9dae-4658-ae8f-065cacec177f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6608fda4-d8eb-4459-a1b7-e2fe078ab285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624df106-6272-434e-9774-bf8bb8adc719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e3c564b-e8f3-42b1-86c9-d89d91c8c7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d016ba-2899-4233-b200-b5b8a93edb5d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361de056-dd56-4457-a169-340cbf1e6e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1787900-7188-4d3d-a01c-3b33a5702bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e40f48a-ce96-4f29-85a4-1db3eff33e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3d44416-629d-47f3-a061-ad532df599b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b815581-f489-4f41-bdf4-a0f25d331015",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf649d25-1a47-4d11-8b53-904023a86b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e944f17-0fb4-458d-899b-3370807528f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a39a1d-febc-4980-846a-a14809d38c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb499485-7b19-4bf9-a572-de941416c612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f43f1f-f31c-4fef-aa10-1d555df7c89e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e28b675-353c-4736-8800-0c55fc90c43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc305e8e-e07d-464b-80f1-472c7095a93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217a9720-94bd-44e1-88ac-32fb2528784c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ea1a43b-b654-4e38-8f07-efc355353f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce366fc-b7ee-4db0-a7ab-72b5fee601ea",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdaf1cab-7a21-40e9-99a3-7b5691c490c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f63a319-7377-41d9-8720-9af68aafc11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc42e103-acc9-45c8-a42b-e28bbe0ff996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "81bc104f-595b-4397-9181-617d477cc7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3ed074-64c4-4769-9ca1-d930cca46ad2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927f6aeb-e9cd-4710-b5f6-ad77e11cd344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b09dd0-8db7-477b-b6a0-876e9b367a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b864c5ae-d168-410f-bbe5-96b64ecbed9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "317638c6-9356-4127-a763-6c13d53cda43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b01930-c47c-4a7c-abca-cd6ca355137e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ed1bc4-d9d5-4130-9848-c0b7ac228b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327503ae-0378-4080-a291-80bb6145d51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f7f8bd-d69e-43eb-9506-5aff6f24ce94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95e0efa3-39ff-4893-b97e-460b48dd7201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204f59ff-91ac-4efb-9d2b-9f02fa706783",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91c937c-6cb7-451d-ab64-7a0dfc85c969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91686307-2557-4d2b-af13-1faedd8bf0a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eab4f3a-a2fc-495b-b653-3dbb1bc66fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "22d95aed-d29b-4202-b543-f53ff147bf5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb3562d-062a-4f1e-aa67-1dd3b0b96783",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7be5ff-9f96-4470-8d72-ebccf283e020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b3f9bc-a9aa-45d5-a6b2-89efe2e3dd0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c060e259-3b5a-49c8-9fec-026ca3ad98b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e11be5-8538-458a-9466-15daeaf9ec5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ea8557-7151-4abf-9231-f39ae9f191dc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7dd834-5abe-424e-8c59-e34164e81d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7cce518-5a4c-4afd-8d84-8ff81e712d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eba4601-c447-4220-9614-4cac495baece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da50e77e-18f5-49ac-a2d8-ff4fe1b8b2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356d4dff-d5a1-4468-957b-a7bf6521d355",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb82525-509c-47c4-8334-a609d9c3b852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59e08ad-a76e-47b4-a364-230fc516bd64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e283f00-ade0-4da9-af8e-ee593f709e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "339d6bb9-7dec-4b03-b81f-2548b1d2bbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99df9d40-d510-4cef-8c5b-f98ba7b67ad3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4269a7a4-d02b-4fdc-8f97-addf41889f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974f5923-8e77-442a-8d19-0bb92eb12d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa32fc86-8634-4aa5-8864-50daf6f53bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f80a8f45-542f-4829-9f1f-d74b7391eda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653783f0-7aad-47ad-970f-b76031f6c2a1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80f8a61-e667-41ac-9d30-9821249c42ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa2e357-b480-4e67-8bb9-e7a64246a621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65423c1f-3e3e-4b97-93ef-c60de492785d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0daf2f10-2a3e-4442-bbeb-629b24f281ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e0de0c-3554-46cf-a48a-91dad50c9d8a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214459c1-8898-44f3-9cf4-84d29befde8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144d7f7f-484c-4be7-991d-e595233e4b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daeffe4b-6c53-4bfa-98b0-29097e487fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c58b77e-2e95-4f21-86fc-5d3ee05fd3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f845ce0d-f593-426a-a22a-12eab394cb08",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadcd50b-2d53-48de-be33-96a63eaebae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d483d00-9ec7-49d3-9557-a3f76be098f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b809760-d152-4568-b7b2-ddf31c28185b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1606f40-48c7-4582-9b4a-c727f119d65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e941b572-1258-44ef-ad59-2100e9c36d36",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6c8b86-00b9-4d4d-90f4-4264654c3f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d16338-853a-45fe-aa66-a971c6b68950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a248a6a6-d323-4b21-9122-35d52501f78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "863d40c9-df71-4b13-aa8b-958675d33d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8a36ed-d178-4a81-96c5-98428d2cc374",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef588fc-a14b-4493-b813-383f7b97f0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a6a93b-f256-4cd8-b11c-0fa8882b4b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c5256c-5a20-4122-bcc5-a590e59dc848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "72ab8a5f-88dd-447e-bdbf-1870fdf9dfeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb54c710-ce30-4f65-9b3a-523775798815",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc050bec-0ce6-41a4-bfc5-17b647d9d5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b06f4a93-5e5a-4d2a-92c3-2c6755a1af94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fc8315-3bae-4592-8313-c948cc164240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "57f5607b-8313-4e84-8309-6993418ab04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809d2ab2-3b2e-4d4d-84a4-a975b7e18e36",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcac80a9-a8a8-4e64-a1d8-0b1ae5b52b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f715e3-d5ba-46e7-a8cf-78440c1ac102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634874b0-3d32-4ef5-9410-4998197dee13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4de9382-d6ef-4c4d-9d36-7e86dbe7a21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1d1703-e7d4-47f0-8cd8-9aec972d297b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81e2f2f-9e3a-44fe-9f06-79de8bfe23fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17366a4a-d786-4be5-b94b-c0e9e0d88cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0024239-19f4-4ec4-b02f-78fbdfadfba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d85e23e6-2361-4527-bec5-0b957f5509a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75facf05-5f26-4814-aa48-ece8acf3964f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9adebe0-c573-4b0a-b8d3-8edfd45c3956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3ad925-5976-43a3-959a-df87f62af701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ba34cf-2eec-4906-8fed-d4dcda847360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25dc7ac3-bbba-444f-b0c2-b4e9046c5e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92352e0-a4f7-4cd5-9194-ee186c4b7a59",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be785ff5-8479-4c3c-bc34-8831dc2a13eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44b20b9-4c5a-4620-93e3-a03d6f7321b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3394cea7-3200-4956-bda2-cb60d8ffdf8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d031a8a9-59d7-4012-abed-cdb9aab07736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf6be78-4495-44ad-bd1b-a6b32e2ffcc4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cddcbb-df16-4229-a983-bb2cf2c1b947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4b92935-2ddd-4d10-b8d9-dd2c9e2b3bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2129c569-83b4-4900-9fc4-8490f52ea256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "362c55a3-4d35-4d64-8984-6e6e33a51a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36db99e4-8c2e-4879-a7ab-376b6dc3f273",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824cf481-2057-417e-837b-4f07e77f2dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa35fd7-0499-47b1-b27a-e0bfb3876a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed65664-e109-4e08-a18d-b28b51a8cad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "57bc2ba1-fcf6-47cf-8130-7be6901754bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed853ede-75da-4bc7-8eb8-7228ea59a517",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a70edf9-82c8-4bef-a03d-fc1eaa9992e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b881c61-27d6-4d61-8eb4-49269516f162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3047a7-8701-4516-aceb-544dac730a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1085e3cd-17c8-475a-b9af-f1ce341597f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3105ac82-2b79-4c39-af29-53a9ff98ab15",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb70be8-85dd-4b80-8207-ac56d33e83f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0ceae7-2ddf-4538-937d-bb9a6b6f396c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdb2358-cf7c-4138-9d19-2d80b50132a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "82f23f3a-24f2-4904-a404-7b3719e93c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74650674-fe78-4bb5-93cc-5f8a45e70207",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b549362f-1d7c-4eee-9a8e-6d1394bb38b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c47dfd6-923c-4030-ba7d-dbbf8d4f4854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a9ea96-a1fe-497b-9fb2-29d37b31ff7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9c70efe-8714-41e7-8dd1-0d5d29f37cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f22de1-fa38-4c2c-b30d-a4aeff143a34",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0be6ebd-01e7-4bf0-bde0-a3bd10ef01f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8ed90f-bc3c-4cc4-ac25-c51c1303bcc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b241713-b52b-42df-8296-7c18a047e218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "53df0a00-16a4-4483-9714-11ceb775d7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364022fc-6f76-4dff-a946-1c3332b92001",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403d0791-63c0-41e9-b340-68c23a94734b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11dcf2bf-98b2-4192-812b-e94dc8cee9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15aba479-a006-4ba5-9e1b-c5be17f77e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1987e967-b3ca-4760-b2c9-18409988431d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00f4d51-0972-45dc-9d74-fd47c791e24d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153b0012-aef9-434a-9d03-510431ec6345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1146779-0d16-48fd-9b74-791f4a9324d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb45ddca-f1cb-4eb2-af20-543cc21afc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb3717b8-9cdf-4bab-a41d-d70ac89b37dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069a34d7-2fdf-4f09-b3ed-65af2fcfa37e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879cd6e1-6e25-4576-baf6-35498a0ab7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d742fe4-448a-42ae-9ca5-58f5a07965b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042a6bd7-98ca-442f-afba-d27863d406bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba557388-0d9d-4c1e-ad29-84b7b0f7f58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddf0226-8761-485f-bc9c-5792937c5e5e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdc4242-5f7c-46d9-ad15-c0542ba94db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1766f57-3cb7-44ba-97ad-4b254c82328d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1d8851-d93a-4d89-8eed-b5745909eca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8fdb098-e084-439f-b775-94763fafa5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fa8416-a8b4-441c-b01d-628b3647acc7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f15ae7-8b9e-4dc5-8d7a-d1b104b63f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01477ca5-4459-4a03-9794-4a762360d8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcc1629-6fac-4f97-a769-8570156202cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c33997e-d581-48ee-9dcf-0e9e8b4a4d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9505020-68e0-4bb7-a711-7d100c398c1a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e713a03f-99a5-44b8-8a42-6daba5dc2954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df47770-46d6-4964-8fee-325a3a58494a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf1d65e-a3b1-49f7-92b6-65ce6eb1bec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b316017-b0fe-4684-848f-dc89264dccf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ba6a4a-f66a-4854-82f8-a0da9424d3c1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dedd14c-56c9-4450-a4af-e156851e4817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542e0447-69be-46af-a57e-725d9ad80c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7587c693-fb17-45c1-86c1-0238a196441f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3771f219-4fbf-4a45-b4e4-aee2178ac6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1a980e-7e73-4414-8d77-216493f1a23b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc44b1e-f5bf-4d38-8a0f-b7eb5742ecf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb4e993-8184-4e9a-9f01-562e293411f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c221967e-b929-49f1-9025-f279edf5427a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f22bc60-339f-4af3-b23b-ccc75ce607e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b7d766-62d9-4179-a304-eae0977489e7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d28dab4-4773-42bd-8dfe-b0af0854f37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9403c63-f3dd-4fae-91b2-e1d31c855a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5368aac-dcf4-4caa-b5d1-aa552cba60e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e97f9ea-4a75-4361-9edd-f41bd99b57c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadcb226-dc9b-483c-84c6-f4ab3edc66ab",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b7fc19-c955-4337-960d-e4b25e0312f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349710fa-1286-45b3-a5da-a45d33775c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743a3314-698f-46dd-a4a4-1d448d234c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "58d709c0-e0f3-46cd-ac8e-927fa0c3eb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92c98c2-e39b-4453-993d-6cec42219a1c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68895d28-632a-4c21-9c60-7a69eadefb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8783d982-da7a-4026-8cdf-eb6eb07e62db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc53df7-13db-448c-82c2-e97794c12de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c8b98d-8b8a-4f47-ab4f-0ef72141c39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230f5ee7-483d-463b-9736-03927c131494",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79ba759-0d7d-4f68-9787-f3f618871855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6571cb69-6b49-41df-8f1d-04bc28390fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2fadc6-9bcc-4bc6-9606-5c16dd3fde68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe058c0b-dabf-4ced-aced-621e05955455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17cea97-96c2-4e6e-acf5-06568942b45a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ea09a9-fa6a-48f3-a6dc-6d765a20dcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c0caad-22b0-429f-b880-1f0c2cd01822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f281a14-4f60-4fff-85a7-b7a8a45c91b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc7d704-bf15-4d8e-9e21-6c9ea2f0bff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579a17d6-99f2-4464-ba9c-9ee85b270452",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7351438-efb7-4840-a91f-6a87796434df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591cb178-51d2-4999-bb5f-34979d214ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecde80d-e47c-472a-9577-f4f73008b594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c89d9737-e82e-4427-9973-ac05418e1e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b926906-d8cd-4266-b995-fd685fcc891c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0303363-4efa-47d4-b34b-c448c25b5d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aff7c9d-6a6a-4d2d-9422-ed548098bec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a757c2-04e2-4637-89e1-ed97e161b2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ea37a8-a6a3-44ae-bcf4-732f82cae67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30c16ef-1ddd-4aa2-81de-d5388646562c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4301c4a8-0ee9-4771-88ed-c9ffe85d3261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4bcc5e-1c2e-481e-ad5a-31ec1534870a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13746abb-48d4-4e23-a450-bdbda0f6f18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9239ba-b706-49ce-b701-ee394e48733f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b84690a-04c5-4dc5-9bd3-9e383264016e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254e7651-68f0-4d3c-b7eb-1cd9c65306e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849832b1-ca2d-4008-895a-6ddd292e749f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6b79f2-b947-4239-bac7-0844d40508ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "03512ddb-a947-4ec4-985e-ecb9a82dc263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf24585-e339-4a53-8005-c6e4e9a7fd49",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa4c9f0-dc24-4c6a-989e-1d5a7eb5285e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90dc372f-5d9f-4e5a-91c4-c63a4ad2aca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d3faa6-e100-44e5-addd-647911fb75c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "31f97b18-572d-44cd-991c-63aeeaadea94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a13db69-3b8e-4193-b289-6e075947aca5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf30ea96-4af6-424c-adbc-c5bc5328c528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3bf9c0e-4508-49ce-bbc2-47253a59b09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7106d456-3c75-4905-a212-7d7a23bcfef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc44baf-cdac-4a34-b7a7-574717249a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f24f93-fccf-496b-bec5-d134a1fa44cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a8f47e-acf6-4b95-893e-1d7352caedd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f7b6b8-1bfe-4758-ac49-65fad763dfb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847e8116-b372-43ae-b7e4-9b488c4ddaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d788d73-d9de-40e0-9dc7-f86a228033c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221f5e60-c7ca-4ae0-b8e6-821a4e068a84",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b5b542-c413-40e1-a0fe-731a13219da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce68d263-0a3f-441b-b542-524e48cd5e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89eff5b6-4d5d-42d3-8b07-4514b5cb8014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8788444b-f777-408a-8859-bb7a6eebba53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc012b2-1443-4399-b955-55d21c82f372",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813592b9-daa3-457a-a866-f8137836b04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd7be2b-2fa1-4ee4-8248-f2f28483f2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05524c4-37ed-4dca-8bef-55426054be7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7adece17-a435-4b6d-9b7e-a412bd02240c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6654896-c1f6-4b8e-a693-9cc9fe516cde",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963dd18f-2f9e-4659-99b1-bca47bfba501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33deebb6-25d2-4bf6-aa6c-2934feddfdb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4caa0d72-b234-4e57-978f-4443f3d1eaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8a672a-1a24-4644-870d-5cd382510cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c813c4-34f9-48d0-86db-d1a0b84f57a2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101fd6de-0545-4b9e-ac40-2b3ab86457e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a200c3ef-dd04-427f-8c5c-32b590d0b9bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05fc888-1a8a-4cb4-a970-0a59e2729720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bea7310-481f-4035-9c0b-511737ec4efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309cca84-b619-48c2-bb7c-113fda1d5fec",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3599ea5-33d1-4140-aaed-000ea853c662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98014025-b5a1-4601-9599-3024696e0762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b93014b-3a88-4412-88f5-e39715ba9754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9498f43-014f-4476-b3ae-f07e29a8a76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c775a420-db19-4788-9848-c15b8e7bff33",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e204cb-92f5-4237-beb4-226d325259af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f1fd8f-dbe9-4920-9573-0b80189aa0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfaa9d5-e4c9-4360-820c-d4a9d0e34a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43c3bc41-7ff3-444f-9558-b425dee04fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa11338-c451-4057-9c55-035210183746",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36df77c7-6ce0-415d-8b28-9c5995bc4253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc575273-f45f-4e5a-aa5a-364b110b4f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53c22d2-2662-49b2-b057-2adc045bdd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "76984f0d-8e2c-4b9d-ab4e-411fc226101f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a21daa7-812e-4277-92d4-b78e718349c4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271a6b05-1ab4-4809-9756-611f372fab01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100d4f2e-8e71-48b1-b9d8-b0cfddba3f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44dc3d07-1b12-4887-9f0b-eae0f4e277c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c36c266e-182a-469e-b89f-60e6c32c7432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c262c87-3e78-4243-b7a5-ee8a6233a38d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6783d49-0b03-43a7-8eee-a52b591a3e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2662d0ba-a9f0-4439-9589-824082a50be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a18486a-1fca-4960-b6b4-8c8f42eced1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3554a1bd-a56e-4243-8179-40e6877113c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf12de72-d8d5-4a94-9009-37f0c43fa10f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00d2ad5-8a1c-4694-97d2-534af5b81596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac0d51d-ae9b-4596-9651-214917c7ef93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e262505-f7fa-44eb-a291-1b2a1c4cabaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5abefbd-b95c-4b4d-b87b-f407ea5b3844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc6297c-5d44-4368-911d-5d8ac2912d31",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f39b6f-0b69-45f1-9d8f-48a49e954527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523a4350-5c27-4a06-ab06-b60b986c01a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083c77e3-b8ef-4a43-b909-3dea1c9231a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8701195-3ef3-41c4-a49f-e5566e847cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a725c9f-a8a5-4a06-b547-550da252c52d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7dfd08-174f-41bb-8ee0-b8b99b80290d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb73ac7-cd8d-48e1-b549-a01bf5520b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7f7069-dd2a-40c0-b0bd-f8fbc68a85f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2b303f-5ce3-4f2f-90be-fabee3da2516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b85c92-bc22-45ca-8aad-090e4ab5d240",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10d612a-ff13-47ce-9c3e-c824b809b265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4beb507e-255c-48f1-9c09-a73c9589e6f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1aacfb-e3f5-4a42-887c-63043c2acb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7fceeba-74ec-44e8-af74-51c9d0eaba40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692503ce-2cf5-4279-8a62-3052dc918722",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04e5d9d-daa1-4763-a772-3c7e5a746a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89124dff-d731-47f2-acac-0b985a36a069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36920deb-ab0e-4cc2-8d97-04f875828e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bf4709-4600-472d-9ed8-95d97e7d4ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4387ef44-ccc1-44bf-bbf6-e6d0d037abae",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b409cb-7e51-4b1d-a915-381c075783f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8da9e02-fd2d-4f2f-96c4-9f9b182adef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9938289-3358-433d-94f7-ad319ba93df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55ec8864-c6a9-4ec5-9cf0-b8441fc06bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813a2c87-3efe-43b4-9e5c-788fe75e31c1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d002b84-1ace-4ae9-87a7-31b53557675f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4a9091-3518-436d-8c53-34faac3dad3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d93126a-f315-4e98-8c1f-9d52f3021032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7137e24d-243d-43ed-9c3f-78c653df834a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2f33b5-9d56-4c09-be6a-eee4d287f1ac",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342bdf51-23cf-4a27-adb2-8ad3f6fee929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7908aa52-62aa-4a08-9845-5f2511c00d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f28491a-9068-401b-9c31-6fc8ade797c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d29f9ef7-b52b-4785-b07c-246f4f93a17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a788732b-2855-46c0-b20d-484c89306e8f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd66394-e1ff-4a81-8b37-2a657816953c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bfc86e5-bf5e-4102-8e96-9a1e9d78d131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72074f60-4b83-4774-98cb-928f78993c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cac36a14-cc53-4a9f-8bb3-bb90e1617c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721d13a9-495f-4338-bb2f-db777ddf43b0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dde464b-47e2-4b9d-9dd4-7ce5dfd935c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c19b77-4fb1-4641-992d-ea03112491c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc8c8d9-0067-445a-90e8-4593ffc7d5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f49c26-e6f5-4382-aa80-7bcfc2e19d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3355fd67-0531-4c3a-9ecb-e596db8fd114",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e377f4af-e383-4dca-8ec2-9ea21faf9291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feba708e-b56c-4591-af99-e9009f1c5c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c242bd-39bb-4554-9f4f-37f90cb89420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a72fc17c-ed89-40f1-937e-5e211ca9341d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6376129-8552-46bf-829f-8463aa29cb19",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b588a42d-5f7f-4f40-9b3b-ecc5ef92d1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf968be-d7d5-4d31-aefb-235aacff5e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c657f188-1dc4-4a22-a13b-41dd97645716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb9f41c-f75a-4cd6-ba4c-d95ff4e6f364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1d3fb6-af73-4438-8d16-b2fcdf3fbc10",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334eb351-ab67-4e53-a2f0-96a45d4ee0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee0e8fc-61b1-4221-aac2-9837bf170b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d722b895-cee2-4ca9-abe3-31b507ee4038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37b4d030-0ad9-49b3-879d-674b7234716d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80354e06-f798-4628-ab9d-330f17462512",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbe32a7-4619-4fc8-bbd6-8431387cc2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b076006-ab33-441b-baed-f813a939dd7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5846310-152a-4942-9122-0f31a05fdcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2c92af-1840-48d7-a31b-d045e8de68e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf258f27-1f1c-49bf-91e0-37b7d6f23bd9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a96972-60d6-4878-932c-78ab9da2aa47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc250b3-c03e-43a3-a0f9-93e220d6ab77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b439c7c-92c5-4f38-9153-dded2aa2c891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c4bb0a-4898-4cf7-a054-8a8042b9db42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e20a99-b535-4a74-9318-e74b2b5d1227",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f9e4a9-0cb4-4aae-b4a2-7a703a241da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0024d76b-1750-4170-8621-edc584160740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86288dd-0363-42ec-b9fe-659b942d80d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb763c8e-d9c6-41bc-a052-e6b718837d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fff2f75-b20e-4928-848d-5c39938da89b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f7ff7f-7818-4c93-b8cd-01adae5f1ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29947f24-44f7-46f7-99f0-dca90dc6a7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1137105d-3ad9-4f27-a1fc-cc85f8108e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "89373f5b-0664-42bb-83bc-9dab23024158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7494abcb-166e-4221-b7c2-6a1d4c824648",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a575b2-dd11-48d8-b004-1a1d666cc5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77acd425-a9a7-40ef-93ea-72d0620a1887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0979690f-4dc1-4614-b21f-352c0cc09906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "27a674eb-4da0-44c3-bbef-05379056ec35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdcb0e0-076d-40f5-8de0-a10c6897baeb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed57891d-0b5f-4c0a-8151-6458e472a4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cafdfdf-83fd-474d-ba87-def3b3ca7024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113d96dd-0902-43ec-bd86-0ac54622bb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f559acf-73d2-4f9b-a3c8-e1865c4d8c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4c36e4-9508-4472-ac82-773d58a1486a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51663a97-f4f4-4611-a6fc-96acc7aae360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f6a294-dbdf-4761-9a90-2bc784e5c2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba27272-c869-4fa3-8570-da7642f84f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce05166f-7b2e-409d-912c-c7bbfb8a0ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5864f93d-c191-4091-a8dc-bbe32077ff4f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ed044b-bc51-4761-9ab1-92ae33e0dfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f8bb97-9f1d-4a34-99e4-567a2c4b5be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52632fc6-7ff0-48a2-b9a7-f5d8c0bb8e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5daee6f-6a69-4877-adc9-8f1fbf4cb9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c62bad3-439f-4440-a96d-e82f7fb0dc43",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ec4636-388d-4377-98f2-abfedf72c8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "82a5cf8a-61e0-44b7-8cbc-6c80ee5bc1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cda4c6-0a4f-4455-8153-6dc9c3961988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "abc1e4a0-f47c-4522-b12f-d27d4f580458"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb901e42-45ae-4e23-8f51-ac2d5b054337",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2224d5d7-6678-4ca3-a793-dab2a4625bb9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6438e2-88ef-48b2-b8b5-e4ecf215bdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01ce49ee-1286-4dc5-8cd0-626c3dec65c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b6967c-9d34-426a-a996-8d653c76918a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa4af8cd-115c-4515-b15d-f3b63613dc55"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cc5ef81-57cb-444f-a823-dac81b691d91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e919922-0351-4774-9e83-1a89b930817b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66dde400-3b06-4d88-996a-33057ae7bf20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "458e967a-e0ed-4313-a7f6-ba1cc50e90e8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5fd9a9d5-7a6e-4aa5-80fa-18d2efc50f94",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a0a3ad05-17c2-4b2d-9f0d-129109e2b708"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2dbd072f-aa97-4f65-b48e-66f46f3c07ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a9b5b8a5-22d9-4abf-9cb4-e899b894dcbc"
                }
              }
            ]
          },
          {
            "id": "bc45be97-07a5-4d43-82f3-3f5593429375",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7602a0e5-87e7-492b-a08f-4ee76b730449",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbdae4de-298d-470d-992b-3af48221b889",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb2f911a-e6fa-4bb3-8592-4b86a665c701"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d30cc1d5-46a0-4fc9-a918-45cd250bbfd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cbac09a0-ff0e-4e71-9407-bc00b63bd6b1"
                    }
                  }
                ]
              },
              {
                "id": "115c4f47-a003-44c2-a6fe-ff36ddac595f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d472b03-22b9-495b-9402-6c1227542e72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebc8dfb0-3bff-4ae8-964e-81ad11cc7490"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6627db0c-cff9-47b2-8624-c6034ffec9b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57cda9fa-1681-415d-a881-9bf708421229"
                    }
                  }
                ]
              },
              {
                "id": "0b1ef2ea-635a-4f29-a5d1-e73c48354f91",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c5684f9-6cbc-4f96-8a66-beb17dc2e2d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "231d88dd-8bde-44d1-ab75-135b13618c81"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4a9b0df-71db-47e9-bc8d-a402d3047530",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c99a9a7c-0344-4fb0-9d9e-2cf71ed2bc32"
                    }
                  }
                ]
              },
              {
                "id": "61e5f578-158b-4417-bcce-d20d29f33cc1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95e51548-d970-4feb-807e-ba2e5dc5fc1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3aef9767-5b01-4cd4-a9d9-87e8203f932d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84c69c84-c745-45c7-8a8e-9bb0f83bde59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6beeb19f-1e9f-497c-92cf-5179f3bc8652"
                    }
                  }
                ]
              },
              {
                "id": "bc8c9d76-8238-4dce-a7fd-003ee0a18c3d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed495d9d-edc8-4351-8c90-be0afed0b268",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ecdeb7a8-870e-45ba-9245-9a9a1d36976e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eab3d71a-47a6-4745-8dd2-d40736ac3135",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5451b762-22c8-48d7-b72f-3e78d45d21f4"
                    }
                  }
                ]
              },
              {
                "id": "59320518-4497-4007-84d8-51c37b08d1c4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5c76fff-749c-4a10-85ca-14ba110c8d60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d67939b2-3a51-438c-9ff9-9cd56d98661e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00e51fb4-a502-42bb-92fc-83dadcfcdc40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "441efef5-97df-4a08-97c9-5ec5466b8630"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "810b61bb-85e9-4edc-89bf-2bb692b753c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac42a578-63c9-48ee-ae9e-f5c31914c0be"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "02102065-d728-46af-8f4a-08c621f61072",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79716df9-f1b2-4525-a0f4-e03a27357aca"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5e825f5-6ce5-4153-bac9-d19fb45dc434",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "981f6b1f-b6f8-46ff-bca7-c038f811c8f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35b03535-8ae6-4f0b-96d6-58d68f97e3b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0fa4ae52-8b96-417c-9751-402a0e4d58f8"
            }
          }
        ]
      },
      {
        "id": "108159a9-ff28-42a8-a19a-65dd1293609c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9a67f4a8-93ca-4b1a-9d9a-107642e1c89e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eedc36f2-7f7b-437b-ba53-914037368254",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8b7b8ee4-cd25-44ef-98a7-3183da9120e9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a258f3dd-dadc-4f10-a40b-add0f3b9ba4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c1ff3a-8bbf-480e-8b97-7f1087c539a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fca038-ad9c-4bc7-9ec5-f40801569547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7fa949-5c68-4a81-b3d1-b3fbed629e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6ab7bf-93f3-45fb-b17f-12d9cc0f94d1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbfb218-eec8-4374-b503-489b5ff5b568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22916b31-1ef6-45fa-b4a3-f7678c9624d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4e0eed-130d-49dd-a614-adb821d2136d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ec416a-9b7b-40f2-803e-341c3aadd00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8773de71-8374-4824-a8d3-1484d0520b90",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8f9381-13d4-49e7-849a-bb1da1ac41df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52bbbb06-3436-4089-8006-ff6da05f7050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5ae10b-86b7-4181-8830-c7a0c5147d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65f151b3-bffc-4eb0-a58c-e4339f4cc5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33395277-ed85-4f9a-876c-b09da96ea453",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f348514-da9d-44b2-826b-04fd59f08827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4161f28a-cddd-4cb9-bd92-d98f6cffd5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1312870-a6fd-405e-a772-f0085c223a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "544fb1eb-7441-4702-a50e-5f8df23ad542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df68cfea-1832-45d9-8497-7e67e30c7799",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377be6eb-2582-4f2b-b9b4-f3eb3dff6aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b885a7c7-179e-4eb4-a152-8bbebbc35b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe5cabf-9dbb-4963-af0a-02ab345a877e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c7bc6c-0a46-40db-baed-b1123811ff59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67a7d03-cd24-42d9-8a5e-ed4a3937f12a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aef2b11-c5ac-402c-b5d0-d984757c8216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafd7ca1-39a8-4ccf-b70a-71e94cf91073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d704d8-b0a4-4cec-b647-76285f993104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a845f8a-fd6a-4832-b98b-d1bb65321d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cb143f-d5c1-4599-aec3-8852b1c9e01e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e0db90-9531-4fd5-a742-74d04dcc8b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9985b3d2-1abd-4f9a-b02c-bf9e3eb24d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400ed640-172b-4728-b760-7618ef0f6c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "17553481-ea4e-44b9-ad4e-6588d98bc8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4758c95a-6382-4186-8736-6221dcf107d7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae259932-8f91-4d99-a740-a6bf106dd750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9254ba5-02b2-4379-b741-807464416c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31033c5-0b8c-466d-bf3e-f92f221af9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24bdbde2-bc04-44f4-b003-a46af4ac8bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee06e810-3234-4b7b-8a4a-759b7a1b1cd9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb86d3a3-7aca-4ce6-b555-24b4d5b04f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722c03aa-889d-4a91-8a42-6415dc384cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d69b80-1fa7-4cb9-abd4-80edeaab328a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a109c2e-2017-49c1-84cb-6940f2aefd98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac655b1-f797-4b6c-8be3-11bffd8871fa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65da65ca-6b6e-4766-bae2-711b88bbccb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d363e315-9a0d-4f45-a9da-a4c6dde36302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f081d9e-0333-4044-b067-1bee942503b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "156c78a7-93a1-4076-899e-ad5b81c8fb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87164c30-e930-4860-b466-aab0d831f25d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c17c57-6fbb-443b-bf69-c47066c3974c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00aef3bb-5537-483d-b456-18b02378ae3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0800325f-21e1-4cdc-b45b-79884ecb860d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "45ada456-9a79-4b9b-8041-b2a0ee871440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba9f401-54d0-4267-8890-a9f31a02712e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc21ad9-ef49-44f9-b71e-cbdbe01dc3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edaeb2a4-67ff-41f8-a2df-53efb6acd149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b6722a-ab6a-4731-b702-7b1f2a213da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1bca312d-36e6-4160-90f8-ee5f349f5c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e7da70-d8da-4075-a652-a0c8403f53f7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013248c1-3a71-48ef-93a4-199f7f64759c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85336b1-9120-4193-865b-6cf033d313f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cb061c-4ea2-4a85-b6ad-db31102c445e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff17967-7fa3-4e22-a2f1-df358b9ec56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66995d99-fc9d-4399-9bee-a1591ae88708",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aad6c7a-49d5-44c0-8fdf-85091d0b7da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb940045-cb9f-4f4f-884c-617cc340e3cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982378ed-8057-4608-8d84-945c0437b494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "83d75d82-897e-4157-ab24-ad129505aafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4163d8ed-6a55-44de-97c3-89815e8f4225",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802f2028-9380-41f1-97be-74b4c8f98def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16250764-9543-4239-a9c4-8702f24f3192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a635d5-64f7-4b1c-9785-e1631fd9b8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa2f435e-5bbd-46f1-a3d3-8cd6a58cc9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074a9ae2-3dc1-4f09-aa44-ba88da14b73b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec656f4e-485d-4aaa-a6f6-a15f3f114a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3acf66dc-81a1-4aa4-8008-048edaee34b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa52e1b5-fc3e-4326-946a-99451542dbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0cf10a1-1059-4db6-9c75-e6a99e455ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea60aa11-8087-4da4-a6e5-68568f4124cb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d01d4e-a337-4118-bbc4-468967e09de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47200f68-c8f7-47cc-b482-d240dd072393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2930524-a9b5-49f9-a1d9-e507fa0c9db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d187765-d1e2-48e9-b33d-3b5fa91f4a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f02fea-6e6b-4d98-aa04-57c8c362256a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65600531-15ac-49b7-9937-220671b72194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b274206-0bc7-496c-87aa-c4d204114da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3b7422-6931-4c23-bfef-d09c14528c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8fae3d-4cb2-41ed-b66b-3c4b15930e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218f09d1-3511-4a1f-9aa1-1a58746d2f97",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492837ed-7daa-4771-88c5-6e429c41436e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44652f6-561d-4031-8fb7-71e70ce88afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efba564-ce46-41b8-b3bb-fd50d5ee0aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77dc6454-7c6b-4423-9c09-20617b741acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427b95c8-4264-4009-8364-ebb600246543",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c981a986-684e-46f1-9d5c-d538ab824c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86cdc159-5ef5-48f2-a103-adf1dceeb56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afc736e-57d4-4296-bd5f-89595103bf78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4326fda9-e3bf-4bc3-b0f4-45bc732a21a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f59367-3be5-4347-bb18-385a9275f110",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb858d5-39ca-471d-a374-ca57e613e064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf988154-4f7d-44dd-ad29-8ab2cf1de689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc58e393-3b25-49c0-8139-cec579b179b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee11c0c3-8d3e-40ed-8686-e9636a3e2cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839bd0bc-f9fe-47be-9de4-eda5a5edeea3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59207d4f-e49a-4ce5-a230-d0921f1efea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6b1aaa-ab34-4ffc-b930-72799b868f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daaa1149-8097-41df-9c79-b7e5fa27f5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36218461-5f6e-4a24-9dad-8db9b55fbd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb42fba-55cc-41b6-a58b-e602b047a644",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f5e086-ca9e-43b1-ad98-03d8464c2438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf87e1bc-91ad-477c-871d-effd1636edb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ced9991-1151-48e0-80c7-35d41aa8f4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d914e613-765e-434c-b14f-9b80d6d6c860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe97b68-771c-4c6f-8bdf-514f875134a0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef6602b-0339-4279-8ad2-8056bb6578fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4fcca9-62c9-4bbe-b09a-a1ffb7eb6757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642732ab-b917-4855-bbbb-c1b336c89274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5d70ed-30dd-4916-a580-1da5b270f8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3693d95e-52e1-449b-9531-7740d9faf1d1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d476bd8-d99b-4f2c-acd5-f81beb6d6bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04147c6-57cc-4105-9b62-e5c35f567b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5fa3c7-2cf1-4324-a657-a3d68a1c08ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a39b7f-779d-4178-86ea-88e28da5aff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af3f718-be50-4f0b-938f-e6a5eef7c24d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e93b13e-d13b-4cbe-ade0-778fcae1db94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865e4457-02ee-43b6-b301-bf614ec4bcc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3795808-cdfe-4229-bdb7-3cce53441309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eee972d2-aac2-455f-a26b-d0a38ba3b120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9887a5df-af09-4d0d-8262-82c40a643c85",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891c239e-4376-463c-8023-1d417f22c85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15266422-ef30-49a9-a0d9-eb5041d3451f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15dfa74-03c2-4848-bdd6-869aa9c13b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc103dc6-d8e8-4ca0-a25b-161ddc8d57e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bc6593-7e38-484f-8e3d-d0123622afb3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1b6773-850d-458a-9827-0c622269774e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182a8b7b-a9fe-4a58-8100-40d801068080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6462b9f0-917a-4160-95e9-e468fe6727eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8754bfca-d667-4841-8fdb-01f7b274b5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdf7d7c-875d-4074-9778-e41973cdc67c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44a9a5c-d078-425a-b310-b08d6161d50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9914b0ea-045d-4e6e-9206-3a7d5f9e6386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6696d441-fa8a-46f1-9e7d-76a50708366a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11cf1247-599c-4db3-a088-cdd16079a184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9921fe-24d3-4cdd-9213-0b2b4aa26434",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7ae75d-fa8b-4a53-b1e0-164894345767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acdf8f6-8747-4f66-a745-945d74300fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a19f190-adf3-4568-9b98-1c9331eb46b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2e3dc4-2076-424f-a2ca-df3c2ef92f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747ed9c5-bb72-475f-a6ee-ced38f124631",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf94f89-dba0-4234-98ea-5b2054d0f59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39603ba4-96e6-4e95-951d-d21cf87f7a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3cc0661-4b39-475d-aee7-a39612aa79a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1516e6-186f-40cb-bd92-73b2581dfd42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfec0ab-8ef9-4589-aa31-c59b9ba49287",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69affdb3-4879-455b-9554-4d1c4dab75b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01176949-d81b-4262-bcfa-57d90fb81d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38d358e-37d1-4365-8624-c30a1981ef44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29f5f0c7-5df7-4a95-9571-6bdcbcfc978d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a46df112-63d1-4bc9-acfe-ad0f1355bfb2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7810334-8779-4d3c-8c8f-7b9d82daab15",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5204af-57be-477c-b9f6-f4db0df077af",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "86d0deb7-10a1-4005-bccb-44b5445dbfd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1de2d85-b4e6-49e6-84c9-80cf79b4a742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6737a661-ad9c-4dbe-96d6-8a8b8b91e767"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0131274e-377c-40e4-9a66-3cce017ee64e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "041e4a12-3da6-4019-af34-851c05887999"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21c1a869-dd45-4926-8b10-56dfbc3971a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27b7169f-1993-41e8-9c9e-aafbcaa71be8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b603ef85-2120-49a8-b42c-de10ebcde33e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "96a482ba-fb9b-4e62-aeaa-40f0d9298ac4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a304b572-d6e7-445b-9fc6-725bc7e95983",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3ab4b95-6665-4718-afbe-99a4ee6402e9"
            }
          }
        ]
      },
      {
        "id": "73792900-0a30-40ad-aca6-153e725e1330",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "924877eb-ddf1-4e5e-a3a6-bb12566179dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d0aa65c-0e58-455d-a2b7-98789379b59a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "48ec2957-b44b-48d4-9f69-4ad1bebab94d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632a56e5-363e-4e34-a9f3-22e9f563ff8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c053d111-e49b-4ce1-b80b-40dac36f1fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54694033-8a39-46e2-ba61-7c0373002c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa0c6c3-4457-4f6c-9a07-61c0983de842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdaf49d5-56ae-4d6c-bbf3-0377020964a6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afd8990-49eb-4b5a-bf5d-adc2253321a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec8f774-265c-4d9c-a1a5-e0535c7a26db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97723ed9-3853-4d11-9eff-06e75c5a88c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc042c52-16bc-493e-9fb3-72e4028bbba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ad0708-b0a8-4437-b1da-4b9dfb1c00db",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d21cb9e-5617-4ef6-ab5e-e71ea63b8f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b0b2e1-3e6c-40a0-9351-5361ee1f3a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb77c0b-83d7-4f6a-8de1-19de39fe7dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9de70d16-dd1f-4129-b6c1-949432f54e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbce95a9-5449-47a9-87f6-f4af1a452da0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ddf02b-4145-4b99-ae43-5517b03b7b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec93010d-5931-49d7-9726-27b13b490f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fb5d2e-7e85-47e4-947a-a40d965ce13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3726e2-090e-4c03-bd20-044c1d128bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b1b8b6-02b0-4356-99b8-723919b9ee25",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c68d4b-48b1-42de-a213-af18cd3ceda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3ebba3-7618-4cd4-aa55-b89255870bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565904f7-c6a2-43b4-9057-8ed1d3d8306a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb947992-e74d-4d8c-ab6a-7599dd878578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9aa0208-6302-4404-90f7-17a6afc70536",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74c233a-a13c-4b29-954b-5ab12d19f88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b96ad9-a836-4351-a691-01886327f342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ec58f3-ac95-459f-b6b8-13858c818a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "892d948d-1457-4f8b-8719-941243b38d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d1d739-54ad-45fe-9c69-58087e547f5b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc399c5-08e5-4a8b-8b1b-b50e35dc72ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcb7f7b-2d0b-43eb-8d68-93be4e947ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf991c4-de69-4e7d-8743-7fb09272cf15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0409e42-e317-4317-bff1-a3567570f7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a2a87e-9663-49c9-866b-efa481fb50a6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f275f1-3061-4d1d-b11c-b456dd052baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd26b407-c369-4003-a9bd-5fd3fd8b1848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54aaa92e-e21d-4c82-ad81-8d191386b9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a36c61-d427-4c09-afaa-dbe267bd8686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df731d5d-d31c-49dd-8c6a-332cab401a37",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d21f92-a07c-46bf-bea3-f72077aafe84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc51455-4c03-462e-8433-9f746560fece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07367216-f9d6-45c1-8e9d-0b6f4b09e563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55fd6dc6-0895-4197-b1e3-d18925cc23a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e139d37f-d203-4337-a97b-6dcd7aea32c7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caaafff-f54d-4883-ae6c-23de90165980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcc2bab-ba22-4f94-b577-ea570b07beac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953dc0cb-0ab0-4bd1-b40a-45d01dfb4eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c977b288-6efb-48ce-a19e-f959888441ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56d8a4c-851a-4466-955c-709553fd460e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8e829b-0737-4466-a2bd-a38611d461dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e2de3d-edb2-4d49-9dd9-53155f5c7ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23dee4b9-cab1-448a-83aa-14752de9a0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9b871a-43f5-4ec7-a5ff-1658b933309b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973067e4-512e-4833-89e2-66f0c79e9fe3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d9d339-0a2d-498d-afed-729886873fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d6d8e2-506c-4c11-bcd7-07d2d136c621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197bc5ec-418c-45cc-af40-5af18f35c6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3bfd05c-985d-4db6-98a1-943802932bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e77e61-e693-4384-9b53-3374c5ba4620",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6890ef0-d652-43ef-9362-cefc9082aa08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbd48b6-67e3-4e85-b8c1-71b7bf4128b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950054d9-4935-4c8b-a828-2418c6bb2738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f99ac28-c18e-4d01-8d20-bcb594ca27af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e514be81-268d-442f-a4c8-e5aa6dad4c1b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf0830b-0e73-4a25-82c2-70b55885acb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da015cc-c33a-406c-b31a-16c512c68145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2317b5c7-a260-4cc5-a787-17c352a1797f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "546d390c-fd3a-4810-b3b8-b3476df5a05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f0fb34-8673-409f-9730-ab02fb835bd8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2344aea-408d-4fa2-933c-ccc02f7528e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d3d9de-902d-4539-b7f8-939aa9f535e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9021788b-e298-4b84-901e-b2788b958041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1a332d-90f5-4275-8ba1-d9cf53d00bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425e1a3e-bdb8-46f3-9dad-653a3368706e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e796bc6-713b-4e0a-b208-d3bb59bcfa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc145b81-0cf8-420c-b6c2-d8e94bbd8f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0532ef-9e8b-4e8e-9d9a-47d1a3d9ef68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc730d2-2e10-4a7a-8f21-2208ab7aec42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee0775e-1db5-4d8d-84de-692a672d0926",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6826a5e-fbec-409c-a476-42feb7517393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d583785-5a20-415d-baeb-e71a4fb64b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df266495-75ae-4119-988a-af94a6ecb81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "961b6639-3144-4be0-b0cf-cc4f91183d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e90b8cd-1b70-4118-85e6-50e15eb541cc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7495d7a-6b19-45e5-ae05-eb3cf9fa5681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca68d1c8-d31e-419a-96b7-6e26a0d04891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f1e81b-200e-44d1-9453-7a9bca28494e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8137836d-7da6-4b17-a567-5d438a29dc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fef18bb-a2f8-40b5-a14f-2043daecc86b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3008717-1637-4010-95f0-ffa7ef02f28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894d074d-a18c-4a16-b3f2-5fe8f95b94c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93895caa-32cc-488a-a56a-17ccd30f9977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5237faf-e1d4-46fd-82d3-3e8ab38cbda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063716b7-97f3-4006-83cc-e16cc3e8fc38",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4baaf86-57e8-4de6-b616-f25059abed9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3164f2e-0105-4f09-81dd-05cd5f71c496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c20bea-d1b6-4e79-9f7e-de639ed8ad7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d72068ba-4169-4bfb-8987-c33bad3e0592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd486ff1-a0f6-4fa5-9f0c-8a8ac13759fa",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fff76d-42f7-49f1-bbb2-16fc0d53be77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93494f71-57d8-48a7-8cf0-c70c6be10a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb97c6b-80d7-4db0-a348-2f4f6b8f8cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79f8a7a3-c8de-4a5d-be94-ce2cb44f836f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d642b63d-2049-41fd-99c2-9f664bbfa7fd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629c35a2-b0e4-410a-b396-1123e527db90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e72e4a-5ff7-42d5-9b5a-25223c5f47a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a131a8-65a3-4126-ba7e-70752d30efa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d233fdf8-5014-4b8a-b0c4-0e04cbd1a6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c4e0fd-9bc7-417c-8d13-d02cfaad044f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66993090-5c5a-4d20-91ba-3c42150906c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad90c4a3-9a71-4e97-b45b-5da51c1cafae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efe456c-6aae-420f-acfc-937b2945b8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "896e6be1-e7f5-494c-87cf-1261093fbaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca8b6e7-5116-45b1-837c-09d9f064f501",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dab044-d109-4b21-85dc-852ec6014634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0802ed6-e7d0-4e84-8dd6-3d676046def4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ce9eae-2776-4a95-91de-549a5653418b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad9d8c4-9a3d-4710-8f39-507dc5cf0f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221d65ed-4c9f-4d7d-9657-d359113afdb6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae3444c-786c-4cf6-b618-462bef5bbde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da94a03f-edcb-4912-a57b-f8b5b6ad0e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ab5efc-7807-495b-a41c-f1ed1c608950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b452ddd8-fc63-40ab-a7f3-80a276b775e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51672b22-655b-4f3d-99a1-5cb66fc79511",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e3671b-d421-4fb1-96e3-507245def130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9577135c-c701-44bc-b535-1f07f407d459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed04219f-71bb-4330-9aed-89938b1ecc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49d23f16-a21c-43f3-b4f2-b8891e722da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec8a9af-84d7-4ff0-94b7-501a3faa60e5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cff095e-4d2e-407e-ab31-e00902b81623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d29226f-1530-4cfe-a6ed-b58ef4c6b7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47153d4-38c2-432d-9e41-c678d3d4d07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ac66f4-6f50-4e63-b77b-7a91a1ce5d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf184ac7-c6b9-4198-acef-eb845896c515",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28424fea-9485-43eb-832d-1e0fa47ed149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e94bf17-36a7-47ff-9105-5db4773c106a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589066d6-a5cc-4a0b-8ede-33f94dc6c085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d07028d-32c6-4be2-83a7-0be9d432f649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6caef40b-6a66-41e9-85b6-5e2b68153ad2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c445afd9-3ed0-4011-afd3-118fefa1d077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9322e12b-9ef7-4130-8bdf-d9d575922bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7532fe02-4f50-4a4d-aa1e-55ab5bff32f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbd46e2-5f02-4994-ab61-7afe8702fdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04a1f20-287a-4525-97ec-98a6fa045d67",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd9b1bc-94ad-4227-80eb-bc75aeb6238d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a84ab1b-eda3-4d46-86fb-b09f5712bcbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525af0c2-7ff4-4796-8b82-bbc442ba464f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02bb7920-d2fd-4979-834a-53552ffd2830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c66829d-959b-462e-a8b9-8242495e4045",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec434630-1345-43a2-969a-1ed88b866aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0212a1fd-52b2-46e1-9600-36d16c971f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66575ba-a950-4e8c-86a6-8fb04251f0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd21b65e-5bc7-4bc0-9a25-442a6636aaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3efcf9-2bef-4615-ae0a-50e7b91f48b8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024ce446-1c3d-4cca-974b-e28282294576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02978bbf-f342-45a6-afb8-4b0c831b4972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923e07c4-9cb2-4087-ac55-55c76a31a6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca8fbdd-85f4-4f5a-bdec-e65ea0b0b554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e52b1a6-dc89-42f3-af16-d31bf1a6f4e8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31983890-b8c9-4176-a756-c9cdbaefedc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54dd8a65-52d5-453d-bea5-9a1ad30c0ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41884499-9288-44e4-a34f-f29efa75fd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e04e7654-c699-4424-9b86-4310108c68b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e498ac06-6a03-4124-ba77-cc63fc75216b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3958d8d0-04ed-4c85-ac4c-1197115c8647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e18da02-145e-4d35-93e8-748097b69acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd15de0-fd49-4113-aa1f-80dd7817a3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49320f7f-6a51-4e39-a8b2-81c91b2a469c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b8b316-3435-4b10-a3b6-2976cd0b90a6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafb418d-c6cc-4410-8f38-72ad766c4916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba356c65-9407-4234-98db-d9d4713bd771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12617d5f-09c4-41a1-9cdd-b8a7ee3bd0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7ed0e3-2f9a-49d4-84fb-f7edb9488f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bb04d3-f0c1-4326-aa80-0b2f72d380f3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434047e4-735a-447f-8710-4bdb975a396d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d24212f-85b6-4ecb-be64-5f9723a5a73f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dfd85d-c035-4bdc-8378-beac5596511e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9285a8-76bd-4e20-987d-7b6afc664f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3a2f5c-06a0-497d-af18-534078faa0f1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc5702d-9fda-45b2-b073-9929801dfe00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e648d9-4b5e-4ed8-b0af-b9a1d8740de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52ca79f-1932-4837-a556-4ebc3618a802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d00edf4-3e92-4ccd-aa3b-7447c1f653fa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0f59e732-de48-4d2a-b16c-7e875b76808c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dae71628-8a91-478d-814a-cda381f250a3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65157c7e-7db8-4941-bfd9-8cd62fdfc860",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "569e550a-bd4a-4c84-8d42-bd49f16acd23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd96d334-d558-4ce2-a9de-8b55421b1e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd696e32-c039-4cf5-b67b-8c60bcb28413"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f302080d-9628-4140-ae13-f195aad89ce8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe30734b-b1e7-45a6-96c5-474d12fbbcfe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4004d01-6ee4-405b-a767-7968240a67ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5563049a-3977-462a-8176-27eb3ff7eaa4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83f2fda3-ab6c-4f41-8a12-d37bb972e6ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c61feec7-0476-41e4-9746-d1cf626a7d12"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03c858d4-7589-4b83-a545-a86d49be1487",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8001b94-8d60-4e75-a886-fdde87400a5a"
            }
          }
        ]
      },
      {
        "id": "57d1673a-8d15-406c-aeaf-46d41d9dfbc6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4b1c03d2-cd78-4121-b12d-7098e6fab593",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2da5a0fb-9b95-43b2-8563-310c1564de67",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0d5104ea-6b68-4af5-9c7f-2223575681ae",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa6c504-5714-40b5-a73d-4ae552564cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c23058b-58f7-45db-854d-d0ce6b677270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ee1dbb-80ae-490a-9f57-3eefa3cd168a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf861fd5-1cbc-4ae3-9909-47e7bb52c8c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e93c836-e956-46d3-83d8-cb051f630230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d985ebe7-c399-45ae-a99c-2fd10668d445",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664c8381-27b2-431c-af01-e37bd17281cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9521e36-a86f-4fe2-8ba3-c9a48a50902f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c02ae19-57cf-4689-933f-83a863494e2d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be5a6da-85f1-4e77-89c0-94efe267749d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c3c524-0c69-47be-b324-9d1e1b301e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96805306-e9c3-4bd2-b0ee-ee0c7fb82fbd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ef00e8-5bb1-4ef6-8899-bb80ad557daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46bd0fde-239e-4ee6-85da-0e838e8c21c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b757f77-8a05-4cdf-aa6d-7ecc4a43d24c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5788f001-e995-47fc-9662-049aa85418e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c8aa53-f821-4b89-b22d-c15b60dafd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5d4d7f-63a7-483a-95e3-2ac376fe13c2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bd5dd6-4235-4842-b90e-ced071a43051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3974dbc3-1ebb-4c9d-9a23-7e2c5d78e478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c145f41-1fda-49db-a4d4-800e1d79b79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2a1183-93c3-4f77-b141-e7ff8d0100c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878d0fe0-53b0-4d22-90d0-16642ddaf601",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e103589a-4d2d-4726-9a4c-b2ffbb1c3b2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4de01caf-c12c-4786-87dd-31899ee66c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba626a88-9c37-4755-8e96-1d7372adbdd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7bbec8-4da2-4610-ab9c-53060500436f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5f993d-e2d8-4720-a00b-21ff33608047",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec443bb6-37f7-46e9-a596-2f5c0c651b7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f52053d9-b003-4591-9480-43ebbc4259ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e30a5f8-e840-4270-9843-46353615a86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8670b194-e0c4-4374-9e31-f07e0016a4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d16828-750e-48b2-8750-55f2f44408bd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59982d4e-f8ee-4d75-bdf4-616186853a13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "616da51b-4127-4e8d-a813-9096692546a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4120f1-aab9-4b59-85dc-09aa57ab4d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acde076f-f997-4d1d-91d9-f6bec1733303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb0546b-2742-409c-a080-e2669bc1f391",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5b787f-35db-4db3-a477-5964f63d6f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951c7b8b-6b12-48f7-abb7-62fa74962313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ff30c5-443f-4308-904c-381454fca296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9283e1-6881-4e03-99ea-c2baf041b0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a1e6f1-7bd0-46b4-b444-85857103b566",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602b3fdc-5f9d-4d96-8fd0-f81506c704b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97182208-19df-4bf1-aeb5-1c0b0650a874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e8795f-c681-477b-9a46-6517f185b96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a410f034-2f08-4685-9ab9-1e8c50730678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1f959f-fdb0-4f06-bd6c-3642a8965ea5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efabbab-b087-4682-aa13-b1771efe164b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "189aa297-b42a-4cf8-9a4d-bfd59f28eafb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4003f5-8077-41f0-b14c-02ae7ce54a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b681057-1292-4eb4-9c29-08a0d2fef1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a9be9c-891e-4fc2-90f8-39cf786450d2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c5e5c7-85c6-43a4-a38b-ba98fa3a7894",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f218e63-b43e-48b2-8270-ca0099f00e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afde8268-8ca3-4eea-b63d-47dedfbacd93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f37948-e5af-49fc-9dd0-f7e99a273d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b964e5-af20-418a-805e-e0b29fd0be9e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b96ff19-149f-4b49-89cf-5998ca25a880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0b01fe5-b2c6-4112-acae-20b95996b3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be073cbd-09b8-4701-aa46-e5bee0362841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a414e8-ab6b-4ed0-b96b-e91d09b07e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429fdf46-3199-4626-8628-4b6efbd26fd1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb583c7e-52a5-42dd-874c-f16cee9b2aeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0764b197-1880-4c07-b42f-8e6b00aa5202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32fadfb-2a72-4dcd-ac20-23931d74e72e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ced800-d8b4-4c93-9296-076d5d732c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb1cb9b-bdca-4cb5-8c30-240e334a84e2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0571f207-c6ec-4727-9617-c24a10cd30db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564f06f5-e000-4305-be90-90809c8bd188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07bdf6c-0786-4545-9f62-a511058cf762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84d1944-bd54-4983-aa75-d5b446fc261f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50bf1c7-2b60-4ee9-ab96-d4f4179e4985",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0547be-775c-4f57-965c-eafe7255dba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7e7905-7933-4b59-9710-15a221e35262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5c495d-0ca6-4927-af86-dc1031585838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5334eb8-0f5b-44be-b70a-e34a61976fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc59884a-3d4d-41af-803f-a29fd6d4315b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc40d5d-5b29-4b8a-8853-188be7ddbe68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5549715b-ee51-4372-9428-3804649d01ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea970c78-35d4-4620-856d-aa90b54ca483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a854ea8c-71f4-46ef-82df-bc809cfcccf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70417a7f-c669-48ce-a1ec-461a9ce0f46c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9ec796-b8d0-41c7-a414-3c69a9d4d515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79525d1-5090-4bc3-a136-977362767614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53aac2f6-c06d-4bf1-9446-9be10076d91c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfbe46a2-6fe5-4817-8f92-4ddb833e539e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7588ec72-0092-4eeb-af17-979296350ad1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be18bf6-f884-46e3-8e5e-900561b801ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c7f5c5-ab18-4d92-9fdf-80dd42d26082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a034359b-727d-4045-b6b7-fbc36cbe404d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115aa536-7d28-4bbf-8588-1b144667c030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3332da69-87d9-41e1-af40-9a8dceaf87dc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dd125a-8c52-471f-95c4-348d069150df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2b8e1a-689d-4cef-aadb-b77a44aad497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc61a944-c120-4412-8795-2700b919b9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1bec18-52f7-4453-8eb1-95f30523a641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7abbe9-9da7-4772-bd9e-eb10ee2f68d6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b98917a-117d-41a6-bdfc-89df5bb39a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e65f66-1321-4d4c-8027-f7686fe626da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d267eddf-a795-4dd6-b4b9-5d3cd2f90e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8cce64-e0d8-4758-87b1-e45b52c726c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4cdc03-a34b-438a-b7eb-947147eb96de",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc1fb9d-038f-49f7-a3c8-8345311d85d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6691443-2393-46d2-a774-ce042c2d754e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "202a3588-0360-4669-b9fb-f8eccf24c615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3343602-f35d-443c-a507-db42421c35d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a317c9-99b8-49fa-97d8-f870518f58c6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35dc933-2cd2-42ad-95c8-6b60a8836446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78be93d8-157c-4dbb-a47f-e186f98704f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45479986-d83b-4918-b053-fb00471579d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce996dd-085b-4431-a066-830186d21f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078ca657-f07a-4f32-be99-3b5a353ec815",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d18c980-b162-4ce3-85fe-57949611046b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "242dbd6a-fc4f-479c-a8b4-c24f5dabef5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a201e86-b8ef-4107-a334-494e185d9bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6c57cb-37be-4f5f-8ae2-8e7c63fc41e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e10f3d-a53f-4d13-b9b3-6a6c6eac7027",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd08ee3-fd25-431e-8fa3-f1374c53e0a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2ca8ed7-1d39-449d-9b99-6b7ff9e4be73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "210224e9-bd67-4682-8ab8-8beb59387fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeed6af7-7078-4c43-ad03-0ee8ce093dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40ab3d2-217c-4199-a9d9-9b2ae084a98c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fea371-1ae9-4107-bd0a-8201fc37ed37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e278cf94-076a-4742-948d-54c1d5880e00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1408fba6-3a29-40b9-bc44-67abb5893465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb28c0c-99c8-4252-b7d3-1f2c5740d3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09bbf2a-bf63-4418-8041-6231f5be4564",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dded42a3-d705-45d4-96d4-d1433eb961fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a13578b4-0981-424c-9be7-5e1d35efa758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cdec80-ce17-450a-b81e-f623788c6dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba99236-2d3a-4a24-b559-5b1cbdb1978c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f513166c-90e6-45b5-b9a3-b16d5dbf7021",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb77c61a-e436-45f2-95ff-92462342191f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaa13d66-6d31-4e9f-a1c1-385fefed06c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "729ee617-e5ec-492e-a832-6a471037bf47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7288481-14fa-4111-b262-b1bbc0eaaddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24a5d69-c1b5-4af0-af1c-fd5665dacee6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a4346c-2f73-4058-9377-fe37a65cff39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea3eab37-4ec2-490b-b022-c1e652b5120b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e58427d-3852-4b05-9f13-0171c7bcba5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd316265-e77a-4163-bf26-f006a2b1ee60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d60227c-660d-4e0e-b505-481b7de887c2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d5ce46-1675-48ec-aa76-59c414a94142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85082e1f-b532-49ea-964b-d7521c21a5f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ef5a1f-808c-4651-91ae-7b23b09792f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2747a11a-75cf-438a-98e5-44d379a0a58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c7f1d0-312f-4814-8b35-86940697d033",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66faf00-2da4-4268-8485-a4eb0d00e12c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a58e850f-d77d-4e69-851b-5396e39ef1a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feded898-1fa3-4afa-8250-13c949882f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8103e558-94f7-44c7-a975-1399a94caae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2feced-880b-4176-a38b-00f3dd3f593a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042078e7-47a8-453c-b027-1bb7f3f6b21a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89f00709-d411-4a56-b353-4a6d57b27e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9462de8-0b40-4139-8b8f-79a592ca911a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dbd2fc4-14d3-4da4-b129-54b5e21c3b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1477a3b-092b-410d-9404-4a25947405e6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e0029d-10a0-4c64-b208-b0f18f99ee2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5354dc3-1c32-46e9-84d5-be2806db30e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd81a81-352b-4de8-8635-420f8d740ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bacea997-6351-4ca8-ade7-7ea9a8cbea98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c93eed-f5bb-44cd-beba-b64acc0e230a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7446f3a-d131-4b02-956b-2ff8ba1fa357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cab5a8e-eb10-49b1-8a3c-5a85079538fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2c770f-e120-4b38-920f-15ea3217b95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68601c25-383d-4511-9faf-2d0ad59f79b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c169b4-e969-460a-96ff-4e70a09c3114",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a44837-3846-4871-8479-76c640d9bd81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae14f78-4a90-4328-8bf9-6c48126c10c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3be9575-44c7-40c1-91a7-fd417f8bc5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0cbefe7-488e-4e98-a200-d3f8776209f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75f0a3e-904a-42f2-b631-081e491fa289",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac613a1-5802-4a03-94af-342c57570446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e2aad2-6dbb-4144-85ef-0a11fd654e60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9e7b47-0e44-4036-940b-13ed442f111c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b499d1eb-c096-4ad2-a76f-3c3df64328e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914efa44-fd90-46ba-8ced-0b49fecae218",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72edf84-e7b1-4185-bb52-04c7ea004934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e29ec66-f1f0-47c5-89d2-180d1d08e702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dff1355-994f-40f6-84f1-78f827c4cfbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe1c80d-6ff0-4548-9495-c6f38714078d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a580969-cec5-4633-9c47-2b6e7a468070",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a44ba5-a431-49fc-b2e4-a1ff218e24d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ac4803-485f-4a19-aee7-336d0e29046d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "597df3da-0bc2-4f9e-8c6a-dea4f8060ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0403c80b-9581-40b6-8dc8-ebc9a3e15256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e5bbdb-8c0c-42cd-9236-9e65f95bd321",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb93099-d405-4640-936e-38fa3f378737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af0ab93-e28a-4112-baff-8cf533bdb7f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed306a4d-83ce-4179-8429-cb2c68fd2d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d524a6e-0b1b-4a64-8608-601363562a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513dcc58-cd36-4f4f-b937-6360bd5dfb64",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a658b38a-2ad5-4c60-99ee-745dd6870bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2f613e-e802-40fc-b1f9-12586b7827af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6422b152-e5b8-48f4-a1e6-0690486d7f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e6b98d-6ea2-4a69-a2a9-04f843d967e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ac6c3d-6d0d-44d6-ab32-e2781ae268c9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f60761-0104-49b3-a46e-4f6e1917193a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc170fab-5c10-4123-82e8-f6d2fab9eade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96e811f-3b0b-43c5-9f35-adb9ae414f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad4f06e-a40a-4c93-9db4-879090184c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a653ba-064a-4245-b03c-288bb3251bff",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f6d021-3e87-41a8-a340-03cd3a0d9354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c19f67-e59b-4a24-ab78-6bddccdcf6aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a8e53f-bb20-43af-893e-e7ac1b6d202b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6c4585-63e8-450a-9702-27defe578cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f22a5b-9621-42e6-8293-d8efeef00e69",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fd5b30-ccc3-45c0-a32d-26eedc1cb6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c863f691-7fb8-408b-90b5-837d1a39c4a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98b3178-6d27-4f50-b2aa-e083bbebc3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf10d27-5ffc-49f8-a618-c5a43d7a4c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d2adf2-e78d-47a8-b90e-f5c7f6f3a668",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b2f0e3-40d2-498e-b2a8-086966e6bd0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94f4992c-4f08-48f9-af54-258e1a7cc10d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "312f60c1-db9c-491c-99ae-988e8a25613d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "884982a1-efa0-483b-8a3c-a74ca02a6a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12480aa1-1514-49cb-b3c3-f47f38fb43ad",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1c87ab-4f87-4c71-bad4-0c5b6ff4da18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa5adae-85cb-4ae7-9b0b-7f1e534e7bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa154c5c-009e-4d4f-aa85-38ffbf3dd808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51a53d4-e549-4561-8593-429b69a4ad85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa62176-b531-4405-bcdd-a724296607b8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a904bbed-5a8c-4515-8398-fd06e04042a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e047a3-c3b9-4d2e-bfaf-16fede9473dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad4a096-df57-457e-aae6-af4e654fe32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b99810-99e7-49c5-89e6-b1e81cd81ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44bedafe-8922-4996-8421-aec8670c1d52",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21092efa-8491-4448-afe8-720fbf9fca98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c177070-9d6b-4c06-9323-811ce8ac681e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2566ccca-ec47-40d7-b001-e1a415e3ae0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f86c82b-07e1-4cb6-be97-7424cfbc0e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2218aed1-3b44-4be4-bf29-74ea65ac5910",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fef0dc-b839-4384-b95f-3f74a004b069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9856843-0f89-436f-8e17-60ad7f15bc57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0629970-04d6-4dc2-ade2-a91d725beb03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e423b57-bf63-46fe-a182-29f68c20a8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf09c59e-11cc-4bdb-9bad-bea8fe3c6e72",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a16086-ceb1-4a01-855b-b2935a812725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f349cf3-7827-414a-a55c-40ef0dfdbf87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc97480-1324-4a40-9b55-3a6fb8e7938b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab38a4d-9fd0-422e-9db7-1104fd216bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6baa545-7364-4223-8977-9386a683de5a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858c5c9d-c3c2-4fee-bcef-27eda9862af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cc6f5c-9097-4083-8a71-3a69f9fd33d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8520f8-967e-4928-98dd-d6cfd0722f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3b7984-dc8e-4fac-baa4-60ef06a5c3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b7b319-6971-44cb-80ba-c38daac6b4a0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843b7dc9-f507-4281-95b0-9132f5a23c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5659b5-11f8-4c49-8868-a9fd0d37bb7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c629dd1a-a7c0-44e3-b9c7-8cf541e2ca03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90dc1a68-da84-441c-b82f-066bc0e4766c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3aeaab-3659-4621-ba7e-b59c9c68c5bc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef725de6-732b-432a-81e2-918aa3dc90d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46641fc6-20ed-43ff-90c0-97a3dbf09ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d7acc0-a929-4808-94cc-44f5e7335299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ddb38e4-0435-4516-9df7-e3f864118134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c629d658-c046-4865-8a45-9291fb29e5f7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29b5535-c5c0-442a-92db-28ddc35186df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4d4a16-5355-45c5-bd3c-6f0b0a8f9c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d0dbbf-33a7-44d5-a34b-bf1498266ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0688128-b987-4762-8255-79f827c4f03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c43bfd-636d-4535-a87a-33728e25a17b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8246b1bc-453f-4cae-bd62-54997b750cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8c3657-50be-4fee-81b3-aa764c07cb13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d79edf1-959a-49fa-8176-1aca1e21a680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170846b2-39ba-4280-b7c2-c9f03ba11fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62529f8f-abc9-4551-8305-1d0b297d719b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35575885-7a3c-4b79-9105-a090da9adcb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc232511-2fa7-4047-8e62-942e283afbe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eeb6c60-ea92-4a89-bbdf-a52ba5a37777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e85d77-1a05-4f9e-add9-1db77cb728fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84631f6d-adff-4f03-8925-f64648465a6f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701e13cd-06fa-4fe4-b40f-fcd636efadfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9ca56b-3a19-46a8-94b0-f222ae7404c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9d1459-0724-49a3-9395-1d35acb636f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960bbf21-80fc-4025-9c0e-25ee743d5246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e31305-75c0-44d6-9164-39bba9098dbf",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21943042-a299-40f5-af69-c5fd672f6666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a42ef85-340b-4115-9b2a-65a17e6738ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d633b19c-80e4-4e14-a56c-03715c74379e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432fa9b0-e633-4504-ad6a-60c4a52d4092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cdfd1b-41e0-4743-8373-9fec35010dfc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763ef308-e6f3-4160-b98f-0c0cd522642e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3978692b-bf6d-46a4-bac2-7d2bd3e275f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a6d7f9-b656-467e-b6dc-dddd4e441ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21108e31-6e54-46fe-8c56-efa20198ef77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fa9974-48bc-40db-afbd-954d6d732c9b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff99234b-c675-4587-b27a-6ca02b6ff228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1430763-96c9-4510-8366-2b30b0476348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea78ea83-6c58-4591-bc26-4f64a7c56f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c5408b-6c8a-48ba-8056-5bb60a22ab63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a14e16-c20a-4c4d-b7fc-9fe5fc973c9c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d1d085-dc72-4bfd-9640-8d7e6c35f18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae68c0a9-442d-4f53-a052-b7dc1ffb9e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32259bec-d80a-438b-8d80-1558727a809f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7375f085-ab48-4704-8778-a4206e0a6927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80daf622-edf2-4754-85fb-e521d31b5e1c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365e57fb-435b-498c-ad89-707d6e1637c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187d7099-54e0-442b-913d-7ac27bbecbf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03523c3-5fe2-46ae-9720-38564dd54bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abb52cf-9f42-4a4b-b306-3e1ca9571537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d711e0c3-55a7-4a86-88c5-ca6ddd3da2f5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b929a8-3e5a-42ef-9eee-914e13154eba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdbf4e0e-f8f4-4eda-afb1-ce3dcc1d67e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6432317d-d5a6-4f1d-be3f-d9be058c0eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a5cdb9-da59-445d-84d8-9ea72ee5fad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0798a90-d4b1-48e8-8a3f-951b448b1e5d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b612b353-e091-438a-a84b-f077012326dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d56e7a2-4b58-4236-a24e-ea766066d895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c998d64b-9c9c-47d3-9493-52784bcae8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e675e3f6-bf53-4270-8e0b-5f6e91a340d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a025f03-856b-4408-9370-f4be282315c0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1039d564-c695-4309-9430-ed2ff1141121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b33d3eb-379a-4096-8090-83c4fa3814bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98869fa-13a2-45da-b4c7-ef01efc55c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63e8c5b-0a62-46ac-b7b1-341031da1b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d3994a-a654-4ee8-a6d1-cfb7488fe565",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0d3002-f528-4135-92dc-f7eb4af127f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d38a9bea-0066-47fb-a8cc-7aff40a3115f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a38f0d-7646-419c-86a5-e0dfd2b0170c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e6bf5d-f50d-495a-9f64-96ecb959b7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50b2c69-088c-484d-b3e4-34657ed43d7b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba891191-c003-45fa-89fb-0e88e34ea110",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb78044b-80f8-4fa7-9dd1-cb73a5aeaa82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3ca903-96a1-46ae-955d-2d1d23ccf4fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7805494c-0951-4e47-b949-2f9a566b34b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5133fa-00c5-4610-ae35-6b29bf90ab52",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc682d57-5fb7-426a-9dc3-624f2de49679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72ce4ce7-4e1d-40bd-ba11-52b67aa7db50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98167909-9c57-45e7-bd72-ce84156a41af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347e2cb0-1793-49b4-a951-79ae5197b0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e2394d-712c-4b6e-9343-e127e03ca814",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752945b3-b736-479d-9ef8-1264fbee7e60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29a3b238-32cf-4680-9aa3-1739f195c05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c306b500-41b8-4d2f-8dc7-53749f2e0816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf84155-8cc6-4c50-bc84-e22bc972222d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3905303-48dd-48dd-813b-6e87bb2e2ca1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95917266-8832-4e34-bc00-a9f303690955",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df8bf115-eb02-4ae9-b094-0ed15d39abd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9432702a-c8d4-4a5a-b2c1-be8a49629e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc51d16-a362-4142-b321-d62e48ce6a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca6befc-2456-486b-bdc9-0997ae0ecdb0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8f2488-11d9-4994-855a-ce5e40a030bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "217b1055-1b11-4eeb-8557-fe70bff3a2a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e9925e-703f-4e0c-ac06-fd7c81d4c259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad21c4a-9171-4192-9887-6b9f9efeec9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e27f74-bf10-48f5-bdc0-1652376cefca",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dee1ba2-cef6-4130-8e1f-214bae2e6d05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1355b9a6-1684-4c0d-a8cb-44d7431b17c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a524825-b222-47b2-8a33-c7b2256d80a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75fae79e-ebe0-497a-97dc-ecefed1e477d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af8bf9a-e9fb-475c-bf54-42915a570a57",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea49fb94-882d-45a0-9ebf-480c7909ab43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba24a197-b20d-4574-a15e-5328cc00c5a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33e2ca6-7532-48c3-8436-04dbdc14029d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e65a1d-075e-4593-94cf-3d35e6dcd9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fc5361-4f11-4dae-a9ee-dc71e1a5c5ed",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb1b7b3-c478-4f86-bcf0-a2a281d28427",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad771244-edb5-430a-a7f0-c12815f1126c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e83f26-e26b-4bb4-b8c4-80cea04c9aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5477c5-dd7c-4673-ada7-977e4e635991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d06882-c0b9-413a-9cf7-1613849560aa",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac7fd95-476c-4e04-9673-b0b98600a27c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe685cd5-6aac-448b-97e7-4386431c5ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cae3384-c15d-4131-bfdb-a88b2f30d6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ef5c18-c75c-4758-bf48-5360ef3323a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d18458-bccf-421c-a4bc-61b96c6ca764",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be799a68-0c92-41a2-86b5-e0287571b9c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80fc6b36-571f-464f-8238-a539d8c719e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c35a74-c17c-4210-9503-5c1edfa6258f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04cc0ac-4f20-4a10-84a8-1639f426c6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbefc74-9a6e-41f0-a42d-b00ef15bd924",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8276fa-203f-4be0-86a3-33c7307b014d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c7fee46-c51d-43b0-8aca-64309cc70a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ca7841-c157-4ab4-94e2-964be2d913e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa9ac36-bd4d-4b16-8e84-23bcb3375ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9213e65d-cec5-493e-8a23-a91295fd8159",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c826aaab-50db-4889-8cef-6e70d59773d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d904abe5-1e75-403a-aea2-6c75eb7d9e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02527ad-638d-4f6b-a900-92000e645f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0738c58f-3a70-48b7-adca-411b9dee6b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba33f51-14c6-44c7-917e-7f5187593b48",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f734b52-486b-4bea-ae27-10de00ee420f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "410b810e-430f-40ec-895b-5776e94d0352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ac5da4-d48e-4872-a681-c074dda7fd8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d12a8eb-831c-4251-adbb-c1df04a75588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0aea7c5-60da-4822-9d9c-4bbb8ef0bd4f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376b1732-4f66-4760-9cb4-fbb6ba5372d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "421f54b0-e9c2-41a8-8027-610f6caa0e17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ff156f-475e-4230-a473-f27b49bc33d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f90aad2-9899-4f5d-946f-f64614f84f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a570a7-e107-4a1d-8b8c-d4bd82e593ce",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf1f391-9801-4695-aa54-604fcc08d783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6df2b011-41af-4e9b-993a-8af182086289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62447b63-c66a-4dd3-81d8-f54bea854fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0968289e-37b9-457d-8fab-768201597c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887b813a-84e9-49f0-88ac-a793fc30484c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82c7f37-fe97-49a9-b38f-6beaf2962c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd7ea80d-02ba-4553-808d-4fb51767b4e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3dfeee-1cd8-4e95-afbe-4ab672d60696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be89e5ce-4df9-49ed-95cb-32f2e39f57ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078c479d-0386-4410-93c2-34256c9d02fe",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241d2a06-005b-4244-aca1-254eaa96c43e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d2dcfd5-f97f-4565-b07e-145e96fd14ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91b9fde-dbf9-44e0-a86a-e55e3a2a3d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f779e42f-103e-4d52-9996-70edbd2bc702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef44b506-1843-492f-ab92-e359a5873184",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0667cf5a-e149-4a3b-b8f1-abfc29c68abe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baf6edfa-ecc5-4343-af8a-c715e112cc49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6929800e-1369-4ba1-8900-38364f83f259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3534e805-162c-4efc-9ae2-9fe461adb4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159fef4b-6da6-46af-af79-5a8139f6838c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98331f86-3da3-48f1-95cc-6f6945138d65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f4e0c65-e505-4478-a5d8-058d1ada93b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff124889-8916-4de7-8609-35ebb0b2270b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb75d976-469f-434a-9e16-17544bb0565e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fb4c66-d0a0-41db-a3e2-000a4c3c249c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57b8bbb-bfb1-4b87-a04b-ba35fbe0778b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "018742cd-7707-48f4-a0a7-1a4463833915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c380f1-5fb8-412f-990d-23b508dcf399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf7f765-9abb-421d-ad0d-f2449b361425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8cc55b-5b56-45f3-b779-f13e118cc51b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f0f41c-3ab4-4c74-bc0e-1ea0d4a2d5b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e373520b-42a3-4e7e-8a76-fb023c1fb073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b6f015-eee0-4149-bbd8-241dff9edfc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089f9512-5540-446b-bbd8-bb8cee0d6eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4455ff03-4bb2-4443-b16b-98b0b9fb0e4a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2670160-fb88-4996-8476-384704fb97af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c867d1fe-e031-4847-b0df-f0ae835978c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027f5bb0-f51a-4c4d-a735-7cbdbf25ecb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba38fb0d-3c24-43fc-9c69-7c3d0a44a199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d2d616-70b3-4e3d-a001-e2538c97e140",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924f8e1a-dd4c-422a-873d-ab3222bd4697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2c1b881-2316-4684-ace0-e23bf485d971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d67bce-4cc4-433c-83e4-c8d60d99f2ef",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75586df0-4c47-4ebd-89da-1dfe4069a637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccfe2cc-2bc5-4742-a7d1-b8b3b0bc6761",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39eb40e1-9f71-4d8f-b2d8-c29c115f070f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8607292-e1f4-4743-9bae-027f489d12ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f1eb5e-5279-49e7-b4ec-05ed78d07eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dbe8d15-ec51-4e4b-ba0b-7cdafbe44477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f909b786-a19f-4ba0-96f2-ed78550c8ded",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3459bc2c-7d34-4515-bc58-1583a47b8a03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ab36188-d310-49cb-b018-3676ebaa6cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a178f3a8-16cd-43e3-8563-ace8c3050fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b713d906-3f80-4a10-b4b0-2152aa600a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f4cf57-e361-43ed-85e0-4a802ef00a0a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1afdbfc-5f29-473e-8c1a-3a775ff35804",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ee9bcad-faa7-427c-909a-90359dbfbfc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d820a5c-1aba-4476-ab89-f50a4292a53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1efce56-2e90-447d-acc8-90dea1e5dcd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04be8db-dc49-4b95-a84d-c318e2e34f98",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b460edb5-9022-4237-893a-33149c3b9ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "277bdc8b-ca2a-4336-9efb-b305a7a85969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59801425-c664-431d-98dc-a52decca14f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63874639-3fa9-4bc9-a479-71181f556cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdff10db-f0e6-4114-9794-e782549ef9c3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c071f6ea-7166-4158-b86e-6415e617ff21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70f1a58c-d522-473e-99f4-7c2ad6961780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d80b78-120b-46ff-8ee4-e2fd181613fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f99a9c-1de8-4cb0-8d6b-7359242f6e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9989e79-54fc-4dee-9204-efc5fb18410b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a932926-7b10-4cf6-8557-d1c1bc6d315b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7087e72a-224e-4183-989d-9f0e43641c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab18645-ffc2-4d42-9b93-7c58367095d9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae18f0f5-b339-4ea9-ab2e-6e46ef04454e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f45c3bb-6f2e-44f7-9473-b0780fa193a7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101d7d9a-537b-4666-92a7-a650101cd0e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2597d092-2423-4b15-a201-bb3adad24fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "597c1e77-3d0a-4e5d-92c3-f860ccf3c68d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284ac96a-9aa0-4825-8428-ea6509e263b1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bca1b48-36d1-4487-870d-cf9d363f7df0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5425de8-6f10-463c-b3ef-28c8cc164224"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "540be094-6f6d-47b1-89c0-3ed8371de448",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0fbffece-ff75-48ca-b6b8-5a30f9326df7"
                    }
                  }
                ]
              },
              {
                "id": "f5f6cb83-0f27-4aa8-9ba4-63fd811fe118",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d673cc80-29ec-4ebf-bd13-ef1331d4da3d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8491a05-623a-4134-af96-2b2e75382854",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6232bb61-d378-4a01-b621-409b27789257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20745490-ee89-41f1-800c-e6c07f6c084d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "454d12e3-ce74-4702-bf95-3092963a2ac5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b1d27b7-0bdf-4145-8d3b-60c36a7692a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a512c6a1-c431-4bee-ad18-738bcac61b9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68a07254-bedb-4f68-aee4-cded8bb02ecb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c307505-6ef0-4194-b2a7-e83c0548d4c7"
                    }
                  }
                ]
              },
              {
                "id": "c64f232c-9803-4c2b-ac36-c239d924a76f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8f4345c7-4515-47dd-8bc1-d6922318a897",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fe33db-f414-4bb7-b836-c7b6f01ab9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ced137ca-0d09-45df-9eaa-9d37e89faf22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e44ca5-1da9-4dfc-baaa-84b75ecfaf1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d6f4f3-04bf-44c3-8cee-8ab8840641f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "606bc2c8-a01f-45d4-8bd5-25ae1e5e3b14",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9e72de23-987d-429d-8d87-cc7d0bee2e25",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "afe954bc-4773-449a-b706-8b94f19d48f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2f852090-3de8-4466-b5c5-1b9d6771ad2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "770dff5c-1e3f-44f3-95fc-a9f11f37e07c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "302efe4c-e52d-407f-9b63-8eddfd755c85"
                    }
                  }
                ]
              },
              {
                "id": "1881aff2-7bb1-4aec-96b9-1346628720fe",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6d70473-1670-4dd6-802e-a4fbb7b336e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1482a185-5e3a-450f-a2c9-cb1e89c133bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e7745a0-ff43-48ac-97c6-ddb464562020",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05c01eb6-88b6-4bd9-8d30-ffabad6daafc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de33eb11-c59d-4b93-bd77-6cfdc6939174",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b373892f-bef9-4c58-841b-072e2cad5ef7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1be12dcc-f020-4ecf-92ca-8a2896624592",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ecb327e6-6773-42d7-a2dc-f65524a2ea2e"
            }
          }
        ]
      },
      {
        "id": "ebcba56e-4ea0-4499-844a-fab5caf9dab6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "077550fb-ee68-4124-afc6-0bb74a3b7dc5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fea2a71b-8e7f-4c9b-95c6-ea3e32edea50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37f0edd8-bd77-477e-b9e9-03a4750f7ca5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fa704b-1e61-4b8b-ba08-545399b63ab2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3d15d799-e7af-432e-811a-b6a43cda3f43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3f056b-db2f-4189-a08e-d4e291f0b9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70cbe680-6973-4f22-828d-a2d6d799a9e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "610ad16c-f7b8-448a-a10a-0e68309da818",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e72bfa67-c9e7-4bde-ac64-647a135b75d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a10acb5-476d-42dc-adf2-15a3930ef15c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b022c191-80e1-403c-8f1c-2346197de622"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d52a520-d5d6-4036-a89f-02bbe1091afc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fa88e5df-9d9e-450d-b925-679f965a896b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bdcb3e62-e295-4c4c-a9d6-c0a1bf33861a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9e70c9b-ef21-4d32-a09f-07eb6878e07b"
            }
          }
        ]
      },
      {
        "id": "920cc285-0369-437e-83ea-dd0d4c70b666",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "70d3ad24-fa67-4e9e-86ad-c6faacbe3ed9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f71132b1-73e6-4838-abbe-e2568f890584",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fae71b1e-ac0a-4d48-a50e-3ec6185f0120",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c01152-feda-4c9d-bcfc-8045ad67a9ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e429b1f-0bf7-4a91-8d26-58857cd2bb08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7ba9e7-d657-4ec7-9d58-7d3df3a5c161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2894b5c1-2b07-46d1-a8d8-c50f105132e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a0da688-015f-47b9-8c92-1d3a6cff2dd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8245ccec-d1fc-4a23-b4d9-f5a6003c4605"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77d7dbc9-66d0-4f57-96b3-d5e32050ec5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e67c6f3-2a85-4dfb-b9cb-350a83a54134"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "428b00f9-dcf5-48e6-9393-4087ad18fb8d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0122c9ba-3356-4c0f-92a5-bcb8cd338733"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94dfd9c4-80a3-4d82-a54a-85e548ac9c07",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e199fd9-360a-47f2-8a4a-b9d9a5180d27"
            }
          }
        ]
      },
      {
        "id": "fa3b8582-67a9-4c50-a3fc-3402d6049a2e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "910af4c0-eff7-4119-be1a-b945558702ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7efd4814-6c98-4c64-9e45-e83fbbf3ff89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0fea262f-1ad4-45aa-b466-ce6dc309bb45",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df01925-599e-42b7-b4d1-85fc184179ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2473858c-e3da-44bc-89b2-a51586176e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07873c3-3090-4ef4-8a91-9ee1b1911353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ae75096-b62a-49bc-9538-d9befe472db4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2f8e634-b3cb-4aa4-9b90-a5ba366bf339",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0160e1f-9d89-410b-b753-ab21d1da1ae8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a721d48-0c55-4b55-9f0c-8142b03c5f99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f4b6f7a-66b6-461c-b309-f8ef68c7a7e4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8578e5c2-467c-47f2-8c35-633475eda75f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a7f5e301-bbd8-4cea-8be4-934d41b90b52"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fcbcb835-0ab4-4fb7-ac12-5efdffcbae3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc22baf4-cdfd-4ae8-92bc-2c62f2779d78"
            }
          }
        ]
      },
      {
        "id": "6d6331b4-9289-44ab-bc78-57022a0a8c8e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7dcfaf4-8908-4b70-86c5-6f49ec7ca80d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a616e081-d080-447d-9dba-1aa54d9424c0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "951826ea-3cb0-4ad3-b3cf-a8f0e0275f34",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c63f722f-4c27-4b6f-9ce4-20e386be8d0c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dde9f534-6afc-4bfb-ab2d-518d5338a7a7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.873239436619718,
      "responseMin": 3,
      "responseMax": 276,
      "responseSd": 22.803465005709352,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692059522443,
      "completed": 1692059537786
    },
    "executions": [
      {
        "id": "f97b27ef-1058-4c73-822c-d90a10397449",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "07e54243-dd40-40c4-b40e-6dfc4e0c2ef4",
          "httpRequestId": "882e24fe-8666-4c11-bf89-29093bbb46bd"
        },
        "item": {
          "id": "f97b27ef-1058-4c73-822c-d90a10397449",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ea03072d-c054-4aaf-83d4-09871995fd53",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "a53ebf65-a8de-4510-9e80-07b382664ac0",
        "cursor": {
          "ref": "14cdf5bc-c316-4752-af04-aa0afc3f51df",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1a29f672-35a8-4eed-8dfc-db895e13db24"
        },
        "item": {
          "id": "a53ebf65-a8de-4510-9e80-07b382664ac0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "79587f88-7865-40f9-ba8c-9af1f40de8ab",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "2c232ff6-a34e-44d0-9f0f-367a83036494",
        "cursor": {
          "ref": "b59f87aa-ecb4-4e17-811e-1dfc8d6fbb22",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "07e9cde0-9a4f-45d1-a7cb-16a0f8b49886"
        },
        "item": {
          "id": "2c232ff6-a34e-44d0-9f0f-367a83036494",
          "name": "did_json"
        },
        "response": {
          "id": "d00dac1a-fb37-470a-b03d-abbd762009e9",
          "status": "OK",
          "code": 200,
          "responseTime": 30,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2eaff7-2df2-4029-8d67-e3608f2daf54",
        "cursor": {
          "ref": "c69c2b3a-149e-4fe6-a35b-ccc8c0dadf28",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eb97ff14-8e0e-4d4c-89ee-cb4c8ab293e5"
        },
        "item": {
          "id": "0f2eaff7-2df2-4029-8d67-e3608f2daf54",
          "name": "did:invalid"
        },
        "response": {
          "id": "fd1245b5-77f2-4aff-860b-8eadeba02628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2eaff7-2df2-4029-8d67-e3608f2daf54",
        "cursor": {
          "ref": "c69c2b3a-149e-4fe6-a35b-ccc8c0dadf28",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eb97ff14-8e0e-4d4c-89ee-cb4c8ab293e5"
        },
        "item": {
          "id": "0f2eaff7-2df2-4029-8d67-e3608f2daf54",
          "name": "did:invalid"
        },
        "response": {
          "id": "fd1245b5-77f2-4aff-860b-8eadeba02628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee68de2a-8bbc-4c40-8a3f-6b70a0dea276",
        "cursor": {
          "ref": "aaf00ab2-480b-4a02-a503-f290d210f65f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5edd0785-6d10-4fb3-b8a2-b2a3fc3be76b"
        },
        "item": {
          "id": "ee68de2a-8bbc-4c40-8a3f-6b70a0dea276",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "70239e75-33f5-43c5-9c94-60bb12843f67",
          "status": "Not Found",
          "code": 404,
          "responseTime": 46,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881526bb-1869-431d-83a6-dc4a0b18d589",
        "cursor": {
          "ref": "1dc6b408-882d-40eb-adf1-b867afaea012",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "badc1638-3398-4e65-ad67-bcc5bf91c3fb"
        },
        "item": {
          "id": "881526bb-1869-431d-83a6-dc4a0b18d589",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c256c81b-10f5-4398-8024-e988f2e3c293",
          "status": "Not Found",
          "code": 404,
          "responseTime": 6,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86775601-35f9-4c03-a448-bcda15fe8225",
        "cursor": {
          "ref": "ccec04ea-3375-4058-b3b7-1a8ce15fa493",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8d6317f9-0983-4940-ace1-e62bf9946f28"
        },
        "item": {
          "id": "86775601-35f9-4c03-a448-bcda15fe8225",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "520af5fa-69fc-40d8-b63e-9fc15702de60",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab11120-ef62-49fa-8070-5d588c60b9d9",
        "cursor": {
          "ref": "61026cb2-8be6-431c-a960-287f7c73221c",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a2a432c0-0c7c-4c34-873b-ceb4fc33565b"
        },
        "item": {
          "id": "3ab11120-ef62-49fa-8070-5d588c60b9d9",
          "name": "identifiers"
        },
        "response": {
          "id": "0746142e-8a68-4188-9fea-7a52ea476050",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23055437-f52f-42ba-99bc-fa2771ef35b5",
        "cursor": {
          "ref": "a5807b94-ee0c-49d6-a210-8af023b1aee3",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "645e08be-c011-440a-aa96-00033114ef46"
        },
        "item": {
          "id": "23055437-f52f-42ba-99bc-fa2771ef35b5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b04b4bbf-79fe-4d29-925a-598f25541987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6995a91-287e-4102-b55c-9b5fd0c57ff3",
        "cursor": {
          "ref": "356c4c2c-55b5-4a72-8fb9-47ae944f6196",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b25beb04-4c94-4006-81dc-1addbba91130"
        },
        "item": {
          "id": "e6995a91-287e-4102-b55c-9b5fd0c57ff3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "20406ce6-68e3-4ce8-9716-12995cd9709f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af5d404-2615-411b-8b5e-a691cf481389",
        "cursor": {
          "ref": "df44e99c-a6b6-4e42-a887-b7cb9514bfc2",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b0c9fe41-cf4d-46ca-a091-d98c8b3fcbd8"
        },
        "item": {
          "id": "3af5d404-2615-411b-8b5e-a691cf481389",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ec9868d5-4c7a-4635-ad8b-9a6e1e96d43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a0ff92-fc1c-4126-8954-7b399505bfc6",
        "cursor": {
          "ref": "572dfc3b-9074-432b-977f-6e02a71f5222",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a5810306-3fef-477a-b49a-ef4c7883765e"
        },
        "item": {
          "id": "32a0ff92-fc1c-4126-8954-7b399505bfc6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f317b74b-c543-4db4-880d-3db77b6379fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe1ebef-e014-40af-8fb4-0fac49a51600",
        "cursor": {
          "ref": "5d8ae150-45a9-4a7a-ad68-2735e21463c7",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5e8e0cc9-dc44-4ff5-9e2c-753c5dd0d697"
        },
        "item": {
          "id": "ebe1ebef-e014-40af-8fb4-0fac49a51600",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "aa16ec25-2fff-4d45-afbe-01bfd7c58e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876d4075-7b3e-4f23-8ee5-071eea12a951",
        "cursor": {
          "ref": "a64a13ce-d606-45f9-b2ee-fa5f34f06a87",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "73d753dc-d19c-475a-baf3-f71259b96fa9"
        },
        "item": {
          "id": "876d4075-7b3e-4f23-8ee5-071eea12a951",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "93ad7620-3879-455a-910c-db6a443af39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0131a63f-9d2a-41a7-98f4-b5b66caa7b19",
        "cursor": {
          "ref": "2e7b50dd-f9ff-44cf-ad3e-50ca382517c5",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "094fa20e-4a87-42ae-91d8-11895e60b04a"
        },
        "item": {
          "id": "0131a63f-9d2a-41a7-98f4-b5b66caa7b19",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3ba9a1b4-c9b6-42fb-81ec-2f748e48b02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf55535c-7f61-4841-b9c4-03b9fb6c7dfb",
        "cursor": {
          "ref": "0797575a-b134-40d0-bf21-66262e29d9ad",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c8d255f9-809d-4ca9-a2db-5b4748afc9e1"
        },
        "item": {
          "id": "cf55535c-7f61-4841-b9c4-03b9fb6c7dfb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "109b2a56-bad3-4708-803b-975d41401610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dd805c-b647-474a-8f19-a9b18cba2719",
        "cursor": {
          "ref": "bf1ee0f8-c1cf-4276-a214-8bb5822f1149",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8b697dd6-d901-483c-bad4-385daba9cb3d"
        },
        "item": {
          "id": "c5dd805c-b647-474a-8f19-a9b18cba2719",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "261b6225-fa04-439c-8bb4-696d232501e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086ba319-a360-4531-a3e7-f8ba7e431f89",
        "cursor": {
          "ref": "884bb2f8-bd8c-4bb9-a9ba-5ce296af86c1",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4ed73399-1369-4e7c-a597-7b8202cc2163"
        },
        "item": {
          "id": "086ba319-a360-4531-a3e7-f8ba7e431f89",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "af2ad067-0ac3-496b-86d2-53cb0ad156a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e830eb2-9c0f-4a16-9c46-6918a9eeb885",
        "cursor": {
          "ref": "89a235c6-1ab5-43d0-859b-317ab9cc4460",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4d340731-f031-4d0d-9183-a4ebca1c624e"
        },
        "item": {
          "id": "3e830eb2-9c0f-4a16-9c46-6918a9eeb885",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ce6d5e37-5929-40fd-8525-038e1eb22909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077c2c37-5792-4fd6-ab89-cbfe9fe7704a",
        "cursor": {
          "ref": "c5ef9999-87db-441e-aa32-1c9170e39d68",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ed494841-cedb-44eb-8873-62510960998f"
        },
        "item": {
          "id": "077c2c37-5792-4fd6-ab89-cbfe9fe7704a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6cabb7c3-00e9-4ba9-a32f-ac9ecff7fad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907d5071-e725-40e7-b598-1cb422330240",
        "cursor": {
          "ref": "2399085b-6bb5-4ed4-b47d-88aef7d20356",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "46441202-9d04-46d6-bdde-32fd930bfe78"
        },
        "item": {
          "id": "907d5071-e725-40e7-b598-1cb422330240",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f579597c-fb78-4f63-8f53-7ba9e0a4e644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5474fb63-fdcd-44ec-98cb-f2770f08a2e7",
        "cursor": {
          "ref": "f53516ba-8935-4821-8ed1-2dd9de5c6e78",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "30815a25-fb23-4530-b079-3daef070e3c7"
        },
        "item": {
          "id": "5474fb63-fdcd-44ec-98cb-f2770f08a2e7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fbc79f73-84c1-40fd-9140-dcb4532e6931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d016ba-2899-4233-b200-b5b8a93edb5d",
        "cursor": {
          "ref": "cfdcf786-ed0d-4e2a-95ec-d6ff25a0e17b",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7050e951-e713-44f1-849c-b77ce65411bf"
        },
        "item": {
          "id": "d7d016ba-2899-4233-b200-b5b8a93edb5d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "406ae78e-bbb4-4efe-9730-51d516e8beac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b815581-f489-4f41-bdf4-a0f25d331015",
        "cursor": {
          "ref": "fa39bda6-7334-4824-917b-b74ecc2d22fe",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "34e9e04e-3c22-4a34-abc9-e41851fa6f85"
        },
        "item": {
          "id": "0b815581-f489-4f41-bdf4-a0f25d331015",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "27ee1b13-8202-4ebb-89c0-a985d17561da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f43f1f-f31c-4fef-aa10-1d555df7c89e",
        "cursor": {
          "ref": "b160d429-5ee5-4d72-817e-1b0164f2cf5e",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3774d793-c0bd-408b-bf98-ea46b34f37b7"
        },
        "item": {
          "id": "f2f43f1f-f31c-4fef-aa10-1d555df7c89e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b2b3df2f-fb59-4ca0-836f-6ea60dfb5ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce366fc-b7ee-4db0-a7ab-72b5fee601ea",
        "cursor": {
          "ref": "19d7e060-19de-47be-b54e-57c27965eda2",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c0341fe1-56eb-4b04-a199-3b50f376e820"
        },
        "item": {
          "id": "3ce366fc-b7ee-4db0-a7ab-72b5fee601ea",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f6cb3b20-42d4-4704-9275-2cf112ac5c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3ed074-64c4-4769-9ca1-d930cca46ad2",
        "cursor": {
          "ref": "a2090aff-7315-41f6-a8bc-e268351c4104",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "51cc8906-2c3f-4d7a-b213-824739acb77c"
        },
        "item": {
          "id": "ee3ed074-64c4-4769-9ca1-d930cca46ad2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "258d78af-bdbd-4904-b539-63725d0e3db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b01930-c47c-4a7c-abca-cd6ca355137e",
        "cursor": {
          "ref": "e18f389d-97f8-422d-bec8-aeda209fd871",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9fa292bc-ac5c-42ad-980a-25f9141d4125"
        },
        "item": {
          "id": "69b01930-c47c-4a7c-abca-cd6ca355137e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c6807dde-d892-43d5-bc85-cec70e33b3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204f59ff-91ac-4efb-9d2b-9f02fa706783",
        "cursor": {
          "ref": "d640bb11-2676-4e2f-b530-f213a9398b66",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "37529aa0-cafb-4470-aa6f-acf96e11637f"
        },
        "item": {
          "id": "204f59ff-91ac-4efb-9d2b-9f02fa706783",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f10c55b4-8d75-46c1-a27a-2b727b949ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb3562d-062a-4f1e-aa67-1dd3b0b96783",
        "cursor": {
          "ref": "67a54123-12a2-4b9a-869b-eea96ef8d625",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "807a7453-9f40-4b9a-8a30-aa3fa79aa2fe"
        },
        "item": {
          "id": "eeb3562d-062a-4f1e-aa67-1dd3b0b96783",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0cd95404-4745-488e-8dc2-b3a937b3b6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ea8557-7151-4abf-9231-f39ae9f191dc",
        "cursor": {
          "ref": "49c2ce85-7253-49d9-9a8c-dc674f7be856",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ba0cdb92-5c24-4279-86ee-ce06ace3762f"
        },
        "item": {
          "id": "68ea8557-7151-4abf-9231-f39ae9f191dc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "85f5e135-5641-41c6-812c-e38dc3627df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356d4dff-d5a1-4468-957b-a7bf6521d355",
        "cursor": {
          "ref": "50850d93-b528-4915-85a0-1226ff560798",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "cbe0db7d-f32e-4525-906b-9641e7381c9f"
        },
        "item": {
          "id": "356d4dff-d5a1-4468-957b-a7bf6521d355",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "534c211f-eb99-4ee9-9f72-5cc4fb80a00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99df9d40-d510-4cef-8c5b-f98ba7b67ad3",
        "cursor": {
          "ref": "96c3c746-df44-441a-976a-42ac0ac73896",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "083bef1c-1ad6-40cb-b185-432465d1c7fb"
        },
        "item": {
          "id": "99df9d40-d510-4cef-8c5b-f98ba7b67ad3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f8de1df7-0c20-4449-901a-27e8d76d9735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653783f0-7aad-47ad-970f-b76031f6c2a1",
        "cursor": {
          "ref": "53aa42a1-2aac-426b-b609-7a5c703e7f0d",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0a6597bf-3ce1-4556-80c2-6ed0590370dc"
        },
        "item": {
          "id": "653783f0-7aad-47ad-970f-b76031f6c2a1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "54b5c8d7-fe72-44da-9e4f-dfc4f811cb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e0de0c-3554-46cf-a48a-91dad50c9d8a",
        "cursor": {
          "ref": "ea7904cf-b825-43a5-8a61-a2255af08882",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "760c98e2-9fde-49ec-bed1-b25f698edd2a"
        },
        "item": {
          "id": "41e0de0c-3554-46cf-a48a-91dad50c9d8a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cf3e8f2e-aea7-49f1-b6ed-ddc837c55bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f845ce0d-f593-426a-a22a-12eab394cb08",
        "cursor": {
          "ref": "0eab2945-a98c-4a7d-a735-ee3e7c5c13e5",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6c9a9a92-7aad-467c-bd4c-eb0641c2fd38"
        },
        "item": {
          "id": "f845ce0d-f593-426a-a22a-12eab394cb08",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "950ee302-7642-49b2-83f7-85b3f6c6ff1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e941b572-1258-44ef-ad59-2100e9c36d36",
        "cursor": {
          "ref": "87000984-c885-4d6e-a881-a22b13b6fa00",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "effedc79-8c43-438d-a38b-9784feb148e1"
        },
        "item": {
          "id": "e941b572-1258-44ef-ad59-2100e9c36d36",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f924f0b7-6039-4ac4-bef5-8c8780c09852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8a36ed-d178-4a81-96c5-98428d2cc374",
        "cursor": {
          "ref": "b8259c30-54f6-4a9c-86bc-c043520d8419",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4c27b6ab-f8ee-4c10-b200-7cf57342b25e"
        },
        "item": {
          "id": "4c8a36ed-d178-4a81-96c5-98428d2cc374",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ae40b91c-83e2-4b44-ad1a-64883c4d2504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb54c710-ce30-4f65-9b3a-523775798815",
        "cursor": {
          "ref": "dfbcf3a5-9205-48df-88ed-cda68ce420ed",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "42c173ae-0901-4f49-a76f-159b71adfe54"
        },
        "item": {
          "id": "bb54c710-ce30-4f65-9b3a-523775798815",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d605ab87-fee8-470b-b010-120ec2a3c94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809d2ab2-3b2e-4d4d-84a4-a975b7e18e36",
        "cursor": {
          "ref": "369e7de4-624d-4e76-bdbe-2ffe30303642",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "cd763e84-0784-47f2-9487-a2d2eb69598f"
        },
        "item": {
          "id": "809d2ab2-3b2e-4d4d-84a4-a975b7e18e36",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "31176b84-b45d-4e7e-bf5a-1e5a4a418e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1d1703-e7d4-47f0-8cd8-9aec972d297b",
        "cursor": {
          "ref": "828a2990-4797-46b7-a8f1-98eaa25f215d",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d6bfedae-8d0f-4cd9-b2bd-ebbf6aa8baf8"
        },
        "item": {
          "id": "4b1d1703-e7d4-47f0-8cd8-9aec972d297b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "eae32218-fe79-40ed-91b6-50a1219d1e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75facf05-5f26-4814-aa48-ece8acf3964f",
        "cursor": {
          "ref": "61e8bd90-43d4-49cc-946f-10cf95615243",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "81eb0601-9f11-4720-af32-f56545b8ef5d"
        },
        "item": {
          "id": "75facf05-5f26-4814-aa48-ece8acf3964f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2fdf02cd-a22f-4987-b4e4-44950c190bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92352e0-a4f7-4cd5-9194-ee186c4b7a59",
        "cursor": {
          "ref": "1794b78c-5370-4099-9817-75ca38d44549",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2bf736f1-07f4-4879-ad42-d7f8b518964c"
        },
        "item": {
          "id": "e92352e0-a4f7-4cd5-9194-ee186c4b7a59",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fd497196-5560-4f3d-a057-abb742caaa1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf6be78-4495-44ad-bd1b-a6b32e2ffcc4",
        "cursor": {
          "ref": "0ac8a19b-ee00-4709-a207-fd7ed5df12c0",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5a223d5c-a89b-494e-a7f1-2f3935fc3c35"
        },
        "item": {
          "id": "9cf6be78-4495-44ad-bd1b-a6b32e2ffcc4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "132c5cc5-1588-458d-abd8-2f4b56cf9d7a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 25,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36db99e4-8c2e-4879-a7ab-376b6dc3f273",
        "cursor": {
          "ref": "1f31191d-035d-4e6c-9ea7-938dd13c4b7e",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9b96449a-f282-47c2-933c-8c37cec737d9"
        },
        "item": {
          "id": "36db99e4-8c2e-4879-a7ab-376b6dc3f273",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "916a392f-68be-43a2-a01c-0f7c698ac8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed853ede-75da-4bc7-8eb8-7228ea59a517",
        "cursor": {
          "ref": "3e34fd5d-cde6-46a2-91e1-8d7db68187fe",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a6a1d44a-f532-41a4-a3d8-0509fefb51b8"
        },
        "item": {
          "id": "ed853ede-75da-4bc7-8eb8-7228ea59a517",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "270af435-f55f-4198-9a59-679f73d239da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3105ac82-2b79-4c39-af29-53a9ff98ab15",
        "cursor": {
          "ref": "48832683-7843-4e00-936e-3f7e61bffab0",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "38ae0612-dc78-4e6c-bf87-7b66934fe576"
        },
        "item": {
          "id": "3105ac82-2b79-4c39-af29-53a9ff98ab15",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1b2c407b-07dd-4e60-873c-d4d2ab9c501e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74650674-fe78-4bb5-93cc-5f8a45e70207",
        "cursor": {
          "ref": "5e6bc2bc-7edd-45da-b5a2-6d97331a6113",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ca7c8cd5-4df4-4e37-ba9d-14892e881bb0"
        },
        "item": {
          "id": "74650674-fe78-4bb5-93cc-5f8a45e70207",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6d3b3238-459e-4a79-bb5a-7cf0c1a98598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f22de1-fa38-4c2c-b30d-a4aeff143a34",
        "cursor": {
          "ref": "e40911f5-c2cf-493e-8407-3d9f6397bf1e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2b4edfcf-7c2e-46ad-8c04-be6845a7a0b2"
        },
        "item": {
          "id": "34f22de1-fa38-4c2c-b30d-a4aeff143a34",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5bd4d53f-4b5a-4a4c-aa8a-0f6795351eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364022fc-6f76-4dff-a946-1c3332b92001",
        "cursor": {
          "ref": "27b0f831-e575-4a15-be0d-af0199b9d679",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8fbdcf01-d021-47c6-8240-2a532eee63cd"
        },
        "item": {
          "id": "364022fc-6f76-4dff-a946-1c3332b92001",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "99780c03-1bf0-4642-b392-54c662187fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00f4d51-0972-45dc-9d74-fd47c791e24d",
        "cursor": {
          "ref": "47608c7d-ed20-4dc5-bb5d-3dc52e1b776f",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c54155d4-0575-4e9d-86f2-e17168e068bc"
        },
        "item": {
          "id": "d00f4d51-0972-45dc-9d74-fd47c791e24d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "afefc549-c658-4c35-bfe7-58837bf035f1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069a34d7-2fdf-4f09-b3ed-65af2fcfa37e",
        "cursor": {
          "ref": "32362c58-1219-473d-bf2f-7713fb7f1e3a",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "859e6632-c0ce-441d-a406-9052253ff613"
        },
        "item": {
          "id": "069a34d7-2fdf-4f09-b3ed-65af2fcfa37e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5dd8abab-f945-40c6-909c-196411eecc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddf0226-8761-485f-bc9c-5792937c5e5e",
        "cursor": {
          "ref": "d9c89d8b-602e-4ba1-b10e-1d249ed70c25",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "845bde60-8caf-4746-8d07-b7374a41423f"
        },
        "item": {
          "id": "eddf0226-8761-485f-bc9c-5792937c5e5e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "33590884-ae2c-40bd-ab11-2187fdb67929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fa8416-a8b4-441c-b01d-628b3647acc7",
        "cursor": {
          "ref": "9bfb1dcf-e56f-48b4-aebf-3540c2c3a2f3",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e6855302-5956-4733-9310-c045ce95ad3f"
        },
        "item": {
          "id": "78fa8416-a8b4-441c-b01d-628b3647acc7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "eed30831-da94-481e-baf6-2ac210cec4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9505020-68e0-4bb7-a711-7d100c398c1a",
        "cursor": {
          "ref": "e5e3441c-2bb1-4962-91f9-cc0db3e4a035",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "44ddb97e-fa1e-4505-86b6-4872cca5046e"
        },
        "item": {
          "id": "f9505020-68e0-4bb7-a711-7d100c398c1a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ef03fc4c-9a28-4b7f-8db4-2844bef9ef10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ba6a4a-f66a-4854-82f8-a0da9424d3c1",
        "cursor": {
          "ref": "c70ab36e-f1e7-493d-b01d-2cd4f2cbbbd0",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "775e9d5c-7c0c-40cf-b2dc-0e811b9df06d"
        },
        "item": {
          "id": "b5ba6a4a-f66a-4854-82f8-a0da9424d3c1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cb059925-035a-4f22-aa59-a952e4c358ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1a980e-7e73-4414-8d77-216493f1a23b",
        "cursor": {
          "ref": "105feba6-8e66-4756-aa7f-58f19e5d8d57",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "56483bad-051c-4ec9-8e80-23a963a1148d"
        },
        "item": {
          "id": "fa1a980e-7e73-4414-8d77-216493f1a23b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "da2c1be4-4db8-4576-950a-a502b870170b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b7d766-62d9-4179-a304-eae0977489e7",
        "cursor": {
          "ref": "5cf973a7-008b-463d-9075-3161de17c157",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c576716c-7e20-4f8b-bb14-c93746c946d8"
        },
        "item": {
          "id": "27b7d766-62d9-4179-a304-eae0977489e7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d88c7bf7-a9de-429b-8423-ecf43a35a94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadcb226-dc9b-483c-84c6-f4ab3edc66ab",
        "cursor": {
          "ref": "de867d88-8345-410d-bde0-cb30fe91ad6a",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f9490cba-d12f-4339-9a21-2643e0b7d169"
        },
        "item": {
          "id": "eadcb226-dc9b-483c-84c6-f4ab3edc66ab",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "04d15f5c-709b-4d04-b24b-aae4e18ea5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92c98c2-e39b-4453-993d-6cec42219a1c",
        "cursor": {
          "ref": "a1be4217-d37a-44f9-bc9b-057681668acf",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2e6335b0-b037-4fa0-8a3f-a78913d99695"
        },
        "item": {
          "id": "c92c98c2-e39b-4453-993d-6cec42219a1c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fa1d92dc-6657-4604-8c0d-dc1ab374a73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230f5ee7-483d-463b-9736-03927c131494",
        "cursor": {
          "ref": "5c8c4267-f9d1-450d-a8ef-14659cb0170c",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c3ee87af-2579-4084-9a10-50091ca319a5"
        },
        "item": {
          "id": "230f5ee7-483d-463b-9736-03927c131494",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fa12c438-4358-4074-847a-d78dd81b7606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17cea97-96c2-4e6e-acf5-06568942b45a",
        "cursor": {
          "ref": "177ce1b5-98ac-4aa2-b02b-4d3a08f1f9f2",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0093f397-c51d-4ee9-9553-e0377b6e2176"
        },
        "item": {
          "id": "c17cea97-96c2-4e6e-acf5-06568942b45a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fd5e15b9-ccc6-4489-8e26-43e05df26169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579a17d6-99f2-4464-ba9c-9ee85b270452",
        "cursor": {
          "ref": "8aa57245-697f-4aea-8a42-06e504c60a17",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "254eeae2-7701-49a5-8e0a-a82470416ab7"
        },
        "item": {
          "id": "579a17d6-99f2-4464-ba9c-9ee85b270452",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b3c8c55f-eac5-469d-bb03-757c492c6317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b926906-d8cd-4266-b995-fd685fcc891c",
        "cursor": {
          "ref": "2f9e5c53-8a98-4528-8f5f-e6c76e019e97",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "50c5b202-0ee9-4cb6-b3aa-1cf1bc48d852"
        },
        "item": {
          "id": "8b926906-d8cd-4266-b995-fd685fcc891c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1d14476a-fdd4-4ca9-ba89-965025ee5668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30c16ef-1ddd-4aa2-81de-d5388646562c",
        "cursor": {
          "ref": "4c9b8986-78c9-4928-81fd-965012bda474",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "20bb4600-0cc5-473c-88d3-9a15e18b7c0b"
        },
        "item": {
          "id": "e30c16ef-1ddd-4aa2-81de-d5388646562c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "75a3f07c-61db-45f2-b1c9-c50c5d63b069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b84690a-04c5-4dc5-9bd3-9e383264016e",
        "cursor": {
          "ref": "9f0e0087-d313-4284-8a8c-7d2b8d62ab12",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "06b2b06b-d73f-4ff8-b4e2-bb5dc7d91a1c"
        },
        "item": {
          "id": "2b84690a-04c5-4dc5-9bd3-9e383264016e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bb77b9ad-6990-4828-8f93-9fb01177094b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf24585-e339-4a53-8005-c6e4e9a7fd49",
        "cursor": {
          "ref": "a9c5996d-2605-4589-b246-2495be53c840",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "27043490-4efa-45ec-b646-6611047b8490"
        },
        "item": {
          "id": "acf24585-e339-4a53-8005-c6e4e9a7fd49",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "76266634-95d9-4f5d-b800-f94ce2034c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a13db69-3b8e-4193-b289-6e075947aca5",
        "cursor": {
          "ref": "3f0d8c45-6314-476d-927d-d468b3f997a0",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "81ba858f-8125-4735-9b9c-c3b26f2c10fa"
        },
        "item": {
          "id": "7a13db69-3b8e-4193-b289-6e075947aca5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "eb0aa587-6cdb-4394-a473-b0b859b010a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f24f93-fccf-496b-bec5-d134a1fa44cd",
        "cursor": {
          "ref": "0c0557ea-5806-46b0-9764-f785fab99107",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d75b7539-cc88-4af9-93a3-e88dfb03c3f0"
        },
        "item": {
          "id": "30f24f93-fccf-496b-bec5-d134a1fa44cd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a604ceed-1093-407f-836e-fe1d49732066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221f5e60-c7ca-4ae0-b8e6-821a4e068a84",
        "cursor": {
          "ref": "fd441130-3404-4773-b0e4-65fe068b9bca",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e3ca0d47-d767-4619-86fd-a08a3917962d"
        },
        "item": {
          "id": "221f5e60-c7ca-4ae0-b8e6-821a4e068a84",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5f66752a-ce82-4c60-9e1a-381ad80c6c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc012b2-1443-4399-b955-55d21c82f372",
        "cursor": {
          "ref": "4884f084-33bf-4f1a-a896-0abdc7f4d7f7",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3fc4c5b7-20f0-4f8f-9bf5-a86a79b1c8ad"
        },
        "item": {
          "id": "ccc012b2-1443-4399-b955-55d21c82f372",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6f15ef8a-1406-443d-905c-599eff306eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6654896-c1f6-4b8e-a693-9cc9fe516cde",
        "cursor": {
          "ref": "426f8175-b8f6-4566-85b9-e122bf0a6e86",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7475a5bd-12d1-4e4e-87d4-d294bb0255ac"
        },
        "item": {
          "id": "e6654896-c1f6-4b8e-a693-9cc9fe516cde",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cbe23bf6-3493-491c-a8ec-e875c21b33af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c813c4-34f9-48d0-86db-d1a0b84f57a2",
        "cursor": {
          "ref": "ecc1761b-3d33-4f65-93d9-29244eb00ef4",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b2283a25-56aa-4eba-8c7c-7f1187b9e6d3"
        },
        "item": {
          "id": "b7c813c4-34f9-48d0-86db-d1a0b84f57a2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f6834e60-21b9-4445-9061-c7c646009114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309cca84-b619-48c2-bb7c-113fda1d5fec",
        "cursor": {
          "ref": "231a9214-9b9f-4d40-922b-45b41297acc3",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f33c61e6-59b2-4ae5-8763-af3d01ecc712"
        },
        "item": {
          "id": "309cca84-b619-48c2-bb7c-113fda1d5fec",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f0308296-7b9d-43d6-b43f-9412287a4482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c775a420-db19-4788-9848-c15b8e7bff33",
        "cursor": {
          "ref": "e164140b-57cf-4b38-862e-6c11b011ff64",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "18f42b80-f45d-4732-8536-34fb91a33e80"
        },
        "item": {
          "id": "c775a420-db19-4788-9848-c15b8e7bff33",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8f9c9164-968c-4c12-8c4d-0f976c38a064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa11338-c451-4057-9c55-035210183746",
        "cursor": {
          "ref": "ca0a3ec7-60f0-4d06-9153-c80698645e08",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "82dbd798-6cce-4107-8fea-f7e31447cf70"
        },
        "item": {
          "id": "2aa11338-c451-4057-9c55-035210183746",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "27beec15-2ae0-4038-b57f-4aeb85c105b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a21daa7-812e-4277-92d4-b78e718349c4",
        "cursor": {
          "ref": "6d7de631-c0a8-4348-82c1-115da7b6f3ab",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e1f13b2b-2a0f-4ffe-a781-7af50ef32f87"
        },
        "item": {
          "id": "7a21daa7-812e-4277-92d4-b78e718349c4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2270be21-2102-4ef3-a3be-44c8f99e7165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c262c87-3e78-4243-b7a5-ee8a6233a38d",
        "cursor": {
          "ref": "2c283b0a-2f69-415a-9d95-8ae874ad7501",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d767a973-fa28-41e2-8542-7abdce69240d"
        },
        "item": {
          "id": "1c262c87-3e78-4243-b7a5-ee8a6233a38d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bfe9836e-a5b9-4261-b9ff-9a0d35858bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf12de72-d8d5-4a94-9009-37f0c43fa10f",
        "cursor": {
          "ref": "5f85a412-f710-49fe-8750-ed838ff11c12",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6f640838-fae5-49cd-bd60-21a20e027669"
        },
        "item": {
          "id": "bf12de72-d8d5-4a94-9009-37f0c43fa10f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7a8fd824-0774-469c-b664-a1dd9b202915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc6297c-5d44-4368-911d-5d8ac2912d31",
        "cursor": {
          "ref": "2a46f4e1-2c3c-4aa3-a03e-69b055c3768c",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b674d729-b37a-4067-8b3c-1dde7cfaeaa9"
        },
        "item": {
          "id": "fcc6297c-5d44-4368-911d-5d8ac2912d31",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8440222d-94d2-449e-a8e3-25bb66319210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a725c9f-a8a5-4a06-b547-550da252c52d",
        "cursor": {
          "ref": "9010f13c-2bfb-4192-9f47-dbbaf34e55b7",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "68493f6d-6f65-494f-9b2d-3d10f14535c4"
        },
        "item": {
          "id": "2a725c9f-a8a5-4a06-b547-550da252c52d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "957c0665-3e96-42c0-b649-deec6056035f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b85c92-bc22-45ca-8aad-090e4ab5d240",
        "cursor": {
          "ref": "84dd8985-33d1-4a1b-8404-80548c9d1919",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fbc099ca-b431-4c7e-947a-479277bb1dfe"
        },
        "item": {
          "id": "33b85c92-bc22-45ca-8aad-090e4ab5d240",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6a6e10f0-a7a7-4bf7-b1ae-19d350a78446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692503ce-2cf5-4279-8a62-3052dc918722",
        "cursor": {
          "ref": "ea68ec9c-fe77-4c03-8b42-de9d478f8ed6",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "33cb6c5a-e9ea-4e93-8f6d-fd419557851f"
        },
        "item": {
          "id": "692503ce-2cf5-4279-8a62-3052dc918722",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c79390d4-8a06-41d2-91ce-8a13040d5dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4387ef44-ccc1-44bf-bbf6-e6d0d037abae",
        "cursor": {
          "ref": "59b97828-2c13-4b60-b271-acf9fd526317",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2ffa4499-b90e-4b37-8361-c52cee26eca0"
        },
        "item": {
          "id": "4387ef44-ccc1-44bf-bbf6-e6d0d037abae",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "dd1c115e-a184-4dc5-b27b-747ae538d5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813a2c87-3efe-43b4-9e5c-788fe75e31c1",
        "cursor": {
          "ref": "5ec719d7-39f3-4867-8c08-ca08d053a770",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "be299c91-576e-460a-a7ae-296f68a76582"
        },
        "item": {
          "id": "813a2c87-3efe-43b4-9e5c-788fe75e31c1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6a5ca289-e6a7-43d9-a141-2b37e7448e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2f33b5-9d56-4c09-be6a-eee4d287f1ac",
        "cursor": {
          "ref": "cc8a97d5-9ad3-4079-945b-f6ad640dc304",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7f12c919-dd9c-4caf-a8c0-f618bc837484"
        },
        "item": {
          "id": "2b2f33b5-9d56-4c09-be6a-eee4d287f1ac",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b4185b04-0858-4367-a322-dfe0630448ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a788732b-2855-46c0-b20d-484c89306e8f",
        "cursor": {
          "ref": "f40afabf-27d0-4341-a9af-b8a440087c3b",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8e0f53ca-7e79-48b9-a261-5573eff0f65a"
        },
        "item": {
          "id": "a788732b-2855-46c0-b20d-484c89306e8f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c097cee4-6d6a-44a3-ab20-757112310150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721d13a9-495f-4338-bb2f-db777ddf43b0",
        "cursor": {
          "ref": "79d6b928-8239-49ab-9ed4-6f28130d49f2",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "070580c9-29d6-49f9-b61b-ffd36f22604a"
        },
        "item": {
          "id": "721d13a9-495f-4338-bb2f-db777ddf43b0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "acafede3-2366-4454-8d9d-55ad82698a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3355fd67-0531-4c3a-9ecb-e596db8fd114",
        "cursor": {
          "ref": "f7f8ad93-e121-4e5c-928c-35f506814457",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7226215e-e8fd-45fc-ac41-0849ecb6c3c5"
        },
        "item": {
          "id": "3355fd67-0531-4c3a-9ecb-e596db8fd114",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "83c1c513-9416-45fa-8dc5-587be4fa8d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6376129-8552-46bf-829f-8463aa29cb19",
        "cursor": {
          "ref": "ef2e78fb-9481-4aac-9087-e467deef6a84",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a3726cff-5cb2-4462-b4a7-6e67726925f1"
        },
        "item": {
          "id": "d6376129-8552-46bf-829f-8463aa29cb19",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "df6c42a8-0ad5-4051-8b66-5a191aa02c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1d3fb6-af73-4438-8d16-b2fcdf3fbc10",
        "cursor": {
          "ref": "631542a7-e771-4db2-9a21-fb8805bcd38f",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "46555575-1d06-4db2-8eb6-b93d5083df49"
        },
        "item": {
          "id": "8a1d3fb6-af73-4438-8d16-b2fcdf3fbc10",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "099fbad9-ca65-4633-a94a-4cc0a36e38af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80354e06-f798-4628-ab9d-330f17462512",
        "cursor": {
          "ref": "58d22511-407e-47a9-b9ca-a0c3033ca425",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f70b3750-f08b-4f89-b695-5734ac9a520a"
        },
        "item": {
          "id": "80354e06-f798-4628-ab9d-330f17462512",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "aec8f1a1-098f-4c19-b00e-e30747e0a1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf258f27-1f1c-49bf-91e0-37b7d6f23bd9",
        "cursor": {
          "ref": "7e6c4e2b-1473-4d6e-9e23-f460da27d64c",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "451e8731-95cf-40f8-854c-2741eda21fc6"
        },
        "item": {
          "id": "bf258f27-1f1c-49bf-91e0-37b7d6f23bd9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "02771a2c-7b36-4796-aa55-7e5d040f2a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e20a99-b535-4a74-9318-e74b2b5d1227",
        "cursor": {
          "ref": "97fc4d91-82ae-42c5-b627-c746ac87445e",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "89820ecb-4575-442e-94a0-f2a1f2325e4e"
        },
        "item": {
          "id": "87e20a99-b535-4a74-9318-e74b2b5d1227",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "edc7e451-67c9-4854-9c7e-37bd28ef1fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fff2f75-b20e-4928-848d-5c39938da89b",
        "cursor": {
          "ref": "b0c196e9-2a24-40f9-ac60-ddb461e393ff",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b5ceda84-3a18-4cff-b3d4-176b306a1915"
        },
        "item": {
          "id": "4fff2f75-b20e-4928-848d-5c39938da89b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "55c3c495-ea93-443b-be4b-481ae5363974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7494abcb-166e-4221-b7c2-6a1d4c824648",
        "cursor": {
          "ref": "e85e9deb-2bd3-48f0-9645-87b1460d9831",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5792f4e3-0aae-49ef-9a4f-7db37fe03294"
        },
        "item": {
          "id": "7494abcb-166e-4221-b7c2-6a1d4c824648",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0dae9eb9-3560-487b-a116-3772bab0a5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdcb0e0-076d-40f5-8de0-a10c6897baeb",
        "cursor": {
          "ref": "6f8f9be2-b6ab-4992-a600-75a8135f253d",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9de7aaff-8e9b-440a-a32a-0a9475208623"
        },
        "item": {
          "id": "2bdcb0e0-076d-40f5-8de0-a10c6897baeb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9679f805-7d15-4403-aafe-9c98b0eba67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4c36e4-9508-4472-ac82-773d58a1486a",
        "cursor": {
          "ref": "9e2316ea-83da-4432-afef-e9bc0541d3d0",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2db33464-d8b1-4f9c-939b-6ac3519f938b"
        },
        "item": {
          "id": "ad4c36e4-9508-4472-ac82-773d58a1486a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4247e615-8f25-4b1a-b46e-c64f24651930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5864f93d-c191-4091-a8dc-bbe32077ff4f",
        "cursor": {
          "ref": "5d874c67-7eaa-4218-9819-1b9846ec7b30",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "390482c8-f27d-43a5-b6a2-6aeb92647bba"
        },
        "item": {
          "id": "5864f93d-c191-4091-a8dc-bbe32077ff4f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fabe5bb7-9336-4805-846f-941ec240a50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c62bad3-439f-4440-a96d-e82f7fb0dc43",
        "cursor": {
          "ref": "179dda26-394b-405f-8654-f2a431502dba",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5da5806a-92b1-4de9-a400-9b1922a99601"
        },
        "item": {
          "id": "2c62bad3-439f-4440-a96d-e82f7fb0dc43",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e0ec2e6e-0ae2-48f4-a75a-10f0c2eb720b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2224d5d7-6678-4ca3-a793-dab2a4625bb9",
        "cursor": {
          "ref": "55779240-a599-4f1a-99af-5b013e07eb23",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0e735cc7-0cbe-4d09-81b6-43fbfe50ed01"
        },
        "item": {
          "id": "2224d5d7-6678-4ca3-a793-dab2a4625bb9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1832a6cd-1df3-4e3f-aeeb-180d8ea967b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7602a0e5-87e7-492b-a08f-4ee76b730449",
        "cursor": {
          "ref": "6916859a-a389-4035-8a8f-b2e78613e75e",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "12c10ac2-a360-480c-81f0-28ca71e2ba9d"
        },
        "item": {
          "id": "7602a0e5-87e7-492b-a08f-4ee76b730449",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e40e07f4-ebb2-448a-9eac-d43ece5a54fb",
          "status": "Created",
          "code": 201,
          "responseTime": 37,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "115c4f47-a003-44c2-a6fe-ff36ddac595f",
        "cursor": {
          "ref": "1bfccecc-4953-4faf-8cac-b8fb7fbc4679",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "94e245bb-cf50-433c-a85d-373204e6a2a7"
        },
        "item": {
          "id": "115c4f47-a003-44c2-a6fe-ff36ddac595f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5000f29e-84f1-490b-8e79-f4022c52d542",
          "status": "Created",
          "code": 201,
          "responseTime": 247,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1ef2ea-635a-4f29-a5d1-e73c48354f91",
        "cursor": {
          "ref": "8e6d570f-6d41-420d-9f41-c69ad44feb7e",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b55de4bf-e1e1-4f96-947c-fe9eaab1a96d"
        },
        "item": {
          "id": "0b1ef2ea-635a-4f29-a5d1-e73c48354f91",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9bbc1cf3-dbb9-4023-9979-7c3f7c6845be",
          "status": "Created",
          "code": 201,
          "responseTime": 76,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e5f578-158b-4417-bcce-d20d29f33cc1",
        "cursor": {
          "ref": "0ad5fb14-d418-4132-87f9-45b08474608b",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "234a8ec5-b16c-4116-b5e0-ff9d4391982a"
        },
        "item": {
          "id": "61e5f578-158b-4417-bcce-d20d29f33cc1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f823dd45-d11f-4d6b-892f-95773c5f835f",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8c9d76-8238-4dce-a7fd-003ee0a18c3d",
        "cursor": {
          "ref": "3f2d2669-e6ed-4151-bb76-1dee52d7caf1",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3e52cae9-bbf9-4f5d-95a6-d4616b7ac48b"
        },
        "item": {
          "id": "bc8c9d76-8238-4dce-a7fd-003ee0a18c3d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cf5b32be-57cf-4f99-9276-59b3d6c5b04e",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "59320518-4497-4007-84d8-51c37b08d1c4",
        "cursor": {
          "ref": "eb7b5379-2440-4cda-94d0-ecd6e3610988",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "720b32f6-ff32-48a1-bdd4-30b9f19854e2"
        },
        "item": {
          "id": "59320518-4497-4007-84d8-51c37b08d1c4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "78678a1d-df18-49bc-ab9c-543b15dd80b4",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7b8ee4-cd25-44ef-98a7-3183da9120e9",
        "cursor": {
          "ref": "438a9580-21ee-4abf-8309-47f26e3f5c61",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7ca5df73-314e-47cc-837d-e42bc8ba388b"
        },
        "item": {
          "id": "8b7b8ee4-cd25-44ef-98a7-3183da9120e9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "52213465-41cd-42ce-b26b-70bb26af9187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6ab7bf-93f3-45fb-b17f-12d9cc0f94d1",
        "cursor": {
          "ref": "2b5cdb9c-bafb-4eaf-9dab-414b45cbe3fd",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "615c4ae2-0e39-491d-bad7-27290c48db1c"
        },
        "item": {
          "id": "db6ab7bf-93f3-45fb-b17f-12d9cc0f94d1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "151b2ead-4716-4920-8f74-aba18ddcaf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8773de71-8374-4824-a8d3-1484d0520b90",
        "cursor": {
          "ref": "fa317996-dfa1-43e8-a311-7b1545b4b7e7",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c697d395-5271-4e7c-ab94-08007cb99764"
        },
        "item": {
          "id": "8773de71-8374-4824-a8d3-1484d0520b90",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1410b2a6-8e48-4fb1-8335-97adf9021443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33395277-ed85-4f9a-876c-b09da96ea453",
        "cursor": {
          "ref": "84bf8e9c-06c6-4342-9539-35f2c6a72593",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0c8c5746-7e0b-430d-83cd-442f850009a6"
        },
        "item": {
          "id": "33395277-ed85-4f9a-876c-b09da96ea453",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d9cfd01d-fa38-4106-81b4-80b5b0997cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df68cfea-1832-45d9-8497-7e67e30c7799",
        "cursor": {
          "ref": "4363421d-1d0d-472d-9177-740e23389acd",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "16d56192-726e-4486-8a51-1442755d8c8a"
        },
        "item": {
          "id": "df68cfea-1832-45d9-8497-7e67e30c7799",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "92148ef1-e7b4-4153-9f1d-2a83bcc7c9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67a7d03-cd24-42d9-8a5e-ed4a3937f12a",
        "cursor": {
          "ref": "cd4b2d30-705b-44e2-8909-5e361920b826",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e536fd5f-3e4f-499f-8401-5ea5b84b4045"
        },
        "item": {
          "id": "b67a7d03-cd24-42d9-8a5e-ed4a3937f12a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5aabb65e-e87d-4559-afd7-aff7014b8df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cb143f-d5c1-4599-aec3-8852b1c9e01e",
        "cursor": {
          "ref": "d3425fce-8ef6-4681-a421-26f98e14b452",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1d60d9a8-d35f-4bd2-9abd-da4744af88a0"
        },
        "item": {
          "id": "f5cb143f-d5c1-4599-aec3-8852b1c9e01e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2bf66353-7570-401c-b34f-53f47d9d36d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4758c95a-6382-4186-8736-6221dcf107d7",
        "cursor": {
          "ref": "59285ce9-f3d2-465d-b9b5-bcff66c4b1c4",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fa48f78b-b216-4ccf-a416-33f5d0f2bcd7"
        },
        "item": {
          "id": "4758c95a-6382-4186-8736-6221dcf107d7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "798426a4-25a4-4e21-affc-6c90f142c2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee06e810-3234-4b7b-8a4a-759b7a1b1cd9",
        "cursor": {
          "ref": "d6699197-2625-4518-9097-bea90b4c7f72",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1447d145-dcf0-4854-9340-45a8d103c408"
        },
        "item": {
          "id": "ee06e810-3234-4b7b-8a4a-759b7a1b1cd9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5bffd4f6-5dd9-455a-8aed-2709ddd86353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac655b1-f797-4b6c-8be3-11bffd8871fa",
        "cursor": {
          "ref": "5a6012cf-d1f2-457c-9e87-1d02a8b5fb7a",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7e0686ef-348a-45f1-8ea7-0730f35a572e"
        },
        "item": {
          "id": "cac655b1-f797-4b6c-8be3-11bffd8871fa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1f16928a-6922-4cd8-ad68-190fb27cfacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87164c30-e930-4860-b466-aab0d831f25d",
        "cursor": {
          "ref": "5288cce5-d9af-4331-8d93-5ef87bf9e926",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "468d3d97-0d49-444c-8dbc-90d4d0cdc6a8"
        },
        "item": {
          "id": "87164c30-e930-4860-b466-aab0d831f25d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "136b5f27-7de9-4bee-8af2-4da0f48f1bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba9f401-54d0-4267-8890-a9f31a02712e",
        "cursor": {
          "ref": "08dff191-25b4-45c5-a4d8-478bd298b1f2",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c09b5ce0-878d-4612-b4cc-b0bd5d73e9a6"
        },
        "item": {
          "id": "6ba9f401-54d0-4267-8890-a9f31a02712e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ed06a31c-9ffe-466f-b06b-7e6e27e1cbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e7da70-d8da-4075-a652-a0c8403f53f7",
        "cursor": {
          "ref": "092f96a0-4741-46dd-9852-1e2ef3071a7f",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "46a54b59-742a-45c1-b166-c6b5cf3f3c3c"
        },
        "item": {
          "id": "b4e7da70-d8da-4075-a652-a0c8403f53f7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "681ce120-1b84-4f8a-b809-5b770982ba78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66995d99-fc9d-4399-9bee-a1591ae88708",
        "cursor": {
          "ref": "84456dc4-7f74-4e1c-a693-d7293e7ca069",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e9c183b4-98dc-47b7-a36c-f6c52df2bc2f"
        },
        "item": {
          "id": "66995d99-fc9d-4399-9bee-a1591ae88708",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "67302409-cbf0-4d16-9b04-dc633ef215bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4163d8ed-6a55-44de-97c3-89815e8f4225",
        "cursor": {
          "ref": "f4bd418f-8718-4fb5-b352-f476ee83ed5b",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "257819d4-3a56-4ff2-bf8b-753c8cc14489"
        },
        "item": {
          "id": "4163d8ed-6a55-44de-97c3-89815e8f4225",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fc7e0d1b-3545-4cba-bbb5-8026dcba1a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074a9ae2-3dc1-4f09-aa44-ba88da14b73b",
        "cursor": {
          "ref": "04c4ce2e-1eea-4552-9acc-1fa58452fd74",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "58fe8cf9-6c42-41f4-9044-a33bf1737ed5"
        },
        "item": {
          "id": "074a9ae2-3dc1-4f09-aa44-ba88da14b73b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cc54f386-0864-4665-9829-1007ef49c6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea60aa11-8087-4da4-a6e5-68568f4124cb",
        "cursor": {
          "ref": "18593dc3-39fe-44f6-8593-5a844a479f05",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e4b73d63-c31a-42e2-b24d-c1cb931b959a"
        },
        "item": {
          "id": "ea60aa11-8087-4da4-a6e5-68568f4124cb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8bac7107-1d6f-41d3-867f-c24572a538b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f02fea-6e6b-4d98-aa04-57c8c362256a",
        "cursor": {
          "ref": "c1816f1b-73a0-44d5-a311-a6e4bb3a72ee",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ea932648-f717-409d-b7d5-1be3bdc0bf7b"
        },
        "item": {
          "id": "c4f02fea-6e6b-4d98-aa04-57c8c362256a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5d8ad6b0-657e-497f-80a2-95a4c3c3d871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218f09d1-3511-4a1f-9aa1-1a58746d2f97",
        "cursor": {
          "ref": "55ceb4fa-9d81-425a-bb70-c13e4866d0a4",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "52f536de-b233-421c-94de-a5501b5e6650"
        },
        "item": {
          "id": "218f09d1-3511-4a1f-9aa1-1a58746d2f97",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a09d093c-52f4-4bdc-a1e3-4f251b18b659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427b95c8-4264-4009-8364-ebb600246543",
        "cursor": {
          "ref": "0ae308d2-786e-42ba-8dbb-10e46a55210c",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c5cfb5f0-ed8f-4698-8f4e-cc18ceb01f1b"
        },
        "item": {
          "id": "427b95c8-4264-4009-8364-ebb600246543",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6146cdc9-d2cb-4ccd-b0da-ca7ff8d5bfed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f59367-3be5-4347-bb18-385a9275f110",
        "cursor": {
          "ref": "11aeaeb2-2dd4-4015-a4ab-1314f435d39b",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "89cb7969-4f80-4fe2-a2bd-e5493cd7158d"
        },
        "item": {
          "id": "05f59367-3be5-4347-bb18-385a9275f110",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2711db0c-3aa9-421c-a48b-01e9477ee5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839bd0bc-f9fe-47be-9de4-eda5a5edeea3",
        "cursor": {
          "ref": "90973d4b-c613-4eb1-b005-112ea7feff05",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "883c4c16-6802-447b-b384-acda5d20f309"
        },
        "item": {
          "id": "839bd0bc-f9fe-47be-9de4-eda5a5edeea3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "494c25c7-d991-4f59-8053-d513c0f54117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb42fba-55cc-41b6-a58b-e602b047a644",
        "cursor": {
          "ref": "a769680a-e000-4a65-8fbb-c443c01870d0",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f6bf612f-9295-46f3-8d19-a7ec889da824"
        },
        "item": {
          "id": "abb42fba-55cc-41b6-a58b-e602b047a644",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "32736971-b6f9-4319-9ea3-670d2bb0d7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe97b68-771c-4c6f-8bdf-514f875134a0",
        "cursor": {
          "ref": "e5f7a67c-3bd1-411f-9b76-6e7aceb5a206",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c6465898-7e03-4988-9fd9-80587589ee82"
        },
        "item": {
          "id": "cfe97b68-771c-4c6f-8bdf-514f875134a0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "05c82d7a-1ce2-4dcf-9ebe-7f45a87079f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3693d95e-52e1-449b-9531-7740d9faf1d1",
        "cursor": {
          "ref": "b7f1737f-0563-47f3-a92a-d6df542ad370",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c6f4f95e-bc96-49d8-8d11-fb3ab410bcc2"
        },
        "item": {
          "id": "3693d95e-52e1-449b-9531-7740d9faf1d1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9fc05edb-393b-460b-8264-405457ecfbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af3f718-be50-4f0b-938f-e6a5eef7c24d",
        "cursor": {
          "ref": "9f2164c6-7451-4bfc-a4f6-8ad5e579816d",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "945f7e2e-7b9d-4dae-87a0-07c57c443492"
        },
        "item": {
          "id": "8af3f718-be50-4f0b-938f-e6a5eef7c24d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c424dd86-6c9f-4c6b-ad6f-06e02606c8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9887a5df-af09-4d0d-8262-82c40a643c85",
        "cursor": {
          "ref": "094e1ca8-72fe-45ca-98e1-bc4babd814e1",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f91663cb-3bd4-4f45-9316-959d7dab5eb0"
        },
        "item": {
          "id": "9887a5df-af09-4d0d-8262-82c40a643c85",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3a7ea72a-e5fd-4e6c-87b1-fb04eef90dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bc6593-7e38-484f-8e3d-d0123622afb3",
        "cursor": {
          "ref": "2a833107-ba61-453a-aca4-81b3b77cd06b",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "41538e53-380d-4796-ae41-c8a0e68b087a"
        },
        "item": {
          "id": "83bc6593-7e38-484f-8e3d-d0123622afb3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b5003110-6bbb-442b-a6a6-b2a58db9f569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdf7d7c-875d-4074-9778-e41973cdc67c",
        "cursor": {
          "ref": "fb2d4652-b6f7-48d5-8afc-5edad7a81968",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f36c4a8f-1735-4570-8f9f-3b6d9bb3befc"
        },
        "item": {
          "id": "5fdf7d7c-875d-4074-9778-e41973cdc67c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fe1f3a30-d4e5-40cd-8028-c0be431759b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9921fe-24d3-4cdd-9213-0b2b4aa26434",
        "cursor": {
          "ref": "ee4cb877-9fe0-4c11-8f58-d9bfe74b9458",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3ef8bc60-83e4-4fc8-a5d5-b6685d4f1593"
        },
        "item": {
          "id": "7f9921fe-24d3-4cdd-9213-0b2b4aa26434",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "68a6352f-faa3-446e-bc69-4a3b34e2a041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747ed9c5-bb72-475f-a6ee-ced38f124631",
        "cursor": {
          "ref": "fc8ee938-2d66-4fca-83d1-9fd3b9a0a961",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dc34bbbe-3404-4350-81ad-213b37bafc55"
        },
        "item": {
          "id": "747ed9c5-bb72-475f-a6ee-ced38f124631",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ecc09c3f-8100-43dc-98f3-26633f6089d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfec0ab-8ef9-4589-aa31-c59b9ba49287",
        "cursor": {
          "ref": "08cef249-72e8-47d6-8554-97d7042e01f2",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ba007860-4e87-4af2-8e61-3f0e783da1ff"
        },
        "item": {
          "id": "0dfec0ab-8ef9-4589-aa31-c59b9ba49287",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "664fc31b-9942-41cc-83fa-ffc8cf4ce951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7810334-8779-4d3c-8c8f-7b9d82daab15",
        "cursor": {
          "ref": "e8066051-1cf1-450c-8001-6fadb126a389",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "69968c7c-f23a-4078-b8cf-8ead0a75b20b"
        },
        "item": {
          "id": "f7810334-8779-4d3c-8c8f-7b9d82daab15",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e4e7ec5d-6642-4495-b431-1cedf96d9978",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ec2957-b44b-48d4-9f69-4ad1bebab94d",
        "cursor": {
          "ref": "76b2d204-3a75-470a-ad4c-6728345bf673",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a55a86b2-a53e-4c44-9213-92ea84f48a74"
        },
        "item": {
          "id": "48ec2957-b44b-48d4-9f69-4ad1bebab94d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c0db5a0b-e266-454e-8e9b-bd2a3211bdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdaf49d5-56ae-4d6c-bbf3-0377020964a6",
        "cursor": {
          "ref": "5168a92e-49d0-4529-b779-66197dce79b6",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b5fccbc8-7336-4ee0-9297-42eab0dd137b"
        },
        "item": {
          "id": "fdaf49d5-56ae-4d6c-bbf3-0377020964a6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cf7eac14-647e-4074-8250-4aa826b2f7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ad0708-b0a8-4437-b1da-4b9dfb1c00db",
        "cursor": {
          "ref": "85d866d9-bf5f-408e-8b75-ee437d70087c",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a31d82aa-7ccd-4059-afcb-e045adc8e48e"
        },
        "item": {
          "id": "a7ad0708-b0a8-4437-b1da-4b9dfb1c00db",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "944a7470-d46b-432f-90f5-e01bb504a8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbce95a9-5449-47a9-87f6-f4af1a452da0",
        "cursor": {
          "ref": "94cc62a3-33e9-47bd-8c0e-a01b4a3a0ab8",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9db06806-b8e7-4fd9-bfe8-4fa3218897a5"
        },
        "item": {
          "id": "dbce95a9-5449-47a9-87f6-f4af1a452da0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "affe3561-d7e0-47b6-bcb0-9fdf8d63cc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b1b8b6-02b0-4356-99b8-723919b9ee25",
        "cursor": {
          "ref": "be7acddf-5e1a-4091-8347-8a113560933c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "990313e2-e984-4f16-9547-49fe6e845667"
        },
        "item": {
          "id": "64b1b8b6-02b0-4356-99b8-723919b9ee25",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "aa13d26f-d706-4594-89a5-aa8bb766c807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9aa0208-6302-4404-90f7-17a6afc70536",
        "cursor": {
          "ref": "f4f975e0-ad8b-493c-8b7a-9cf1c3a5c7a4",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1f6c265e-a189-487b-b99f-9a661238fb40"
        },
        "item": {
          "id": "e9aa0208-6302-4404-90f7-17a6afc70536",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f92dcbf5-8ee7-40ef-b177-23120234f0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d1d739-54ad-45fe-9c69-58087e547f5b",
        "cursor": {
          "ref": "d3be1b3d-6fae-4bb4-9bff-e95d3049d474",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "396126fd-7c47-4348-abf1-c21f1aa75e14"
        },
        "item": {
          "id": "19d1d739-54ad-45fe-9c69-58087e547f5b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a504f73b-65ce-4312-8a48-8e835353be2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a2a87e-9663-49c9-866b-efa481fb50a6",
        "cursor": {
          "ref": "f74311c6-2f20-4480-b59e-ccb2b6706b8a",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "eb681226-8b2c-47ee-b44b-f622cf085c1b"
        },
        "item": {
          "id": "c9a2a87e-9663-49c9-866b-efa481fb50a6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b4337f64-dd9c-44ab-bf95-5c1cf62637ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df731d5d-d31c-49dd-8c6a-332cab401a37",
        "cursor": {
          "ref": "4bb5d601-8b47-4911-8baa-13f1c740ba35",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "31764af4-fc40-4ef8-904e-57cceefc6d83"
        },
        "item": {
          "id": "df731d5d-d31c-49dd-8c6a-332cab401a37",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "83315a2d-4b0f-4c0f-9cff-b5494d1b94b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e139d37f-d203-4337-a97b-6dcd7aea32c7",
        "cursor": {
          "ref": "e999de3a-7a8e-44b0-b92e-fb0515168107",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e52223ea-cc86-4a58-bc48-67f3bfe87c16"
        },
        "item": {
          "id": "e139d37f-d203-4337-a97b-6dcd7aea32c7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "52cf7142-7193-4e6a-881f-b83170d0d7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56d8a4c-851a-4466-955c-709553fd460e",
        "cursor": {
          "ref": "d4e3736b-855a-4f57-83be-760b5191eaf1",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9461792d-874d-4257-b26e-5c96819865f0"
        },
        "item": {
          "id": "f56d8a4c-851a-4466-955c-709553fd460e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "22eda283-bdda-440e-847e-52315f560a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973067e4-512e-4833-89e2-66f0c79e9fe3",
        "cursor": {
          "ref": "09bfd3db-090d-498e-b92e-f49b6b242420",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8a9c36b4-a189-4a27-a599-5a9d951e2665"
        },
        "item": {
          "id": "973067e4-512e-4833-89e2-66f0c79e9fe3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "099a07e4-6a1b-486f-9a1a-3f24da161f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e77e61-e693-4384-9b53-3374c5ba4620",
        "cursor": {
          "ref": "bf0af3e1-7c6f-476c-8297-3e02a3055573",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4204bb27-c34c-4eae-916a-45b3d51deed0"
        },
        "item": {
          "id": "11e77e61-e693-4384-9b53-3374c5ba4620",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "15acef12-884a-4dc4-b487-45ef83327fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e514be81-268d-442f-a4c8-e5aa6dad4c1b",
        "cursor": {
          "ref": "097968b5-4e20-497b-80c2-359e679524ac",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "934357d0-22cf-4d4b-8907-315178de6c68"
        },
        "item": {
          "id": "e514be81-268d-442f-a4c8-e5aa6dad4c1b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c6f191cc-5afb-4974-8d72-ff0f462fd988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f0fb34-8673-409f-9730-ab02fb835bd8",
        "cursor": {
          "ref": "b57b9cdd-bc87-446a-8b96-fbb43b016681",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "da94bfc2-8dff-4b84-abe7-b01a821d3925"
        },
        "item": {
          "id": "a3f0fb34-8673-409f-9730-ab02fb835bd8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c3368e7d-dff1-4381-8e93-f54f8d193150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425e1a3e-bdb8-46f3-9dad-653a3368706e",
        "cursor": {
          "ref": "c135ff5a-2650-4626-9c8a-20ac115b89e0",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9cad6526-dfaa-4a11-b3a9-52ca7e5de453"
        },
        "item": {
          "id": "425e1a3e-bdb8-46f3-9dad-653a3368706e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "843d7816-1a93-49b5-9239-25b5e8d2b91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee0775e-1db5-4d8d-84de-692a672d0926",
        "cursor": {
          "ref": "bcb387bc-3835-46e2-a6ab-1d98fae9ba81",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "029a582a-3796-4ae7-86df-7602e2319d93"
        },
        "item": {
          "id": "1ee0775e-1db5-4d8d-84de-692a672d0926",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f586dd2a-58d9-4b6f-b169-5415031e3e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e90b8cd-1b70-4118-85e6-50e15eb541cc",
        "cursor": {
          "ref": "15820a3f-c66d-401d-bd10-5b9825635aa9",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3b5dda9f-c767-49a1-8133-e7c944c945c0"
        },
        "item": {
          "id": "8e90b8cd-1b70-4118-85e6-50e15eb541cc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2120fafc-547b-47b7-83c0-bb20c801e8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fef18bb-a2f8-40b5-a14f-2043daecc86b",
        "cursor": {
          "ref": "44c36f60-2693-4fd7-a944-ddb3cd38941d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c073bcad-ebb7-4c1e-b99e-57067c6ec0ac"
        },
        "item": {
          "id": "3fef18bb-a2f8-40b5-a14f-2043daecc86b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "35996cc7-451b-4775-bbb4-0b2c50b20e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063716b7-97f3-4006-83cc-e16cc3e8fc38",
        "cursor": {
          "ref": "6b080eaf-0585-4f94-a46a-973c689ba07c",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "41f49d86-10e8-4420-8e8d-d63bccc34a4d"
        },
        "item": {
          "id": "063716b7-97f3-4006-83cc-e16cc3e8fc38",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b75d56fa-4148-47de-a4c0-4e3beca7bd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd486ff1-a0f6-4fa5-9f0c-8a8ac13759fa",
        "cursor": {
          "ref": "1d07d23f-5738-477f-8f7b-92084f403d2a",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cc692d0a-d6f2-4c43-a744-ff28d40b5d2f"
        },
        "item": {
          "id": "cd486ff1-a0f6-4fa5-9f0c-8a8ac13759fa",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "01ae49ba-4ee7-49f4-9494-a64a728dae1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d642b63d-2049-41fd-99c2-9f664bbfa7fd",
        "cursor": {
          "ref": "031d5a3a-9fcb-4df2-83f4-4d0e66304a68",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d68279be-b6e8-4be7-a143-2bb889baf3d3"
        },
        "item": {
          "id": "d642b63d-2049-41fd-99c2-9f664bbfa7fd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "83943fa6-603b-4bfc-918c-2ab51983335b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c4e0fd-9bc7-417c-8d13-d02cfaad044f",
        "cursor": {
          "ref": "77d75d82-5a4d-4d12-92af-23164a226665",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "59fcfb45-d04a-4b8d-b6dd-d55bf92115aa"
        },
        "item": {
          "id": "81c4e0fd-9bc7-417c-8d13-d02cfaad044f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "73706b75-d528-4adf-b696-e61cb4a3fe4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca8b6e7-5116-45b1-837c-09d9f064f501",
        "cursor": {
          "ref": "c07a31a9-d31f-4b45-b2b1-4424f9753efe",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "853cbcc6-00bf-4a65-bc25-ffbbcaf61e79"
        },
        "item": {
          "id": "9ca8b6e7-5116-45b1-837c-09d9f064f501",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "13364479-8aad-405f-9679-0d101b5954e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221d65ed-4c9f-4d7d-9657-d359113afdb6",
        "cursor": {
          "ref": "af6ff6ed-0b35-4f0b-8c78-9b38e05620ff",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "58bb31a0-cc26-4081-804c-ab78b3b0e515"
        },
        "item": {
          "id": "221d65ed-4c9f-4d7d-9657-d359113afdb6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fa6924c1-f7eb-41d3-93e3-a160a1dc6a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51672b22-655b-4f3d-99a1-5cb66fc79511",
        "cursor": {
          "ref": "c5c44f96-bc71-4383-97df-ab169ee139af",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5c4f57db-7e27-4589-bb4b-f1d250dfca8a"
        },
        "item": {
          "id": "51672b22-655b-4f3d-99a1-5cb66fc79511",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c4150cf6-9a17-4951-934d-09db6bbe2b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec8a9af-84d7-4ff0-94b7-501a3faa60e5",
        "cursor": {
          "ref": "b0b04c8c-57be-40dd-bec6-1dd44d688732",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "52db79d5-ebdd-40e8-a6ca-b3379780ab47"
        },
        "item": {
          "id": "2ec8a9af-84d7-4ff0-94b7-501a3faa60e5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "506872af-9bbf-43b2-a67a-c09303ed87a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf184ac7-c6b9-4198-acef-eb845896c515",
        "cursor": {
          "ref": "58f7c327-9d1e-46e4-9351-403732c3bdaa",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "59c9d469-5f50-4291-acad-f4b272188494"
        },
        "item": {
          "id": "cf184ac7-c6b9-4198-acef-eb845896c515",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6d482f8f-fd08-442d-8e80-e8624971c801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6caef40b-6a66-41e9-85b6-5e2b68153ad2",
        "cursor": {
          "ref": "47bd8222-ff6e-415f-ac2b-d4632cd1f8cb",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f2e85285-699e-4f48-83ca-536690ba2e31"
        },
        "item": {
          "id": "6caef40b-6a66-41e9-85b6-5e2b68153ad2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "00d1674d-edf5-4fa2-a5f9-9be931d433ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04a1f20-287a-4525-97ec-98a6fa045d67",
        "cursor": {
          "ref": "dd4993ef-27f4-416d-90ec-d7d80e150fc4",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ee5ec231-d04d-4c8f-8f83-e3198f182214"
        },
        "item": {
          "id": "f04a1f20-287a-4525-97ec-98a6fa045d67",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1530f15b-39ff-486a-b0f3-1e0e34f7e5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c66829d-959b-462e-a8b9-8242495e4045",
        "cursor": {
          "ref": "4499b18f-36e4-4bf1-943e-fec55d38b506",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2fc87458-9f2a-4e33-8897-a0401f20cef9"
        },
        "item": {
          "id": "3c66829d-959b-462e-a8b9-8242495e4045",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "39323b43-d164-4d0a-bd0f-61b65180a90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3efcf9-2bef-4615-ae0a-50e7b91f48b8",
        "cursor": {
          "ref": "bde394dd-769f-4560-8b83-5aae548d12f6",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "95ed3e29-b6ba-4744-a97e-b68967fad450"
        },
        "item": {
          "id": "9a3efcf9-2bef-4615-ae0a-50e7b91f48b8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "701525db-7f1e-4932-8e66-68a5ed0d58d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e52b1a6-dc89-42f3-af16-d31bf1a6f4e8",
        "cursor": {
          "ref": "9ce84477-f46a-415f-9c3b-b871186fd95d",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "31b25063-99fb-4504-9d39-6f07c25af74f"
        },
        "item": {
          "id": "9e52b1a6-dc89-42f3-af16-d31bf1a6f4e8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "38e5670a-6b48-4178-9f7c-b0d317a1deba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e498ac06-6a03-4124-ba77-cc63fc75216b",
        "cursor": {
          "ref": "633c092f-d4c4-4408-8660-1c259c7245a0",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "77f7846b-2ee8-489f-8eed-455ee6d74043"
        },
        "item": {
          "id": "e498ac06-6a03-4124-ba77-cc63fc75216b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "356a4ea3-0579-475a-8ee3-46b7653255d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b8b316-3435-4b10-a3b6-2976cd0b90a6",
        "cursor": {
          "ref": "de916c89-b882-4cef-9d2e-75122ffeaf99",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b9a14b3f-3d8d-4763-a5d6-cdc983102c04"
        },
        "item": {
          "id": "36b8b316-3435-4b10-a3b6-2976cd0b90a6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c01ba4a5-24aa-4b43-9309-35c393697498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bb04d3-f0c1-4326-aa80-0b2f72d380f3",
        "cursor": {
          "ref": "03b848ab-69aa-4baf-8ab7-cf5042b00fd9",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "243ecf00-b745-490b-93dc-d8be673bcf09"
        },
        "item": {
          "id": "29bb04d3-f0c1-4326-aa80-0b2f72d380f3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "718d8c93-42f2-4cbd-8431-befc42c12f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3a2f5c-06a0-497d-af18-534078faa0f1",
        "cursor": {
          "ref": "620edc82-ab63-4a74-8a56-2b81a697ab2a",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5ee132a1-749d-4184-b1d1-ba73982812a8"
        },
        "item": {
          "id": "0f3a2f5c-06a0-497d-af18-534078faa0f1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9b0e4a85-0450-45da-8fd9-0566e96b234c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae71628-8a91-478d-814a-cda381f250a3",
        "cursor": {
          "ref": "d60e800f-c2c9-490e-977b-a82774912865",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c02c51cb-196c-4909-ac7d-b3d09b7c141d"
        },
        "item": {
          "id": "dae71628-8a91-478d-814a-cda381f250a3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ded1a35c-c5be-4b45-96b1-42b066d40d25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5104ea-6b68-4af5-9c7f-2223575681ae",
        "cursor": {
          "ref": "a13dfc9f-70cf-4184-840f-a44ef2d2378d",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c27b068c-1f8b-4207-882d-cfd7a41d0ecb"
        },
        "item": {
          "id": "0d5104ea-6b68-4af5-9c7f-2223575681ae",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dbcd7269-cb94-4741-8a38-5f2614c120dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ee1dbb-80ae-490a-9f57-3eefa3cd168a",
        "cursor": {
          "ref": "3053610b-267d-4ec5-895b-623aac0383e1",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f4d3523b-68e0-4e96-b5ae-f7073b0271e3"
        },
        "item": {
          "id": "c8ee1dbb-80ae-490a-9f57-3eefa3cd168a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b7effb15-a4f6-4e53-b202-46646bbb1434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d985ebe7-c399-45ae-a99c-2fd10668d445",
        "cursor": {
          "ref": "c19549f7-70f4-4edd-bd56-07645c703bea",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5307b43d-3f53-43a4-9170-2af632ed4089"
        },
        "item": {
          "id": "d985ebe7-c399-45ae-a99c-2fd10668d445",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "611b2f59-fa3c-4356-a022-30d1b9926d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c02ae19-57cf-4689-933f-83a863494e2d",
        "cursor": {
          "ref": "b7db4c9a-7f0b-4f04-a29b-3380bb92841b",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "210daf6c-a637-417b-9e12-a69b9d5a3cfc"
        },
        "item": {
          "id": "5c02ae19-57cf-4689-933f-83a863494e2d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b5e0c184-9d72-4605-ba08-5bd8b8d8253e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96805306-e9c3-4bd2-b0ee-ee0c7fb82fbd",
        "cursor": {
          "ref": "9f376514-67d4-42bf-a2a3-583505ab36ac",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c091ac4e-0c6c-442f-9612-b966c0e63d86"
        },
        "item": {
          "id": "96805306-e9c3-4bd2-b0ee-ee0c7fb82fbd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "651819b5-5ca4-4af7-b6b6-f14e229ca066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b757f77-8a05-4cdf-aa6d-7ecc4a43d24c",
        "cursor": {
          "ref": "c73f84dc-71b7-4b62-b2bd-051271ba755c",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "75e9413f-8e65-4953-ab78-fe33c6de51d8"
        },
        "item": {
          "id": "6b757f77-8a05-4cdf-aa6d-7ecc4a43d24c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "09b22f6e-60aa-4160-8288-c8c5607a69f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5d4d7f-63a7-483a-95e3-2ac376fe13c2",
        "cursor": {
          "ref": "20d29a20-9c62-4d4b-a7e4-975b2328677f",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "71bf8aee-a41d-46e9-b277-0d9fe67a0c0a"
        },
        "item": {
          "id": "bd5d4d7f-63a7-483a-95e3-2ac376fe13c2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5b805761-8da9-4a86-a606-9cc755f2f9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878d0fe0-53b0-4d22-90d0-16642ddaf601",
        "cursor": {
          "ref": "502d638d-7c5a-4362-917b-c7eb2deafa94",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1693cb4a-1a58-4587-b103-1ddcfd5ffef3"
        },
        "item": {
          "id": "878d0fe0-53b0-4d22-90d0-16642ddaf601",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d71560f3-88da-4999-b115-440aae6828f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5f993d-e2d8-4720-a00b-21ff33608047",
        "cursor": {
          "ref": "468d52f4-677c-4404-afa9-b632ee78e1ad",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b442f71d-78e1-45bf-a9d9-2eafe5f03266"
        },
        "item": {
          "id": "3a5f993d-e2d8-4720-a00b-21ff33608047",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ddde88a4-838f-48d4-aa35-51c59291125e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d16828-750e-48b2-8750-55f2f44408bd",
        "cursor": {
          "ref": "7ccb98eb-3f8a-4b85-b7e0-b3c0494959d8",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2fb43c83-a6c6-48c6-bac4-ae7e12b5b1c6"
        },
        "item": {
          "id": "66d16828-750e-48b2-8750-55f2f44408bd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "576e5ceb-be6e-4657-96fc-533a6081908e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb0546b-2742-409c-a080-e2669bc1f391",
        "cursor": {
          "ref": "d685b821-1a5c-4db5-a6d2-fbcf83dc6a2e",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "801b633b-f7d4-4509-9331-01d78099cd2e"
        },
        "item": {
          "id": "8bb0546b-2742-409c-a080-e2669bc1f391",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f2fdff03-9351-4a72-984a-48b63613e190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a1e6f1-7bd0-46b4-b444-85857103b566",
        "cursor": {
          "ref": "50968372-2fa9-4ebf-9e4f-5a0192c6969a",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "55adb21a-2858-47e8-b9b9-664b0da14b34"
        },
        "item": {
          "id": "05a1e6f1-7bd0-46b4-b444-85857103b566",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c5eac5d2-cc0e-43fc-893f-625579eea944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1f959f-fdb0-4f06-bd6c-3642a8965ea5",
        "cursor": {
          "ref": "54e5ba4d-dc88-45e7-b2cf-02323dc552d3",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "38070207-fc32-4909-969d-db1240ef3586"
        },
        "item": {
          "id": "6a1f959f-fdb0-4f06-bd6c-3642a8965ea5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6d1563e2-8475-4c48-aecb-3093fc1a3958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a9be9c-891e-4fc2-90f8-39cf786450d2",
        "cursor": {
          "ref": "3db0e7ca-6080-4d16-b61c-e9c46881979c",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8526fc03-2a7c-44d5-8396-4e4c770484b0"
        },
        "item": {
          "id": "80a9be9c-891e-4fc2-90f8-39cf786450d2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "140fe0cd-92c4-47cd-afbd-f9bceb8c7629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b964e5-af20-418a-805e-e0b29fd0be9e",
        "cursor": {
          "ref": "2121388c-7b1c-4428-85c0-500984e45dde",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fbd5a949-5f43-4c64-920c-798ff314ce9d"
        },
        "item": {
          "id": "26b964e5-af20-418a-805e-e0b29fd0be9e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6a744900-415d-4023-95a2-64cc6053c2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429fdf46-3199-4626-8628-4b6efbd26fd1",
        "cursor": {
          "ref": "f3329fe7-bac7-4e40-80af-ec40b430e2f5",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5f8dd5d1-a89d-4893-b882-9d0a4efc9e4e"
        },
        "item": {
          "id": "429fdf46-3199-4626-8628-4b6efbd26fd1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "25577dbd-abc7-4c07-aac6-de89ec57d1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb1cb9b-bdca-4cb5-8c30-240e334a84e2",
        "cursor": {
          "ref": "a914a8df-e991-4bd7-9c34-b36739ccfc5f",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "14f0592e-4169-45f5-ad05-bd45f9c1beb8"
        },
        "item": {
          "id": "1eb1cb9b-bdca-4cb5-8c30-240e334a84e2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8e004dd0-1c1a-4200-94a1-fe41eaa920e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50bf1c7-2b60-4ee9-ab96-d4f4179e4985",
        "cursor": {
          "ref": "721fd0bf-ffa3-4f13-a890-ed706894a543",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "afe228b3-e039-44eb-8b2a-fe89b1d39682"
        },
        "item": {
          "id": "f50bf1c7-2b60-4ee9-ab96-d4f4179e4985",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2f208f61-e348-47b1-803a-7f94c79bd4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc59884a-3d4d-41af-803f-a29fd6d4315b",
        "cursor": {
          "ref": "b4350288-d981-41cc-b2ee-8791bf15cc45",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4adc3d3e-25ca-4b01-bba4-e66526bdcade"
        },
        "item": {
          "id": "fc59884a-3d4d-41af-803f-a29fd6d4315b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "acf58d56-aedc-4da1-9b6e-3935fab3cb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70417a7f-c669-48ce-a1ec-461a9ce0f46c",
        "cursor": {
          "ref": "dec6af37-4186-45ed-a1e8-a3af4878b89c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "597fa56e-635e-46a0-8efd-dd9a776eb488"
        },
        "item": {
          "id": "70417a7f-c669-48ce-a1ec-461a9ce0f46c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "305a9e1e-e0da-4888-9a40-7ed1c6f7b4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7588ec72-0092-4eeb-af17-979296350ad1",
        "cursor": {
          "ref": "8d8832aa-deb2-456e-945d-fc135bda6dcb",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "39851b79-ab99-477c-8ad2-97b18143f1e2"
        },
        "item": {
          "id": "7588ec72-0092-4eeb-af17-979296350ad1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d53beab6-783c-45f0-af88-24ebe5ef51f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3332da69-87d9-41e1-af40-9a8dceaf87dc",
        "cursor": {
          "ref": "4bb6f36d-a289-401b-8388-1cc509e47c92",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a11f53b2-a2ae-4924-85e0-80fbeb6df356"
        },
        "item": {
          "id": "3332da69-87d9-41e1-af40-9a8dceaf87dc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "28d09430-ce53-4b1f-a0ef-e4af198fbe02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7abbe9-9da7-4772-bd9e-eb10ee2f68d6",
        "cursor": {
          "ref": "2b9bed23-76b5-4b76-9c9f-200648e641e7",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "47915ede-6021-4ee6-bb2a-ea0019919983"
        },
        "item": {
          "id": "1d7abbe9-9da7-4772-bd9e-eb10ee2f68d6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "67b5f2bc-2c3e-4b20-bbcf-bdc1f322c3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4cdc03-a34b-438a-b7eb-947147eb96de",
        "cursor": {
          "ref": "87aadef9-bfe7-463a-af62-d88de4d68da7",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "59db1a03-c07b-4674-aefd-df5add16da7e"
        },
        "item": {
          "id": "0c4cdc03-a34b-438a-b7eb-947147eb96de",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "47ce68ef-ddf0-41c9-ba96-25ee4b6acf72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a317c9-99b8-49fa-97d8-f870518f58c6",
        "cursor": {
          "ref": "6ce6e51c-1fd8-4eb7-a38b-d1c06eabbf58",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "727bfe66-1024-4407-b720-b0f7643f4cf0"
        },
        "item": {
          "id": "75a317c9-99b8-49fa-97d8-f870518f58c6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "687c8417-e7ff-49ec-9336-76eb20905e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078ca657-f07a-4f32-be99-3b5a353ec815",
        "cursor": {
          "ref": "cbf0afcd-0071-4e28-afca-3b6a08d68193",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6cfdd893-d0ee-40e1-a26a-8a0f06f28f21"
        },
        "item": {
          "id": "078ca657-f07a-4f32-be99-3b5a353ec815",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2a443491-63a6-4a5e-a298-780401e2573d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e10f3d-a53f-4d13-b9b3-6a6c6eac7027",
        "cursor": {
          "ref": "0b063832-1ad2-46a7-aad6-f12cf61b260f",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ee7462ac-a818-4504-a80c-25f3f87e7980"
        },
        "item": {
          "id": "d0e10f3d-a53f-4d13-b9b3-6a6c6eac7027",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ec363e75-2b70-4264-b8be-a08387278c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40ab3d2-217c-4199-a9d9-9b2ae084a98c",
        "cursor": {
          "ref": "55f7c2f2-d1e7-4b71-9950-3d980de74f9a",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f0b1b9e4-8c1f-47d8-abf3-ea973210ec7f"
        },
        "item": {
          "id": "b40ab3d2-217c-4199-a9d9-9b2ae084a98c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "90f64777-990b-4081-b184-ede317266cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09bbf2a-bf63-4418-8041-6231f5be4564",
        "cursor": {
          "ref": "6f850bb3-8620-41ed-8661-9b15b2c32aab",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5202f160-976a-4713-a256-c443170ca899"
        },
        "item": {
          "id": "d09bbf2a-bf63-4418-8041-6231f5be4564",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1ff9ce4a-a343-400f-a49d-7b2a157a283e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f513166c-90e6-45b5-b9a3-b16d5dbf7021",
        "cursor": {
          "ref": "af16aaef-4a8b-43e8-b2a9-dbd3ffb70d3c",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c66b2f0c-b45a-43a6-a975-963ebe5cba94"
        },
        "item": {
          "id": "f513166c-90e6-45b5-b9a3-b16d5dbf7021",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d0475525-247c-4e42-98c4-bd251848eaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24a5d69-c1b5-4af0-af1c-fd5665dacee6",
        "cursor": {
          "ref": "dcc7ad14-0ce2-4d4b-a6c1-7be5e77e56b0",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ad421a9f-a295-45d8-bcaf-27700bf70791"
        },
        "item": {
          "id": "f24a5d69-c1b5-4af0-af1c-fd5665dacee6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "237d08c0-8f09-4423-b2d9-1ffbe2f3f757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d60227c-660d-4e0e-b505-481b7de887c2",
        "cursor": {
          "ref": "7ba65662-0a20-456c-9161-67ceede6848d",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1b284df7-6600-4318-91bb-72c4fe50acfc"
        },
        "item": {
          "id": "4d60227c-660d-4e0e-b505-481b7de887c2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d29ec404-6563-4406-8de0-fcb5e268296e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c7f1d0-312f-4814-8b35-86940697d033",
        "cursor": {
          "ref": "df2a412a-6491-4873-aba3-7d854a1196c6",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9053a0a1-b47b-4998-b1b1-e1d56628b21e"
        },
        "item": {
          "id": "54c7f1d0-312f-4814-8b35-86940697d033",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0ec63e87-c1c5-497f-8ec0-9c632fdcb208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2feced-880b-4176-a38b-00f3dd3f593a",
        "cursor": {
          "ref": "b4c16cb4-3a07-4ed0-b408-72a667d0e5f1",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "78898a6a-3b93-4827-a681-4479551e4a4b"
        },
        "item": {
          "id": "4e2feced-880b-4176-a38b-00f3dd3f593a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e8fdc30f-99d3-4813-b1bf-9fa1b5c0fac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1477a3b-092b-410d-9404-4a25947405e6",
        "cursor": {
          "ref": "39f65863-0640-414a-acad-7d6014109867",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f7e1bd95-6c81-4579-a19f-4e379e8c714d"
        },
        "item": {
          "id": "d1477a3b-092b-410d-9404-4a25947405e6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b53cbcf8-3dc3-4502-ac1a-5cb183e20631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c93eed-f5bb-44cd-beba-b64acc0e230a",
        "cursor": {
          "ref": "7a2800bd-fee5-48fb-a0d0-1ecde3df0298",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ba0254e6-8baa-49c5-aefd-a4a69b329930"
        },
        "item": {
          "id": "21c93eed-f5bb-44cd-beba-b64acc0e230a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "91d65672-d857-4ba6-bbcb-327b27adae17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c169b4-e969-460a-96ff-4e70a09c3114",
        "cursor": {
          "ref": "cfe80474-3fdc-479e-9b38-677909f2dba2",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9fef7f28-e02a-485e-afe5-59745c520e1b"
        },
        "item": {
          "id": "83c169b4-e969-460a-96ff-4e70a09c3114",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9d2e9e75-eeed-438c-a784-b46749c932ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75f0a3e-904a-42f2-b631-081e491fa289",
        "cursor": {
          "ref": "b3f5dec7-1035-4660-bc9c-72fb343a5027",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a101a098-f34e-4da2-919f-4fbb17156d4a"
        },
        "item": {
          "id": "a75f0a3e-904a-42f2-b631-081e491fa289",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "939c4cd9-b4cb-477a-ab9f-691741314746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914efa44-fd90-46ba-8ced-0b49fecae218",
        "cursor": {
          "ref": "3d23edb0-37f9-4bf3-a2b6-d2d8858e925a",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "79576a8b-8de3-4b95-abf9-fdfa8b6d12df"
        },
        "item": {
          "id": "914efa44-fd90-46ba-8ced-0b49fecae218",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e3755c7b-be40-4fd9-a458-9408019a22be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a580969-cec5-4633-9c47-2b6e7a468070",
        "cursor": {
          "ref": "7c52d562-cb75-480e-a4f4-a5a5f91d5025",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7624b310-da65-4cd3-bde9-071974c8805a"
        },
        "item": {
          "id": "8a580969-cec5-4633-9c47-2b6e7a468070",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8268905a-35c4-4a9a-ac48-4f8f61645c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e5bbdb-8c0c-42cd-9236-9e65f95bd321",
        "cursor": {
          "ref": "73f7ffee-33b0-4b3f-a7bb-c80a5f2762ac",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a043ca41-dcae-4e85-96d4-d18db176fc5c"
        },
        "item": {
          "id": "30e5bbdb-8c0c-42cd-9236-9e65f95bd321",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ad5ae1d7-73b2-4424-b39f-d6f82fea36eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513dcc58-cd36-4f4f-b937-6360bd5dfb64",
        "cursor": {
          "ref": "eef7fddf-3965-48d6-9096-9f88baa00d2b",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e00f4783-f92b-498d-85a9-2390b5eacd98"
        },
        "item": {
          "id": "513dcc58-cd36-4f4f-b937-6360bd5dfb64",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fe9a25db-8041-4fe6-8d4c-98d955e51e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ac6c3d-6d0d-44d6-ab32-e2781ae268c9",
        "cursor": {
          "ref": "548efe84-5cf8-41bb-bde8-7249d2efde16",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a0fe1997-c523-4534-b773-cbf400d457e5"
        },
        "item": {
          "id": "57ac6c3d-6d0d-44d6-ab32-e2781ae268c9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ae95f194-3abe-45a9-998f-ffe6bda9d875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a653ba-064a-4245-b03c-288bb3251bff",
        "cursor": {
          "ref": "d81ec5c9-20c6-4c24-9794-c0987822891c",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6c6dc70b-9121-4694-af68-974a787e10be"
        },
        "item": {
          "id": "84a653ba-064a-4245-b03c-288bb3251bff",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7ae8d4e0-3c7d-413c-8d1f-61492933d81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f22a5b-9621-42e6-8293-d8efeef00e69",
        "cursor": {
          "ref": "cf3e31c9-ba71-4223-b335-221742e77efc",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5ac54fec-326e-4242-9278-5fb7783c8603"
        },
        "item": {
          "id": "25f22a5b-9621-42e6-8293-d8efeef00e69",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1c2ddedc-b9ef-40ad-94ed-41b43e36a864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d2adf2-e78d-47a8-b90e-f5c7f6f3a668",
        "cursor": {
          "ref": "297e0479-408b-4785-a297-394b96665c32",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0b7f5977-d9e8-4e5c-ae1b-bc8b6fe53079"
        },
        "item": {
          "id": "93d2adf2-e78d-47a8-b90e-f5c7f6f3a668",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f2226169-9635-4f0a-9812-b534b64e6591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12480aa1-1514-49cb-b3c3-f47f38fb43ad",
        "cursor": {
          "ref": "682764ed-0686-45a6-9f6d-6a040a3ded95",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3711bd96-83a4-4a40-b76f-be9567aea08f"
        },
        "item": {
          "id": "12480aa1-1514-49cb-b3c3-f47f38fb43ad",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bf77d714-215b-4ddf-800c-2a7ed1be5643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa62176-b531-4405-bcdd-a724296607b8",
        "cursor": {
          "ref": "d8181392-cfc9-4390-a2aa-66c69b2fae0c",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f9adcb2a-ca67-4319-a06d-6ece14f2aa3d"
        },
        "item": {
          "id": "8fa62176-b531-4405-bcdd-a724296607b8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "84fa46a5-1a7f-41ca-b4a3-067269f733b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bedafe-8922-4996-8421-aec8670c1d52",
        "cursor": {
          "ref": "04e9945e-7869-4c3a-a92d-94a5bf171051",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "57d37207-6423-40f7-9050-6234b5b4ac05"
        },
        "item": {
          "id": "44bedafe-8922-4996-8421-aec8670c1d52",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "78158a5b-5ac8-4d05-825a-9653e7c17e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2218aed1-3b44-4be4-bf29-74ea65ac5910",
        "cursor": {
          "ref": "77ffa7d0-89c8-4681-8f2e-ab06a57b8687",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f7760dca-4f63-4859-a44e-686a21e03991"
        },
        "item": {
          "id": "2218aed1-3b44-4be4-bf29-74ea65ac5910",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "128c8bd0-fe85-4e37-97a5-17f74c076f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf09c59e-11cc-4bdb-9bad-bea8fe3c6e72",
        "cursor": {
          "ref": "1489dfa3-60ca-4cc7-81c1-22bc2a6117e7",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9536eee6-7b28-458f-87dd-74b9357376de"
        },
        "item": {
          "id": "cf09c59e-11cc-4bdb-9bad-bea8fe3c6e72",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "89c27924-fa6b-49a3-957b-f48f3b1bed26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6baa545-7364-4223-8977-9386a683de5a",
        "cursor": {
          "ref": "18dd66e0-8063-4310-bcd4-41b4880ab53c",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "faf21a8e-f723-4832-b471-21de7a8f8644"
        },
        "item": {
          "id": "e6baa545-7364-4223-8977-9386a683de5a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "37b56aab-3270-4240-8e8e-22c53a17530e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b7b319-6971-44cb-80ba-c38daac6b4a0",
        "cursor": {
          "ref": "a86f5bdb-7b90-4b76-92dc-dc182fc85f01",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d4e40452-a6a9-4f05-a46b-7c49b2260da1"
        },
        "item": {
          "id": "a3b7b319-6971-44cb-80ba-c38daac6b4a0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2c169472-31b6-4675-9559-327298e86808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3aeaab-3659-4621-ba7e-b59c9c68c5bc",
        "cursor": {
          "ref": "4911528e-d5b1-4dcf-942e-9ad7590a5a58",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "70460983-3d2f-4731-a972-5e44d8f684f1"
        },
        "item": {
          "id": "0c3aeaab-3659-4621-ba7e-b59c9c68c5bc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d8be250f-9603-4505-bfb6-6ca5309fdada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c629d658-c046-4865-8a45-9291fb29e5f7",
        "cursor": {
          "ref": "2c11b484-31d7-4fbf-a1ad-b3d3cd79c64c",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "61b0e25f-596b-4f88-9f84-7f718b8dd085"
        },
        "item": {
          "id": "c629d658-c046-4865-8a45-9291fb29e5f7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "93d26597-0f2b-4776-bc13-54f238191b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c43bfd-636d-4535-a87a-33728e25a17b",
        "cursor": {
          "ref": "c398be04-4d3f-429b-8275-b9d2402e4407",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "54379d96-8953-4f0c-8748-c8a552eee3a5"
        },
        "item": {
          "id": "17c43bfd-636d-4535-a87a-33728e25a17b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9ca02c9c-df4a-4fe1-9dad-e111439552bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62529f8f-abc9-4551-8305-1d0b297d719b",
        "cursor": {
          "ref": "722d1859-5a9d-4751-8c47-ba1fb10f1ca7",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "230fd123-6591-4ce4-ab02-fd903950cd24"
        },
        "item": {
          "id": "62529f8f-abc9-4551-8305-1d0b297d719b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9b8b29e4-e6c5-4689-a9b3-71af5ff2567e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84631f6d-adff-4f03-8925-f64648465a6f",
        "cursor": {
          "ref": "1e486f51-c7f3-4c12-805b-9c27d6d0fe7c",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f7e3fdbf-915a-4d56-8e69-adffc33851f1"
        },
        "item": {
          "id": "84631f6d-adff-4f03-8925-f64648465a6f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "67550df9-3484-4e63-b6e4-d7b9dfe76bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e31305-75c0-44d6-9164-39bba9098dbf",
        "cursor": {
          "ref": "68d8c374-9be1-41f2-b8ed-6c88bbbb400b",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4105e094-1c3a-4b9e-8161-a87d17cd9ac7"
        },
        "item": {
          "id": "41e31305-75c0-44d6-9164-39bba9098dbf",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b8a8541c-5d70-460c-895b-72796378912e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cdfd1b-41e0-4743-8373-9fec35010dfc",
        "cursor": {
          "ref": "a53da851-69ea-479e-b324-f467b5810737",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5127ff09-235d-4fcc-a35f-6c0a080e72a1"
        },
        "item": {
          "id": "b9cdfd1b-41e0-4743-8373-9fec35010dfc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "086d8642-a196-4b69-b55d-ba5000349860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fa9974-48bc-40db-afbd-954d6d732c9b",
        "cursor": {
          "ref": "236d3e8a-a676-49f6-b410-004d65f4e410",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c7aaf010-a72a-445a-b604-757bea261bfe"
        },
        "item": {
          "id": "e1fa9974-48bc-40db-afbd-954d6d732c9b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5e627628-9c02-4470-b89b-6bcc6f1c6c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a14e16-c20a-4c4d-b7fc-9fe5fc973c9c",
        "cursor": {
          "ref": "1dc2212a-4f4a-4bff-94b4-4fa610f20c39",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "cd46f445-d3f0-40c1-9784-3f24043d0bcf"
        },
        "item": {
          "id": "72a14e16-c20a-4c4d-b7fc-9fe5fc973c9c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8d785fec-28fd-43fc-880b-79d1bb3de272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80daf622-edf2-4754-85fb-e521d31b5e1c",
        "cursor": {
          "ref": "284dfd4c-2ad2-497e-acd4-73d6d9a8877d",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9edb8ec5-8a27-4a26-916e-42b43c40f6e0"
        },
        "item": {
          "id": "80daf622-edf2-4754-85fb-e521d31b5e1c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "92853d38-fcf7-48fc-9c93-a999cf9d5e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d711e0c3-55a7-4a86-88c5-ca6ddd3da2f5",
        "cursor": {
          "ref": "161d869c-6505-4965-9781-aa391b447f84",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a5745f7b-106e-4553-917c-4c376c1660d9"
        },
        "item": {
          "id": "d711e0c3-55a7-4a86-88c5-ca6ddd3da2f5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ea7b0010-a997-495c-885c-5d8cab6c7d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0798a90-d4b1-48e8-8a3f-951b448b1e5d",
        "cursor": {
          "ref": "fa6359ef-0981-4772-834e-905b2e05b185",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ae130e5f-7b73-4249-bc74-da238a43f718"
        },
        "item": {
          "id": "b0798a90-d4b1-48e8-8a3f-951b448b1e5d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cecbdb4f-72a0-4576-ad06-250f3c5d1e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a025f03-856b-4408-9370-f4be282315c0",
        "cursor": {
          "ref": "a54b269e-faeb-4c89-a9a8-ad9a439ae688",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ef2897e0-e690-49e9-a5bc-b783f4d1a0b3"
        },
        "item": {
          "id": "5a025f03-856b-4408-9370-f4be282315c0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "102690f8-93b1-4072-b180-41029a916e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d3994a-a654-4ee8-a6d1-cfb7488fe565",
        "cursor": {
          "ref": "fb5531c6-ba31-4975-b5ef-c5054e5ca436",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "76596d17-4b90-4423-945f-3bb08ee529c1"
        },
        "item": {
          "id": "99d3994a-a654-4ee8-a6d1-cfb7488fe565",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3690cbd6-dd85-490b-b419-60d9678b7f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50b2c69-088c-484d-b3e4-34657ed43d7b",
        "cursor": {
          "ref": "8a66c682-816c-4785-abff-bd65f6caf0c2",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cdd893a7-28ed-4bb1-8b94-b9f59b8ddc0d"
        },
        "item": {
          "id": "d50b2c69-088c-484d-b3e4-34657ed43d7b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "639b3228-1e25-4db4-beb6-4ea72b4f67a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5133fa-00c5-4610-ae35-6b29bf90ab52",
        "cursor": {
          "ref": "482c20ee-cec4-4700-8773-6a3a7e555a36",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "64537b6d-0abf-4403-9349-832440e84a2c"
        },
        "item": {
          "id": "3c5133fa-00c5-4610-ae35-6b29bf90ab52",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7a038c48-6390-4f2e-be1f-98061b74a199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e2394d-712c-4b6e-9343-e127e03ca814",
        "cursor": {
          "ref": "3ee74eb8-8459-4724-9607-30df9f18cdf4",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "54ca5438-328b-4a7b-b9c9-b090d285d405"
        },
        "item": {
          "id": "39e2394d-712c-4b6e-9343-e127e03ca814",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1f70a193-7e3c-4a23-ada2-6115c788fe85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3905303-48dd-48dd-813b-6e87bb2e2ca1",
        "cursor": {
          "ref": "2cc19d43-7054-4d83-b4bf-610211649ca7",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3842ccc0-54fe-4f37-b129-5ee1ec50c2f3"
        },
        "item": {
          "id": "a3905303-48dd-48dd-813b-6e87bb2e2ca1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "337b741a-61de-4e76-9b20-ae4a4da3fb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca6befc-2456-486b-bdc9-0997ae0ecdb0",
        "cursor": {
          "ref": "e7c11cb6-5ddd-4da5-adf3-4ad64261b979",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1ee341ab-7ea1-4fce-8484-57705d5ff930"
        },
        "item": {
          "id": "0ca6befc-2456-486b-bdc9-0997ae0ecdb0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "73bab345-6194-4303-8990-327e73d2a57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e27f74-bf10-48f5-bdc0-1652376cefca",
        "cursor": {
          "ref": "b75f77aa-3069-423c-9396-b34c10b0f0b0",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "38cb7fba-932b-4b79-a959-87b6aebc0a6e"
        },
        "item": {
          "id": "88e27f74-bf10-48f5-bdc0-1652376cefca",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "293376da-a9aa-46dd-960a-6d3838d3ace9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af8bf9a-e9fb-475c-bf54-42915a570a57",
        "cursor": {
          "ref": "2e790cff-b06c-40cb-bbb6-11af5d434d54",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4e5049d0-a92a-4ac4-a36c-fe96b28a7c4f"
        },
        "item": {
          "id": "2af8bf9a-e9fb-475c-bf54-42915a570a57",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c353687d-eef7-4d46-98b6-958aec360727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fc5361-4f11-4dae-a9ee-dc71e1a5c5ed",
        "cursor": {
          "ref": "ec8c8cfc-6772-4c99-8ece-cf1b6d566aee",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b81f81aa-81d8-4534-b319-e046f8e211c2"
        },
        "item": {
          "id": "58fc5361-4f11-4dae-a9ee-dc71e1a5c5ed",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bc66490a-3d45-4bd7-8f62-eb858dd7bc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d06882-c0b9-413a-9cf7-1613849560aa",
        "cursor": {
          "ref": "86ce4381-9dac-4f35-b572-507df73d28c5",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c9e2d451-81e6-4712-a586-00270ba7c9d6"
        },
        "item": {
          "id": "90d06882-c0b9-413a-9cf7-1613849560aa",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "631b515b-428d-4838-831f-a85101d5a5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d18458-bccf-421c-a4bc-61b96c6ca764",
        "cursor": {
          "ref": "a2cba3e3-d595-4023-9452-03d6d1c190e4",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a42116f8-7e0c-40da-aa04-77ff1d0ebee2"
        },
        "item": {
          "id": "76d18458-bccf-421c-a4bc-61b96c6ca764",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c6787621-0e88-4ea3-bf16-b78e6ac19145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbefc74-9a6e-41f0-a42d-b00ef15bd924",
        "cursor": {
          "ref": "86c81164-bedc-4526-94e2-49377208073a",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1dc0e491-ee8e-4a01-993c-2b91a1ccf72b"
        },
        "item": {
          "id": "cbbefc74-9a6e-41f0-a42d-b00ef15bd924",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d1ada08a-dbd8-417e-8209-13ef0d9a6323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9213e65d-cec5-493e-8a23-a91295fd8159",
        "cursor": {
          "ref": "069b1465-4055-477b-9971-f00c8190d98a",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e2842027-62c0-4490-a07d-bc3cb6263515"
        },
        "item": {
          "id": "9213e65d-cec5-493e-8a23-a91295fd8159",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ea530b94-554f-40ef-b05a-a879687beb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba33f51-14c6-44c7-917e-7f5187593b48",
        "cursor": {
          "ref": "746e452a-dcbe-46c1-8ecd-d0deff82fa84",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1183f16f-dca3-4594-bee1-5f326a4679ba"
        },
        "item": {
          "id": "6ba33f51-14c6-44c7-917e-7f5187593b48",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "83713b44-dc70-41a9-b98f-7acef4cf0692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0aea7c5-60da-4822-9d9c-4bbb8ef0bd4f",
        "cursor": {
          "ref": "4ef0f7cf-6b1f-4da5-bcfa-7abfcfadadf1",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3bdbd33c-f0cb-4291-90a6-9c165ed2694e"
        },
        "item": {
          "id": "b0aea7c5-60da-4822-9d9c-4bbb8ef0bd4f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ceb52213-7e58-4ff2-98a9-4c2d134c30b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a570a7-e107-4a1d-8b8c-d4bd82e593ce",
        "cursor": {
          "ref": "6d5a7093-773b-40ac-97fe-842eda7da2b5",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "960003db-3405-4fb4-b83c-d0f28559b913"
        },
        "item": {
          "id": "11a570a7-e107-4a1d-8b8c-d4bd82e593ce",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0952ecfd-1f10-4f83-b1dc-0cb8104e47a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887b813a-84e9-49f0-88ac-a793fc30484c",
        "cursor": {
          "ref": "91ec73ae-72af-4610-9fd4-89d0fbe312da",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7b038f01-d5ff-46a4-a2e8-d7622ae240aa"
        },
        "item": {
          "id": "887b813a-84e9-49f0-88ac-a793fc30484c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bee36c91-60f9-42ac-932e-7b5a8965c576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078c479d-0386-4410-93c2-34256c9d02fe",
        "cursor": {
          "ref": "d79045a1-7b46-41f9-95df-afeb6b47d52e",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5cacda3c-c5d7-473d-87e0-68cc5a40dbec"
        },
        "item": {
          "id": "078c479d-0386-4410-93c2-34256c9d02fe",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3a58049c-eec7-4827-9ab7-06b014450abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef44b506-1843-492f-ab92-e359a5873184",
        "cursor": {
          "ref": "599c6352-636f-43b4-8802-7da5321994e4",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ec37a600-404c-46b1-867e-f367816b9741"
        },
        "item": {
          "id": "ef44b506-1843-492f-ab92-e359a5873184",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0f052657-8619-4ed7-8092-d110ca5d2693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159fef4b-6da6-46af-af79-5a8139f6838c",
        "cursor": {
          "ref": "7c291221-a6ec-4e61-89dd-e93a0b6875f4",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bbab24b1-ae23-4156-b9af-f1c9cb928d8d"
        },
        "item": {
          "id": "159fef4b-6da6-46af-af79-5a8139f6838c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "570b0e4b-d1fb-440c-8e5d-02a3e6b477ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fb4c66-d0a0-41db-a3e2-000a4c3c249c",
        "cursor": {
          "ref": "dba2864f-c2d3-4ae4-ace5-f6d4a8cb1de6",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9407d8ca-5c2c-4f18-914c-246d340e17c9"
        },
        "item": {
          "id": "a4fb4c66-d0a0-41db-a3e2-000a4c3c249c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ebefaf26-f71d-42d1-ab53-b88245e21a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8cc55b-5b56-45f3-b779-f13e118cc51b",
        "cursor": {
          "ref": "5688f685-9cec-48b3-a299-a7cddf561072",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3fdec5c5-3ba8-425f-857c-96b360417473"
        },
        "item": {
          "id": "ce8cc55b-5b56-45f3-b779-f13e118cc51b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f102390d-a3d2-4537-b64e-38667a4f44c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4455ff03-4bb2-4443-b16b-98b0b9fb0e4a",
        "cursor": {
          "ref": "bfff1131-c8fb-43a4-bc42-45428757e43a",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6055be91-d510-46f3-907e-d68dadecaf22"
        },
        "item": {
          "id": "4455ff03-4bb2-4443-b16b-98b0b9fb0e4a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "22623d09-7b4e-4d25-aa2f-082aa08253c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d2d616-70b3-4e3d-a001-e2538c97e140",
        "cursor": {
          "ref": "84fecc6d-b06f-4ace-9e9d-9873c845298a",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a40ce162-06bc-4414-a401-bee6391ae921"
        },
        "item": {
          "id": "f3d2d616-70b3-4e3d-a001-e2538c97e140",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "adb35ab8-434e-46d1-8a1f-2e1d831f5c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccfe2cc-2bc5-4742-a7d1-b8b3b0bc6761",
        "cursor": {
          "ref": "e3b943cb-aa27-4651-aa6a-c8d5bfc059ef",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4c772523-ff51-4c12-8f8c-8860161704f5"
        },
        "item": {
          "id": "9ccfe2cc-2bc5-4742-a7d1-b8b3b0bc6761",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f0be479d-22fc-4306-b56b-e24e7dde4de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f909b786-a19f-4ba0-96f2-ed78550c8ded",
        "cursor": {
          "ref": "2e97b8bf-fdf5-409a-aa21-9ad20396b033",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bccddd01-33cf-433a-aea9-b3ed6047a9e7"
        },
        "item": {
          "id": "f909b786-a19f-4ba0-96f2-ed78550c8ded",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b3d74e9b-7052-4c43-810d-b94010153cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f4cf57-e361-43ed-85e0-4a802ef00a0a",
        "cursor": {
          "ref": "41f3d735-ff16-46b1-9d2b-b63146280b2d",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6027e925-22d7-4317-b972-aa254d6c2c0d"
        },
        "item": {
          "id": "60f4cf57-e361-43ed-85e0-4a802ef00a0a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "83dfac89-6578-44f1-8d00-05e45062c670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04be8db-dc49-4b95-a84d-c318e2e34f98",
        "cursor": {
          "ref": "26c5f6cf-bb5b-40d2-baec-755b9d5af1c0",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "674cfc1f-0b7b-436d-ad21-3f495723b063"
        },
        "item": {
          "id": "d04be8db-dc49-4b95-a84d-c318e2e34f98",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f7ac9a42-bd19-4de3-9741-529dcee15556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdff10db-f0e6-4114-9794-e782549ef9c3",
        "cursor": {
          "ref": "7206b5fc-2a74-47ce-a0ab-15f700f00342",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4ac36456-7003-4e69-8696-286722dfeef7"
        },
        "item": {
          "id": "bdff10db-f0e6-4114-9794-e782549ef9c3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a847e2f1-1ef6-4af2-8b64-6631313cb2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9989e79-54fc-4dee-9204-efc5fb18410b",
        "cursor": {
          "ref": "6884f836-b357-49b6-bbec-262cee98ab15",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "84bf0cff-31bf-4ffe-8782-a3b693d40929"
        },
        "item": {
          "id": "c9989e79-54fc-4dee-9204-efc5fb18410b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "33649647-0b94-4278-bfdf-2d1ea253b7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f45c3bb-6f2e-44f7-9473-b0780fa193a7",
        "cursor": {
          "ref": "7d2a6290-323b-4fa6-9892-26bddabea584",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b6fc3508-3c8f-4628-9842-65323e3481ee"
        },
        "item": {
          "id": "4f45c3bb-6f2e-44f7-9473-b0780fa193a7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5a21de8e-ca4b-44f5-b8b6-eaed8be6a3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d673cc80-29ec-4ebf-bd13-ef1331d4da3d",
        "cursor": {
          "ref": "968da134-f1fe-4d12-acd3-fcbefc0be3c5",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9ff1df36-66d2-4d9c-946b-fa6ecc4e9e3b"
        },
        "item": {
          "id": "d673cc80-29ec-4ebf-bd13-ef1331d4da3d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "32ca1e33-704a-42ae-8ecd-2f0a92865f04",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4345c7-4515-47dd-8bc1-d6922318a897",
        "cursor": {
          "ref": "3d37e3eb-0815-4ed1-b87c-5bb98154c9c0",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "0128be53-a439-4cc1-864e-c1ed8aa8ca88"
        },
        "item": {
          "id": "8f4345c7-4515-47dd-8bc1-d6922318a897",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ca803e4c-d931-4890-a3a1-6099458f60f7",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e72de23-987d-429d-8d87-cc7d0bee2e25",
        "cursor": {
          "ref": "c42c57a3-2650-4932-b561-4414c3b62a10",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d871a5da-4f6b-452e-8994-ec7d2d223dd3"
        },
        "item": {
          "id": "9e72de23-987d-429d-8d87-cc7d0bee2e25",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1605f112-314e-4332-9ea6-077b2bf5f6ff",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1881aff2-7bb1-4aec-96b9-1346628720fe",
        "cursor": {
          "ref": "59362226-6528-4119-8c24-505c3e1432b2",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5b9f6342-3c66-4fdf-9f3b-6718687893e8"
        },
        "item": {
          "id": "1881aff2-7bb1-4aec-96b9-1346628720fe",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c64f56bc-b954-4c7a-a90c-0177c12e5e5f",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f0edd8-bd77-477e-b9e9-03a4750f7ca5",
        "cursor": {
          "ref": "c9dcfd58-c29d-44e9-b514-b545dff826bd",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "181fd62b-c6ac-4c38-a531-79a3b436eb4b"
        },
        "item": {
          "id": "37f0edd8-bd77-477e-b9e9-03a4750f7ca5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5037461e-b1d5-426f-9976-1fc4f3d9166e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f0edd8-bd77-477e-b9e9-03a4750f7ca5",
        "cursor": {
          "ref": "c9dcfd58-c29d-44e9-b514-b545dff826bd",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "181fd62b-c6ac-4c38-a531-79a3b436eb4b"
        },
        "item": {
          "id": "37f0edd8-bd77-477e-b9e9-03a4750f7ca5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5037461e-b1d5-426f-9976-1fc4f3d9166e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae71b1e-ac0a-4d48-a50e-3ec6185f0120",
        "cursor": {
          "ref": "c57c835e-e99a-4b91-ac27-d17323f3463d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "052a2d6d-21a0-407c-bc5e-1716359a4411"
        },
        "item": {
          "id": "fae71b1e-ac0a-4d48-a50e-3ec6185f0120",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4f028442-3011-44f0-a603-8ab7de45d07f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fea262f-1ad4-45aa-b466-ce6dc309bb45",
        "cursor": {
          "ref": "1d69d65d-2495-4139-98a5-c7813e20ef49",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a414f305-9b2c-481d-8d48-1ffe1ba9b531"
        },
        "item": {
          "id": "0fea262f-1ad4-45aa-b466-ce6dc309bb45",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5ae2bdb5-7417-4c6b-8b99-166092bbae25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}