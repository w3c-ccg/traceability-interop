{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "af9f8cc2-ecc4-4cd9-9b6f-fbfd0e5e5eca",
        "name": "Clear Cache",
        "item": [
          {
            "id": "77e6c14e-e91a-4b89-8ec0-a7967e964725",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dbcfba53-ade7-4cd0-87fb-41a596cd7ed7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aab2dd22-e2fa-4fc3-96e1-fda074c2f9fc"
                }
              }
            ]
          },
          {
            "id": "13223c7c-25ef-4ebc-95a8-f795160aeb9d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed176454-29e7-4f36-aaae-62ffc631ebfb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c08272f1-a427-4cec-bb76-2c82b0a9a3fd"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1067ec5a-8382-425c-b312-53336c938a0a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5cf1d837-474f-4323-8207-c320a511613c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3868bdcb-5f29-4686-beab-bca0808ee8ca",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ba621c2-ad77-451d-a141-b38ba43e8b69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "077ec95f-a64d-43b7-8a3c-e84ba64a2c6e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a8f45cf4-fe4b-4b36-87b6-14119c754300",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dee12c4b-57bb-48a6-a793-bc47f42ae07a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "472216ae-c445-4f04-829a-0d306f0b27da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7fb2f2b5-4f17-42fc-b7b0-365f5f8ed26f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb0c27f0-3cbd-4f08-bc2e-157f2cdab6e3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6d29d4d8-be9b-4c1c-a443-613d369d80d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e82e7954-be85-4cf6-bb3a-7bff62b11aaf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27239c43-e389-4dd2-bc98-2bf1f3329595"
            }
          }
        ]
      },
      {
        "id": "776fcea8-91a7-4b64-a048-55e6ff7e4ca9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "80a58752-7d4b-416f-ba03-dca5c6aeb9f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f199184-2f48-4ca9-bc8f-da13725d760d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0aa789b5-2d0d-47d0-b9bf-1c4656303dc9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83112f5-f99b-44a0-9792-c28e40c48788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ae04b85-483f-4035-96fd-572506e8a032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b5376a-48d1-48ba-9c65-f9409bc0e239",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71002071-cb7e-40a3-9157-952392642975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e3a75fc-ffe7-4911-bd6f-6a08f4ef5d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5dd0dc-1b70-4c0f-b0e4-3b8819635cea",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c874417-d983-4868-ac87-3bdf29e7002f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58a65862-0642-416a-8be6-e9324fc0a113"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "65550bbc-a130-4c9c-92c7-c88accb1dddc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "559cf8e7-785a-4d18-8011-84dc352352d1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975235a0-4b96-4a63-a890-c2488e1fc08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98316df9-dc4a-495b-acb5-6b963753ebb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93c1a2e-a30e-4e77-aaf1-12c5ad73a718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3352dc3-0e58-4abb-82e0-edfbecf9deb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1b7033-6b30-4464-9522-23b6aed77686",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db2d6e9-0093-4554-99ff-dfda70538c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d58e9886-4a88-4276-aa69-dd6fc142d3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd2cc16-c15a-4446-9f7b-e10300a96253",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "c977d6b6-01eb-4347-abb8-fc3182552eda"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a7b9d36c-7a38-4dbe-8ce4-f2fa50bb4c46",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5b9ba691-d0ca-494a-ab43-7fd9e5820c31",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5038b09e-bdc7-41f1-bb80-f400cabec69e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b7a134c1-af5b-436c-adba-33f82a5f6c30"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34997eb4-2f91-43ba-b576-58f0acaf59ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "eaccc5c3-081d-438d-9f4c-01a6a98c5c26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da391f39-542a-48c4-96ee-4dec2cb9ea66",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00495b6e-553e-4462-bfbc-9a6a8b1c0c34"
            }
          }
        ]
      },
      {
        "id": "0846d742-9ccc-49ea-967e-b3c5774190cf",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8297afe7-a555-497a-a05b-bc70d78043e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b70ac69a-1fd4-45fa-b829-fe2cde23254f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8a62235f-80cf-499a-84bb-f3ccff626d44",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f476a8b4-8a9c-4759-812e-fbff2d5d0f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fcb405-ae20-4363-afe9-35a25ed890b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596fa91c-d18d-4208-b36e-1b1e56edd349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d083cab-04fd-4646-95ab-5143a868ae70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b63d1fd-33a4-4db6-9b51-674d489501c4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d174eb2-8933-43b7-ad15-dbd29b422168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a55b89-30c8-4a99-a0e6-e66396178c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d0d6bb-5e52-4c60-b192-83b747db5d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36ecced0-e584-4efa-8735-bfe597389bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1830c6f-933a-44bc-83ee-eb348076c01e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcaecad1-b53b-4b16-b46e-ba8b5b5b4d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f02ce68-8621-4b2c-959c-df8de3368e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31d6496-0678-4e0c-8dcd-9c19dfa51432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de7b3043-4ff5-44f0-ad86-0223c9c994a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b89648a-07da-4098-9ff4-7c072a970b0a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d739cced-e4cc-44b1-aab4-890898b47bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdea984f-911c-424d-bf4f-ee47950f0b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b847d5d6-55d4-491e-b606-cc1528830a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e1d1395-4d6d-4aa0-8143-81a63814bd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c087688-02a0-43b1-8355-7b83a389c36f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ed5a2b-9939-4dd3-be82-8a0899f57e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90134c30-226c-4c5d-867e-1ff7acc78931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a3d2a0-1240-41e2-9f66-a70dc86a3720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79536731-f727-4ca3-89a2-0b8c34133402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08233d0-b79b-4100-b6e6-377b5cecc312",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18e01b6-55f7-4926-83c0-53aa1d64c2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6204dcad-025c-4ae8-aada-79882f8e2708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7252e1e-2483-4bfe-bdbb-6e96ae2812f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7e8ce7c-3f1e-43f3-8800-7fb85626e247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbc48ea-e9d1-4a2c-ab1c-75cc75f9b201",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299bdda3-356d-4a4e-8cb5-a5ee52c32355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d362b5-41b4-4138-ae1d-19f24c69a471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fffd7fb-9c0e-4493-b069-5990d321ad07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70bc8ea1-13cb-4027-a0c0-08345606104d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ad3da3-0fc8-4c46-959a-e0c30cda42c8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f513938-cce5-4dc9-be28-bb627346fc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85fc3920-cd4b-4f98-92c2-a53daaf6cf70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bdace2-3425-43fc-8415-26522b0ff206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34bee41d-3147-40ca-902e-b90c4dc6661f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8042c9-f1a5-4160-a3d8-69f51e9bc021",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56dc6805-769e-45aa-a3a8-b86f0f222c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ea5afc-a350-4b9b-8310-9589289d2e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0855725b-5f0c-4514-8037-eaaee65f361a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7f1c173-49cd-40b3-a932-d8c6e1581547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4ffdaf-616e-450c-bbed-ef9987626cd7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b787d4-6fb2-4e02-aa2c-07447fe3075a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5465f8f-3f72-4fdc-b9c9-06687de97923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728de86a-5e77-4572-928d-5bbf72035146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50327965-90c5-4bf0-b45d-268f7f4530ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54d249d-1784-46f0-9713-3fd8f0bf9eaa",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4136868e-039d-4a82-b937-6d3661b257d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3bc84b6-8564-48d7-b7f2-1d95480df390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8e2d4d-f7d2-4d1f-8bfc-4ab432776f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9cc9703-0445-41dd-ab78-d86ff77ccc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c73933-b4ef-4c6e-b406-bc97c0f08106",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7e9005-a99e-468a-902f-6c334bcc81ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "768590f2-ed9a-4c41-9a78-da34946a3aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd90e05a-f6b8-4793-85f5-d25545a2c71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f6555a1-9361-4f1b-b002-0d4ac530cf1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459f9220-3351-41e4-ba3d-0bb10fb8701a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d806bc8c-79ca-469b-91b0-9a0058873682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8706a970-d144-49d4-8947-3036cdea1c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600bfc0d-fe39-43fd-be09-a1ab49161db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68a997b0-e649-4de7-9701-bba2446be5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e9da86-e349-4e24-9833-c5d62f85cb06",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047080ea-96a3-4fa9-867d-6dc0102b8ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24728556-9eeb-44fe-bfd4-ada9f6a0700e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b01b4d-1a0d-4b82-836c-e2863b325f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a7a3504-928b-476b-a9b1-c196c18bf453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db90f2a-469f-487a-8e58-7a456e656811",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565ca3d2-b4ab-4883-9cc4-8c6657e334ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66915a09-8bb1-45c2-8c4c-7aec50ef5847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e47737b-077e-44bd-a9df-f9709b06c7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32de19d4-b32e-4220-816b-15a35a297004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e06ab70-be06-4dfe-bd0d-648aae758030",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1127ba-8171-4338-82c2-d99ac7166c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873ce4b4-f519-4252-92c9-df8a41b264fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe441a00-4bea-4877-93c1-a40b8049e09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af414bcb-057b-452e-828c-aa8a7ebcc00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9798f0cf-a6ed-4f60-8d67-e230fe583187",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873dff84-5e7b-4adf-af56-3bbd68861efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c418b6-7de1-47ed-9838-a27844cbdd02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4425cf-28f7-4b83-940c-eec0f12560a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcc1ffdb-9bdc-42d9-9ed5-d027e78d92bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12cc02f-eab1-40f7-9471-3dff5fec0ae3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1a04eb-fc62-4a7d-8339-6d2377e9cf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d936dc27-adc0-4ca4-8590-1b18509dc581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c740e08e-4c86-4d7c-afd9-4872373cf366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9618eb4b-4ba2-454b-877b-10fa24143666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9c1df9-be0e-40ee-ac5c-12dba7706d45",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172d4c8a-88a4-467f-b6e4-2889ae8472aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab89ffbd-3316-49b6-bd55-9a86abba95c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ac19c6-ec7b-4163-bcf1-ddfcf7c9f1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b70758ba-85f6-4dc7-9a30-16ce98a03f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33b589c-a682-4aef-b13d-d834ab9b437d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9a1a56-22b6-4e18-be64-a4804f87b33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d0b283-7436-4aa3-94b4-48c7aa57e046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0716c93-0370-41bb-8cb6-620ba6868c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2fd18ad-90c7-47bc-a1ad-35888ba34ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d387f7-debe-409d-8241-d51bc83580c6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9acdada-42f8-4907-805a-67842167af16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef96a0bd-1ab6-4e11-a876-07a084198a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231ed3db-804d-4b18-8f11-c54768add38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbfa7f41-f3f1-47fe-b06c-65743dcbf526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284f9551-7147-4265-a18c-894a7fc19581",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe90a09-9279-46b6-a52e-73c5db94526a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ba9e0e-bf0a-4756-90cb-982772c33004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd2aa49-1483-4f13-9846-952adfc10499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4185bc88-a585-424b-9538-9c98982962b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af01cf0-30b8-4cd6-9e50-c10d5ff89525",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5261843f-89cc-434c-a9a9-7cedd7c12ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2fdcac-2a17-4445-aa72-f200c4803cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce7ad2a-beb0-4b42-bd93-c79bdb072a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d648c6a9-9c01-4736-b885-93e7bdcb9ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2937dac2-471d-4ac8-a33e-1e1a53cd10dd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766f2b79-55a2-4598-a81f-cc3ee88aa609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc075a3-0d18-432b-b4d7-d65e8a9dd4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b41998-b4de-4561-8249-2dcd9d354668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3f955d-066a-492d-9f13-301d2182b2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3da51a-71c3-4f52-8f4d-a3ad278f4ef7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d5267f-8cf4-4c0a-8082-d0d4e0b7e71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1faeaae4-2256-438c-bd65-ba58baef0669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a5a701-cb79-45fe-bd71-9e41a558d80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc3e151-bacf-471c-bb11-32d39958327b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919f5c05-907b-44ed-b178-81259d78b5c2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5194c1a-0961-4155-b442-4f4e7931d8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2360c6f2-788b-47d6-a7df-b621aba2d5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8ee135-fc1a-47c9-84aa-2a0ea91d1ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b446ef16-100f-45d4-970a-e409239abbc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72714fec-0e5b-4920-bcd1-b8be28c2eb2b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5c7a1a-28da-465a-bb8f-9b2b2c12497c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac29092-58d5-45ee-a738-768d37a5e3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ae4c62-1bf5-4812-9be8-73b8f6164cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f79ec01e-4de4-4968-b5cb-a8c6c72676ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db23ba45-989d-40ba-b168-ad988feb0981",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a39dcb-ce04-4d38-bd32-6751feda511c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d904581-3e9e-49e0-a0b8-0cb6f6bfd06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c9f2f6-0f02-4e84-a185-1501565c69cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64dc09a1-8178-4c2b-b1cb-c63b6874a05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe85a363-c48b-4f14-9158-3daa5c8b933f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f787fe4-f324-4e14-ab27-68c6f0cf50d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c713972-80fc-4e3a-8b15-f72344f18361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7ec222-3429-477b-921e-edeff1916ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77b3b421-3bfa-410f-8eed-ce67074a6e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6435297d-4903-4338-8d5e-fa3f15e30a96",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d04f6c-d3fb-4c50-be58-62b8a56b24a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ffe3c9-1028-404b-8355-2f4c56ed8b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4faf3e-4857-4a8f-b612-949937289194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c96ed06-f65f-4cc3-8f1b-da55ce288849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18340b07-3fe7-448c-b9dc-486560fae446",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdc3d84-6168-48ba-b943-0fbea4edc32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9e3cb0-9320-4800-802c-24b003cc4353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc2feb0-7206-47cc-916d-1fb7df445f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c7380fb-49a4-461a-9a2b-bb90515e05f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236aa365-fecb-4380-ab3d-0f613fc186ec",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01af6312-ab1c-454d-98d9-30ec2a859161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56f53d0-8b76-464c-a8f6-c750ed395551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d61f292-2647-4719-9aa1-3f19be2587f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f51f9723-6277-4994-acc5-be7aab1fb055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a0a6cf-35da-4a7e-b2cc-cce0ddcdc0df",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2fe9c0-481e-4bd1-a597-09c86244b822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc452d2-6e4c-445f-a674-ff2725ad709a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41d3032-8fae-4755-8ea4-7cfa5ee6159d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35091edf-61ce-42aa-840b-9e384074a77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6202093b-ac6e-4c3e-abcc-8b4454888256",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf6053c-0795-43c3-9049-cda77e536f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c181df-296d-43c2-9ec4-b7742e94b51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c190754-e7ef-4751-a25d-41be7b072d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf29333-7ce0-42cb-b2c3-697009f61d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b306e57b-407a-47eb-aff6-c43240ff9193",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4150ca58-e3ee-4e5c-ac0e-5040f6e33fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d21fe46-2cfc-42ef-b8fd-1456a3793f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf12d20-93b2-4256-94bf-379bdac28c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "74ebe53a-6b5a-40db-a560-e6d1f17ba19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5c53de-5638-4eed-94f0-21baf4e118f4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997ebee5-57f6-4c03-9273-eed84124726c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01462c78-0fdc-4bf0-991d-b193c52a8ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eceb742d-ab87-48b2-b1d1-a8b893cc22c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "404c5bac-1d46-45a7-b7ee-6604b48fb8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b3034e-34c3-4ebf-83ed-f4ed4cda86fb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d376f7d-a5b8-4e96-8f98-151f7a80b66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466582ba-7d32-4a68-aac2-db313245694f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa5208f-8031-4f64-888b-cf8431b48894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbc19db-ebbe-46a9-9435-8ef8eac08eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5e7942-4364-4a4d-89f6-003dbe2b8e59",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956c0d9e-d364-42ba-ba61-e857070489dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8166eb5e-f551-434b-8c46-1405e9225344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b7ccfd-867c-4cf9-a216-28d961fe1624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "445e293b-cb3d-47ee-b161-3c38d10b6f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37eaa81-7a7d-4d21-92e1-344506951123",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b38ea9-2e53-420d-9440-f8dcdd3bff75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f94d52-41f5-40ce-8415-6762b498b4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1fd79b-40fa-4cc2-b85b-1b5454cd2d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "11a03a50-deca-4ee4-a8b2-7249273e7527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650f7116-ecfa-4028-8e84-cd37b31c89b9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f71a210-8679-4c6e-b276-363df927b017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf7062f-c1b0-4058-a6a0-3441ef9f07f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5575ebda-450e-4070-a139-44f1973ec0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1083ad95-c6ec-4a13-80ee-2bd44b94f648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102374a5-8d07-49d6-8d32-7227d53e7f72",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678074e9-bea8-427e-8293-524e2eb159f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6246b38-8d47-4c76-8d57-15c2ab5cbef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb1c092-e827-434e-92fc-de60deed8216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "acd791ba-d843-4b0d-bb82-3bbc18ad9b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3d34e7-b483-4aaf-8de6-7e9ed77fc899",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a52f7f5-a89d-4b3d-bbc9-ed0133dbcc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0d6648-d19d-4728-b48e-cb459c500c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43108b49-7e9e-416f-a634-99b96740ffe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1dff34e1-7768-4a48-ac75-b6dc8829029a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb15a128-4037-429f-8b7c-6986e95999f3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12eb27bb-4efd-4677-92e3-c1c4af56cdb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23c985e-35df-449a-80ac-8c95f18a6bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b8dab3-0c45-4c9c-a40c-9b39b8b20e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c025e9bc-9163-4c9b-bf23-95c6d85f97b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c13051-4bfc-4542-928d-18f6994fcffb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7d7466-b3ff-4799-af33-cf247b15ffe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452e5248-f037-492d-ba49-5d3e118024f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfa4d71-5300-4b0b-91c8-476642a12472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8ae2cb-eeed-44ca-aa0a-d54c2ade647f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d0646b-ab4e-4393-8e65-55ddb9a88963",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320f9bc9-0e53-4498-b313-d226b8ba2628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3607a4-6a62-44ae-afbd-c0deba06df53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99733e71-9425-4f91-bb75-6b8c62712bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "76b0dbaf-70ce-467b-8a70-c347d873b2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4442ebba-39d7-42bd-bf00-c3aaee49e639",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fc25e3-0e6e-4e0f-8100-f81047ba8d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4293ded1-77c0-4729-92f0-daa057ce9ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe81878-b2d6-42bd-873a-3478400ace7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bef2837-a1ec-4a56-ae41-2e1c8dc909be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ded03d-08cf-4dfc-a0db-cc016ce0a3f4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a3fd13-9474-4ba5-88a2-1cad7d8bce3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5670793e-0877-4362-ac4b-a9bb8bf7c347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b28904-1764-4ca2-aeca-b336620bb454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c97a84-478e-4158-b504-ee5f2ec3e523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39238d1b-b146-47cf-9a15-8fd69cf23a04",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d4f08c-72e7-4606-876b-36cccec7aa6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0a2a1c-7a4a-46de-a8e7-578d64babe41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc83466-9cb9-418d-9741-8eb9c2fe1359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd36a4c-3218-4873-9d90-13020d16c456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe12a877-9384-4a84-8b2f-d936dce3aae1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9407b12-1f47-44a4-8467-4f9c6bff96e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d92ac3e0-5484-4278-96c3-8ed82d74df47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e450fd62-4cc1-450a-a9b6-b697afad5820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b81bf83-8c58-4266-90a0-942c28422219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12759052-5b4f-48a6-9b60-ddcf77dce2af",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78571d7-0c22-47ad-bc17-6a1d29be5574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff2161a-3d46-49a4-bc2b-46c32cccadac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c24319-41e9-42ff-9b11-957435f50673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbb7c86-3bfe-461f-9d36-ad923530c68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a216046-ef5a-41e6-992a-ce9fdf4536c9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6bea43-b547-45e5-8bba-425702184dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdaa708-9e67-4b83-b5a2-f83f421634a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b60004-62b1-46a8-8ad6-2bf7a25aac6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1782bb9c-ec52-455a-b971-bbc1d4743379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31f3c02-0191-40d3-9d03-3605f24f3412",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a28d66e-dc82-4253-b5dd-38f875573b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36499aeb-2da7-4e56-93f4-2e597f230f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8f6792-a8fe-46b3-b4d2-dddd59ea9348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5299bf33-b99a-424b-aeb4-34cc5b5005ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4472a54c-a138-4881-b719-d86711b589e9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca781823-34d5-44b2-9e28-525d3c4db8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4806a3c6-8ba6-49bf-acd3-1d626567d023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193d282f-cd78-4e4f-8da6-193c0abbf109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6494be0e-c738-47f6-a5ef-955a74975a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f968064-12e2-4da6-be34-02fa8ba95db4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1682089-ec5c-4f0e-88fc-f3d1733fe8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7af9b0-eec6-4849-b1e7-4b060cc835fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4083c7-8199-43a2-9580-bf73e64a6277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "caee6404-e2cf-48a7-af71-a4432fc953fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283ad738-4175-4f87-abcd-11a2bbccb500",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f4c85a-a391-45d2-a2f1-022be409eb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b46762-ac9c-41b1-ac0f-42dc41236d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613dab31-a8e2-4d03-ba2b-7e1f7509d028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7312e65e-f7a1-4da0-ac48-012be364ea8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999b1a1d-5c73-48f2-9bf2-6dc576379fd9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f4e9fa-fd45-4275-8b29-c0e3b254818f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f6cf1e9-edbe-42ee-8200-5199727eb3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52eb4e36-e88c-4417-901b-447d718925de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2525fd69-9f6c-4939-a4b1-47f45d2ddb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668327a9-a249-4172-8714-1883beb417ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb5ffdc-0415-4ec3-a7aa-0d45b5a0ca09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc26a76b-fd58-47bf-87d7-ee10cf202964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f01880-e9e2-4b4d-a682-a0dd207855a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9db9d5f5-92af-4bfe-8364-8e0e93a28028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114a6fd2-7997-449d-b01e-a503d6e63d2d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2ea19e-0dc0-49bd-81f4-66db8c79165f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f18f478-0ad8-4ea4-a387-eb84ac4a1f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85deaf7a-6d86-4969-8625-4f437b7da455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "69d4842f-1b8f-46a2-ad74-593ee4a299ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301645ae-9f28-41d5-9a05-843e5faea539",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c16585-ff78-43ed-9d85-1e1924108172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1b9822-893f-4e74-83c5-41b1cf7dce4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42dbedd-baa0-4911-8ac5-68a8b1cd8b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c377c20-452d-4951-884f-55c1d7d89052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e555b39c-2801-4b98-ac1b-37e658c1b765",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c552d75-b48c-4e21-abef-864959b2a8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e5fc96-82b6-4b39-8e2f-8247c168c8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56f966b-008a-4e39-bd9d-b28a60f0ebe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0bacb88-5b69-49d8-9e9d-f46ac49c97db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e94cbb-a358-47a6-8db0-76c1f132d235",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a864c2cf-a910-44fa-8a30-4fe0d9d0be10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946d2d49-e517-42e2-9df9-34f39ae208dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342bc904-fd66-4e1d-8b9b-572bc4910780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9019ef0-cece-4102-84fc-96a9ff8c699b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a6a3a8-eea7-4f03-8fe0-2243fbad333d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7027428-c2f0-4e7f-ac95-fee4ad9367bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e069b9d5-c854-4b8f-819b-02a80ca18e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53022fa-8642-473b-b6cd-3576777895e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c0d8e1-e197-4f4d-a861-ab1d4b70f15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d6cd8d-a4df-4416-a203-a0a91d15be8c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6311a7-7a9b-4c1e-befd-ca95556244a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cc8676-287c-451d-ab1a-990b9977915e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0c4e9d-568a-42bf-9410-23aa83a16a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8063f6f4-2851-4608-bf19-522488f12f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3395cf-59f9-4c06-a9d7-243ec8e00e3e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf6aa24-da6b-45dd-938c-c3a0464147b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b9ba7b-23e0-46e5-8885-fb7359d86bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd05ced5-074d-4934-89ce-c672d272a2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0e186e-ac5c-4681-9004-a0e4a1125a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ceb61e-bb1a-457e-a888-fb8389685672",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d05566a-0fc7-4e17-ad09-eb3a5d237e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae76c12-c576-4efb-b890-eeb15eb62d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9506960c-d314-4fb9-892a-ea8346f43a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97c11f5e-7905-49ac-a032-94c28442afca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f87437-003c-4fd2-a6f9-277327f03778",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985ecba2-f701-4e97-8b4e-49210d2cacc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19d3d60-967c-4d52-902f-3538e0a0a159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0e5851-d860-41c6-b2b3-6725a9194f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98745d6e-579e-43c0-8fc0-a0cbd54d00c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497c3226-b87b-429a-9b57-b6477e4fe1bb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1fb1ba-d5a3-435d-b1eb-3cbb27893549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef0eaf2-760d-4a60-bd54-e4b37c95244b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196753ad-4359-4f84-868a-08f9ba76efea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "082726d5-5602-43ef-9814-7289a4f4af9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0be0d44-fc20-4165-9780-a2b3de08538e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa4a798-1b2d-459d-b8e9-92def6409e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69212b7e-cba2-45db-9b3a-7123101caffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e08119-57bf-4d44-8272-b6c8baf78194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "74bac72f-3e99-4914-9170-6229a0e09691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3a6d2c-5b49-4419-a717-88b7a820e7a2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3f33ca-368a-4555-97cd-02a6ef2e9847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3fda4ee-b52c-466e-b275-26f8797a350b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295b5cd5-badf-4119-8103-615c31c9c14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "627be585-9ce0-49ab-80c9-a10275e2569e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304ada82-5455-469e-ab4d-bfa94a1b67b6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f479d483-e648-46cf-894d-3de45f80ccfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79bc70e7-218f-42d9-ad3a-ea8bb386af4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdd3920-fca0-4298-8003-0c64388ec2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a34233-49f7-42e6-87d0-8843ba75c3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82be7616-08f6-455f-99aa-1c9779904533",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d898ad5-0251-479d-bd36-ce401ff01984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6916850-57bb-44df-9e2b-88275e355a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaffa0a8-21b1-4508-b564-f6d9a22be070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc695b6-36cf-46a5-bd7f-60a329a21ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65350578-80d1-4ee8-9b3f-50cf0c517261",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546d6d55-e9fe-4975-a310-0267514d58af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5572b315-ada8-4c3c-83f1-87f51b8c16f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c4c6ea-1eff-437a-91c0-8bd407545304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1722008-3e85-4554-8bb7-bf55f7ec4aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3fea88-4ac8-47f6-864b-294e592c4d14",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b082b17a-c9a9-4c40-80b6-0a9efb0ec77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f17910e-a5a4-41a4-8f6b-92ec03bfcc7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316d346a-6014-4ddb-916a-5eb284ad7db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "782b57d1-ad01-45aa-a0e5-b0a0bab81ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a0364d-0cb9-4bd4-8f50-63e46e95adb7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b341930b-9f1c-44d2-93ee-6b18a3d35b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4308551-22d3-4e85-8f21-3982258f80b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509a05b0-4ab0-43dd-8af5-4a39ca4276c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9564c0-9f73-4b5d-a876-e67bbcb1b029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2431300e-163d-49a4-a5d7-630675104224",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d422ae-0f89-4668-836d-3d749282b245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693626b4-743c-4d26-a19d-4a6495151e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2849d181-c891-4c6f-9f50-245b6e12618e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f82c2903-81e8-49bc-94cf-3e5829a2fb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae0ff9b-d907-4235-95b5-69c95159ccc3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d371c958-71a8-4028-8f99-cd1f14ce7d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db06d983-5a28-425f-ab8a-e8fcd3193f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5f058e-b7d7-449d-9579-08c4b2164dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5128c6c6-c40e-4c00-92ad-9b362e0ccfa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14249b0-3fab-4ff8-ad93-7f7e3b2f8176",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755b9a98-163b-4d46-b975-3d5a120e2471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e608eeed-911e-4f48-98ae-4deac3bcb750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c73f44-fd24-4c09-9b83-57dee0870ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9d327f-0eed-4774-8cc5-af9e70c6a437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ccd1080-5bc1-49bb-94ed-cfb897209133",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53905eb7-f1f6-4c07-b931-f2bb4596a094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0915bfcb-d2aa-408e-a4b7-58e7d8cae049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29748f2-b7b9-4760-8f3d-c57e5a6edd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba07f8ea-9d4c-43e8-80e5-62564c4911de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe234611-8a54-4a99-b079-b37b0c46e725",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cc4d04-7712-4ba5-bd01-ce6f2459a507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bedebdda-dc6e-43ae-8d38-a3fb3b165606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9faa2a2f-c052-48c0-9910-14b770a5f886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9037d32-9ccc-48c1-ac65-b967820d70e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8bc38b-87ad-4afd-8e1d-bf5c6b2b74d3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955207aa-f276-42a2-8929-7439878a8863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7159b6ef-06ce-4997-aecd-810892daf259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ff2085-207e-4cfa-8ee1-a59e55354e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f38f3164-0e56-4e37-82c0-dffcc8a2909e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f1d3c4-54c1-43fc-9829-c71e36a86ef4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8896e8d-80c4-44b4-938d-8b0d1d5c07df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b95a79-95f8-4eef-b2ee-de8e0d90990d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96cadaa-6465-41a7-bfe7-2d8b8dbbf184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "95b97164-1694-4ead-aec8-5db81bd86c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c741e246-3a11-451f-a289-5b1ca4ecb8e9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b12166f-58fd-44c3-a0aa-97c69724ca86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1359f26a-5254-4fce-9df9-70f19d94764d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763f5358-ed35-4538-a4d0-6290afbc309c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc302d24-0585-4322-ae3f-90215933e5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d4cae1-60e5-458e-aa5c-8203f5c11ad3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409ca42c-6569-41fa-9d90-706593006cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0401484b-d4dc-4812-be77-249afb25725f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5eba70-5319-45b8-873e-47aa1de449d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d41f91a-0037-4b94-991d-426081eed5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d67235-1227-4fc5-ac03-a84758c3788a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ea06ae-ced0-4c87-acbd-ef3392028732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5546bcd4-4447-4891-88e1-1a4631b206a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65eb8bc7-b00a-4dca-8828-97089a514d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "436e2e6a-3425-4d37-b11c-dd7154ae85cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58f0709-c146-4b65-b4e8-1247dbf11a2f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e218c6-2cb9-454e-84d0-571f20babce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656487a4-5b74-4c0c-b91c-d40b52ee4ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407f8a74-7a2c-4eaa-9118-8a831f209c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65a24366-bc88-47ff-8ca8-e7cc5057d222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed28a4a4-a8b0-4b61-9aaa-dc20a43403ea",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762d3275-f86f-4e37-986a-1b3ff1438483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a273b7c7-29c8-4b7a-981a-b9bf757a41cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fe77ff-1bcb-4452-afbb-e482aec2e4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1442579c-d591-4496-b704-599d617aad82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0b8c42-a696-48c4-9949-42a651a0f195",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0ff268-54fa-4ad6-8f8a-088920d39c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64817af-b127-4920-8d86-2ab49815d048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b6004b-fe6d-4f31-b7d1-f23a01527051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "38fe15fa-f0b8-47ac-91f2-9982601a5593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0651dc70-6bb3-4e8a-9496-b7ce20f4743f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22290d43-0229-47d7-8723-7c3c1efbc031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d4966f-f15d-4f89-ae05-85ecd436d374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4be475-fbcb-42cb-888f-a61e176013ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f683d5cd-f823-4779-90ab-459188aa123f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0f0a31-28b3-4b66-aa5c-0ecb72544d0f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14582e48-9c47-4729-99a8-1353d13040e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737dd4d1-c9e7-4259-a5ba-bfda0fb3ea84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0500600-f1fd-4812-bd8a-0ae37364eff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcdd3b62-0568-4f0d-880d-75cb26b278cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8664f9-87de-4079-8f5f-8ba5f3225fe1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08639b95-75e8-4482-a85c-20aa60ea16d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a0adb0-34d2-40c6-b03b-848d86512b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fac1dc1-271b-4996-a1df-128f89666da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "312701c4-dd8a-4b5b-8745-9a0d94b3a6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e6855b-6f77-4e6e-aa05-cf3bd1620e35",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5687d792-ecf2-4b34-92eb-90af72097b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4e3a8a-be64-470d-ba7f-2e4283653ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8319f52a-7b5e-4b68-93f0-1c9af59867cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1de81ba-db02-4cef-8492-5e85d4b6f5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bebd7f-83f7-490b-a6f4-421ca859817e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ec2513-4433-479d-aa03-931bab368c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5ea1f201-e289-4286-8925-a1a6e3afbb7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dc46f5-ceba-4460-a899-b4c8b597d459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2e5587-9709-4a6e-a55d-5ec37998b99e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fddb6ab8-0077-4d92-8190-d45a49ee9ac3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd1ec6c7-9141-4cae-adb1-d8c6a96f76db",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a300b85-f386-41e0-9d6b-5e5e8dac96fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a92a82d7-c5fe-4b68-8d29-cec3713ece9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b685be-db07-4b0d-a228-23ac212971b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07f1f6d3-a4df-40a0-98c2-b5ab76525dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb32746b-1e45-4e7e-b01a-14f0f543ebba",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa6d526-7676-4ab8-8962-75580210d123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f55ca9bb-4928-4227-b086-c9462a9d6907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb938992-807e-4003-a803-325302a73266",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07ae4753-0d45-4d90-9fdd-2b2df68aafbd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a847c38e-3291-43b7-8f26-3265b187cfaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc4c6a68-7080-4885-bbd6-dca3f9fee407"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a664c82c-8541-4a4b-ae20-db0a73f7ff82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdf441ff-7ce6-4dd6-97ec-1a119a6d70aa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ecdc7d60-cd42-4afe-87a3-05aac6891be1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "98320e62-a101-4396-871a-01bb1e21586a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c005791b-bae5-4a3a-9b7b-d055b8cd80ca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "452f998f-633d-44c3-9017-8c7b8813fe1d"
                }
              }
            ]
          },
          {
            "id": "917146da-62cf-47d3-9de8-69fa30a261b4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cfa84a60-3b55-48de-ba97-c53e0566f09c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "693fedf9-d19b-4c44-bf7a-79fb96558c87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a88201e-4b7f-40ff-b3db-6558a40e9b83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04911020-9f98-4d63-9d94-d1a35ea28320",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bb845e58-1f74-4478-9b99-a1d75938f948"
                    }
                  }
                ]
              },
              {
                "id": "7fd9c4ba-bf77-48ab-9e1c-d076c428ebac",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02175b29-d6f5-4040-bbb1-7a67171765fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f12f58d-4d21-4b3c-8a14-623feab91cc9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d681a901-ea65-4057-9881-7c6e819989db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "051b2d5e-ddd0-43cd-b60a-f169998d954a"
                    }
                  }
                ]
              },
              {
                "id": "1894f2b5-43c9-48f4-98fb-048c4312b129",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d99c15d-cd5b-4520-8f07-752523a55aaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a071331a-95f2-4327-9649-b097b010baa1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38c76977-de6f-4aae-8ce7-1baa0ababb9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f01af3cb-b9cf-4248-87b6-699480dd9ed3"
                    }
                  }
                ]
              },
              {
                "id": "1de80944-077f-474b-b92f-f809d4d5f4b4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f76e6dd9-050d-48c3-9fb8-ceddfee10476",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd2a4039-dd0a-43ac-9268-d97efb4ac993"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c779caba-81f1-459a-8461-02c2afe1283e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "14e19658-d4cc-4afd-8c37-e0f9bad2744f"
                    }
                  }
                ]
              },
              {
                "id": "fe26a834-63ec-4929-80b9-a9467f4970fb",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76ac66a6-8765-4c28-b9a7-39b80261f7c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bee0ad0-1482-4dae-b29e-0288c502bedb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55917c89-4577-40d7-be6f-ed05461693e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6bfaa63f-5edd-4d9a-bd6e-2d4e5ba4093e"
                    }
                  }
                ]
              },
              {
                "id": "412c04cb-069b-4033-bc6e-821f99b1f4d8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e29337a-545f-4b59-8cb0-039f6f1b2ce1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb65d577-aaf7-4d4b-837b-65522d1db6a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d05de8a4-d06d-4b2f-b3fc-ad5c8a615fb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95ab8859-8f30-42b0-8bcb-6ebb022f2735"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "356614a7-e5d0-45e0-9bbc-eecf24c4196f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "538e8e11-83ab-4859-9287-e04755fba875"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "61ed3391-f848-497e-9200-340317db15e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4af80c95-71c0-4990-9866-2845c7ece060"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd801fc1-5610-4cd0-a060-45186ad13889",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b624f738-fb27-461a-8bec-265dc2d45390"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f55efce4-c364-4cd9-ade1-0310044413ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb34d789-205f-4e1a-8921-c3171f575052"
            }
          }
        ]
      },
      {
        "id": "eac06563-7d8b-441d-8f61-3d99756687b1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8aedfcc1-1ba8-43d9-90d9-08af9192e064",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d86c3c8b-f910-49fa-8cd5-77b8727c44af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b741640c-99e3-40fb-bbc4-b244c20be5d3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe53c3c-67ef-46a2-afdb-68ff78aa77b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389a1bc6-2e81-458c-86e1-c5bdbb9f403b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed67a4f9-e0dc-49fb-8a52-0e54c4e09158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f504967-cbbe-42ac-984f-610d3abe847d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be45de25-f69b-47ca-a5b9-6ec301a084ea",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0aa9832-3bcf-479c-a890-b40cf22039a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6afdad1e-e5d2-42ff-84f8-6ff79c1b4975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e860cabf-49c6-4229-bf70-2cff5c4c41bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7acbde7f-fc93-49e7-9b2d-527d190f32e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b105320-8e05-4890-afda-cd7e526fa3f6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5f58b1-7a46-414d-a565-c2546f10b596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5af5b1-91a2-433b-bdea-37e640d80786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8338e628-a69c-43f9-8ac5-c25760eeaeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3289d7cc-b5a6-4e83-8b12-7f0ed908dce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e09200-8eaf-43b5-ad60-25015c2802d0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c9ebf7-9172-4fe4-918b-04b4da916338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3e00aa-adf2-4ccf-b865-9c6bc24a4e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd28253-a49e-4a7e-9361-23e627c1a296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5d5431-74a8-4a02-b582-32519053d27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30633f4-a251-4cfa-bccd-d09262eb776f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6eda35-4830-4e22-ba82-fa77f847a3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef014def-1efe-4f39-a8e7-d09c10d614c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfc3775-80a7-4939-b9c5-855599ce5832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d79759-70b6-4f0c-8cea-0a590ce33c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91706eab-9e0c-48c4-a14f-8ab6c56ad0d5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7d5d38-5cfa-4d66-814e-0fb69df6de61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8abb3c-7842-44c0-b4c9-2e6ea50159a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37b7c5f-d64b-42b0-8247-be4f0ebdb9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "897eee5a-278c-4a61-be40-34a5243fd2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed886f7a-07ff-4180-a915-f5e596ef7586",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cff49e-ecaa-4d59-802a-f045702aae42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549e233e-0dec-4225-bd4b-98f9fe7d4c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3fcd15-cbef-46bc-930f-fae4078c9f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b018410d-593b-47d1-9bbf-7ef76e4711f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec228c9-4f0d-48e6-b35f-e5f8df21b717",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f6cf1d-9e5f-4ff5-8f27-0938bbac8e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e29228-8ec7-49de-a35f-3cfc7b6eba22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe98d0e-ba96-4869-a851-0137420c7e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab3f3a7-ac2d-4e6f-a511-c4e69052abca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77d7b29-5d93-4a96-9300-d5e4ce1d1843",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908d4d41-be7c-4f58-bc50-5715932096de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93074b0f-5393-4738-a8f3-59a81d07bfd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4910ba8-ef2f-44b6-bcf9-c1dfc10db320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6138bc-f52b-4a1e-a4c5-2c7f57ff7d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d5353d-0ac3-4cba-92f8-36210665ecf3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9689fef4-c869-4b9c-972f-d5654e57f927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149a4c39-f9b8-4156-aff2-9ece2752b96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b3d4b6-5a80-4f3a-852e-e57c687df253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c952d2d8-d5fa-46b6-a7db-ab5bb57538eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6b25b1-e18b-4c54-b114-25c6940f45d3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984ec973-af37-4179-8807-5725b206d9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92dc5177-c826-46b8-802f-b02fd68955e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7a5ff5-2df8-4f7d-a3ae-1e289486d22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ddea78db-1827-4752-821e-b64e331bef47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5014f2-e696-404d-9acf-b91b7cd7111f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae3df62-b56e-436c-bf7c-cdb45c4316e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f72279-a062-4f7e-9de3-7600bbcfc458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875be574-fde4-434e-8d1a-94eb5c2663aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07e5cce5-1954-44e2-a07e-63fd787e8cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df39880-0653-4c73-9140-93f9def08d5f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69bad8d8-2e51-4fe8-aaa9-939272d749bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e80f6b-58f8-4ce8-8506-96bf1fea3594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b16bc5-9416-4f5f-b302-ae71c7f6fcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df3bde62-e965-4598-8305-4344ab2e7107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027d8a57-f986-4c09-b6ac-227ac6101fc0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfad2e5-c18e-4a11-8822-42a4bafdddcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a992571e-af59-45cc-b92c-a58606631474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b381f0-c0a9-4330-b930-540a462898cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c04fefa-f8fe-453b-9dc9-2b07055f2f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9090d69-2ad2-4fcf-87b7-2515cd16d4c8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b35a935-02d0-4f92-9064-bf2404e545e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144d7ce5-dae7-4972-96b5-e1faedcdfef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2373ec9-cbf7-4608-8cb9-b470ae2531f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2346095-f74b-4f6b-9bd4-fa4b4ee4efab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7f066d-72a8-4f65-8f35-9ebe9aa1fc6f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1b8515-ec48-4c9a-8ed4-49b323e7e00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04be9c97-01bc-4100-ae97-0638210cd61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62439f15-eb99-4710-962f-1735bcb9aaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e17788cc-91b5-48df-b6af-0eb0ccf3594c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb7bb40-b27d-475a-83a9-c8f46dba0488",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2746b73a-5395-4867-a48b-96dcd7379b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "419d2ad4-5ead-4e83-8130-f414b5af1c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27d999b-3a55-4a07-8500-405c18ab4ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3971967-7f9b-4ed5-b1fe-0d07c9c28ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79574132-30b0-40bc-a508-cbf0a902acdb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bd2386-ccc5-4b13-962d-d5775325a4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4782e41c-b7f5-462d-b4fd-6b3138c8ff63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc4bbe8-6fbf-4080-aad2-f2691bd5efaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3837ff8-d7a8-4671-9582-00042500a098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5e37d0-374d-4bb6-9822-1ab5fefc9c74",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c567aa-7af6-4228-8897-cc1b89866123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49fc0d0-be1d-4b76-b130-97162ac4c143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fe5ffd-8dc8-40f6-b07f-41f2b52d480a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9de59443-b1fa-4dcb-88d3-898badd8f175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafc5d20-e14d-43ae-b495-c9f54fff5bca",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a868b83-cbb3-4bb9-a99e-f514da8b8168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc65670-f516-43e8-87e8-a7df7497f8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb7be12-e589-4b03-b882-9923417661e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0223d13a-0a3b-416e-8d83-03c21662c22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba6a974-4ff2-4c5f-8a16-f4bcfdf64a0a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0553fa1b-db6c-4f6a-a565-17f6b6bd830e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15564d15-967a-4b60-8ee6-bbae7ce00da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a0007e-ed99-4f1b-917e-19957a79620b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd15f1d-eacc-42e3-99fa-12a955f401cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d5c439-53df-4c2f-8b02-e995f0ad57d3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9c7660-1682-43bf-a733-fd07db3644ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4c98c5-b7dd-42f8-ba5f-64c14a396024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b6d7c2-12c3-4614-b9b2-90b1e203ddfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc78b28-c7b2-4e09-82a9-908ae6ef35a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f778557b-9192-413c-98f6-58b1dddffef6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ef894e-de8b-4242-a8ba-76e8fbb6dc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f938b9e1-fdf9-4e1f-b056-9e7b2450c720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a6c0cd-16a3-4d20-b065-c9c8944feb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "877f6e80-fbe5-432b-8836-b441215e5d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61dde8f-e8f4-4899-b463-1f9f26e16d19",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c34289-2438-4c12-94c5-edabe7e32fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9f6200-d47a-4591-83e5-f6a8b22447cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62714bc8-0fa2-4338-8adb-058578883ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb9056d-db32-4827-9e67-2dcb367fd2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a90d91-ab58-4543-8ed1-e713b16b1ce7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73693f6f-aae3-4f55-b2bb-ae93f99afb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c296b3fe-18b6-4d5b-b578-61d10405ba12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be879da-40f9-48d4-8759-9255e26a9379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db3b3d94-ccb2-41d5-91f1-9b0030ddbabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bbad21-28f5-4111-9876-b269c9b12eb2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1887e425-8623-4f5f-99ed-476bce610410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe8be4a-1846-4462-bf98-101e1a63fe05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1213e1da-c75e-4ffa-8c79-6cb692a9318d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abbd2b27-b4b5-4250-9976-1eb41919b5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10c611d-9093-4791-a829-d2b39b9e3200",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc11d3c0-a64e-4a53-abc1-f43ef18fcbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b18c569-de25-4a61-857a-619510af0bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf97fef-1fcd-4e61-9758-cc0952a44fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18c2dbf9-dfa9-4bff-bb4e-84c4652fb1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa96c4e2-af70-4b2d-8d7e-5a1657ec3de6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd520e6-7e83-452e-866f-84d3b38bcf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64d846e-046f-4adb-b384-b49fb471b835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddadcc1-73f4-4973-abe0-71dafc72c018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9535f5b1-82de-4879-afe7-6932426e004b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe6c93a-e707-4653-b620-bf01bbdbdd25",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323910dd-06f2-4d63-9bf8-c9bebce29246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb57260-75ba-430e-a48d-94832f337b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dee581-85b4-400f-886f-99636e997094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a5f9a8-c807-4d5b-b1ea-6caef0c8b774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8fe402-3ef3-4e1b-8212-35aee70cab1d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe354da-cfdb-429d-a6b6-350409fc1e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14ce376-9d51-44d2-ac3b-cfd316a6b21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85880deb-ec8f-4d38-82e1-ec0ead39fb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5524ac34-8783-4d52-b7f8-eb5d75af6a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f58a370-ddfd-4720-9505-6199129fb1aa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320d5a2a-06c5-4c37-9681-862d58b29c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a58a9a-147e-4c24-8edc-fc6585438da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342dee33-fbb1-47d1-8a93-06cc21b2fd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d4d682-e5b4-4531-8fad-cfc88c4168df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85b1fbe-d721-4a8d-9da3-f5637d394412",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc23393b-21fa-4737-ab37-5265c35d5d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e9ee511-7b6c-419d-b1f1-3361ea7031dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b7fad5-d625-440b-ade1-558661bb7843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f357a7a-65c5-4cb0-9464-609f3c4e392f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "02f1a593-50ca-474d-8529-792616588cdd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "438158f4-5462-4292-98e1-5857ca5e2f92",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03969527-846e-4667-97b7-e8b854a61935",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d9cdd667-b2a4-4d84-8960-09d7a33ffe3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18a4a04-c181-4a74-9332-939720e523c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "165d431e-e409-4883-b7e4-c7f68dec1bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3109c25d-662d-4f2d-9d3f-b83e32074076",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfde8e86-b51a-4231-a2b7-7e93ea23c172",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a19a7ba5-f931-4d99-b6e6-47367620bbdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f5fc30-8311-4358-b327-70c19a210354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8de8cc5-abd2-4218-b4be-479e39f7d722"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61177442-c855-45a8-9174-7a9df76476ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ed8b28d-9b52-4f1c-abe4-bd2446451c23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4012024d-4d4a-438d-abb5-f95891966752",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fca3a5b0-dbed-440c-9d43-497855a98744"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1314997-1c40-46c0-878d-51f4c9163b57",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "051d3370-e817-4d25-aca7-5681bda81ce7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03a81527-20f5-4b2e-accd-0db606a17ae6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3fc36654-db61-47d3-9a9e-d4c42cc3e008"
            }
          }
        ]
      },
      {
        "id": "706a7644-8407-4cac-b3a4-014cbffbe5a4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e34a1d2e-f977-44e8-ba05-5c3a45822aea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aabdda04-471a-4512-884b-b3baca840c8a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "07780eb2-eb72-434b-a73a-90746c274ffe",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df85a94-fd8c-4f67-aea7-d88cede9386b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05e355a-00a7-47da-b66f-3b3479e4baf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086ed8c5-0dbc-4a2f-827c-a1f237af1b04",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e88b85-1006-4a28-9ec9-587ccfe92f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341ad4af-1fcf-45f0-9227-6490895e90e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b84435-7ec3-4cf5-b647-53ea35374216",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a16cdfa-4f61-484d-bb3d-11c61893e8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e17263f-499d-4ac4-a664-2f676a7b74ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0974f49-38c0-4750-ac84-61be7cb127cb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a57a976-6856-4598-a7ac-b5c2761bda76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b7baad-f43a-4184-8703-2aaf2fc6a78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099ba9f9-97a0-4aca-a32c-0765617c928d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c1ee1d-740a-419e-b112-beac3edf927f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e13d1c-de2f-42bb-88d2-4c9c5761c02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6990ec-68aa-42f9-82c9-16181592dfef",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2f1189-8d5b-458f-839a-eb941027a1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cb039a-d358-4afb-9dc9-4d1b67428f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f9df73-5e23-44c1-898f-976341ce97c4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b78f1e-ffb4-42b3-b1ba-e5f0149332cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c718ae1-d39a-49ae-a114-0ca7a3e7f4dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1b7901-b3b0-4174-acdf-7215a7d8ef78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b11685d-3595-414b-894a-292365992313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47e3a38-25ab-45a5-9279-80ce87cbb7f6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e05081-d97b-4421-a245-a4cfb88afa44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b62bf2ea-e685-4292-9787-1d230dc50913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a9070b-e391-4977-88de-ba24ec86d0a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cabd9b5-3b15-4ddc-a534-8e0e98bdd3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae25d65-2d2d-4aa2-bd97-1d8f4deba07c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8f3a0b-fcf9-438f-9f26-5f1492398ad6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b63031c-ad83-49d3-9b78-f0f6191bd2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24586e7-1177-4ca6-9fa8-ef53f3672db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5061df-28e8-4aa2-905f-88d2dfa8039c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f6e946-9e87-406f-a3e0-924a8eb1f55d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e317d4fc-4506-46a5-9018-860ce9012730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd22284b-c8e5-419f-b39f-4efa21cf5583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6444ad9b-ec21-4a2e-a716-47c82f29e5ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6162d04-e67a-48a0-ae08-e3c184063579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95c464a-ef62-472c-8733-bb56231bc6b0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54eabdfc-af36-42cc-b0e5-dcc2f237b9c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc90c66-e6d3-4da4-91f3-6cf5efc07472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019d04c5-3a4d-453f-b418-74f2cb85b180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2e4d1e-ca21-4cca-a188-e5449f9f1c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56e60fb-c6a3-4132-9263-d0ddccf391c6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c6f84d-506d-45f3-a0db-fc9ea43e373b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1e988b-21c1-4609-bad2-e83ed6b74ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd7710b-54a7-4357-af9f-4716603101b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878540ea-9ade-4606-aeab-87756b7cec65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d177fdfc-319a-4e04-bcd4-36ca11515e37",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30e43c1-b4f1-448a-b59a-6df131ad5247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9acb0994-caeb-45f4-b273-22d3cc318bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcfb51a-12f6-40c6-a7cc-40cbe8c402f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49f3122-f6bc-4780-abcf-1035aeeda118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b1ac64-235d-4e2b-bdce-c96fa6662899",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45947af9-8298-45a5-a0b4-5926c077b49a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71ae30c6-0f51-47b2-add8-5b78db01005e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e522fe-14b0-4a71-8580-c86c99d48dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f477dd0c-490c-458f-a6c6-bb491a9cba61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8deb60a-a4a7-4c62-be27-5c1f43201a93",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82aedf9b-e4cd-43e9-8608-e59292fbfcc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a8d0b62-5a83-4943-81d0-669c1da7011e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218070cd-e208-4caa-a971-6471f366b784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5159626b-cf84-4b15-b598-1433659bd5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83a40fc-c51d-4148-8e3b-7a20c3d15f57",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6145e2ea-0c9e-47a0-afca-c35de37a69d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a6267a2-825f-49e2-9c12-4c8ae3c01fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51999df0-1bc9-4767-84ac-7998b8b8b1a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce6fef6-f536-4fbc-b05c-858bb339bc8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88090fc-bb74-4333-a351-bb00dd149168",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e2c12a-658b-480f-9100-0856be02c4ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70fbd68-cc2c-481e-b266-dca439d252f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7883dd-4fc6-4373-9922-5cf7ee0b36c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013b2bd5-7a38-4694-9839-2987acfca315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012c085d-f21b-463d-aaa3-386104c4c470",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baad14db-5b3a-49f3-817a-2b04f79b5e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1302656e-c7e8-44fe-83e3-6c7fe90a0a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866853df-2fc7-48d7-bafb-181148f83b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34856f38-bd8f-402c-89c9-4e1868e5d50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38106a3-3c4e-4abb-97e5-98ddf9fe14f4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce64283-e7f0-490e-af90-2808342e98dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790d66ba-0839-4344-bb85-30c7d7bec971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7f944b-8327-4908-b24e-9cd67365707e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db998bb4-0c42-47e3-99b8-64ebbc1c722d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f41e82c-ae9b-43ee-bf7e-3fb54058d500",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b159cf-921b-46bf-80c8-cd73972391b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c252ef33-0c2f-41a4-9c88-e99acdde65ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6724173d-8e66-455c-8f6b-3b62c08ed065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d36d44-78cd-43c9-b9f0-754a367861ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc50aa73-0fde-444b-9759-4f33e4fd9637",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461c3fa4-119a-4c97-ba13-d0f2b7958e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3788a484-a73d-46e0-aabb-b3c9c2c7deb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "823020d1-e5cc-4b6c-bed7-72d28f116bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bef6483-200b-46b8-9798-61bcc929062b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e3952d-5d45-40cd-b84b-2df0bc623694",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18429dc1-2840-4dca-8dfc-5ebc1833b795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380db8eb-eede-43d5-930b-01aeba79f0c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c8f0d5-7387-45f2-aae1-e0b8eb13dc44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a55ecf-c64e-4764-b1fa-55a574c91c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f007f9-9ac7-4f8f-bd35-52ca3965ba39",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f8848e-c0ee-478a-9f51-586cc34da286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "148ddcef-e87f-4977-82e7-39667bcccc02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d57a2e-c5bf-46ce-8fd0-ac7928cb6284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9054cb94-e612-4078-b3b3-233fb0c16c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff65fc7c-1374-4dbc-85f8-1a675edfbdfb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34bf25e-a4c4-4459-a7c1-430344f2274b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0dc1bd4-a27a-40c1-ab2c-26fa75a2f184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9547ac-daa1-4cd5-b790-0b675bf15461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715d249d-9bb7-4789-a95f-bc6b6a686df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6c146b-1c79-4091-99de-8e5314d40458",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed18a350-3f97-43be-be58-90b73dc79424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "933796b6-c149-4497-92f6-5c74f676d40f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1912dc-6fa8-4f28-afe8-d6bc2b4068b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d317069-460f-41aa-8a3d-3a7932bbe0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf1455b-3943-4f4e-a5ca-fb66a28ca1c4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca296c07-1546-4103-8972-ef4882471c86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89207e03-08d0-48fb-815a-1d4f52ecb0dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635302fb-86ca-4c4d-8621-5ec9881ee3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48cabd3-b438-4267-9e14-75dee0c4af65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012c5877-e934-484f-bbf2-c91376757474",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4101df0b-e9ed-44bc-b2d8-187312856bf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bae131f-3448-4365-b0f0-a9debe7fc8ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d457cc0-c5d6-4cb7-a3f1-8e8128a6eed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a87d54-210e-4535-80bd-55992e304dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4ca173-1af0-4bf0-84ab-e8839099685c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70427c32-20fe-43a0-883d-b4ad159a4cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4910c2-d17e-4847-ade3-c19791ab4ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13209e07-5170-4f92-b97d-f6bc3af6ae5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e075e42d-48d3-422d-8a85-c0f383723f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f706f9d-db01-46c4-8422-9ff9b0fe62a4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e135e9-12a9-4847-8ada-736995ce4e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "247ebb78-22e2-4e98-a4a3-9aafcfb6a198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dec326-b2da-460b-b5c5-24ec5f40a4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c179fc-878f-4e83-a749-f069743dcd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd08bc0-a1b8-4766-8d74-2f7f63b31f2f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213c6e38-5826-4466-93ac-44d750c76697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09c255e1-3510-4388-9f08-596b5201bd0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7781534f-51e3-42a4-9693-28ca29d39c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f2e370-4ea1-40b9-b4e0-d736fa7995ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93bbbf59-a8a1-4b66-9809-1ee60be124ab",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fb8f4e-759f-45b0-91db-e1371d24cb66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21476120-9fdc-4e09-a2cd-f7ccff491f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997ec8be-5047-486e-a324-ae71a63a1920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbce1ae2-42eb-4719-b0d1-cbbdfe4ed799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178157d1-2339-4c34-9c3b-f8eb981fa740",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6c425a-03bb-4c61-bce6-94b28a6b5a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30709c42-1fc2-4bcb-965c-d7f1d5e954ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2091e856-30cd-4199-b4f2-33dbe7a9a84f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28ab028-65d2-4daa-9760-301882ca3374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cf12c0-8a73-4f8d-a81e-01babcc52b5c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae98d85-6006-4a3a-85dd-07b99cf516cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "763c5f16-e93e-4033-971b-2b11623eb6ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e079f572-0428-47f6-a3a6-4d44c525a3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad5175c-6150-4f6a-9384-d2a8abb5f339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e8641e-e0e5-404d-b0e8-4ceaf7e0c81b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd70ecae-4039-4fc8-8611-de63347d6aef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f05968c-be75-4b7f-8939-140518fc1259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "506fa531-0bf1-4a33-8ba0-306e625d7f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96712e5-dc72-4949-bdab-b271c5ecc19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21065b8-3da5-4a04-adb5-c6132494992d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09dae6a9-2f15-426d-b551-a1f4e4cbbede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173fdd7e-d54b-48b1-a22e-0b6db40be6d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75eb188c-fe38-42ed-8431-6d8d086fe99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7a7137-e126-4783-9e8b-43ca11d73846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f526f9-47a2-400f-b4f8-30de822951e7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9228970d-bf48-4d54-9ccf-2f9aa8713d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915871ab-76f4-4156-a13f-b1a3b02c15c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "194734e6-71a9-44e0-8552-b830fe8e82a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491ef1a3-1d2b-4714-b5be-2c8a803b2ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9bb6d9-89d7-453e-846e-aea65ff17b1e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bfe9d7-fc24-4dec-b149-94fd4e86a4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbe71ba-be50-4d1f-92e3-d3682f3654c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5106be88-bb06-434f-a120-616ab257eb36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98e40f3-2615-497e-990b-09c5a1ac5ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa03235-d1b8-428a-a626-3dc67a76f371",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a29d5c-aad9-4009-9d4b-56f70b05ed60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d461d46-5c2d-48ef-818f-0be3e322e2ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e6418b-7c98-4ba8-ae91-93bc84367f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926dd976-4dba-4ac9-aee2-f0b7067e4212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174b36ad-72f4-49e6-92cb-24a37f8e3e87",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45215d31-8837-4ddb-b939-64026a4ed658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48afa8e4-9270-4d8c-9aa5-de0a2fb2e2df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffca4ab-dc0c-42e7-a874-0afcfbcbf183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd007491-8c01-4dfb-8087-9015db56846f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac1308b-6297-4079-b6b4-8fb73ac58db4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a904a3c-7028-4034-b9c7-3b9d4bcba319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1573f23d-e528-4a6a-b98f-ec1516cd53cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1222c3-273b-4cf1-8ee5-0c7f22cd802b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af2bddb-c093-4b19-be77-043e33d18381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223e4fef-9a44-4e94-abb3-2557da53edaf",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f26251f-2779-4c37-a355-a21f31506d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a58d62d-1b9d-4538-82e0-ba7a74f5806d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8c28d9-7d60-4307-b4aa-cbe6b56fd904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6215c5b6-53c2-4910-9e72-6dc6562b60cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b13724-d96d-42bd-93f9-3f6f89e4e19e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e711fa-5214-4fd5-8a3c-e2918bca57b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a8c949-aae6-48c6-8c0c-b779e13f3fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cda82f6-b778-4d67-8b66-6aa7f835fc41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b379c2f-e49f-4046-9b14-7379cf641c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c31f8bd-77c2-467d-8deb-cf09476295ff",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23aca94-e4cf-4cf9-87a3-55ae63429d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e03ff49-283c-4a26-9917-a3ba9bd0a2b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2601bf84-7fbd-4abd-a8fe-b8dd7175b607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8b1844-7348-4be5-8c7a-d9c15bdbf643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe09a054-555e-4a3c-871a-48f54c91b2a9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b969423-3d55-4317-ac49-24e4a762a51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa2f066-b2e2-4847-b502-c53b295ac46a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a87f2c-59b3-4515-96fb-06d3155e4d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db9a96b-0912-4f3e-9c6f-111e5e5f7468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4d4514-5471-4f6b-8f48-10be26ca0170",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c163d2f-47bb-4828-8856-8d98fa8c1918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03ecac7-ce46-44eb-8f0a-a6de54a9b494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "892733bd-600b-4da4-8748-128f8b04b6b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a042be-19b1-4817-ac33-336be6c353d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3314c28-00ce-49cb-9622-75e60b5875ef",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8277ad5e-6f51-45dc-b93d-e151c562f87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922da20a-fb2a-4827-ad7a-168621165b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fe3adc-ea31-4ccc-9cbe-6e090c65bbcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4d8fdb-f3eb-4b7f-8da1-6e36fa615634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72291f56-9bef-41ed-b205-8e86b2e227ec",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecca54c3-dd44-487d-a0e4-9dbaacfc31e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4f567d-e2aa-4874-80cd-1a371435470f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4505a867-0823-4ab2-9221-4413ab2a0ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cb4a26-d1fc-40ff-893a-303d0a99e539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53db7ae6-c6ee-4313-b238-36d2049bdf23",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca4ab69-8921-4224-a189-8922842532b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592e2f18-d08e-4004-8b00-81abf18f0229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d492043-5812-4179-94cb-e5c5145d44ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6237aba3-f16b-4a32-a71b-d47e9ce1898f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feace000-4383-4c1b-b872-2ee403a9e9dd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e6351f-7cc9-4366-8ec6-5dde94545ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0d58d5-e8ee-4e7e-a155-8297ece32366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e8e11b-54b2-47a8-9343-e6b573cd63ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f5b2f0-5cb6-4120-bcf6-0c83c07b73be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320362b8-7435-4aaf-a5a6-b1a548a12425",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdf265a-3c84-47a3-a4da-518db5363e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d938a6f5-5b37-4547-af82-78de71dae953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f75d024-7d2c-4a0d-b073-95ba0a460df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df098bb9-c302-4f2d-8a3d-0478cf018bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449d6815-fe30-4905-996b-9fd87f9b3362",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06463384-aab8-458b-b28f-d9243dcee13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7dd0d14-033f-484d-8547-ccd671f856b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff572748-1bfb-416b-9e4c-d680c57aa154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a12b4f1-8a7b-473a-9024-2e935b3a5910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8650143-13ce-4e91-8b30-5ad09d9d1916",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32406546-eca7-43c3-937e-0d1b9abd3e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9005b538-8319-4646-9efd-1589631c50bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b71d819-204a-4d32-9e4b-9e15df05e534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb123a6-5c4e-4eef-b3b6-e56b657b93bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f679ecfc-76a8-4e81-a9b5-992dbc6da8b2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231dd55b-a849-4d77-82d3-096d6695991a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9925f090-5644-4b85-aa84-85c1dddbdc75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e006d861-388c-4c59-8388-721ebdc31863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48be1daa-4bd2-43da-a25c-ba560325f1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efb03e1-8b71-4973-9862-4c1b170ea335",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bfedd6-faf9-4ec8-ad9d-b715f0f3f057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52132245-b7be-4c3e-bfc8-8173de778ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6827cabc-997e-4ab8-95e6-0fc3e350722d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f373c40-232f-4fae-8889-fc037a78328e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e52dd3b-3f37-44e4-a87a-3e38489baed7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33d0ceb-e581-43c1-9389-ff0c57606e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddafc3ac-dd39-4281-bdd2-e56dcb2d819d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af8018a-a3b2-4289-950f-456454dc3a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b453a870-480c-4721-be0f-6be467034df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a82bc74-afd5-475a-b43e-406744123005",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2876019-e084-4f60-b775-97721637a06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a2f034-7da3-45ac-bfe1-1869eaaad3c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671a1c72-f194-41a7-b31a-2ef0dad0229f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d08fa66-da5c-48c4-bf9d-d36914dcd9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293a4d76-576a-4c35-bf10-aaf3eb8bd6e4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1116c1-f896-4800-b297-923f7314e1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41ae179-34e8-4584-bb34-79fa625c282e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fc4d76-dba1-4a5e-9318-ae92c0895c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0dfb3e-cfd8-470d-99dd-3b35edb06c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beae31cb-43c0-4d0d-954e-014791d5c3fd",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5830f4a1-9eca-42b7-bff0-8bf231e6337d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e63c14-0c61-475a-b398-ff089f228e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c9093c-bd58-4dd3-8223-8caf3c9ecf6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58bb0083-7a5b-469a-9a48-e93be1504a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fe27a6-51a1-47f1-bfb8-244250c2f741",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7dee2e-f9b3-4dc3-bce7-5e7caffa0d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723af180-8210-4950-ae71-854e3110372e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999a2818-128c-4a2d-86d9-4d09ed83161f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281a6284-6d37-4d8f-8927-40f3de677b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beda2854-0724-495a-9199-5c4167aa2a79",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54917053-6e03-4483-8a1c-cd9f0d2f7bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb540ff6-d3c0-4673-a74c-df4cc87a0fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6a22e7-78ad-4fed-8f85-ae8e390ccbbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2908b4f4-1fc6-48c0-a00f-3587aa27f56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc573269-c435-4b61-aab3-b8ec6925b10b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042f6865-435d-408e-be67-f5875ed79a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada9bcc0-df3a-4c51-8e7e-878487a54b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21f6cf8-3fee-4841-921a-5d34b6eac5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea03e6d9-29f2-4684-ae46-c9feb3cc2920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0bb38c-fd71-4a75-8dfa-4af6905c25ea",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb878d6-ac46-4daa-b0b4-2723fe5543c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b0e7d0-438d-4a3e-99c5-dd13b5049aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd998f1b-8453-473d-8d33-184fc242f025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd41241-420c-49b5-8cdd-246b1af48e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6047a553-1b3f-4ee6-bb7d-7862b73aeede",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a601d1c-b0ce-40f0-8413-2d39e2afb16e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9919870d-6221-42cb-81af-79cb227cf238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a7c864-03f8-4796-b6b8-fb5712a003b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31fa7eb-fec1-4a57-adb6-b43aac93ef20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cf47b1-ffa5-492a-b3ef-ffcbfde84a02",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19d0153-2630-46a7-8cd1-39e9b9d8559b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "259cef20-7507-4f65-ad0f-d761a19355b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "176fb391-e386-4d80-9016-051b15d42afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9725dee1-23db-4ae2-9b9e-3d82fc9a54d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fb8ea2-eaf6-4398-a21e-17f62f7fe577",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2febb803-11df-4fe0-9bd5-13359ce9e11e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cacdce4-5228-4fd5-ad03-9de6a6ffe32c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4ed02b-d511-4abe-b4c9-25d1af54c882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3da27d-03ea-418f-a9a0-7390e177e218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bb1c4e-5cdb-41ff-bef7-4874759dc0b9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265183c5-8538-4bee-bef7-33ff2cde10ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81ba0789-a4d5-48ec-9608-4cdf16cd024a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f639563-79f2-4faa-917c-38f8a59366b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1db736-d30e-433a-8038-3e781d191e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b992388-c7d6-455a-8a24-acad6a6d90c4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869b5068-9a14-4352-9e87-c7396ced2e28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59557d8d-1bb1-4437-b491-6d00c484bd6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705a599f-fdb4-4992-8f1e-071274f1054e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5603ef53-abc6-4444-b791-20f329a75288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865adc28-5627-4624-bc85-bc8dbaa05320",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58131432-e6a5-41fd-b3cd-eb4182d1e42f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f4d6e77-f631-44ae-bf1c-407ba85bc327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cb25e8-7696-44a4-9b4f-35650ac73afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d80a845-a0b2-405c-8e74-22cf6b84bf31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316ac9ce-784a-4eaa-a709-0ea43aa88191",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7132ee-5325-44a4-be3e-5ef7fac45648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37875eae-ea85-4da1-8beb-5ac774b38acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3e1d20-afe0-456a-8757-7743f0d98533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abcb7028-fe6a-4d87-aac4-7e638b52601b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171586f9-b2d7-4d69-847e-2258c4a23543",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f138135-e05a-40d2-88fb-b5a63d9f3e27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfc6ba52-5b15-4be0-bc34-f3d24fb18146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59be298-acb3-48f4-b61c-8302e89b932a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9940f8-2407-47ac-8c4d-2011754ffb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7fcd89-37dc-4e8c-945b-24089c30483d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1805c134-2b46-48e9-9667-7e5f63ef52af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b50c265-74d0-40bc-a0dd-138df95c4b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b2c177-ff05-4da8-88ef-fa3331ab1c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd050c70-9ca9-4d6f-b9b9-acdf8fc5257a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd3f838-2086-456c-ab10-65046964d2f9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee8021a-de95-4175-816d-2bd2e53f4788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64626100-55df-47e7-981b-34781fc2c018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a27f3aa-af4d-40d1-894b-b85b12e816df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591c4adf-970e-462b-bd41-8564c14026fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fb4736-d49c-4a8e-af68-6a348bd8b9a7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd87005-a719-4c04-af2c-c2d8832b498d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dc38aa0-ff15-4325-96c2-bcc42933087f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a69883-bc25-4dd5-baf6-c66e026d8335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f7eac9-a580-4b02-94e0-d4e672cb5362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8ea5eb-22ea-4027-bb53-6d797fd15427",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ffd288-5fec-488b-a1d1-cc31ea855233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e45f11a-ab42-4b7c-99e2-cb866a3ece64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca74d22-632a-434e-9da5-8686b025d12e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc9d47f-2b63-491d-96b4-39f947e58bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db324a8-b15a-447d-9537-1f7d711d282a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ca8e60-202a-4ee9-8ecc-3c29cc129c0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef4160fb-3c82-42e6-b041-c2dff58216ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac921fe-79e4-4837-baa0-4bcef4b36de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be549d77-8557-4066-985e-643894a0d0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a282cce-5b7a-4dc4-ac32-9035460f08b3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001da303-36c4-40ee-b52e-2e94a1033fdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4397f4ac-74ff-4ae3-8a8f-9fae5e06131a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ac4216-327a-41de-b272-1b0c778a92e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8afc4e7f-ed84-455b-91fa-ecd3f85dd0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ee8c69-1af7-4e99-bcf9-e8e6094f919b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77691712-7c81-4b43-8bf3-bad9cbb27708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21246d5f-d50b-4dc4-b411-d43cce9f640a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0deafe93-6144-4ae7-aba8-fb06a982df81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28cb5d48-5a91-420d-b516-ceb815fe44dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c718ad-276c-4633-a0ba-f876e87ada0f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1276e758-c45a-465a-b1d9-e619f499df84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "486f5407-24df-4b68-b543-4de82b3c1663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7625c8e-36b3-45fa-a457-058025ee5ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e1bb2a-632f-4f91-a4e5-8b9dd4cafc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e7d7b3-bf66-4df6-ab0e-665e109894c1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2060bb-9c3d-4d2f-8d20-289af9773b5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d7be6c7-e2b2-4812-b19a-9f4f590be050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81863d68-b067-431e-aaba-8ec8e0448995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b68e50-4454-4bbb-94a6-6b139f4c7905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7883b94-d449-4326-a77b-78a826b10400",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b59fc6-1ed8-4326-b8d6-e3d7b5e28dc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b980361e-478c-42c9-b6b5-86fe2892fd18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8c9373-8a19-456c-b12e-0e468649d22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25646bef-5270-4c46-a424-752961608920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795ad285-62c6-453c-b5c4-d83ca47135ee",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c135a2c1-1f90-49fc-9269-35a923680328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1950f34-5c21-4e3e-8e9e-f1f493af5ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fe7fb8-b96d-4578-b94b-9e452b0d0071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5feba665-93a0-40c5-b1c2-2a9815f044c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f9135c-2386-4b78-9d02-d14c990bbabf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bb2ada-7b50-495f-84a8-e7533c7227a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93c7debb-326e-425c-b298-bb4e3912a45a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17fac2a-7112-42ec-9ced-f1982708cfa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3054ce27-99be-4815-83d7-403c1145d358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097e5e67-836e-41a2-a182-06938cd13c5b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7724b753-3130-4598-be31-bcef0350b94b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77b8f74b-7f80-4009-92f9-9bec43d9dbe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a505e5d-bd70-4f2e-8231-05c27dd879a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369b5f3e-c340-48ba-89ba-5188bfe7d569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcebb0f9-cd68-4900-a19f-76733faef1d0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1d36ef-4270-4b3d-ad25-bfc87e678c8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6ea1b33-cf11-4d29-9d56-630043cf565b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea76d3c-7f9a-4e6d-a65a-bd14ff7dc631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ae6f88-ff29-4262-bf2b-e2a058feca79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805345cf-c371-4450-9b00-e25892c9c1bd",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8440931-662c-4f6f-9121-1305c4cb9e0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "309e00d6-89c8-4a3c-91f8-37041ea342d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fd46b6-25de-434a-b4f7-3c89df7d7317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e592d8-1bfc-4052-9642-6dca58dc05d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6133f8c-7ee2-4e7a-88fa-250724e97742",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f476f150-0446-4364-9f16-e7ecc03fc851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4109464-6770-4db5-9001-4a192ea1b35d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ab4723-5890-413c-bbae-aa515c840f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372d7d9e-4a14-4ff3-b7cc-0f13d952fb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52394f9-1389-4c32-9475-f080243bc6e4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521ffaca-d964-4ac4-99df-f9e340992c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "714d4e69-16ee-42bf-8584-5cdeb6ad49b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae9952a-7bda-4107-8471-91d91adaeb92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38bfae6a-4b59-487c-98ab-f55332fef4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfaa4016-bf6b-4c90-b3f7-397adaf45bf9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6766832a-f2e8-4478-89a1-a220ce0e2b84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8585f242-911c-460a-8519-a13c5e9a41d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55be7a7c-a7f5-49b5-b61e-2fe097dcfdf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab31ae7-023d-4e6f-bc9e-4d48f75b0957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b20ef5-5b3c-4391-a4f4-d289020db004",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f88b49-c226-47f8-bad0-a765cdd303bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81edd220-bfa0-4b73-85e3-c319ba28ec8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd3aea3-2383-4338-a802-575ed1ea4705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619b39b8-c797-43a0-9aa4-7ca02164cfdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c8a774-e2ce-4135-95d9-d4bd9dde0f35",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b7e4d6-d7bc-47eb-9d2e-d63fe24adf32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b4a1d50-9bd5-4151-967b-7c2df3018cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c876167b-d64d-4b11-9283-a487485d29cc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339a89f3-c3eb-43c1-b214-39dbd5ac74c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a77ced-b5dc-45c6-8916-dee64ee05f5d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750a0280-bede-4800-a768-f23f680a20c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2191fde-2446-4185-90a2-f488d34aaed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c744d3-203c-4fd3-a7f2-2a6f82d47824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d68d155-98a2-4e48-83ad-e79808ebbf9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510a1c1a-41d0-4716-ba35-015652040d10",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec0fede-0dc2-4942-bbb8-66c4ea9d7278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb9173c6-1720-4183-93be-654abfe844e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3e5f0a-89d7-4605-81a4-70d7127c6557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e8d8f9-6e81-4e92-8506-7dbe3c493fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64264787-dab3-45f1-b575-4c36d04c7f51",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a2f698-e457-4d2a-b244-447b5eb55557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "485bed70-ccf2-421c-bdb9-7d759ece4da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de85c152-bf5a-4d47-9a12-f87d68b24ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef56734-0da9-4155-a636-4d9f7d1dccae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fb4840-ed4f-4429-922f-4e7e0bda6b72",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8061b7b6-cb55-43a9-9026-3399dd2a7833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0578062-ac95-4e2d-b1eb-fdf895d72527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6472e0-505d-4d22-9216-b99ec051719f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff50aea-3bbf-4e49-b2fe-4f64f8d803e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d084303f-6517-40ad-8799-96cd26d5c463",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03abdd79-6aa9-4d5b-87b3-779e25acf0a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53393c4f-1109-4bb5-ab51-10d81bf39043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2828c4f2-3b9e-4424-bdf2-adb1c95ab0ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2911525-66d1-468e-ac6c-4875e5aac5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79aad725-b489-4891-8725-e12b03d7e056",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f657b668-5c8f-4710-a475-d549aeedf5d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18f2eac8-4a8d-4e0e-a4ca-64382ecd8e2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd7eb5f-4308-4f4c-9319-0a2b3fc6de4b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c889298-0a38-45ec-848d-beee012a532f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2040c3d-aeb4-4be9-942b-29a29ce37b05",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cd6ebc-57e6-4b25-a5fd-b435e1b17ce7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d6d2fe3-2c39-40bd-b566-78fcf9b005d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76be8a2-15e6-402c-8eea-d9156003ff11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "543d394f-6d2c-49a7-b4b3-f57e906b115c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c93f0aa-7f1b-46df-97b9-450fe446f540",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "582d7373-4385-44d3-80c2-fe92a1f0412b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1f4425d-e683-464b-8680-86330e44ad16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4cef42bc-72e9-4f4d-9ab9-c6699e151daa"
                    }
                  }
                ]
              },
              {
                "id": "cf11ddcb-41c1-422c-a104-f759f72f5d6f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "240d9662-f848-4d29-94d7-39cb514a24c8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4a6b2a-65d6-4339-ad71-5c995cb95d6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1a598f88-82ea-45cb-ad08-e05d536ecbc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4a8509-cd12-48b7-a379-7397561c6648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f05b5dc8-9f91-4964-a84a-ee18a26d1453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3421240-62c7-4196-b47b-8a321aabdc94",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542a473a-6071-4fab-a12c-88b561884b68",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c564620b-e516-4df4-90a7-9319f7ab5636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90eb380a-dba1-4956-a7d9-45dff9595f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f292a894-6edc-4985-97b5-8d8901200ad3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31a22fca-f523-41fc-b420-984fa2e35399",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3442afd9-f291-4036-8d15-69cb5e21cfbd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f9330aa-4def-4466-a0ca-e11f44212520",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efca5536-32b2-47ff-8a66-753c4951199c"
                    }
                  }
                ]
              },
              {
                "id": "dc297194-4921-423d-bf41-de38d27b2dd1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f26fb1da-084b-429a-9db1-6499f489b7b0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d63ef23-a2ad-49eb-98a0-73bbadac7936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "43f30ea3-bea9-4e27-8f15-3038f706ae81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5021e3ec-db8d-4b6d-a0f6-ec3426153254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a21cddb-391a-4d6e-b80c-99e5997142df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "20174175-5841-4e73-b278-bb74f470cf46",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bedec3f8-0446-4c16-bee8-eb077e1cca65",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25bc026c-f2d1-456b-969b-6f19a9cd763f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cb60223b-a167-4a70-a4ad-c5f425102077"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93739d13-8722-402a-8edc-cbe9902195f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b868447-a202-4703-ba4d-e9583086af75"
                    }
                  }
                ]
              },
              {
                "id": "4a5dacaa-0ac8-456b-bd24-4f73a6c53207",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e27da3b-9a6b-47c0-843d-375101b3ecfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c328ffc5-119f-4e84-a069-10dd97657986"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12ca700a-d4e2-4cfb-be6a-9cf7c5382fd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16a80679-e99d-4426-b952-a00dba62259e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22df22e1-d179-4b14-96f9-608baf3cd119",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "aab6956c-19e8-4970-97fd-930df91f5775"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "793cb784-3c51-4873-a033-5225bae0aaa8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9eae0882-e746-4b75-b3ba-24dcb7167f0f"
            }
          }
        ]
      },
      {
        "id": "05cbe82b-17e8-4daf-ada6-3c304eddcd56",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5828d473-3c80-4e42-bbd5-37278149e6be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0578b0c1-1aa2-4e82-832e-2ea59300d041",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40e50992-078c-4dd9-bf38-da1ab8d01601",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e24fc6-fbd3-4cbf-a156-4a088b58abcd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9e92e1b9-b4b4-446c-a581-4416940df768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c67bf00-66d8-414e-bc0b-23caed3e2806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0516a31b-cfd8-42d0-80e7-0c8547b9babd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063d426e-3ba9-4946-be2c-45ba2b1fef21",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06580c5d-ef93-4cc5-8960-e40c5e813861",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5b3ec970-7357-4043-bc4e-b9e450c210b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9722ee-9468-48ea-851b-6f60612ad6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0fb45c7-ebda-43db-8fd7-65b76c831a05"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bda9dcef-2ddd-4e15-9ae2-230c4c5f70a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ee9fb2d-52a9-4f88-9296-4d4e144b39bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b77ec64a-a58d-4ea1-85c2-ea998c8ffe7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82d3c6b3-5e3b-4efa-af34-eb5a972cdbb0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96afd7c1-9ae4-42f2-b45d-8949ae92ca1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f37c16ee-0def-4a21-84e6-6ffbb5a73241"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05a1e805-f375-400d-9fe6-cb80792a001b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da5055af-00c7-456e-9bf6-7aaa4d5f2eaf"
            }
          }
        ]
      },
      {
        "id": "ed367d64-278e-45eb-90b3-77a64a7d70de",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c36b64a7-c401-4733-ae9b-df7ce3462467",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e7e4612-820e-4286-9d49-b3d79631f8d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc8bfabc-b219-4894-ba38-60fc0b72a679",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a8c666-bed5-462c-8183-ad6baba6889c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ace489a-8ec1-4cc2-83fe-52baf0c9ac98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a148f2ba-9de1-4456-8f03-76b951aa76d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "080a7a79-1aee-4f09-bfb4-37f40a38ee5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d677b6b-e9cb-47c6-82c9-2b6942243934",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecf60d0-41d6-49d9-ade9-5e4b1fd35cca",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7932f3-8852-45b5-8f16-5e3ebc38aebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0433b50-a8fe-4c64-bd43-246319ca9118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c43a379d-84ca-4643-8be0-bc1e0be1ac43"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6395239-b979-450f-84b2-2ba4b151de56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f34c01fe-91a7-42b7-b65c-562bce07c77b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "217cbd25-8671-421e-b6f2-c29bf47d38f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4341f12a-5537-4547-a4fd-3b3c97655960"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30c72686-87ce-4410-b1ee-d7da8c9332f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "30c9aa64-ba5e-4dd6-bdc5-ef1b565185c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc89c8a7-c27b-49b2-9cd7-9a1c7f63bd10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26e86013-7192-42d3-82b4-13b0b69aa251"
            }
          }
        ]
      },
      {
        "id": "4904f0d5-b10d-4443-ae97-0376668365d3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "df71bd11-648d-46e3-be89-7ddfa23c24e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "abc6ed4f-c3fb-4fa7-958d-f74979c2acf9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9411f38-565b-4bda-bb45-061ffcc0f9d0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53743629-6ae8-4aa1-854e-9bae95e63138",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "444e6d9f-9e3c-443c-85ec-718bd0b36fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0db9d3-9cb7-4851-81f3-e2fe43fff452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1f3d104-d505-4cee-9839-f3e8211e6b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d0b5ba-8769-4ed6-a6b0-0eaaad97a787",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619e0cdb-d0df-4a44-b65e-90cdaf4d4539",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e80b7011-70b7-410e-9980-6b866b90b3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821aef6a-4a49-44c9-aee0-9857436b05a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d57a7ef0-e1c5-4afb-bd71-d5d0cc893ab4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3dac540-15e6-4d44-a64f-7fcf72a5f306",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f7b61d4-6bc6-446f-809e-47249205e944"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "717ef14f-484d-402c-974c-a4084100c41d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47adb5a4-1dd9-4450-ad8d-928f727e97af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "287aab57-29f8-41ee-915c-844c55759f17",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "935adf7a-7164-4b60-9bc8-66d6606811c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d33333e0-b1cc-4e74-b1ce-8756a86f3ae1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd8605b6-6ad4-4a4b-984e-b73297ca529a"
            }
          }
        ]
      },
      {
        "id": "c98f8ac0-4ec1-4d4f-b4e0-594a5da87442",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "454d00d0-df7b-4bba-b723-8c2e2fce1dc3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86f8f8dc-6f3c-46e3-bc15-7e440d088e24",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d6ea1bb5-404a-454f-a0fd-f278f31c2636",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3851689e-4826-484a-877e-408c259c731f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d63f3470-223d-4f1f-a495-3e0cc98b0a40",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 680.4884615384616,
      "responseMin": 15,
      "responseMax": 8565,
      "responseSd": 955.4192212470936,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682901521541,
      "completed": 1682901708722
    },
    "executions": [
      {
        "id": "77e6c14e-e91a-4b89-8ec0-a7967e964725",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4a42fa85-24fe-4d5c-a045-ce439698f46d",
          "httpRequestId": "48e4dc0a-9604-4368-8ffc-a9b90bd62133"
        },
        "item": {
          "id": "77e6c14e-e91a-4b89-8ec0-a7967e964725",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "087a3fff-408e-443a-ab05-faaa287117a8",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 0
        }
      },
      {
        "id": "13223c7c-25ef-4ebc-95a8-f795160aeb9d",
        "cursor": {
          "ref": "f1c8fe2f-7aea-4ae7-91eb-84d88d341cc2",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5389a282-ed1c-4bd9-a44e-6b9eb8e07e8e"
        },
        "item": {
          "id": "13223c7c-25ef-4ebc-95a8-f795160aeb9d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7d936260-9300-4630-b8a5-b2d35a47a93e",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "3868bdcb-5f29-4686-beab-bca0808ee8ca",
        "cursor": {
          "ref": "ad3d3053-55cd-4463-989e-d19c1df566d5",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f9112e47-a58a-48b4-838c-4312879c9baa"
        },
        "item": {
          "id": "3868bdcb-5f29-4686-beab-bca0808ee8ca",
          "name": "did_json"
        },
        "response": {
          "id": "620215f3-0339-42f7-b828-705570ee823c",
          "status": "OK",
          "code": 200,
          "responseTime": 821,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa789b5-2d0d-47d0-b9bf-1c4656303dc9",
        "cursor": {
          "ref": "7099731d-671d-4c1a-a68f-ac2c61e1c781",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2387ec73-0c20-494f-bf04-9456e4e65958"
        },
        "item": {
          "id": "0aa789b5-2d0d-47d0-b9bf-1c4656303dc9",
          "name": "did:invalid"
        },
        "response": {
          "id": "91ef896c-1aa3-4767-96e6-7bcb34c32c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa789b5-2d0d-47d0-b9bf-1c4656303dc9",
        "cursor": {
          "ref": "7099731d-671d-4c1a-a68f-ac2c61e1c781",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2387ec73-0c20-494f-bf04-9456e4e65958"
        },
        "item": {
          "id": "0aa789b5-2d0d-47d0-b9bf-1c4656303dc9",
          "name": "did:invalid"
        },
        "response": {
          "id": "91ef896c-1aa3-4767-96e6-7bcb34c32c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b5376a-48d1-48ba-9c65-f9409bc0e239",
        "cursor": {
          "ref": "fbe691c5-f8e1-4875-b27c-bcea3e21c7bf",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a27539cb-3d96-4315-aa90-80589986dcd2"
        },
        "item": {
          "id": "b2b5376a-48d1-48ba-9c65-f9409bc0e239",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "048e29f1-939f-4f7e-bb93-9fc456b11cb0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 582,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5dd0dc-1b70-4c0f-b0e4-3b8819635cea",
        "cursor": {
          "ref": "ae7e204e-9979-41df-83f3-6dac288ba8c4",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d89969eb-381f-4637-af61-f4a21676c808"
        },
        "item": {
          "id": "db5dd0dc-1b70-4c0f-b0e4-3b8819635cea",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c491b950-3c9c-401d-80e9-cb3ed95feac1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 530,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559cf8e7-785a-4d18-8011-84dc352352d1",
        "cursor": {
          "ref": "79511f61-c1d8-4bab-85d2-9a113ca1502e",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c4506735-9bb2-43f9-a694-b6625d11d357"
        },
        "item": {
          "id": "559cf8e7-785a-4d18-8011-84dc352352d1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a939a7a5-7611-4d59-90d1-9d76efa1e839",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1b7033-6b30-4464-9522-23b6aed77686",
        "cursor": {
          "ref": "5d3c47fd-efbc-4236-a885-f42c79b016bd",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2bbc13a2-085e-4086-a9cb-6be6850b6693"
        },
        "item": {
          "id": "0a1b7033-6b30-4464-9522-23b6aed77686",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8cda535f-cb3f-4399-b1c5-c94fcb4c310d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 702,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1b7033-6b30-4464-9522-23b6aed77686",
        "cursor": {
          "ref": "5d3c47fd-efbc-4236-a885-f42c79b016bd",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2bbc13a2-085e-4086-a9cb-6be6850b6693"
        },
        "item": {
          "id": "0a1b7033-6b30-4464-9522-23b6aed77686",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8cda535f-cb3f-4399-b1c5-c94fcb4c310d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 702,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9ba691-d0ca-494a-ab43-7fd9e5820c31",
        "cursor": {
          "ref": "041fc84d-4c13-4849-abb1-772fd8e2debc",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c37cee45-a947-4351-b964-9a3a4ab2556c"
        },
        "item": {
          "id": "5b9ba691-d0ca-494a-ab43-7fd9e5820c31",
          "name": "identifiers"
        },
        "response": {
          "id": "18b900b2-b3b9-4059-a350-58139d2fa0f6",
          "status": "OK",
          "code": 200,
          "responseTime": 1895,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a62235f-80cf-499a-84bb-f3ccff626d44",
        "cursor": {
          "ref": "00e9a98b-4770-4ddd-ae83-7c43edd903bd",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "62f321fc-d10e-45be-9650-d80701436b19"
        },
        "item": {
          "id": "8a62235f-80cf-499a-84bb-f3ccff626d44",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d70003fe-f6ea-49b4-a47c-c99b454737cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a62235f-80cf-499a-84bb-f3ccff626d44",
        "cursor": {
          "ref": "00e9a98b-4770-4ddd-ae83-7c43edd903bd",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "62f321fc-d10e-45be-9650-d80701436b19"
        },
        "item": {
          "id": "8a62235f-80cf-499a-84bb-f3ccff626d44",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d70003fe-f6ea-49b4-a47c-c99b454737cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b63d1fd-33a4-4db6-9b51-674d489501c4",
        "cursor": {
          "ref": "a09eea91-6d8d-4a06-a866-d97e28b8f7e6",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9132750c-46ca-458b-b09c-0a5fb9c079d9"
        },
        "item": {
          "id": "0b63d1fd-33a4-4db6-9b51-674d489501c4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7a4e7ef4-f75b-4af2-952e-bcd37a1d110f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1830c6f-933a-44bc-83ee-eb348076c01e",
        "cursor": {
          "ref": "dfbe8b77-26f6-4a8e-80d6-df7a5b9d527c",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0bdb20e7-58f7-4eaf-b146-97bc3311bfc1"
        },
        "item": {
          "id": "b1830c6f-933a-44bc-83ee-eb348076c01e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b4060155-dd63-447d-a925-792002a8b9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b89648a-07da-4098-9ff4-7c072a970b0a",
        "cursor": {
          "ref": "45f7a649-638e-423c-88de-34635bc00d6b",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "67add32b-6ce0-4265-ba60-572d6d156b77"
        },
        "item": {
          "id": "4b89648a-07da-4098-9ff4-7c072a970b0a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f57a7345-826f-4e76-a7be-c269fa687e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c087688-02a0-43b1-8355-7b83a389c36f",
        "cursor": {
          "ref": "2a272b8d-945d-4f5b-984e-fad6e1a266e0",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "361077e0-854a-481a-95d6-0e7730b16b52"
        },
        "item": {
          "id": "7c087688-02a0-43b1-8355-7b83a389c36f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0560348f-1147-4c08-ad5e-d31d78661c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08233d0-b79b-4100-b6e6-377b5cecc312",
        "cursor": {
          "ref": "f81eacbd-6f8b-4651-98d6-3e2f07596efe",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "71c08997-d595-45b5-815e-403dcd88d704"
        },
        "item": {
          "id": "e08233d0-b79b-4100-b6e6-377b5cecc312",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "132a7ddb-af8e-4766-8230-2cab04b87a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbc48ea-e9d1-4a2c-ab1c-75cc75f9b201",
        "cursor": {
          "ref": "aa0ce0bd-ec30-4bb3-847a-eecaa68c8b3a",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "252aa02d-3d6f-4895-bcf7-55a001092706"
        },
        "item": {
          "id": "edbc48ea-e9d1-4a2c-ab1c-75cc75f9b201",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "eefa05c6-f42a-4c21-908a-d26de26357bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ad3da3-0fc8-4c46-959a-e0c30cda42c8",
        "cursor": {
          "ref": "0f0269a9-fd7c-4006-9b47-8d9e27608876",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "88a4f447-6f4f-4587-b106-810f17de10e8"
        },
        "item": {
          "id": "a5ad3da3-0fc8-4c46-959a-e0c30cda42c8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bd3e0ea3-43aa-46a7-ab65-5f45fef074cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8042c9-f1a5-4160-a3d8-69f51e9bc021",
        "cursor": {
          "ref": "1fb80d64-408a-4e5a-a2de-8a585060ebc5",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c5ba38ec-5760-4833-986e-7e997f5c6826"
        },
        "item": {
          "id": "6e8042c9-f1a5-4160-a3d8-69f51e9bc021",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "41ff3868-3282-41cf-ba2a-8afa67f86fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4ffdaf-616e-450c-bbed-ef9987626cd7",
        "cursor": {
          "ref": "29deb47d-0198-46b7-b887-120747ffb6fb",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "26947677-7ef4-4ed7-9023-f63370462458"
        },
        "item": {
          "id": "db4ffdaf-616e-450c-bbed-ef9987626cd7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d4b6c0f5-f45f-4bca-bc20-9eeec355f0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54d249d-1784-46f0-9713-3fd8f0bf9eaa",
        "cursor": {
          "ref": "9976386b-302b-485b-bbb2-4baf860b76b4",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6f7c11fb-e48e-47f1-94d6-e5c7355dd173"
        },
        "item": {
          "id": "e54d249d-1784-46f0-9713-3fd8f0bf9eaa",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4cb74fe9-e506-43a7-8933-06b43f607bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c73933-b4ef-4c6e-b406-bc97c0f08106",
        "cursor": {
          "ref": "731d6f52-c562-4b39-819e-e5f1a4e2a065",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a6382637-adc2-4c4f-8b6f-dff7b3fc6e0a"
        },
        "item": {
          "id": "f6c73933-b4ef-4c6e-b406-bc97c0f08106",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c66ae52b-02e2-4527-b7f3-d711580b7f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459f9220-3351-41e4-ba3d-0bb10fb8701a",
        "cursor": {
          "ref": "2b56cfa6-8d41-4c85-9ec9-e82aa40d03cc",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "10ffa80a-60e8-4923-a530-4dd23cccd015"
        },
        "item": {
          "id": "459f9220-3351-41e4-ba3d-0bb10fb8701a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f2010c0c-01b2-411a-9554-f68a3212daeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e9da86-e349-4e24-9833-c5d62f85cb06",
        "cursor": {
          "ref": "1a8d1f1a-da82-4f8f-8689-669b3072e6fa",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a93922e7-071f-4e88-92f3-b5c717e9dafc"
        },
        "item": {
          "id": "d3e9da86-e349-4e24-9833-c5d62f85cb06",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fd19f555-db8e-4893-b7e2-9b40090d4636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db90f2a-469f-487a-8e58-7a456e656811",
        "cursor": {
          "ref": "314c36c6-3b91-4216-a0eb-891d5cbec334",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8b42165d-47f2-401a-9e03-db234bb54810"
        },
        "item": {
          "id": "8db90f2a-469f-487a-8e58-7a456e656811",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e0b7fd5a-714a-40f1-b3d5-d94e7719942c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e06ab70-be06-4dfe-bd0d-648aae758030",
        "cursor": {
          "ref": "b81a9b71-ba47-4eda-bfef-34c578a30a2c",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6b75e4ed-136c-4240-b720-4186a3c5ab19"
        },
        "item": {
          "id": "6e06ab70-be06-4dfe-bd0d-648aae758030",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c4904920-9699-4015-86f2-c70e8271b546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9798f0cf-a6ed-4f60-8d67-e230fe583187",
        "cursor": {
          "ref": "bf0c4625-8d1b-41f1-ab0d-ae648f8e4ceb",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3dfc3f37-e996-415f-8329-daf9c99be8c9"
        },
        "item": {
          "id": "9798f0cf-a6ed-4f60-8d67-e230fe583187",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1d7a403e-fdb8-4e41-b893-770ac759431e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12cc02f-eab1-40f7-9471-3dff5fec0ae3",
        "cursor": {
          "ref": "3f3d4f15-c9bc-49ad-96d4-725ae5c799af",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9e873833-2cc0-4318-aa7f-d93cb95ce43b"
        },
        "item": {
          "id": "d12cc02f-eab1-40f7-9471-3dff5fec0ae3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "06c78ccf-4935-43ef-ac74-cd13a45fb692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9c1df9-be0e-40ee-ac5c-12dba7706d45",
        "cursor": {
          "ref": "49c94e7a-6859-48ac-b4b6-534cfe8a0873",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "df5441e2-6822-444b-9313-4430ed5fe13a"
        },
        "item": {
          "id": "fe9c1df9-be0e-40ee-ac5c-12dba7706d45",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1063e673-f2f4-408a-8fe0-8caed7d53665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33b589c-a682-4aef-b13d-d834ab9b437d",
        "cursor": {
          "ref": "338e6449-8770-4972-98e7-ed2bfdfc4fd8",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6f6f0b45-6971-482b-a141-8ac91e6638b5"
        },
        "item": {
          "id": "c33b589c-a682-4aef-b13d-d834ab9b437d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fd066005-f184-4e1c-9a0e-e4e3f45b6096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d387f7-debe-409d-8241-d51bc83580c6",
        "cursor": {
          "ref": "caf4146c-8bc4-4496-843e-de738e675845",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "84d3839d-c399-484f-80a9-0a72074effb5"
        },
        "item": {
          "id": "27d387f7-debe-409d-8241-d51bc83580c6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "881cf4ae-49e6-463f-9129-f59e477efc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284f9551-7147-4265-a18c-894a7fc19581",
        "cursor": {
          "ref": "6946bf29-36ef-4286-a7e1-054e92b7759a",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "40c7a8dc-bb44-4a58-b65b-ddbe41aec33b"
        },
        "item": {
          "id": "284f9551-7147-4265-a18c-894a7fc19581",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "809e1fc8-cac8-4b58-b9e4-bfc0b18b6a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af01cf0-30b8-4cd6-9e50-c10d5ff89525",
        "cursor": {
          "ref": "653ea3fa-72f3-46d2-b117-6cfc0cc7a321",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ee5fe5ae-cf5e-4475-a6ef-484590f2a73a"
        },
        "item": {
          "id": "6af01cf0-30b8-4cd6-9e50-c10d5ff89525",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "08f7b49e-cbc1-42f2-8098-d3e69505b2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2937dac2-471d-4ac8-a33e-1e1a53cd10dd",
        "cursor": {
          "ref": "3e55e242-0a5d-41e4-8168-2212817aa493",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d18e4348-c63b-4ca2-b0a9-8ed2a27b20c5"
        },
        "item": {
          "id": "2937dac2-471d-4ac8-a33e-1e1a53cd10dd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "42382d08-6274-453f-8867-ff0119695338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3da51a-71c3-4f52-8f4d-a3ad278f4ef7",
        "cursor": {
          "ref": "91fe2bb7-809f-4b74-9e18-ad7c71af4588",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0ddb6c0a-beb2-4876-a650-60d54592bef3"
        },
        "item": {
          "id": "eb3da51a-71c3-4f52-8f4d-a3ad278f4ef7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f2fcdd45-7b8c-44b6-a50d-d1704fb2126c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919f5c05-907b-44ed-b178-81259d78b5c2",
        "cursor": {
          "ref": "4c358d8c-7ea2-49f2-838b-f3e1bdeeef73",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c847035f-87eb-4423-9b7b-056cf8b646ab"
        },
        "item": {
          "id": "919f5c05-907b-44ed-b178-81259d78b5c2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1d7360ed-351e-4cb6-9184-9fd7bd11ee5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72714fec-0e5b-4920-bcd1-b8be28c2eb2b",
        "cursor": {
          "ref": "b03e2367-91de-4075-a5b5-31ecd5da1b4f",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7b86000d-755c-4c32-81f7-ef904e261844"
        },
        "item": {
          "id": "72714fec-0e5b-4920-bcd1-b8be28c2eb2b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "deb9d0af-2a29-420b-a186-79d2eca4eccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db23ba45-989d-40ba-b168-ad988feb0981",
        "cursor": {
          "ref": "9cb40f69-c1b3-46f2-88e5-20045dcd5eb4",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cc151657-d418-49fe-89fe-610e316d8d5b"
        },
        "item": {
          "id": "db23ba45-989d-40ba-b168-ad988feb0981",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "670937cf-c839-4e3f-a0db-0ad84585f08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe85a363-c48b-4f14-9158-3daa5c8b933f",
        "cursor": {
          "ref": "c605c086-0e75-4f59-b76b-057fd0a4d706",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "84369e1f-a78d-433e-b795-d91bef45f4bc"
        },
        "item": {
          "id": "fe85a363-c48b-4f14-9158-3daa5c8b933f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9feead30-eadb-45b4-b72f-17450eafc361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6435297d-4903-4338-8d5e-fa3f15e30a96",
        "cursor": {
          "ref": "991e25f2-4693-4143-96d6-1e29da17e4e2",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6dbeb3d3-33cd-4023-bedf-8ac6ceabf0ec"
        },
        "item": {
          "id": "6435297d-4903-4338-8d5e-fa3f15e30a96",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "51076146-3baf-4fe9-bf56-1776bb15a38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18340b07-3fe7-448c-b9dc-486560fae446",
        "cursor": {
          "ref": "bb8c8bf1-274c-4823-b9c1-5cb468436142",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "58d94e68-2ac8-448e-bca9-d1700b5c595f"
        },
        "item": {
          "id": "18340b07-3fe7-448c-b9dc-486560fae446",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f3f5710c-0e70-4a76-90f8-7201bb53f465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236aa365-fecb-4380-ab3d-0f613fc186ec",
        "cursor": {
          "ref": "a65c2fc2-7179-40bc-b1e7-52c5cf689b60",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c58c5e94-ad68-4987-8b9a-c1cca0b83bb3"
        },
        "item": {
          "id": "236aa365-fecb-4380-ab3d-0f613fc186ec",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f01bf1a6-7ed0-4a79-90c7-0d7416b148c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a0a6cf-35da-4a7e-b2cc-cce0ddcdc0df",
        "cursor": {
          "ref": "d9558006-ec16-4837-a927-73b5c11ca694",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2aa7996b-c4c7-4218-b5aa-bd6b89e4f27b"
        },
        "item": {
          "id": "77a0a6cf-35da-4a7e-b2cc-cce0ddcdc0df",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "43797054-684a-4c7b-bb83-bff0fd694798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6202093b-ac6e-4c3e-abcc-8b4454888256",
        "cursor": {
          "ref": "016fd04e-643c-44ba-9235-6fad9e3718ef",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3a52fe60-caf7-449c-a4aa-9e43d647cc97"
        },
        "item": {
          "id": "6202093b-ac6e-4c3e-abcc-8b4454888256",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5faae231-3d10-45ed-aa9d-1969f4b15823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1053,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b306e57b-407a-47eb-aff6-c43240ff9193",
        "cursor": {
          "ref": "f254f8c7-c1e6-4630-b6b9-12131cc8fe62",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "869592a5-f0c5-456b-81d2-095a26a262e4"
        },
        "item": {
          "id": "b306e57b-407a-47eb-aff6-c43240ff9193",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "89ea57f1-a316-48a8-93e0-820418e4e50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5c53de-5638-4eed-94f0-21baf4e118f4",
        "cursor": {
          "ref": "df4b045a-ca5b-4bd1-bb01-9ac5685b85fe",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5be1360a-82f1-4bcb-894e-6d42056b595d"
        },
        "item": {
          "id": "df5c53de-5638-4eed-94f0-21baf4e118f4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6e95cf1a-4de8-4fcd-b178-2e13a1732fcb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 690,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b3034e-34c3-4ebf-83ed-f4ed4cda86fb",
        "cursor": {
          "ref": "124b6338-930c-4157-9b11-1faf02d085cc",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5e13d5b0-6229-4b5a-b65d-3c0cfb997487"
        },
        "item": {
          "id": "28b3034e-34c3-4ebf-83ed-f4ed4cda86fb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "23a44f42-6dac-481b-b006-770be6c98371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5e7942-4364-4a4d-89f6-003dbe2b8e59",
        "cursor": {
          "ref": "217490a7-6a7f-41db-a498-ed06296b2587",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "eb5767fa-be93-4126-8612-4092d5c38286"
        },
        "item": {
          "id": "0a5e7942-4364-4a4d-89f6-003dbe2b8e59",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c3473831-92c2-4079-9ffd-e5f4369c14aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37eaa81-7a7d-4d21-92e1-344506951123",
        "cursor": {
          "ref": "249eef17-bf1b-4fb1-911e-671654599bfa",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8dd91321-50cc-433c-abc5-5a4bab94b23c"
        },
        "item": {
          "id": "f37eaa81-7a7d-4d21-92e1-344506951123",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "58469b91-88d8-4369-aae3-f6f87d1f664a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650f7116-ecfa-4028-8e84-cd37b31c89b9",
        "cursor": {
          "ref": "3291a2c7-0c48-4730-a725-3f30ac61d086",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7b62b639-4a4d-478e-9023-3c733e398ed4"
        },
        "item": {
          "id": "650f7116-ecfa-4028-8e84-cd37b31c89b9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c513f14d-d8d6-49b7-b7c3-74e546abbb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102374a5-8d07-49d6-8d32-7227d53e7f72",
        "cursor": {
          "ref": "261c9b28-8e5a-4f2a-8adf-56423e321bce",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "16f70431-43c4-4253-8bf8-4d83c5b3f7b3"
        },
        "item": {
          "id": "102374a5-8d07-49d6-8d32-7227d53e7f72",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "45089bbb-c926-4fbd-a4eb-a158a79857a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3d34e7-b483-4aaf-8de6-7e9ed77fc899",
        "cursor": {
          "ref": "43ea2cf7-d317-4281-92a3-912dae8d39e0",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "da113d0b-d616-4677-b9d7-a7458e396ebc"
        },
        "item": {
          "id": "ef3d34e7-b483-4aaf-8de6-7e9ed77fc899",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "21eb3809-cdd1-497e-bde5-d53fc482004c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb15a128-4037-429f-8b7c-6986e95999f3",
        "cursor": {
          "ref": "32a33c91-9f0c-4fd8-ad27-78df5ddbb5d4",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "616ec5b6-861d-4ab8-b63d-d881860bcbce"
        },
        "item": {
          "id": "bb15a128-4037-429f-8b7c-6986e95999f3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "458a1b35-5e9d-4dbd-a482-2d2506b0d9bf",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 640,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c13051-4bfc-4542-928d-18f6994fcffb",
        "cursor": {
          "ref": "684581d7-67e6-4bf5-80a2-64dced02d0e4",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "53e7deec-c2f9-4513-b373-a30de741145a"
        },
        "item": {
          "id": "f6c13051-4bfc-4542-928d-18f6994fcffb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fd3991f3-ca0c-4b54-8163-ff81937420a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d0646b-ab4e-4393-8e65-55ddb9a88963",
        "cursor": {
          "ref": "8c023772-7a14-4d7e-8b7b-fcf2c2234dfa",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "640e47f3-9f2e-4c3e-a8fe-4dfb1436f247"
        },
        "item": {
          "id": "61d0646b-ab4e-4393-8e65-55ddb9a88963",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5cc9f102-05d4-4a10-84ad-27893b9286d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4442ebba-39d7-42bd-bf00-c3aaee49e639",
        "cursor": {
          "ref": "90e4f748-0424-4fb0-9ed6-c2054a12a04c",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "11b74a46-5c13-4f23-acf5-6c5a51bdb46d"
        },
        "item": {
          "id": "4442ebba-39d7-42bd-bf00-c3aaee49e639",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3b1a1e7f-2bd7-4543-a5cf-c297e8adf82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1307,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ded03d-08cf-4dfc-a0db-cc016ce0a3f4",
        "cursor": {
          "ref": "da1ed9a0-2390-44bf-b0a8-1e41d849b5d9",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b47c33bf-d80c-479f-8587-32751e7a84a5"
        },
        "item": {
          "id": "78ded03d-08cf-4dfc-a0db-cc016ce0a3f4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ab1a8462-4e0b-4511-80d9-892823b2ed6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1689,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39238d1b-b146-47cf-9a15-8fd69cf23a04",
        "cursor": {
          "ref": "da982f57-8bc9-4ec6-b52c-6f4e58f4395d",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6da6c2cf-291b-4fbc-80d8-13c78edac21c"
        },
        "item": {
          "id": "39238d1b-b146-47cf-9a15-8fd69cf23a04",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0f896e7f-bc7a-47c8-8a37-42d0a99d4e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1329,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe12a877-9384-4a84-8b2f-d936dce3aae1",
        "cursor": {
          "ref": "2359bab3-4eb1-42ff-b499-b2803658ed41",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "27413bfd-5d2f-4f66-96c1-ba99e5880e88"
        },
        "item": {
          "id": "fe12a877-9384-4a84-8b2f-d936dce3aae1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "291c2785-c0d1-4b64-a4a8-1d2416a265e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1357,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12759052-5b4f-48a6-9b60-ddcf77dce2af",
        "cursor": {
          "ref": "5231c886-739a-4420-aae2-25a2a855a32f",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5bbe2379-4f0c-456d-9615-39b0882b47c4"
        },
        "item": {
          "id": "12759052-5b4f-48a6-9b60-ddcf77dce2af",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c766ad77-c54e-4237-868b-7b317d4e9ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 910,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a216046-ef5a-41e6-992a-ce9fdf4536c9",
        "cursor": {
          "ref": "94c7a81c-cab2-4b79-9a86-621dc8dc1484",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a0b06cbd-0004-4d10-8cb8-4ec46dd79ec8"
        },
        "item": {
          "id": "1a216046-ef5a-41e6-992a-ce9fdf4536c9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d1b93926-752d-4e54-a666-c53c876cc1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31f3c02-0191-40d3-9d03-3605f24f3412",
        "cursor": {
          "ref": "a1ee6cd6-8573-4ca5-b014-0f6993b9a187",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3ccafadd-66bf-4463-bc19-2978848f4dbb"
        },
        "item": {
          "id": "b31f3c02-0191-40d3-9d03-3605f24f3412",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4db5b01e-ce7d-49e4-ac7b-bc8f4a4c9309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4472a54c-a138-4881-b719-d86711b589e9",
        "cursor": {
          "ref": "c4c8153f-6e87-4f27-a118-91c00cd64ece",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "625b84a8-17a9-48a0-9491-fff695598dd0"
        },
        "item": {
          "id": "4472a54c-a138-4881-b719-d86711b589e9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "011936f2-7e93-497e-a18e-40650952c864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f968064-12e2-4da6-be34-02fa8ba95db4",
        "cursor": {
          "ref": "971dfa37-40d4-4522-ab58-7f454af8aee1",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7333cc0c-ee37-4049-b5c8-4ab3786d14ea"
        },
        "item": {
          "id": "9f968064-12e2-4da6-be34-02fa8ba95db4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a8d546b4-c0c0-42e7-9cc9-d2166acc0ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283ad738-4175-4f87-abcd-11a2bbccb500",
        "cursor": {
          "ref": "5ff53b38-4b71-49be-b989-6a413ae8dd66",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b2be2255-5b0d-4d7b-8d2d-9ed595e64c5b"
        },
        "item": {
          "id": "283ad738-4175-4f87-abcd-11a2bbccb500",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c7c5a80f-46ba-4029-81a2-daf62ab31402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999b1a1d-5c73-48f2-9bf2-6dc576379fd9",
        "cursor": {
          "ref": "60b07afd-9624-4f55-9605-dfc459aff020",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c96aa264-e802-450d-9365-aabfa17f2887"
        },
        "item": {
          "id": "999b1a1d-5c73-48f2-9bf2-6dc576379fd9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fde4e151-7925-4b48-b167-3739e9beb877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668327a9-a249-4172-8714-1883beb417ba",
        "cursor": {
          "ref": "ecf1fe7f-75b8-47a9-86c3-21d8192bd4eb",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5f625885-7082-4017-b177-771e369540a6"
        },
        "item": {
          "id": "668327a9-a249-4172-8714-1883beb417ba",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6a67af54-17b5-4c2f-b405-b9095c1364fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114a6fd2-7997-449d-b01e-a503d6e63d2d",
        "cursor": {
          "ref": "811a03ea-9ae3-44c1-9048-c879e22affce",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "45e67996-2981-49b0-8c48-19abc56701e7"
        },
        "item": {
          "id": "114a6fd2-7997-449d-b01e-a503d6e63d2d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "586f3111-0625-4853-bbda-66272a2e3417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301645ae-9f28-41d5-9a05-843e5faea539",
        "cursor": {
          "ref": "16abf54d-1acb-43c2-998f-95cefd2d4c45",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "da6f8348-3927-4f2f-b57a-e5b490a2856c"
        },
        "item": {
          "id": "301645ae-9f28-41d5-9a05-843e5faea539",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "df8a5b46-b6ef-45fe-9cd4-1850ff10f544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e555b39c-2801-4b98-ac1b-37e658c1b765",
        "cursor": {
          "ref": "6ce3f1fb-1554-4caa-baec-fc9f675cd6fc",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "864c3367-4c5d-489a-9c21-4b05b7f1c0f7"
        },
        "item": {
          "id": "e555b39c-2801-4b98-ac1b-37e658c1b765",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9551839c-6a76-4a4f-8639-a0f642a5bd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e94cbb-a358-47a6-8db0-76c1f132d235",
        "cursor": {
          "ref": "90051f66-dce5-4d39-a433-dbcdce7f49d4",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6a288f13-96e4-47c9-81b8-51121b3287f4"
        },
        "item": {
          "id": "c1e94cbb-a358-47a6-8db0-76c1f132d235",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4b127b93-0587-4af7-a049-b4b888090781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a6a3a8-eea7-4f03-8fe0-2243fbad333d",
        "cursor": {
          "ref": "09b2b979-63bd-4a8d-84b7-0c5e1db41bff",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9ea63e8e-df2a-4dcc-9904-42364c31fa93"
        },
        "item": {
          "id": "c5a6a3a8-eea7-4f03-8fe0-2243fbad333d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "64584894-ecfa-40a1-abd3-16821a8c45fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d6cd8d-a4df-4416-a203-a0a91d15be8c",
        "cursor": {
          "ref": "56024ce1-55d8-427a-a597-ea22428d2ac5",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "96b0f412-d344-49c1-a08f-db578d469ebf"
        },
        "item": {
          "id": "38d6cd8d-a4df-4416-a203-a0a91d15be8c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e972e874-6641-4183-b61f-eb25cc8cee78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3395cf-59f9-4c06-a9d7-243ec8e00e3e",
        "cursor": {
          "ref": "df4a969a-b994-41c4-8d22-e107e97377d0",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c5a3301a-3409-4c5c-9934-56a1eaefa00c"
        },
        "item": {
          "id": "7a3395cf-59f9-4c06-a9d7-243ec8e00e3e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5783b761-1d50-42b2-bd34-264760131e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ceb61e-bb1a-457e-a888-fb8389685672",
        "cursor": {
          "ref": "fc290510-b799-45b3-b845-ab616f8b724d",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c15077ae-3981-45c2-84b8-9743b3f5dc9c"
        },
        "item": {
          "id": "84ceb61e-bb1a-457e-a888-fb8389685672",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a9f85346-e1bd-452e-8c99-4035402cfe6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f87437-003c-4fd2-a6f9-277327f03778",
        "cursor": {
          "ref": "ad4d8350-257a-4478-91c0-b7ff0183e0fc",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8dc207a2-87c4-48a5-9c89-460b165cdcc5"
        },
        "item": {
          "id": "92f87437-003c-4fd2-a6f9-277327f03778",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "55c11d21-7ce7-4512-8e60-84db6f04d5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497c3226-b87b-429a-9b57-b6477e4fe1bb",
        "cursor": {
          "ref": "5c49a5ab-53bf-4b76-910c-68bc2050cc61",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9fded7d3-0b5f-4553-b58e-41610c2e2fb8"
        },
        "item": {
          "id": "497c3226-b87b-429a-9b57-b6477e4fe1bb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b6a8d6bb-6bc8-46b5-9026-a7afa35bde59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1146,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0be0d44-fc20-4165-9780-a2b3de08538e",
        "cursor": {
          "ref": "0329049f-59c7-494a-a408-1f5fe0d42568",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d27dcc17-457e-483d-9b30-ea9630d0fafa"
        },
        "item": {
          "id": "f0be0d44-fc20-4165-9780-a2b3de08538e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2e77453c-3083-4e74-9d09-11866087d7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1259,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3a6d2c-5b49-4419-a717-88b7a820e7a2",
        "cursor": {
          "ref": "f1423895-aaff-4507-9494-ab0e1678df1c",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "748555d1-6c62-4beb-8a76-d291e5712c37"
        },
        "item": {
          "id": "cf3a6d2c-5b49-4419-a717-88b7a820e7a2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c2e39962-5e33-4aeb-a65e-1376afc24601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1149,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304ada82-5455-469e-ab4d-bfa94a1b67b6",
        "cursor": {
          "ref": "a03f741f-d8fa-4f12-9ab8-c1df850eeadf",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "abe80ad2-cb2b-45c1-920a-62d7a773b8e4"
        },
        "item": {
          "id": "304ada82-5455-469e-ab4d-bfa94a1b67b6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f3f16828-81b3-480d-ae6b-da8dd17f1172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 952,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82be7616-08f6-455f-99aa-1c9779904533",
        "cursor": {
          "ref": "ee34d5a4-2f74-4d7c-ab47-8bf0b810f0ea",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6b38dc28-69fa-4a32-bbf6-082073fa76ec"
        },
        "item": {
          "id": "82be7616-08f6-455f-99aa-1c9779904533",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7bff1a29-079a-4185-b2a1-e55e2682953d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1008,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65350578-80d1-4ee8-9b3f-50cf0c517261",
        "cursor": {
          "ref": "7c28e3d1-f871-43d8-8cdb-86dd9c5a4b9c",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3e71d117-3ec9-4a48-be45-3530e3d61706"
        },
        "item": {
          "id": "65350578-80d1-4ee8-9b3f-50cf0c517261",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "95f9c9ad-6e1a-44bf-9c26-46eb4b85e65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3fea88-4ac8-47f6-864b-294e592c4d14",
        "cursor": {
          "ref": "a70a87b8-378f-4aec-a75a-86f2a0fb763f",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "257481a7-7e47-43f6-8f7d-8cbeda76ddb5"
        },
        "item": {
          "id": "3c3fea88-4ac8-47f6-864b-294e592c4d14",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "06caa740-31d2-4142-bd4e-f6b2dc776905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a0364d-0cb9-4bd4-8f50-63e46e95adb7",
        "cursor": {
          "ref": "0e7e1bb5-8e91-497c-835a-cc23e7caf403",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1da394a4-491f-4fa1-bb87-750faa5c03c5"
        },
        "item": {
          "id": "a7a0364d-0cb9-4bd4-8f50-63e46e95adb7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7edd5e56-2dce-458e-b388-0594fcc4ef40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 895,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2431300e-163d-49a4-a5d7-630675104224",
        "cursor": {
          "ref": "affdd6f1-0fae-49d5-857c-e97b3357bce6",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "32e27c0f-f092-4e7c-a3ad-e1dc660a09c7"
        },
        "item": {
          "id": "2431300e-163d-49a4-a5d7-630675104224",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0bafc9b1-a98e-4016-a85e-0e10a415dbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae0ff9b-d907-4235-95b5-69c95159ccc3",
        "cursor": {
          "ref": "7af419a2-0459-435d-b9dc-2847cc15d469",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "659809a0-9d25-43b8-8d03-bf83a535af20"
        },
        "item": {
          "id": "6ae0ff9b-d907-4235-95b5-69c95159ccc3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5b54add3-aab0-4832-b9c9-46fa3e6c41ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14249b0-3fab-4ff8-ad93-7f7e3b2f8176",
        "cursor": {
          "ref": "fa410100-6d79-4e5e-bbe3-cc9f97831d5d",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d400b487-2fc5-449c-8623-1814d1b38edb"
        },
        "item": {
          "id": "c14249b0-3fab-4ff8-ad93-7f7e3b2f8176",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "55ba7c69-1c96-439e-adc3-dd0a5e1cd310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccd1080-5bc1-49bb-94ed-cfb897209133",
        "cursor": {
          "ref": "c6e602f8-6dc0-455d-97d2-69d3622e8330",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5d624fc5-e1a3-4ac1-ae57-877a257f1384"
        },
        "item": {
          "id": "3ccd1080-5bc1-49bb-94ed-cfb897209133",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ead323f9-596a-441a-aec0-8a36ddbf85b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe234611-8a54-4a99-b079-b37b0c46e725",
        "cursor": {
          "ref": "7a7aada4-151b-4d18-b5ef-4085f27d169f",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "89ff0016-c515-4083-88ca-5a1015549529"
        },
        "item": {
          "id": "fe234611-8a54-4a99-b079-b37b0c46e725",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a064e3d1-e74e-46b3-8a57-cbfcbeac9d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8bc38b-87ad-4afd-8e1d-bf5c6b2b74d3",
        "cursor": {
          "ref": "fbc6de04-0186-405e-a94f-08043a0ff02b",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "90c74683-d5ce-4c95-9c67-f075862ba080"
        },
        "item": {
          "id": "da8bc38b-87ad-4afd-8e1d-bf5c6b2b74d3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4c073531-e6bf-45ac-9306-4a8e5dfdb0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f1d3c4-54c1-43fc-9829-c71e36a86ef4",
        "cursor": {
          "ref": "c0534cc5-0fe3-4890-8632-c84ec32df254",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2a4b02ad-8601-47c0-a49c-d344905b637e"
        },
        "item": {
          "id": "b4f1d3c4-54c1-43fc-9829-c71e36a86ef4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0bc60751-fb73-4c8d-a168-035247970031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c741e246-3a11-451f-a289-5b1ca4ecb8e9",
        "cursor": {
          "ref": "a1756a1e-7eb9-4cc6-b028-b54775528143",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "27ee9f9d-8dd6-4a3e-a85d-d3e0ac2e3d1a"
        },
        "item": {
          "id": "c741e246-3a11-451f-a289-5b1ca4ecb8e9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b0a1d260-4b84-427f-97c4-a380d2fbbc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d4cae1-60e5-458e-aa5c-8203f5c11ad3",
        "cursor": {
          "ref": "8874ef37-526b-4c17-b5f5-fbe5e5ee12eb",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2fcd44f3-5491-4cd0-8d36-e7efa44d19d9"
        },
        "item": {
          "id": "17d4cae1-60e5-458e-aa5c-8203f5c11ad3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f2783488-3199-40f4-bbd8-132992c0a804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d67235-1227-4fc5-ac03-a84758c3788a",
        "cursor": {
          "ref": "e5291d4a-7d6d-4a1d-bf4b-8c8b21d1ea22",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cccc3d01-25b5-4ebc-a02e-b7ee9f954bab"
        },
        "item": {
          "id": "87d67235-1227-4fc5-ac03-a84758c3788a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3b8abdb9-dee5-45e2-ad9c-67cd87b6af20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58f0709-c146-4b65-b4e8-1247dbf11a2f",
        "cursor": {
          "ref": "5d2d4597-9077-4835-90fe-a87f8c473141",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cb52c294-37f3-4caa-8e8d-b2dc817479f7"
        },
        "item": {
          "id": "d58f0709-c146-4b65-b4e8-1247dbf11a2f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9cadc010-d46a-4488-ae93-1b5ec64ba882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed28a4a4-a8b0-4b61-9aaa-dc20a43403ea",
        "cursor": {
          "ref": "83d6da55-3c51-4d18-9bdb-b016278f0d79",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e5f06dd3-c04d-42c7-9479-9fb542dbf822"
        },
        "item": {
          "id": "ed28a4a4-a8b0-4b61-9aaa-dc20a43403ea",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5f5ccaa0-0e58-449e-850d-a8805642d1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0b8c42-a696-48c4-9949-42a651a0f195",
        "cursor": {
          "ref": "5fc31f2c-de4e-4147-810f-ab39ed0f8781",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f1dab03b-c250-4a5a-9340-8c52f3edda05"
        },
        "item": {
          "id": "8a0b8c42-a696-48c4-9949-42a651a0f195",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "995b89fd-9fff-4822-9d76-9acbe83fc67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0651dc70-6bb3-4e8a-9496-b7ce20f4743f",
        "cursor": {
          "ref": "7c909106-dc9c-44a5-9f44-d0ef2b934b93",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "539ea9ac-0a81-47ad-b8ce-17db1db0b068"
        },
        "item": {
          "id": "0651dc70-6bb3-4e8a-9496-b7ce20f4743f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c6c36e8c-5482-40f0-8dd5-4fa46fdc7775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0f0a31-28b3-4b66-aa5c-0ecb72544d0f",
        "cursor": {
          "ref": "86addc9a-f56a-4a76-bc14-a5aadd4a5168",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a9a3faf2-87ab-4c83-8052-070e6f3fce4f"
        },
        "item": {
          "id": "2b0f0a31-28b3-4b66-aa5c-0ecb72544d0f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "82c53b1c-bc49-40b2-a54d-f88dad40e96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8664f9-87de-4079-8f5f-8ba5f3225fe1",
        "cursor": {
          "ref": "b0b1e419-996a-4f76-a94d-04fdfceebe24",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d6c0049b-5095-441b-807b-91061f36be66"
        },
        "item": {
          "id": "aa8664f9-87de-4079-8f5f-8ba5f3225fe1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cd0447cf-c617-4d94-a4fd-e0da041a8a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e6855b-6f77-4e6e-aa05-cf3bd1620e35",
        "cursor": {
          "ref": "9cacd4ef-6103-4428-b6f2-ebca3031b585",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4d9f720c-b961-4b4b-b35c-39b8b41ddf19"
        },
        "item": {
          "id": "41e6855b-6f77-4e6e-aa05-cf3bd1620e35",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "24ec8726-c6c2-4c4f-91ec-a06cf015dad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bebd7f-83f7-490b-a6f4-421ca859817e",
        "cursor": {
          "ref": "4ed2dcfb-5f3f-4f33-9a31-9c3baded3242",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "07d7cea7-6241-41b8-a8f0-c1a5ebe3e233"
        },
        "item": {
          "id": "13bebd7f-83f7-490b-a6f4-421ca859817e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0f00cdac-636a-4da7-a180-ce4fa1318bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1ec6c7-9141-4cae-adb1-d8c6a96f76db",
        "cursor": {
          "ref": "fe0e5485-235e-4a6d-ad9d-5feb77062faf",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1a5bcacd-d32b-4f24-ab05-06949a02145e"
        },
        "item": {
          "id": "bd1ec6c7-9141-4cae-adb1-d8c6a96f76db",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "91a09d9d-e71c-4b14-ac67-9f83818e0de3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb32746b-1e45-4e7e-b01a-14f0f543ebba",
        "cursor": {
          "ref": "4b0b93b1-4af7-44e7-9dc4-c9b56c942acf",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1a92ee24-0f2b-4a0f-be03-180fc42b3648"
        },
        "item": {
          "id": "fb32746b-1e45-4e7e-b01a-14f0f543ebba",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "f1f54404-3631-4f5a-aa3f-4fce19260a05",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 543,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa84a60-3b55-48de-ba97-c53e0566f09c",
        "cursor": {
          "ref": "526314da-f968-426d-9a6a-ef10ceb9c6fc",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "beb43348-1f9d-4f00-bad5-87d38f4e4c9e"
        },
        "item": {
          "id": "cfa84a60-3b55-48de-ba97-c53e0566f09c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "eddc942e-250a-4525-9c67-4c3edea7ea7b",
          "status": "Created",
          "code": 201,
          "responseTime": 5986,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd9c4ba-bf77-48ab-9e1c-d076c428ebac",
        "cursor": {
          "ref": "c0b69220-aa8a-4123-91ce-4174261255be",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "80920f1c-7556-470b-8247-a34e9e73dcad"
        },
        "item": {
          "id": "7fd9c4ba-bf77-48ab-9e1c-d076c428ebac",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "38bf9084-065f-41da-a586-fadf5d2b2050",
          "status": "Created",
          "code": 201,
          "responseTime": 7436,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1894f2b5-43c9-48f4-98fb-048c4312b129",
        "cursor": {
          "ref": "cddac6a2-f0b2-4f35-9070-3c4ee45c2369",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "162a4cec-3853-477e-8e1b-9ff7aa4f4d00"
        },
        "item": {
          "id": "1894f2b5-43c9-48f4-98fb-048c4312b129",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2d11d7b7-cd74-41f4-b751-a39316a18b65",
          "status": "Created",
          "code": 201,
          "responseTime": 5817,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de80944-077f-474b-b92f-f809d4d5f4b4",
        "cursor": {
          "ref": "3f98323e-3485-4ec9-b92d-e5e8dfd93957",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6a25065c-bb53-4632-ac16-384c67bf1490"
        },
        "item": {
          "id": "1de80944-077f-474b-b92f-f809d4d5f4b4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5f45c776-80d8-4290-8fd4-6c6f8b599fc1",
          "status": "Created",
          "code": 201,
          "responseTime": 5671,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe26a834-63ec-4929-80b9-a9467f4970fb",
        "cursor": {
          "ref": "491cece5-304b-42cc-8d13-9be9b1c6b6ed",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b60ed692-1285-48be-aebb-0239947f2746"
        },
        "item": {
          "id": "fe26a834-63ec-4929-80b9-a9467f4970fb",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8aa92c33-1d7c-41eb-928e-6029ca8d9065",
          "status": "Created",
          "code": 201,
          "responseTime": 5728,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "412c04cb-069b-4033-bc6e-821f99b1f4d8",
        "cursor": {
          "ref": "14af7cd3-ae13-44b2-9668-1a56d4f7fcfb",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5f74c579-4e6d-466e-8ef5-e3ae5e01be71"
        },
        "item": {
          "id": "412c04cb-069b-4033-bc6e-821f99b1f4d8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5243e670-ef7f-4255-8314-2724bae6868b",
          "status": "Created",
          "code": 201,
          "responseTime": 8565,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b741640c-99e3-40fb-bbc4-b244c20be5d3",
        "cursor": {
          "ref": "ef15fec3-994a-4eee-bf81-e77962c858bf",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "37818c15-faed-4637-9887-ace5465b8aee"
        },
        "item": {
          "id": "b741640c-99e3-40fb-bbc4-b244c20be5d3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "03ff98fd-556a-480c-af2d-4481c9a2b590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b741640c-99e3-40fb-bbc4-b244c20be5d3",
        "cursor": {
          "ref": "ef15fec3-994a-4eee-bf81-e77962c858bf",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "37818c15-faed-4637-9887-ace5465b8aee"
        },
        "item": {
          "id": "b741640c-99e3-40fb-bbc4-b244c20be5d3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "03ff98fd-556a-480c-af2d-4481c9a2b590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be45de25-f69b-47ca-a5b9-6ec301a084ea",
        "cursor": {
          "ref": "06d90ce0-6476-4aad-8430-1eafe6c0d038",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9cdfe773-a766-497a-bf46-42d079ed351c"
        },
        "item": {
          "id": "be45de25-f69b-47ca-a5b9-6ec301a084ea",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7f68c03d-dfe5-4c0c-939e-f7f22c09225f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b105320-8e05-4890-afda-cd7e526fa3f6",
        "cursor": {
          "ref": "cff0356b-d7a2-48f5-998a-662ff05bafae",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ee893942-847a-4606-8b6a-15e8fcd77efc"
        },
        "item": {
          "id": "9b105320-8e05-4890-afda-cd7e526fa3f6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b4bdf943-1d9d-4c18-8ba0-9986c3848e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e09200-8eaf-43b5-ad60-25015c2802d0",
        "cursor": {
          "ref": "be309c2f-97ef-43d6-891b-772b1cb4bf87",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6b2183fb-403e-4307-9961-e20b5512864b"
        },
        "item": {
          "id": "98e09200-8eaf-43b5-ad60-25015c2802d0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1c0ebd4a-7ccc-46e6-a81e-2cfc271ed387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30633f4-a251-4cfa-bccd-d09262eb776f",
        "cursor": {
          "ref": "977ba98e-0fd8-4b66-82a0-da21e2c28967",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c11a03d2-4bac-4b42-a314-08b3a137ec69"
        },
        "item": {
          "id": "e30633f4-a251-4cfa-bccd-d09262eb776f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "caa62d0b-a19f-4fbc-8be4-806c08a50553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91706eab-9e0c-48c4-a14f-8ab6c56ad0d5",
        "cursor": {
          "ref": "1cf7b751-25bd-4e7d-86f9-c9af985ddfa6",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a43da7c6-1bb7-4aad-80ba-551e6f226afd"
        },
        "item": {
          "id": "91706eab-9e0c-48c4-a14f-8ab6c56ad0d5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "140f1678-ecaf-45c8-a103-b41e4c762e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed886f7a-07ff-4180-a915-f5e596ef7586",
        "cursor": {
          "ref": "72b0a1d6-2030-417c-8643-0bbb1b8b2353",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "68c1f787-7c3c-4dbb-ada3-0860a22d4660"
        },
        "item": {
          "id": "ed886f7a-07ff-4180-a915-f5e596ef7586",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4b87cf14-a4f0-4608-add7-26f5556fc4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec228c9-4f0d-48e6-b35f-e5f8df21b717",
        "cursor": {
          "ref": "4740fbf2-b039-4567-9289-1df02602f0aa",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4348b01c-deca-436c-aa97-f9229c1bcf17"
        },
        "item": {
          "id": "aec228c9-4f0d-48e6-b35f-e5f8df21b717",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "55572a50-d764-419b-9be3-fcbbad3bcb1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77d7b29-5d93-4a96-9300-d5e4ce1d1843",
        "cursor": {
          "ref": "77f11b3e-d745-4d90-ab76-44dc282ac9eb",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d6603a6c-893c-4721-8e0a-beecf60831b1"
        },
        "item": {
          "id": "b77d7b29-5d93-4a96-9300-d5e4ce1d1843",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5d158d44-fc6d-40ef-b6fc-8ad74c234f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d5353d-0ac3-4cba-92f8-36210665ecf3",
        "cursor": {
          "ref": "7d5eadc9-eb0a-49d9-8fff-7df192a6f852",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6bb0efb9-f23f-46b7-ad45-07e3151e1279"
        },
        "item": {
          "id": "e5d5353d-0ac3-4cba-92f8-36210665ecf3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "822c10e1-3698-416b-88f8-ad6f53c37d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6b25b1-e18b-4c54-b114-25c6940f45d3",
        "cursor": {
          "ref": "cd1891d5-de1c-4c3b-826f-706d7e1de852",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "db557ccf-3459-4b1e-a6ec-2d973c61e644"
        },
        "item": {
          "id": "ea6b25b1-e18b-4c54-b114-25c6940f45d3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fbd47d63-6b6b-4568-be4a-e66db9e756a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5014f2-e696-404d-9acf-b91b7cd7111f",
        "cursor": {
          "ref": "a5d60691-04b0-4c50-b2f0-94924949d869",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e8d33d0b-29c5-4f5f-8a08-f1106ac2ae62"
        },
        "item": {
          "id": "9a5014f2-e696-404d-9acf-b91b7cd7111f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "667bac91-1011-478d-9619-8c73be771aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df39880-0653-4c73-9140-93f9def08d5f",
        "cursor": {
          "ref": "6e065e7a-e395-42b5-9c49-8797950dd6c0",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "dcbd5503-4b3f-43f9-817d-b2a9bd4e910c"
        },
        "item": {
          "id": "6df39880-0653-4c73-9140-93f9def08d5f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bd322b81-9d3a-498d-a047-b5b7932c4ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027d8a57-f986-4c09-b6ac-227ac6101fc0",
        "cursor": {
          "ref": "c538a3db-dfed-44fd-a135-0cef169a1ec1",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bf02c503-f926-431f-99c7-c19df0ded2cb"
        },
        "item": {
          "id": "027d8a57-f986-4c09-b6ac-227ac6101fc0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "282ee088-3050-48b0-a51a-2e558305ba4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9090d69-2ad2-4fcf-87b7-2515cd16d4c8",
        "cursor": {
          "ref": "6c08a9c4-c790-4fc8-bec3-940f1588a0bb",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2cd5e970-54d4-4557-975c-1450ea822afb"
        },
        "item": {
          "id": "b9090d69-2ad2-4fcf-87b7-2515cd16d4c8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e25994a3-47b7-440d-8f5b-87043b379c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7f066d-72a8-4f65-8f35-9ebe9aa1fc6f",
        "cursor": {
          "ref": "7cc43c37-1f4b-49ef-822e-23ceb7ab5c9f",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "94b49070-9390-4726-b3f2-c0e08fdec22f"
        },
        "item": {
          "id": "ad7f066d-72a8-4f65-8f35-9ebe9aa1fc6f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "94a3cf1c-5e6b-42f6-a39a-bc2e36aac97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb7bb40-b27d-475a-83a9-c8f46dba0488",
        "cursor": {
          "ref": "0ec76d37-153c-43d1-a82c-085f032e5e2d",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4bb4b359-872d-4f30-8857-085a110cc307"
        },
        "item": {
          "id": "5fb7bb40-b27d-475a-83a9-c8f46dba0488",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9960d912-789f-4cbe-8265-98329b4c568f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79574132-30b0-40bc-a508-cbf0a902acdb",
        "cursor": {
          "ref": "a72d7426-f2cf-4cb7-87a7-0a4eeba0e913",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "77247a84-7443-4115-bef3-95273a3c32ba"
        },
        "item": {
          "id": "79574132-30b0-40bc-a508-cbf0a902acdb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5ca95c78-5816-4ae2-a02c-8b5d14b16bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5e37d0-374d-4bb6-9822-1ab5fefc9c74",
        "cursor": {
          "ref": "7fd98482-b36f-408e-8b27-7c77aeb57a74",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9ab9e509-4b9f-4864-b4db-75aa6ead055c"
        },
        "item": {
          "id": "af5e37d0-374d-4bb6-9822-1ab5fefc9c74",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "117474c4-faff-4279-92e2-026a4d675dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafc5d20-e14d-43ae-b495-c9f54fff5bca",
        "cursor": {
          "ref": "7975b306-846f-48a3-a6bf-131d1962d7b0",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "db241910-b2b9-4da2-ac3d-f070bcb1308c"
        },
        "item": {
          "id": "bafc5d20-e14d-43ae-b495-c9f54fff5bca",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "378efd0f-b8e5-46b7-804a-072a291e582f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba6a974-4ff2-4c5f-8a16-f4bcfdf64a0a",
        "cursor": {
          "ref": "6e70d0e0-95ba-44c2-90da-ee78aa41feed",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f890dcd1-52e9-47b6-9a4f-3a65895f8b61"
        },
        "item": {
          "id": "8ba6a974-4ff2-4c5f-8a16-f4bcfdf64a0a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "53f12bc6-eb62-4a48-9aa3-81a6f619cdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d5c439-53df-4c2f-8b02-e995f0ad57d3",
        "cursor": {
          "ref": "cd802059-619b-4c8c-ba4d-54afe0327541",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4a01ce5f-8349-410d-9c5d-47391c44cea9"
        },
        "item": {
          "id": "40d5c439-53df-4c2f-8b02-e995f0ad57d3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "96dc3238-6a5e-4caa-a31c-e9e76fdb9985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f778557b-9192-413c-98f6-58b1dddffef6",
        "cursor": {
          "ref": "f6d0be56-3d94-42a4-afdc-3c13e5e26e55",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5eb3483f-7534-475c-9b1e-f411936b6ca0"
        },
        "item": {
          "id": "f778557b-9192-413c-98f6-58b1dddffef6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a8392166-7d19-47db-a17c-51bd136244c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 942,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61dde8f-e8f4-4899-b463-1f9f26e16d19",
        "cursor": {
          "ref": "0bf2469d-fa91-4e1b-b229-bf5dee9e3e22",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bd60230a-0914-41bd-9fb6-e6e653cb27f9"
        },
        "item": {
          "id": "d61dde8f-e8f4-4899-b463-1f9f26e16d19",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b3962dd1-c395-4bca-9ebb-3cd8eeb3a7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a90d91-ab58-4543-8ed1-e713b16b1ce7",
        "cursor": {
          "ref": "04efc891-399b-471d-aca2-f39b779218c8",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c3be785e-0c77-4c02-8d38-f6d8b64f19b5"
        },
        "item": {
          "id": "66a90d91-ab58-4543-8ed1-e713b16b1ce7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4ab7f387-0982-4e7c-ba72-624a4fca2c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bbad21-28f5-4111-9876-b269c9b12eb2",
        "cursor": {
          "ref": "78ce902d-c736-48c6-90bd-7ffaffea914e",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "690fe50b-d76c-4601-a872-1d792f4f7398"
        },
        "item": {
          "id": "36bbad21-28f5-4111-9876-b269c9b12eb2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a4d8c7ee-83c8-4c75-a069-2a7a81bc4e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10c611d-9093-4791-a829-d2b39b9e3200",
        "cursor": {
          "ref": "32ed8481-38fc-4fe2-918f-18001f711a3f",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b5f1613e-660c-4f54-a2c0-c14e8c038f48"
        },
        "item": {
          "id": "f10c611d-9093-4791-a829-d2b39b9e3200",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f736d5fb-6c5d-4ba9-b887-297a492749ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa96c4e2-af70-4b2d-8d7e-5a1657ec3de6",
        "cursor": {
          "ref": "6156a302-b419-4c80-8812-1a1e3f4ab2cf",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "008e84e0-9622-4743-a96a-d5b455a99403"
        },
        "item": {
          "id": "fa96c4e2-af70-4b2d-8d7e-5a1657ec3de6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b0b63ab4-d0d3-4b59-b4e7-4ac3a8e93428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe6c93a-e707-4653-b620-bf01bbdbdd25",
        "cursor": {
          "ref": "647525aa-d09b-43d9-9b26-93af82a510f1",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "df5e143c-e049-495b-b8bf-c9c12d66be8f"
        },
        "item": {
          "id": "abe6c93a-e707-4653-b620-bf01bbdbdd25",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4c8c4859-ebf9-4e2b-9671-990d1bc7546d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8fe402-3ef3-4e1b-8212-35aee70cab1d",
        "cursor": {
          "ref": "9fb1d320-e49b-43ec-80e6-f1aef1e1b9cb",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bba02efb-4116-48ee-a582-d6ff42b17e21"
        },
        "item": {
          "id": "ae8fe402-3ef3-4e1b-8212-35aee70cab1d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "49aab4ff-28ba-46b0-a86a-394e43591f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f58a370-ddfd-4720-9505-6199129fb1aa",
        "cursor": {
          "ref": "00dc0c2d-7789-4eab-b968-1306ecd6245d",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "22e3aada-acff-47bc-823e-dbf70781601a"
        },
        "item": {
          "id": "7f58a370-ddfd-4720-9505-6199129fb1aa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b7c22f4e-b38f-44d4-a236-ac011e3f131b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85b1fbe-d721-4a8d-9da3-f5637d394412",
        "cursor": {
          "ref": "6e76a42e-22b2-417e-b742-5be5978a1f50",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "910a7205-a930-4cb8-8a2e-57b6e55fa0b7"
        },
        "item": {
          "id": "c85b1fbe-d721-4a8d-9da3-f5637d394412",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f96acdb1-acd2-416e-8d1b-02d9af472598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438158f4-5462-4292-98e1-5857ca5e2f92",
        "cursor": {
          "ref": "bcc85469-9343-4bc5-bdbf-4f0eba30bc42",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b796375e-7e05-48bd-81ad-c324bce77202"
        },
        "item": {
          "id": "438158f4-5462-4292-98e1-5857ca5e2f92",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "98f525ec-0049-43fe-b471-f9347718c66c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3109c25d-662d-4f2d-9d3f-b83e32074076",
        "cursor": {
          "ref": "07c1ccd8-40e5-4168-9176-6ba06a2fc196",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7a894c28-2053-4162-911d-3375d2a01d65"
        },
        "item": {
          "id": "3109c25d-662d-4f2d-9d3f-b83e32074076",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "ef34a434-277d-4a27-ad23-c6a6feaf4991",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 519,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07780eb2-eb72-434b-a73a-90746c274ffe",
        "cursor": {
          "ref": "4478fb39-2b17-4d03-84b7-a62d71832831",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3b2fc223-629a-4ee1-986d-70f1fa567c69"
        },
        "item": {
          "id": "07780eb2-eb72-434b-a73a-90746c274ffe",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "733e6381-d94a-4ff4-8f0d-864c1af1ff7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07780eb2-eb72-434b-a73a-90746c274ffe",
        "cursor": {
          "ref": "4478fb39-2b17-4d03-84b7-a62d71832831",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3b2fc223-629a-4ee1-986d-70f1fa567c69"
        },
        "item": {
          "id": "07780eb2-eb72-434b-a73a-90746c274ffe",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "733e6381-d94a-4ff4-8f0d-864c1af1ff7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086ed8c5-0dbc-4a2f-827c-a1f237af1b04",
        "cursor": {
          "ref": "bc1e09a0-1bb8-4f29-a5ba-4c82827219f6",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ece71e7d-2507-4737-85d4-8bd709c9e32a"
        },
        "item": {
          "id": "086ed8c5-0dbc-4a2f-827c-a1f237af1b04",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a811b733-37b3-4cc8-b109-fc348cb09757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b84435-7ec3-4cf5-b647-53ea35374216",
        "cursor": {
          "ref": "3f1d2b84-78e3-4b93-a8cf-9792d362a125",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e42c92a8-9581-4f60-b0ec-99daad7f6cb3"
        },
        "item": {
          "id": "56b84435-7ec3-4cf5-b647-53ea35374216",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ef41d5f5-4657-4cbf-9664-d36457cf1e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0974f49-38c0-4750-ac84-61be7cb127cb",
        "cursor": {
          "ref": "ec3c5b7a-a694-4aec-8b29-69a89ef44abc",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "aebfedcd-c67b-4b68-8df2-973bdfa8e0be"
        },
        "item": {
          "id": "e0974f49-38c0-4750-ac84-61be7cb127cb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4ce3f279-6c7d-4193-a8a9-66a904255ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099ba9f9-97a0-4aca-a32c-0765617c928d",
        "cursor": {
          "ref": "685624e2-13fa-4c64-a737-343412bc474d",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "03942c34-c59b-42c9-9e14-02b4b95a917b"
        },
        "item": {
          "id": "099ba9f9-97a0-4aca-a32c-0765617c928d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e372a1ca-5aba-4b8c-bafc-2c68811e0807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6990ec-68aa-42f9-82c9-16181592dfef",
        "cursor": {
          "ref": "f6b76e7d-cc60-40b2-bd6c-351bc400f04a",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9eeef203-c5a2-4614-987c-6569ae78c099"
        },
        "item": {
          "id": "fc6990ec-68aa-42f9-82c9-16181592dfef",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b03e0ea6-e03d-4993-843c-16b735bc2c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f9df73-5e23-44c1-898f-976341ce97c4",
        "cursor": {
          "ref": "9d4f48a7-a7b4-4b17-a1e8-eae10393323b",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7211c38e-67c5-4e02-bbd7-73e373cb1938"
        },
        "item": {
          "id": "44f9df73-5e23-44c1-898f-976341ce97c4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2794e380-89f8-4f35-9b87-b0a1fe9ebb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47e3a38-25ab-45a5-9279-80ce87cbb7f6",
        "cursor": {
          "ref": "5b13172d-c967-4df6-95a7-bd4ff25d4ccb",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4c75c322-2fd9-4556-b704-e314badd9172"
        },
        "item": {
          "id": "f47e3a38-25ab-45a5-9279-80ce87cbb7f6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "57ef96a2-2062-4a82-a57f-68520750646a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae25d65-2d2d-4aa2-bd97-1d8f4deba07c",
        "cursor": {
          "ref": "3f79ec24-d27f-46ea-875a-b5c722b4d0a0",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a9fc3971-2825-45a6-84a1-3a54e99e6c96"
        },
        "item": {
          "id": "5ae25d65-2d2d-4aa2-bd97-1d8f4deba07c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "76adbcf5-00d0-462a-9ca7-970c7ea8d8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f6e946-9e87-406f-a3e0-924a8eb1f55d",
        "cursor": {
          "ref": "3c843892-0f14-406c-b0c7-9d2f663beaa2",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b8698630-2238-4d49-90df-56630d58528b"
        },
        "item": {
          "id": "12f6e946-9e87-406f-a3e0-924a8eb1f55d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ca3419c8-7953-4783-9492-ec5f83fe4e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95c464a-ef62-472c-8733-bb56231bc6b0",
        "cursor": {
          "ref": "e7db6c66-d4f5-499c-9752-4e06b470ef2b",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4e95f21c-7843-4e02-b8a1-8d70daeb9a99"
        },
        "item": {
          "id": "e95c464a-ef62-472c-8733-bb56231bc6b0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4ee9869a-215b-4056-ace9-b2e9213dc108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56e60fb-c6a3-4132-9263-d0ddccf391c6",
        "cursor": {
          "ref": "367f7253-c07c-43f3-b7bf-0a28abe78050",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1316e6f3-5250-4b49-a3b8-6b0ce7b3a786"
        },
        "item": {
          "id": "b56e60fb-c6a3-4132-9263-d0ddccf391c6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1b5c8ffa-7644-4cf9-bda4-aaad61482f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d177fdfc-319a-4e04-bcd4-36ca11515e37",
        "cursor": {
          "ref": "244f892a-be7a-4015-9920-12efddc291dd",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "74eb2d01-b51c-46e5-9136-bcc314c24cf0"
        },
        "item": {
          "id": "d177fdfc-319a-4e04-bcd4-36ca11515e37",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b19bf588-631e-43f1-ba2e-094061e8a261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b1ac64-235d-4e2b-bdce-c96fa6662899",
        "cursor": {
          "ref": "8c1c0c14-1ed2-498d-b371-67d36681890b",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9c215910-8173-43e6-8272-c7a90e81cd4b"
        },
        "item": {
          "id": "d4b1ac64-235d-4e2b-bdce-c96fa6662899",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7b9bd651-38de-4b08-8b83-94fc19575906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8deb60a-a4a7-4c62-be27-5c1f43201a93",
        "cursor": {
          "ref": "ce5d329f-eeaa-4985-a004-739006a06349",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8cb2847a-a244-41c8-9064-18073c6343ff"
        },
        "item": {
          "id": "d8deb60a-a4a7-4c62-be27-5c1f43201a93",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5625a0de-c8b7-4cfb-8f1d-3c23ff99962f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83a40fc-c51d-4148-8e3b-7a20c3d15f57",
        "cursor": {
          "ref": "26ae7dbb-74aa-49c1-a09e-b1d5a8d3ed90",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bd249975-935e-45bd-9f9e-3261c09159cb"
        },
        "item": {
          "id": "f83a40fc-c51d-4148-8e3b-7a20c3d15f57",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ef4c39b6-a26b-46d9-8e03-c38fa82b24f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88090fc-bb74-4333-a351-bb00dd149168",
        "cursor": {
          "ref": "13cc5754-20fd-44d2-b20d-1cf64f4abed5",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4126e0a4-7c18-45de-9cba-cec2b9c37bdb"
        },
        "item": {
          "id": "a88090fc-bb74-4333-a351-bb00dd149168",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bc7946f0-a3c0-42d2-badc-43edd6d48f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012c085d-f21b-463d-aaa3-386104c4c470",
        "cursor": {
          "ref": "7ffea998-9f33-4077-aeaa-07cedc1861cf",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "87a41fbf-f0b2-4d3a-a484-1bb42d295e75"
        },
        "item": {
          "id": "012c085d-f21b-463d-aaa3-386104c4c470",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3c7a9aa9-e0c2-4a76-a35c-7921a2486771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 932,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38106a3-3c4e-4abb-97e5-98ddf9fe14f4",
        "cursor": {
          "ref": "2af68f03-5ff6-46a1-9ae8-d111684de0d1",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3ae06929-89a7-44ea-bac9-85f46fb972fa"
        },
        "item": {
          "id": "d38106a3-3c4e-4abb-97e5-98ddf9fe14f4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "15c5ee39-6c6b-4112-b3e7-d5a2f7de2e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f41e82c-ae9b-43ee-bf7e-3fb54058d500",
        "cursor": {
          "ref": "9cb8db4f-afb1-4a3a-b9f4-cec7deb3872c",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9ceb1983-2997-4a0c-bb7b-9e34f79c21f9"
        },
        "item": {
          "id": "5f41e82c-ae9b-43ee-bf7e-3fb54058d500",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "58c1c65f-2b6c-4407-973a-b5654704e868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc50aa73-0fde-444b-9759-4f33e4fd9637",
        "cursor": {
          "ref": "92cc55f4-fcfb-479d-bad0-2719d735b5d7",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1f4d10bc-83ff-4a85-9d9b-026c74d80c6a"
        },
        "item": {
          "id": "fc50aa73-0fde-444b-9759-4f33e4fd9637",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b8b324dd-47c0-4eb3-824d-b31e40d4e23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e3952d-5d45-40cd-b84b-2df0bc623694",
        "cursor": {
          "ref": "8854dc0a-3aaf-46a7-ac14-a8402588aa7b",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bae0aa70-ebbd-4209-8bfc-26ae3ecb3890"
        },
        "item": {
          "id": "e5e3952d-5d45-40cd-b84b-2df0bc623694",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "dc02e1b5-ac83-47bc-b065-0707f56fb35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f007f9-9ac7-4f8f-bd35-52ca3965ba39",
        "cursor": {
          "ref": "6b19257f-d76c-4e02-9c8a-1a1cc177af12",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b2dd6189-d41a-4dcc-8d58-914a816e2ab5"
        },
        "item": {
          "id": "16f007f9-9ac7-4f8f-bd35-52ca3965ba39",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "62d3a130-6c39-49b4-825b-89027cc0a585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff65fc7c-1374-4dbc-85f8-1a675edfbdfb",
        "cursor": {
          "ref": "b389b860-156a-4bc3-86f0-6ed9b0f10715",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cbb86511-f1db-4041-bb1f-7dbd8faa04a4"
        },
        "item": {
          "id": "ff65fc7c-1374-4dbc-85f8-1a675edfbdfb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "69fb257c-0c31-45f4-b3d5-563c8c9deebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6c146b-1c79-4091-99de-8e5314d40458",
        "cursor": {
          "ref": "b9708eb5-0f31-4d4a-8040-1c597985553f",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "71f23ffd-4728-4a7f-8bfa-3102ce605fa9"
        },
        "item": {
          "id": "ac6c146b-1c79-4091-99de-8e5314d40458",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6e98f3a3-76c2-4355-b82f-b9cb4b553cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf1455b-3943-4f4e-a5ca-fb66a28ca1c4",
        "cursor": {
          "ref": "7570f0a9-2d3a-4e3d-aa9d-03e2a4013978",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f2024980-6c64-4817-b796-ac8a9581318f"
        },
        "item": {
          "id": "fdf1455b-3943-4f4e-a5ca-fb66a28ca1c4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c450d1eb-708e-41c7-8e3c-d3c959f53792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012c5877-e934-484f-bbf2-c91376757474",
        "cursor": {
          "ref": "c6565247-4145-43ab-a357-c75b64b85e0b",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8c3ac188-4a5f-4a3b-8de3-b63a2fb93d39"
        },
        "item": {
          "id": "012c5877-e934-484f-bbf2-c91376757474",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9e1fa912-de61-47b5-9af7-cd9480305c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4ca173-1af0-4bf0-84ab-e8839099685c",
        "cursor": {
          "ref": "1f92df6f-a94d-4876-b768-7f75b02c9069",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "003df141-0142-4a57-8630-fd2337216913"
        },
        "item": {
          "id": "3b4ca173-1af0-4bf0-84ab-e8839099685c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "29827aa4-4b34-43d8-a171-15772dc44e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f706f9d-db01-46c4-8422-9ff9b0fe62a4",
        "cursor": {
          "ref": "bb0ac12e-6973-4915-89f6-dd290dd4ca9a",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8b203ccf-a4d8-4919-9110-8da37e042cb9"
        },
        "item": {
          "id": "2f706f9d-db01-46c4-8422-9ff9b0fe62a4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "247991ed-8035-4c59-a1cc-8cc085e56ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd08bc0-a1b8-4766-8d74-2f7f63b31f2f",
        "cursor": {
          "ref": "917fd32a-b9e8-4128-9ce6-e65a1a3e0ef8",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "83c328bd-c285-4e63-934f-2f18030bc43c"
        },
        "item": {
          "id": "5dd08bc0-a1b8-4766-8d74-2f7f63b31f2f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "96cf2952-f03e-47f0-b90d-345ca8d0cfca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93bbbf59-a8a1-4b66-9809-1ee60be124ab",
        "cursor": {
          "ref": "1b98f3aa-a9f9-4fc0-a36f-f0557ee14bc9",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "390dce48-4560-404a-9fe6-53ad50c9db31"
        },
        "item": {
          "id": "93bbbf59-a8a1-4b66-9809-1ee60be124ab",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e4cadd59-5274-4d7b-b379-bfb2f12cd814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178157d1-2339-4c34-9c3b-f8eb981fa740",
        "cursor": {
          "ref": "ceb96a86-1be5-4ead-8379-e716a2a8a218",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0dcb363f-4f35-4db6-a516-9ea9600eaa57"
        },
        "item": {
          "id": "178157d1-2339-4c34-9c3b-f8eb981fa740",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1a18e7f9-c4e5-4a7b-919f-63a35e9ca6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cf12c0-8a73-4f8d-a81e-01babcc52b5c",
        "cursor": {
          "ref": "3a21dfe1-81c6-4c2a-b097-75dd9a5572c3",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d164ccf2-2143-47ef-93de-38ead84a0b42"
        },
        "item": {
          "id": "d6cf12c0-8a73-4f8d-a81e-01babcc52b5c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "03721c51-2ed3-4e0a-bcd2-ad734770a95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e8641e-e0e5-404d-b0e8-4ceaf7e0c81b",
        "cursor": {
          "ref": "8b21afc5-bae6-49a4-9f27-88a6426a9cdf",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "97542ec7-902e-45e9-a65b-515bda8bf424"
        },
        "item": {
          "id": "24e8641e-e0e5-404d-b0e8-4ceaf7e0c81b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "73667fce-54f6-4a05-ad35-2aa6c947ace0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21065b8-3da5-4a04-adb5-c6132494992d",
        "cursor": {
          "ref": "a836df64-e27a-401c-9018-213643a57cb5",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "979d0b35-b812-4c45-90da-f4c63989729d"
        },
        "item": {
          "id": "c21065b8-3da5-4a04-adb5-c6132494992d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9f4479a3-4829-4f76-93c9-bbe11bf1ff23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f526f9-47a2-400f-b4f8-30de822951e7",
        "cursor": {
          "ref": "627e83eb-ec64-4cb1-8350-84bfae070613",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1251e0ad-8b25-4060-a295-ddb2cd019c3f"
        },
        "item": {
          "id": "81f526f9-47a2-400f-b4f8-30de822951e7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c884b455-2ee3-466d-92a5-6f3185b51648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9bb6d9-89d7-453e-846e-aea65ff17b1e",
        "cursor": {
          "ref": "7e065e69-7c54-4a5c-9b82-8482ab3fa8ed",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bc6e9bb6-5d71-4ba9-9a30-ca9dd7481d59"
        },
        "item": {
          "id": "0a9bb6d9-89d7-453e-846e-aea65ff17b1e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d541cdce-21f7-49ce-bc90-a423a3fb3ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa03235-d1b8-428a-a626-3dc67a76f371",
        "cursor": {
          "ref": "de9f4d64-67f1-4237-999d-1592390c1b37",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "84034ffa-8c0c-4a19-894d-1291cc38c55b"
        },
        "item": {
          "id": "5fa03235-d1b8-428a-a626-3dc67a76f371",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "17ddfaf1-021e-4c9e-ad67-84764d245634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174b36ad-72f4-49e6-92cb-24a37f8e3e87",
        "cursor": {
          "ref": "c32fad3c-d8fc-4c4b-ae7b-2b9716994a46",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "931defa0-0cf2-4ac7-81aa-18502cc57aca"
        },
        "item": {
          "id": "174b36ad-72f4-49e6-92cb-24a37f8e3e87",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6c20ce02-9759-4474-a6b5-d23d41e24ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac1308b-6297-4079-b6b4-8fb73ac58db4",
        "cursor": {
          "ref": "eefcdb78-fc9e-4874-ae03-bd718615c246",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "526670ca-54d5-418e-92fb-625bb60fdeee"
        },
        "item": {
          "id": "eac1308b-6297-4079-b6b4-8fb73ac58db4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "aef09570-6f09-4ea8-bb8f-83c797d8a057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223e4fef-9a44-4e94-abb3-2557da53edaf",
        "cursor": {
          "ref": "fe026ae2-bf1c-4652-bac4-d321c5587d12",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c5769b35-4eac-4a7b-97b5-fec86ba67569"
        },
        "item": {
          "id": "223e4fef-9a44-4e94-abb3-2557da53edaf",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e8612abb-f789-43bc-9166-73d4759aef47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 930,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b13724-d96d-42bd-93f9-3f6f89e4e19e",
        "cursor": {
          "ref": "28351eb8-11ea-453c-b52f-16eb33797c3b",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a25ac70b-de1f-4e86-b21d-c1c235b3ade6"
        },
        "item": {
          "id": "27b13724-d96d-42bd-93f9-3f6f89e4e19e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "90e8f2fc-83ce-44a7-a898-8ca23c54969f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c31f8bd-77c2-467d-8deb-cf09476295ff",
        "cursor": {
          "ref": "b9de4214-a18c-4f6e-bcf6-7aaee8588e8e",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "320f6b45-b6eb-4cda-b60a-41254be0ac80"
        },
        "item": {
          "id": "7c31f8bd-77c2-467d-8deb-cf09476295ff",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "654becf1-1d76-4b36-86e4-087241665bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe09a054-555e-4a3c-871a-48f54c91b2a9",
        "cursor": {
          "ref": "82148df6-19b3-4bb7-abcc-5489abebb050",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "284a2f0d-e9ea-497d-8265-0a36bf968c9d"
        },
        "item": {
          "id": "fe09a054-555e-4a3c-871a-48f54c91b2a9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "78389383-82ae-4f1e-97c2-c68a9b4f2373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4d4514-5471-4f6b-8f48-10be26ca0170",
        "cursor": {
          "ref": "0b19e872-fe30-4e51-904f-daa5ec392218",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a7f0b616-1555-4873-986a-951147f90161"
        },
        "item": {
          "id": "6f4d4514-5471-4f6b-8f48-10be26ca0170",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ccc1b5fa-ac0b-43a6-8250-44318ba62d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3314c28-00ce-49cb-9622-75e60b5875ef",
        "cursor": {
          "ref": "5617bfdd-fd08-4226-a691-c76b4adedacb",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a33299fe-424e-4d77-b96d-fad062e1fa13"
        },
        "item": {
          "id": "d3314c28-00ce-49cb-9622-75e60b5875ef",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ca0e131c-ea9d-4b14-b6e8-69a2ae1f73e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72291f56-9bef-41ed-b205-8e86b2e227ec",
        "cursor": {
          "ref": "5237cfb6-7144-48c8-a041-8b3fc2570ecd",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a563a63e-8908-49ac-b239-608511e72fe0"
        },
        "item": {
          "id": "72291f56-9bef-41ed-b205-8e86b2e227ec",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "00283b9e-0309-4ae7-afd0-fec5b1ea4d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53db7ae6-c6ee-4313-b238-36d2049bdf23",
        "cursor": {
          "ref": "c4b19003-1e13-4d98-a983-66f7a835807e",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "124ff989-e1c5-4e62-9694-a577860d1112"
        },
        "item": {
          "id": "53db7ae6-c6ee-4313-b238-36d2049bdf23",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2a408507-c64b-4d50-aa81-7de6e12513fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feace000-4383-4c1b-b872-2ee403a9e9dd",
        "cursor": {
          "ref": "3f95ffee-7e59-4fd3-a3c5-64c0cd6238a1",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ed7540eb-5007-4fd5-a390-f5f60e3accb1"
        },
        "item": {
          "id": "feace000-4383-4c1b-b872-2ee403a9e9dd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1917f409-a05a-40c4-8687-b81a503d7468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320362b8-7435-4aaf-a5a6-b1a548a12425",
        "cursor": {
          "ref": "e20a4372-115b-41a1-bbce-0f0dea99af6c",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1e9a166f-9626-463f-a526-c68766dec309"
        },
        "item": {
          "id": "320362b8-7435-4aaf-a5a6-b1a548a12425",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "90d23214-6813-44c1-ba4b-555fdbda7def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449d6815-fe30-4905-996b-9fd87f9b3362",
        "cursor": {
          "ref": "cd83fa6f-020d-468f-98de-4e0e1d63e17e",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1bcb3c00-4ba5-4767-aa8c-59e92a4edfa1"
        },
        "item": {
          "id": "449d6815-fe30-4905-996b-9fd87f9b3362",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "da443cff-8350-4e86-85c7-6405b207eb34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8650143-13ce-4e91-8b30-5ad09d9d1916",
        "cursor": {
          "ref": "3aa25cd5-7750-4670-95a7-c34b56b60d96",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5104aadc-2b66-4378-b66d-98fdb655e48c"
        },
        "item": {
          "id": "f8650143-13ce-4e91-8b30-5ad09d9d1916",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0301f7c6-8793-405c-af1b-57ee7c0e9d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f679ecfc-76a8-4e81-a9b5-992dbc6da8b2",
        "cursor": {
          "ref": "10febaf3-a196-42ba-b5be-77a83fff091b",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e2de8ee9-e06e-4ef3-a3f3-7cab7e13cd83"
        },
        "item": {
          "id": "f679ecfc-76a8-4e81-a9b5-992dbc6da8b2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "97203a11-6cee-45c8-8b27-d472df21a659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efb03e1-8b71-4973-9862-4c1b170ea335",
        "cursor": {
          "ref": "a857de05-4891-448e-8ddd-9d9023edaa77",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "76ea70b4-83d0-46d3-814f-ec621b161343"
        },
        "item": {
          "id": "2efb03e1-8b71-4973-9862-4c1b170ea335",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b0657263-173b-409a-9377-f97641957e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e52dd3b-3f37-44e4-a87a-3e38489baed7",
        "cursor": {
          "ref": "1feddf03-9b3a-4b12-891c-bdada373c7dc",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "85090def-2f09-4070-b58a-dea2030144cd"
        },
        "item": {
          "id": "2e52dd3b-3f37-44e4-a87a-3e38489baed7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a163f243-bee4-474d-9200-a83f508accd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a82bc74-afd5-475a-b43e-406744123005",
        "cursor": {
          "ref": "eb42ac65-592c-497f-94ba-df162ec22dc1",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d798b7e1-c504-4f46-9015-4f70ce0b8aed"
        },
        "item": {
          "id": "4a82bc74-afd5-475a-b43e-406744123005",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a6a3ac9a-1ce1-46e9-97ea-3410bb6724ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293a4d76-576a-4c35-bf10-aaf3eb8bd6e4",
        "cursor": {
          "ref": "4701c055-36fa-497f-a2fb-6d70053b8a1c",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e0f0ada9-24f9-4af0-baad-1d106f6bc1e8"
        },
        "item": {
          "id": "293a4d76-576a-4c35-bf10-aaf3eb8bd6e4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "27a5ef47-c6cd-47db-9678-a525c89d8131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beae31cb-43c0-4d0d-954e-014791d5c3fd",
        "cursor": {
          "ref": "45094e72-69bf-466b-88e2-392ddac46ce3",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "24aacaee-e68b-41d8-bf23-6551c4e36001"
        },
        "item": {
          "id": "beae31cb-43c0-4d0d-954e-014791d5c3fd",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "27612e09-3ddd-490c-ba97-c2d8106c9173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fe27a6-51a1-47f1-bfb8-244250c2f741",
        "cursor": {
          "ref": "cc7eb666-597b-4320-8f04-1cac15cb7f14",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f574f40b-e701-482e-9648-c0ac4348009d"
        },
        "item": {
          "id": "87fe27a6-51a1-47f1-bfb8-244250c2f741",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d9219fd0-8eae-4e20-bfd8-815bd2769c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beda2854-0724-495a-9199-5c4167aa2a79",
        "cursor": {
          "ref": "08bd116f-2b82-4942-9424-bd68848f5d78",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6869c79e-e087-4c58-81dd-731cbe06ec02"
        },
        "item": {
          "id": "beda2854-0724-495a-9199-5c4167aa2a79",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "11307c21-1547-4f70-ad7a-4b89c35e11c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc573269-c435-4b61-aab3-b8ec6925b10b",
        "cursor": {
          "ref": "2625ddc2-d72f-4e91-8904-0b4db50505c9",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d52991d0-ca5f-4d2b-b752-704ba550f7be"
        },
        "item": {
          "id": "dc573269-c435-4b61-aab3-b8ec6925b10b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "cd7f7563-6ba3-40f1-9a6e-c38fb8db92f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0bb38c-fd71-4a75-8dfa-4af6905c25ea",
        "cursor": {
          "ref": "30a1b3a4-86c5-4035-bfcf-db675bac0fef",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a9bfddfb-dc9c-4b69-8a0f-e758dbbfce35"
        },
        "item": {
          "id": "0d0bb38c-fd71-4a75-8dfa-4af6905c25ea",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e38981c0-2ee6-45a0-8d7f-d0c01d54d915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6047a553-1b3f-4ee6-bb7d-7862b73aeede",
        "cursor": {
          "ref": "8f9e0a84-6e96-4fe6-8730-d3b81da67bcc",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f07beb1b-88ed-407b-9685-cceaa156f22c"
        },
        "item": {
          "id": "6047a553-1b3f-4ee6-bb7d-7862b73aeede",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "06ed6540-8823-4215-8cda-161af3ea23fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cf47b1-ffa5-492a-b3ef-ffcbfde84a02",
        "cursor": {
          "ref": "4a20154e-8d56-4168-af0d-51f08cd3b331",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4a237bc2-3e26-46eb-a3de-565ac60fe4a3"
        },
        "item": {
          "id": "d7cf47b1-ffa5-492a-b3ef-ffcbfde84a02",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b32fb6b4-a278-4e22-b5f9-a74e65dcaa04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fb8ea2-eaf6-4398-a21e-17f62f7fe577",
        "cursor": {
          "ref": "0bae4a31-6106-4fc0-9e68-1844c788f2b6",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "29c3f7a3-10e7-425a-8d97-4cb2bfe511d3"
        },
        "item": {
          "id": "10fb8ea2-eaf6-4398-a21e-17f62f7fe577",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fddcef0f-4b60-4449-be40-69499f6b5cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bb1c4e-5cdb-41ff-bef7-4874759dc0b9",
        "cursor": {
          "ref": "b4177aa7-e459-49a4-bcce-0f6991496bbd",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "33c88ee0-e37e-47bb-a61f-d4f1a7ac2f76"
        },
        "item": {
          "id": "d6bb1c4e-5cdb-41ff-bef7-4874759dc0b9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "30d4ddb6-d1e4-4a89-9c92-8af7c00863c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b992388-c7d6-455a-8a24-acad6a6d90c4",
        "cursor": {
          "ref": "66f08a18-ca53-4b95-b76a-b5739210b86f",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6bea660b-423b-49d3-9f88-ef7fbb55da09"
        },
        "item": {
          "id": "0b992388-c7d6-455a-8a24-acad6a6d90c4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d4e20507-61e7-4dae-849d-46ba9a068383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865adc28-5627-4624-bc85-bc8dbaa05320",
        "cursor": {
          "ref": "3f5d7c42-573e-4670-a859-718114ebc1a1",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a866242f-7d00-4325-864f-3579e75ce1fc"
        },
        "item": {
          "id": "865adc28-5627-4624-bc85-bc8dbaa05320",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "23bc2b35-12a0-40ae-b5ba-ad3edc09a4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316ac9ce-784a-4eaa-a709-0ea43aa88191",
        "cursor": {
          "ref": "ef56fd6a-b809-4b93-bd9a-6e5e08b14350",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f8afa030-53ba-4874-9669-bc286370fdc6"
        },
        "item": {
          "id": "316ac9ce-784a-4eaa-a709-0ea43aa88191",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "63b5c9b8-da0d-4a4a-986f-4131228573ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171586f9-b2d7-4d69-847e-2258c4a23543",
        "cursor": {
          "ref": "03f2eaa9-398c-455e-9f8e-61b204c748c7",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6705df52-b4ca-4f4d-bf33-0526f08f29df"
        },
        "item": {
          "id": "171586f9-b2d7-4d69-847e-2258c4a23543",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bf495d21-5dc4-4303-9a0c-91b3b72df22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7fcd89-37dc-4e8c-945b-24089c30483d",
        "cursor": {
          "ref": "abd51e30-2fb2-4b3b-9bbd-0a9ec5d9a04c",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7620baa9-d01a-40cb-a73f-dc3b1ec72fdd"
        },
        "item": {
          "id": "8a7fcd89-37dc-4e8c-945b-24089c30483d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f047dad4-80d4-4f38-8058-b300f815d52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd3f838-2086-456c-ab10-65046964d2f9",
        "cursor": {
          "ref": "87a8c5bc-02a1-49fe-8ca3-02093bbc08eb",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3b1d0b7b-492b-4454-b40c-cd89a52c341e"
        },
        "item": {
          "id": "acd3f838-2086-456c-ab10-65046964d2f9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "89514e97-050c-4bf9-954d-74323ad59f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fb4736-d49c-4a8e-af68-6a348bd8b9a7",
        "cursor": {
          "ref": "edc18266-db39-4b7d-8bda-7f5d435f9194",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "77a92cca-677b-443e-a33c-e550cbe5804e"
        },
        "item": {
          "id": "57fb4736-d49c-4a8e-af68-6a348bd8b9a7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "837dd3c5-07fe-42c1-a51e-67846ec866f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8ea5eb-22ea-4027-bb53-6d797fd15427",
        "cursor": {
          "ref": "d53fbdea-c387-413e-90fb-3c492be2c125",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2a8d03c7-8fcc-422d-9be6-b7532fb82f96"
        },
        "item": {
          "id": "aa8ea5eb-22ea-4027-bb53-6d797fd15427",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f3cd3c80-9efe-46ea-b582-a06fea56fe15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db324a8-b15a-447d-9537-1f7d711d282a",
        "cursor": {
          "ref": "5bf1a515-831e-4276-ae86-677a70ddc7f5",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "124b24da-e165-46f3-bc9e-d3e916fd0055"
        },
        "item": {
          "id": "1db324a8-b15a-447d-9537-1f7d711d282a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3170f5b2-59ee-42e1-80fd-488cecd0fcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a282cce-5b7a-4dc4-ac32-9035460f08b3",
        "cursor": {
          "ref": "186de0d7-7e6c-42d3-9bfe-ee32e7b565c7",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ae4bd1ff-7b32-4892-85ec-d09ff0a0529d"
        },
        "item": {
          "id": "7a282cce-5b7a-4dc4-ac32-9035460f08b3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3a1d9aab-a7bd-4242-8293-339eb1c7a49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ee8c69-1af7-4e99-bcf9-e8e6094f919b",
        "cursor": {
          "ref": "59c00680-7041-45ff-b2b1-2dddc898740b",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f46a168e-ac3d-4e27-80dd-38c4ad07d0d7"
        },
        "item": {
          "id": "30ee8c69-1af7-4e99-bcf9-e8e6094f919b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9534ffe1-2f0a-438b-aef0-cf8a0599fb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c718ad-276c-4633-a0ba-f876e87ada0f",
        "cursor": {
          "ref": "dcf1c9fd-0487-42ac-9c2c-fdd62f1cc721",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ed2f9f05-1d6e-4fb1-8a3a-3853a59bd49c"
        },
        "item": {
          "id": "b7c718ad-276c-4633-a0ba-f876e87ada0f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6e140360-d1ac-4d29-8d5a-d811e2887cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e7d7b3-bf66-4df6-ab0e-665e109894c1",
        "cursor": {
          "ref": "9f47accc-f5c9-4008-8053-f4bcd1d7ee85",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d466acd0-0f84-48a1-964d-dbc3ee5390bd"
        },
        "item": {
          "id": "27e7d7b3-bf66-4df6-ab0e-665e109894c1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b0cffabb-fc86-4760-b53b-f2f7bf0137ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7883b94-d449-4326-a77b-78a826b10400",
        "cursor": {
          "ref": "f3c9fbd2-d398-48ae-94d7-f5c44191b29b",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "17112092-2ec9-4ce7-8190-66320e86310f"
        },
        "item": {
          "id": "b7883b94-d449-4326-a77b-78a826b10400",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8f182a2e-26b1-4c5d-bc20-d6ede4572f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795ad285-62c6-453c-b5c4-d83ca47135ee",
        "cursor": {
          "ref": "0574f410-b67d-4664-a92f-5e4fa338cc64",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "188c264d-1dac-4f63-a3f5-d4b00365cb5e"
        },
        "item": {
          "id": "795ad285-62c6-453c-b5c4-d83ca47135ee",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "51debc1e-0b73-4b69-b5d1-bc90c136dc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f9135c-2386-4b78-9d02-d14c990bbabf",
        "cursor": {
          "ref": "68ec73fa-91ee-4a93-ac33-96f531cd13b3",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6d6e3fb9-ff8e-4264-b978-3dfcc7c2ec31"
        },
        "item": {
          "id": "74f9135c-2386-4b78-9d02-d14c990bbabf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "03d43683-a495-4750-a1d1-f0da3cdca9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097e5e67-836e-41a2-a182-06938cd13c5b",
        "cursor": {
          "ref": "c86e6824-8f32-44f9-95a3-60bf332cb22d",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "59e52d64-f573-441c-9527-7a709a0d2314"
        },
        "item": {
          "id": "097e5e67-836e-41a2-a182-06938cd13c5b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7e4291e0-a5e2-4dd6-a829-8db2e986d2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcebb0f9-cd68-4900-a19f-76733faef1d0",
        "cursor": {
          "ref": "b4046af1-b4ae-433b-b5de-1100fb1c3031",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b98be6de-2645-446e-95d6-b8898e556d7e"
        },
        "item": {
          "id": "dcebb0f9-cd68-4900-a19f-76733faef1d0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4f977760-dddb-40f5-98ee-150976d02386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805345cf-c371-4450-9b00-e25892c9c1bd",
        "cursor": {
          "ref": "8a40381d-abcd-462b-81b5-d4b42433df4f",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d2136da6-1ac8-4bbc-beb3-20aee654b262"
        },
        "item": {
          "id": "805345cf-c371-4450-9b00-e25892c9c1bd",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f6d2a02b-1cd8-47db-a384-effb3bc8e80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6133f8c-7ee2-4e7a-88fa-250724e97742",
        "cursor": {
          "ref": "78a516a8-3b0b-4fce-9dbb-94ea0bf1b9e4",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "dfea9f9f-2d8f-4fac-8249-33d29682ee96"
        },
        "item": {
          "id": "a6133f8c-7ee2-4e7a-88fa-250724e97742",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1ad4238d-297f-4fa3-8a99-71bb5516cde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52394f9-1389-4c32-9475-f080243bc6e4",
        "cursor": {
          "ref": "0fc2f8e3-d18e-4c6c-9e7c-72cf1490e10f",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9d797851-ea3f-48af-a11f-cffc3886f74b"
        },
        "item": {
          "id": "b52394f9-1389-4c32-9475-f080243bc6e4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fc319c1f-ff57-4a87-b1bc-9e980fdadb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfaa4016-bf6b-4c90-b3f7-397adaf45bf9",
        "cursor": {
          "ref": "35a4dd8a-d209-44aa-86f2-dc23308a0904",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e0ec35b3-858e-4abd-81df-f162701ba496"
        },
        "item": {
          "id": "bfaa4016-bf6b-4c90-b3f7-397adaf45bf9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8e203c9a-78ed-471d-9ab2-d81c26adf9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b20ef5-5b3c-4391-a4f4-d289020db004",
        "cursor": {
          "ref": "04fc7b4d-ca0f-410c-8da9-b59954d59007",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d966ae75-afd2-4a03-a8b8-444e43254ff5"
        },
        "item": {
          "id": "13b20ef5-5b3c-4391-a4f4-d289020db004",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4a567fe5-1cb7-4255-b971-13d6e69ccf97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c8a774-e2ce-4135-95d9-d4bd9dde0f35",
        "cursor": {
          "ref": "731ef3aa-26d5-44c9-a210-2564a01aa3eb",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a8d84e5c-cb0c-4b3c-8284-4043b4881af5"
        },
        "item": {
          "id": "e7c8a774-e2ce-4135-95d9-d4bd9dde0f35",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "403318c6-7ab8-464f-b266-1a01da13d986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a77ced-b5dc-45c6-8916-dee64ee05f5d",
        "cursor": {
          "ref": "dd5cd114-110d-4a19-a75a-6a52e603dc9e",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1e5a0ea2-f46b-4bf5-8202-4d85c11fccd4"
        },
        "item": {
          "id": "c2a77ced-b5dc-45c6-8916-dee64ee05f5d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2d2f40ea-c360-4a1c-b7e1-56e9b28cccf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510a1c1a-41d0-4716-ba35-015652040d10",
        "cursor": {
          "ref": "78d1f6bf-3616-48bd-ba1e-9a8173e69096",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d4519438-10d0-47da-95c7-7ba99071e10c"
        },
        "item": {
          "id": "510a1c1a-41d0-4716-ba35-015652040d10",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "71fde6c7-3f85-4f91-9388-108dc89e9daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64264787-dab3-45f1-b575-4c36d04c7f51",
        "cursor": {
          "ref": "f77fd376-7e17-442c-99fe-bfaf5c0d63bc",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "896b8dcf-7699-433c-8c95-f33e9cd67ef2"
        },
        "item": {
          "id": "64264787-dab3-45f1-b575-4c36d04c7f51",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c66f3132-0708-488b-a4ae-6cda4a94a70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fb4840-ed4f-4429-922f-4e7e0bda6b72",
        "cursor": {
          "ref": "88b9e6e0-61cb-45e7-962b-08b47be790bc",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "530af3a2-025c-40f0-8b5b-edaccff38d42"
        },
        "item": {
          "id": "74fb4840-ed4f-4429-922f-4e7e0bda6b72",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1424e7dc-f3a3-48d2-b5f8-0e8787b2044e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d084303f-6517-40ad-8799-96cd26d5c463",
        "cursor": {
          "ref": "69dbaafc-c2fd-412f-b1b8-5632b8a3340a",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9626813c-30d4-4227-a3bc-f2635d66e955"
        },
        "item": {
          "id": "d084303f-6517-40ad-8799-96cd26d5c463",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e9e0ced5-caac-443c-a1d3-c757fcfced4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79aad725-b489-4891-8725-e12b03d7e056",
        "cursor": {
          "ref": "f3997cf0-470d-4179-98fe-03a4a2bb2b90",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3e9f10bf-5a98-47ca-91a4-2888b3c71474"
        },
        "item": {
          "id": "79aad725-b489-4891-8725-e12b03d7e056",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d0ad9741-a1b7-44da-9989-c972dff63c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2040c3d-aeb4-4be9-942b-29a29ce37b05",
        "cursor": {
          "ref": "6953804e-eab8-4867-a46c-e1e49099c4bd",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a5858ab6-a34f-4c23-9e61-e606415b0ace"
        },
        "item": {
          "id": "f2040c3d-aeb4-4be9-942b-29a29ce37b05",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ad926793-236a-4636-abd4-8e01d31884f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240d9662-f848-4d29-94d7-39cb514a24c8",
        "cursor": {
          "ref": "386a214d-9e96-4595-add8-d79ca36bb320",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e11e64d4-124e-4b54-be04-255d7b7948d1"
        },
        "item": {
          "id": "240d9662-f848-4d29-94d7-39cb514a24c8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6e339aed-57d9-4ce4-ac95-4adfe234555a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3421240-62c7-4196-b47b-8a321aabdc94",
        "cursor": {
          "ref": "57eaa2e2-078b-4a52-899b-623b6d4d48b4",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6c73705f-aa94-4953-828a-fda4c272031a"
        },
        "item": {
          "id": "a3421240-62c7-4196-b47b-8a321aabdc94",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "757e9bb9-876e-453f-9c11-94747a0d6784",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 657,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26fb1da-084b-429a-9db1-6499f489b7b0",
        "cursor": {
          "ref": "352e300c-e444-460a-976e-b5696c6ae6f3",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a90071e4-62be-4c04-b14a-5f675633df27"
        },
        "item": {
          "id": "f26fb1da-084b-429a-9db1-6499f489b7b0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "29231679-ae83-4ad0-a4f9-009db839e8b8",
          "status": "OK",
          "code": 200,
          "responseTime": 630,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedec3f8-0446-4c16-bee8-eb077e1cca65",
        "cursor": {
          "ref": "b58cb532-cb6e-400d-ac07-b85da02c847b",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "59bc711b-3a3b-4dd8-aaa1-475e89c4f51b"
        },
        "item": {
          "id": "bedec3f8-0446-4c16-bee8-eb077e1cca65",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b485aa70-b8ac-4fcf-bf6e-e19ef9f0d50b",
          "status": "OK",
          "code": 200,
          "responseTime": 2331,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5dacaa-0ac8-456b-bd24-4f73a6c53207",
        "cursor": {
          "ref": "01cb8fd8-e890-4b88-950c-a64295586570",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2be6f190-4a19-48c9-9834-c210b68d1b24"
        },
        "item": {
          "id": "4a5dacaa-0ac8-456b-bd24-4f73a6c53207",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9da0008d-eef6-4813-b220-47bb687fe29b",
          "status": "OK",
          "code": 200,
          "responseTime": 1774,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e50992-078c-4dd9-bf38-da1ab8d01601",
        "cursor": {
          "ref": "1add21f2-c608-4c4f-910c-bc9b9b2ef8ce",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "22f583b9-081b-4e18-a0bd-342bdf8f1423"
        },
        "item": {
          "id": "40e50992-078c-4dd9-bf38-da1ab8d01601",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b50248b3-cc71-426b-814a-ae9dc0e50601",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e50992-078c-4dd9-bf38-da1ab8d01601",
        "cursor": {
          "ref": "1add21f2-c608-4c4f-910c-bc9b9b2ef8ce",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "22f583b9-081b-4e18-a0bd-342bdf8f1423"
        },
        "item": {
          "id": "40e50992-078c-4dd9-bf38-da1ab8d01601",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b50248b3-cc71-426b-814a-ae9dc0e50601",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e50992-078c-4dd9-bf38-da1ab8d01601",
        "cursor": {
          "ref": "1add21f2-c608-4c4f-910c-bc9b9b2ef8ce",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "22f583b9-081b-4e18-a0bd-342bdf8f1423"
        },
        "item": {
          "id": "40e50992-078c-4dd9-bf38-da1ab8d01601",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b50248b3-cc71-426b-814a-ae9dc0e50601",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063d426e-3ba9-4946-be2c-45ba2b1fef21",
        "cursor": {
          "ref": "b5d931bd-5733-4c71-9275-3389396d6760",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "671ae1ec-9e7d-4748-8b32-5c96be4d3147"
        },
        "item": {
          "id": "063d426e-3ba9-4946-be2c-45ba2b1fef21",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "5c24a709-e482-43ca-a13e-2d4f474eb748",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 399,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8bfabc-b219-4894-ba38-60fc0b72a679",
        "cursor": {
          "ref": "2d679355-eefe-46ac-817a-f2ef17eb183a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6c44050c-72a4-4310-b8c8-ec4233dded68"
        },
        "item": {
          "id": "dc8bfabc-b219-4894-ba38-60fc0b72a679",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7c8649b9-b647-4d13-ad62-1f2e9bea8fc0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8bfabc-b219-4894-ba38-60fc0b72a679",
        "cursor": {
          "ref": "2d679355-eefe-46ac-817a-f2ef17eb183a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6c44050c-72a4-4310-b8c8-ec4233dded68"
        },
        "item": {
          "id": "dc8bfabc-b219-4894-ba38-60fc0b72a679",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7c8649b9-b647-4d13-ad62-1f2e9bea8fc0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d677b6b-e9cb-47c6-82c9-2b6942243934",
        "cursor": {
          "ref": "d0492768-9f78-4c5d-8760-764d9a344e86",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4c283c42-ce7c-4b24-bc67-ddeefcf3274f"
        },
        "item": {
          "id": "1d677b6b-e9cb-47c6-82c9-2b6942243934",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "14f2cd12-12ad-49be-bd9c-3be13639e730",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 523,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9411f38-565b-4bda-bb45-061ffcc0f9d0",
        "cursor": {
          "ref": "8779b10f-8f50-49a5-98cb-919ef90208d1",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "abffed72-60d9-4afe-9abb-bc92e390d3fe"
        },
        "item": {
          "id": "d9411f38-565b-4bda-bb45-061ffcc0f9d0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f3272339-95d7-4402-9f09-ab384f490441",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9411f38-565b-4bda-bb45-061ffcc0f9d0",
        "cursor": {
          "ref": "8779b10f-8f50-49a5-98cb-919ef90208d1",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "abffed72-60d9-4afe-9abb-bc92e390d3fe"
        },
        "item": {
          "id": "d9411f38-565b-4bda-bb45-061ffcc0f9d0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f3272339-95d7-4402-9f09-ab384f490441",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d0b5ba-8769-4ed6-a6b0-0eaaad97a787",
        "cursor": {
          "ref": "95ef3057-9e59-4721-9089-a58e96a372eb",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "20d580ad-1e99-4a77-a6c6-3ed6bb54a6dc"
        },
        "item": {
          "id": "68d0b5ba-8769-4ed6-a6b0-0eaaad97a787",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "bfeb01f7-d4e9-44c1-b064-8ecdd5f1ce6e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 536,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}