{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1b595304-455c-4fb8-972e-6a0adaa68b7e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fc34d056-eed3-4fb6-9a49-70cec0cf1131",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fab73b14-3299-45ad-a2b9-69141dcf6b05",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eba3c012-e7b2-47e8-8a22-8bfd568a4d6d"
                }
              }
            ]
          },
          {
            "id": "b2fcbf04-700e-43ce-b293-00d5ecc8d838",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d6101ee6-c2e6-467e-8b1d-b9b21381f28a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "15d5b385-fb8d-4d38-bba1-edc521205b05"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f7bb0980-e8ba-4ec9-a54c-51fbe7e84400",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fa902dc2-db6c-4737-9834-cd7c67ae656f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4fa53f15-dde0-4c11-9efd-7cb31c845341",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fe62cfd-b4a7-4064-a96f-b5750ee19284",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8759291-dfe1-418a-9edf-dd56d106790b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2e3a0c49-a2b8-4081-ae8c-04fdcff888fe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cb672737-3d7c-423c-a7c6-bb0606522f30"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b7e78df9-244e-41d8-b09b-266d5ffbd1ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3179590b-58ab-4f32-9275-f8a336177a58"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30fdb9e2-cbdc-492b-928e-a5eef3770edc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9b3331c6-5232-4c06-bce0-23546d898b3a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b0e17b4-4b30-47a1-a736-251e1ab68f9b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9afa266f-a0d1-4a06-a257-2aa933a20554"
            }
          }
        ]
      },
      {
        "id": "bb26e6a1-f108-4776-8e54-8322bffef290",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8523da02-dcb0-401f-be39-10b56a82d4e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55bf4af2-8bfb-4889-9c70-3fe83b520aab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7acb0664-965d-4881-86bc-8dda53449c56",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70b295f-d58f-4313-885b-0be7ccf1bf0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55a17dc1-99f2-46e9-82d1-f44ee631dc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ef2e6a-a979-41f8-85f4-94153977cabb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868ecbb7-fd0c-4fc8-9a2f-04533b075a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc00c4ed-30d5-430a-b8e5-f3b6e2622c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907fee62-955a-44de-86aa-97f40ad465ce",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5644e1-e90d-403a-abf4-99573d143f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "720e1673-3199-4eff-8c24-5170d2bbc379"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "221438d7-876b-40e8-800c-929c597c24bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e972a996-f3fd-472d-8770-fe993623f92e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc234205-b0bc-43fc-bba0-c674572e6fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb6b64bf-6288-4da3-9136-0cf9b3019b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27dcda0-7243-44e2-ba92-aa08e79df8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f55eb02-1dbd-4fd9-be70-b57ed81131e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "183c7d43-9b77-4a59-b48f-bfb4a2dfc443",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3bba52a9-b942-4d23-99c5-c706d3cd47ed",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5049f372-5b9f-4214-8d18-36320276cff2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5a8b6521-80d8-41f7-81ae-64ae45bc764e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "515c36df-cea6-4f50-b5ef-6e8137289fea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b910c7ff-511e-4a03-924a-55f60d00c739"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e9a2d10-6be1-4078-80ff-2d6ba8022f8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c2f709a-f878-4b3e-b8e0-662450dbe569"
            }
          }
        ]
      },
      {
        "id": "a27241dd-9896-4eba-99c0-91edc00d88af",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f841efd8-728f-4603-9eda-e05722fba239",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df4bce0c-8eff-4cf7-896b-96c39c02b0c3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6ebdf22b-ec8d-4faf-ac7a-7da41f093e8c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba2c849-fcac-4c42-9ab1-7886709684d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab76ba0-d6d8-434a-bb21-a484e6c43f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4db9fcb-320c-4e91-8203-41f9234dc875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efceea26-37ee-4bae-bd48-3984e7cda371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d603d823-da92-4c76-b38c-ecd10ad7b6ab",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d603fd7-2e6f-4875-930f-502dfc21b1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce9c5c2-b770-4dac-9a84-5a4f1d25a3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2250a85-45cb-4043-bfe0-4291045dc106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dfb5519-6aa0-4803-b06c-ba208fbb85d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ebd475-fdca-4b71-bd48-26e630cd2b8f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ea650a-2912-40ef-a9c6-5ce2fb80837e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe429ac-4cf3-4af7-ab92-0abe4a6c5278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abec4bc8-0310-4067-bb44-d7a3d01c5feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "582262bb-eaa8-4f3d-ae1f-ce78c3f9f3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322f1aae-1c83-410a-9ab5-5b45b5d96386",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95378b5e-ce2b-4fe6-8cfd-47a682dfd91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc50f05-c530-474d-b519-cd170c5c990a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8d6701-dd14-4dc1-a815-ccec76dac1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4cd55af-16e1-4d4b-b94a-f47a70851154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ec00d6-e0dc-4b3f-83d1-39f21643e677",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c53a184-ab59-45d7-8655-d708c4b67461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6f3f3d-2975-4a0e-8bc4-7694713d7a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c185fd8c-1c0d-4041-a994-6c71ebbd8022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "522fe2d2-06ab-4d42-9945-ac595207bbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221fe7dc-1df8-4b25-94ef-c819f883806b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c45d80-1d8b-486a-b684-27ce4428d783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a67595e-d2eb-4728-a58b-6e2192aeb7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0670ec-7a02-44f3-b942-6212a20afcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45d14c26-9cb3-47e1-bec9-df30f3704525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73647589-7368-4d15-93e2-32d1985d7509",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89270dbe-5431-489c-9aaa-781a55b20852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4288077a-98e5-486e-a907-5f2a5dfae6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d793c649-e62b-4068-8fc3-80c39b7730be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfb0f681-9595-4135-a9b9-efddc1c1824d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2289d9-aebc-4678-832f-b2e1bef9a973",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74fb344-70cf-4d1a-944b-9debbc3a84c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2feca90d-baeb-4e11-951e-c10b2bb3793b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c4cc18-0bc9-44ea-befc-cb3f482c899e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aeaac459-0f2b-4c11-a319-4534fae565c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc346690-9b84-4b36-bbbd-56a32d98713e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca91d283-df11-406b-bd72-93a0c1f42c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d92a376-5f8e-47c1-aeae-71ce955c1997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2eaab1-816e-478b-938c-92df5bbde342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6618b950-b76d-49f3-9a6f-b652b005eab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da6b7f6-fc22-4caf-a326-7f089db1d9d1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdde0ef-1840-44e3-adb2-60b772104214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34273418-5fed-4ca2-8027-71fda66726af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ba1384-9c71-4c0b-8461-3cb1f7ad2615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9059636e-a5ff-4e54-a856-c204b13941a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84718e7b-5be6-4e97-9f73-4f10d5e08163",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a6c672-3fec-4e95-9601-9971d07ec305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d96a878-74d3-4d46-a60f-1c3f3f37c1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a237c4b-08f1-4f2e-962e-97abbf0c5ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d13f09a7-425d-4c24-9f3b-ff64e3da1e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042a6007-79c5-431e-baf8-a7de938d1da0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb0d710-8be6-4f2d-9258-1a7a54917aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e1a70f-6428-46e9-a84c-60e8d1aff07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50653567-bce9-4fec-b747-fc9ee3baa536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b897edb2-2759-4cdf-aac4-668a5fdd567f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7aad5d-9249-432d-90f9-e8763857dc3d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5d11e3-97ae-4abf-b838-7e0e7f821483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5e08ab-aa12-4472-9698-db4212ea7ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d011aafc-cf8a-4a09-8049-61657d4688ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc014052-7cac-4cc3-8f03-16f66a99e30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc1f143-7d28-4b7f-b30e-fb79141e1557",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34865171-6a12-4a38-b95c-3309331d09ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f23a1fe-100e-4264-a19f-6e9c2acf4bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b812154-1261-4c80-8f95-978f262284f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26a27c26-147b-4bb9-80a9-708e424b94df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e387f8b0-6af4-4b27-850a-d74249fe5683",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a47daa7-80fe-4fb3-9f2e-ddeda30ae4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d3bc9a-f706-493c-84cb-37e5e13dafde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445a4267-e580-46e8-95f8-cc8fffc413cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eaabc3bf-d826-4c6f-afe3-11c3c128b639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc8a42d-a221-4d23-a5db-f36b226ee562",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffff201-3bbc-4281-a5e8-6ea74573e88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64c56f6-61c8-4904-8ef8-c76ebc932603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721159df-b396-49cd-9f25-3b166bf116cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21725c5e-49c6-4096-97fd-9f926337643c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74011a8-b68a-41d4-9b64-236ee31197ba",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6fd142-da82-4b04-91d3-18a65b571411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c98ad1-7ac6-4f6a-ad46-bc21413e4730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84760eec-0484-4f84-9a6f-7fa28f30d036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6e6c9e1-3f6f-40ae-b9c3-0e67d76c271d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6ed413-10d0-471f-9544-1a9528c73898",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425318b7-86e9-47f5-8d87-3c7b08eea4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf12bd6-85ca-45a2-a24f-ab82d90340e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a8131d-011d-4c70-b575-9e55529586b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd07157a-ac2e-4517-b870-949768a61345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41afc5d9-dfba-4923-8ed0-836b80ffe837",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b4a913-5801-4e36-bce6-1b5ccd33e4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7f480f-c23b-4eaf-bf00-a370878236bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac45ae7-5823-44f2-9e6e-3251b0657262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35ca32e8-f7f5-4fd2-880d-b735eca64a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82c8439-74ce-41d2-bebe-5bf4e303c07b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250e40fc-49f1-4bf7-801e-ea48e8559c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9861d9f1-1e43-4ef9-b4bc-5f4c593ed3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba4ce8c-f6a3-4141-a717-cbc417cc568c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a95585b-c8c4-4049-8281-5bddc68f1129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937ba49a-9b21-416e-9af3-5fced19d9186",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efeab4a-fba3-4708-9772-db417cadca46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec67010b-9e13-4426-9629-a31e7e7ef8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495c0acd-99d4-4cf4-8fca-fefc5698b472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa326947-07cc-47c7-851f-85b40ae4883f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78294f44-50dc-49a9-92af-6cdec8ac10f0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb2b201-23f5-4e76-abb7-fec486ef6904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444c7f19-ef32-4679-a6c0-bfce21fbb2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e44b0ae-a217-4a32-bdd6-349f92ba99ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea286bd-61b4-4fca-8abb-ce4fc0a84523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d265942-be36-4bc2-9646-f920146990c7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82e6fc9-36c4-4ac8-8f27-1323b4c39dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b0ec5a-b4ff-4efa-9cb3-487f0b088d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6bd16b-618d-482d-a739-9b518a20cc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4032358-a86a-4568-980a-2eaf852e05ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55799c1-3058-440d-9652-ce608bc0370d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2102919e-338b-48d4-a91b-180272c38543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f53206-42cc-4a73-827d-d7256393c9b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab5ee10-7b2b-4712-81c0-9a470295e254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "04de3ec2-6ff8-495d-8f4c-3f466f6f5770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f215207-7df8-45fd-b177-101655920c7f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9b8cae-7cb4-4e71-9284-e6ec9dc89fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daed844e-6cf4-41f1-b557-9b10e55c7407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca8ee27-7d2f-4c9c-acb5-b65ecfe4f457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3312ce9-ce77-4c64-b12e-7acaab15eec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b8a098-1a55-446b-bd61-d509cfd56fa1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1f54ad-f1c5-4f16-81ab-af0ad75f9e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76858ff0-23e0-4c6d-9ccc-4fc6881c4875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2493f9-811a-423f-bf79-fc7bd7aa7cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "12f0aae1-f348-495c-9cb3-7c15cf1dad04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd48fb5f-99d1-4b00-a7c5-4c7120a70b03",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b37a71-6b14-484f-b2de-9937f6bcee40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522fd7a8-c503-46db-a5f5-78be61b795d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fe0891-da66-412b-bc77-80b5c647f4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b25b41f-0808-4964-8368-e0ec26dd96ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8ea454-9f4d-44ad-b22f-d0af159f264f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5934749b-71f0-41f0-8844-85273c3c892c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed8bf74-0429-4b0c-b797-e71677d2b475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19301181-cb6e-4e12-8c04-1fae39d9c813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9afda0ae-87d6-4562-ab3c-ba903c61538e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6821fcf3-5fc9-4142-b8a0-a5e518e410e9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fefaac2-b8f8-45ef-ac9e-62f8e9ca2c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f4c038-1d6b-4d58-8dc4-fea4506798a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afd426f-6e7c-4422-90ba-16bd9b43f3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39470b99-2688-4be4-a424-35085cd01d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7a3ebc-a8d7-4f93-9cd2-dadba9a0761b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49bf3ef-72dc-4c98-b5e2-f596130ce425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4427b882-7d5d-42f2-8510-7a99b65960e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dee3cb4-b08a-4870-b776-806502c2816f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f17857c9-7344-4a5a-800e-02647e40221a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1590e9-d62f-4548-8887-8eaf57533d2c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71edf2b-452f-4234-86ef-defc1181837f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3e37d1-e37a-4d19-a9a1-550baa3d6832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77686dd-ab8b-4381-af5c-755385679634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c288a82-fd09-439e-b4ad-6fe6e2eed53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299ddaf5-3722-4b46-a6b4-988faa740bf5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45fced1-ba6c-44aa-8b26-734b97238f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aff1563-4a61-4b7e-ae1a-77107c919567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8263f795-e781-4238-9ece-a631d6241cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6397a9-35cb-4d5a-bd04-1bf38351f4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f068a3-f0ad-4ee4-adf9-99110292f797",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456a75d4-4cbd-410f-826e-4122eb33e680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec2dec3-dd45-4a9d-8627-aacdc0db96f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5467d6-d030-474a-ab30-2cb34f59c464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b59384e-7f35-4401-8a18-0dbfba4fcf30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dea3849-801d-4d04-9591-8a08dcc500d6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d724dc-2343-486f-afda-cb1cf31c5d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47bb245e-6341-4b31-a760-2d8e458be168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8d5714-bf9c-45fa-87b7-dd55a3c1283b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "706ddd7f-8e3e-4ac6-bfd9-654cf771aa8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d7f11f-299b-43d7-8854-601b51db2dd6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108e99d2-b93a-4139-b1b4-1cce58576755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f651a07-a55a-4d3d-8c66-7fd2b0e5b452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16a650f-60fc-495f-9567-5728679f1ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "436821b4-2c80-430a-9a9f-7a5efba4d5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ffe810-b2d6-4919-b795-f2203731539d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d6f002-13fd-4c57-82e8-7413fc0d1283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fae6c2d2-9491-4a63-8874-c4d408ec3d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e903f6-6813-484a-aab8-387a0dcee438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00b6494b-6eeb-48ef-83f7-e064cc427bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba38b2ac-ad01-4029-b89a-3a6517c44f5f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb71860-a53e-46dd-9181-4df3a91b7e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b5627f-a57e-4049-891a-c5cf4569752c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cf7ded-c0ae-4065-9e13-7a2f86f5b1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5323661-90d3-4f84-a987-2535a737b5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd210869-ae01-4998-bd41-5ea2533d7e0a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850a43b2-1dda-4388-a0c9-b7580a5af6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f585503-06b4-426e-94ad-43f0c71e39e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969de803-d2b3-496b-8031-6090b30b4f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf51e15e-3a23-436f-b5db-74328e3f4131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453effce-b771-41d0-9a99-69e2f97611a5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f965c5ff-55ac-4b9b-a986-99b1526b8556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f47e27b-0c6c-4ac2-9fcc-482e9a5a4ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e58c6d-cef6-4d06-8ccb-9804addcdfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "178a88b9-215f-4911-bfca-bff7185ae003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2874142b-1c89-49d2-b8bd-11b20d8685df",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8100957b-f875-404e-a5e5-9752bb7f8341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb806122-3ed8-40ff-9fa4-c95cb6f8029d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4a1f04-388a-470f-bbfe-8ca7f8deaf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3924f3da-0eee-454a-9e3b-d433f38b941e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a7162f-5ebe-4972-968b-c04884abcd6c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8955d78a-dc21-4158-8f49-732bcfabfb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "becfb584-3a5c-4ea6-ac7b-f73d78db3186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fbe6aa-6a63-42d8-a05e-816e6fa4a378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4630d3ae-9bee-449a-90f2-607bbc49fc13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86003c5e-3b76-49d6-b05f-a404b8231d45",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25e7f79-31bc-4eb2-b20a-eec2f6f2e019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db949d70-7eca-465a-ad1f-1db21210f681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255b77c2-2e97-49d1-8a8c-7945bb666d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3a13a8-94aa-4a16-8870-e2f6522444d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c050ffc7-d23c-4bed-8ac2-9eb197771647",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7492bc7d-0237-4e15-b143-d426ba0f6e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d704984f-3e1b-40b6-b7b4-24c605c6d160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a7933e-adcd-46a5-8756-d3a0cdd680dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac701f8-6ef8-43ea-be40-aa5aae720826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24feb512-20f9-44e0-841a-5d70b7cd9321",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e083d08-2aac-4a4f-a329-ee643d259614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5795e7f4-e7b9-412e-8285-e056de76e99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa068802-85c5-454d-8d18-61b89efd317b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "689c8bf4-34ce-4b8c-aa85-1675f1346a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846b57b7-b46f-4898-b64a-1ad54b76e5ad",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905cd194-add9-4240-aad7-a49bbae22314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf2c696-2438-4175-9ed5-433613e1079c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8837cf43-9f37-401d-91de-6abfdb94c2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d522ec4-d552-42d5-9547-43b938d1abb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cad09c7-168f-4e8f-a3f9-9d784191dc7d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db4f0b7-cd77-45de-80ac-f60720e0d9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7264e071-016c-4cc1-ba7f-c841c5f68763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1031a5-4d51-4cad-b312-a4473cd7779c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29e80537-55c1-4480-999e-f644c3c95d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011a878b-c691-49b1-a658-55a04bf1670a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3229cd-054d-4cca-9d84-71a0cbf724d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5573d7ae-4c63-4c21-83e5-9a74d8a62207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830df7d4-19fa-40b6-88be-639a32984c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2742fd9-2f6b-4554-8f7f-ff03c617a8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b481f5ba-907b-4d0d-ad35-6c782497625e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269b85dd-9ead-4173-b828-77db3c71be8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1da9e1-9c4d-4c61-9599-5c7bbd6fb16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138b7b8c-693a-4a91-a167-2658fea00bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af8a2c40-d7b9-478d-877a-fa7c20015374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1e7903-9a87-4092-bfa0-b1109b021558",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf391c1-9b14-4566-a885-50c8356104df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a37335-0cdd-4706-9bec-b8760af9c283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4157c6-1566-4627-87cc-76f1a87e420d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d78a6758-6a46-4711-84a8-fcb44eb60be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e9b4ed-96ff-4cfa-a01f-46cb7c56440b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17555d4-e90c-44bc-b3f2-0c50857ef780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec04d28-a876-44a0-9291-b0c09873494b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719c3622-82d5-4ee9-aa9d-0d75f4f09719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f2ecdc-7964-4ff0-83c0-f9f2e3dc9048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6199017-75d6-4331-9f5d-006c89939166",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48dfb68-e244-4b38-b9fc-c5da1e842d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce4f854-9db6-4b96-8efc-03e111d70628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f089845b-28eb-458c-afe8-7977fc853cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "63bbf802-ce25-44fd-9ca5-b1d824b5af16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc5d1d5-7f9b-423b-a635-7313deb448ee",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d53358-bca1-48cc-9730-075e3f82f247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb3ede04-237b-417a-a5f7-7afabed611b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd4f16d-e95e-44b4-8efe-53c101321f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df26e045-7726-4f7e-b708-2dbe4123f1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db1c36e-f9e9-465b-b84d-917760ccbcbc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ab5fef-7004-46ed-b3a5-33152c8d9f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e15a3f3-4d9c-474c-a5d8-91b994756535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7319b41-2028-42d7-aa20-89fe2188c0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4ba59b-80be-4a40-abfa-ff3d79a3b751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f7c1db-dcd4-49e8-a4e3-aa4074e5c1f9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59bde52-baeb-45f9-94df-16f81494abd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db042f59-ae74-48f5-80bb-8d284c257122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07de18a-18bd-4ed4-bda8-ae1d5a95c9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7301d49e-baed-4b42-a323-50609e8e2743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce6f57c-f6e6-4007-9b85-8265cd586c08",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448b45f1-0bf9-4024-b11f-d6aacce2ba36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb5599a-ab5a-4dad-9bb8-c93e0704cffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efab88e5-a25a-4042-a0bb-2dad6dc80a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aade1405-246a-488f-bc5a-046fb6f0cd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95c8e52-283f-4ce7-a4e0-f9ed054a00f9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887ed6c6-772c-4ad2-a0a4-95caf3d8d8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1ceac9-d69a-44cb-9388-c7b7a6cb9309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f524c8d-157a-4740-a93c-537fb632b9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e982d684-b2ee-48c5-a31b-86a3dc61b325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c6ad41-bf82-4d97-85de-15cf6955b4f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce59a29-377f-4063-9f5a-191787ba96b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1adc39-46c8-4c30-a626-b58ee7517bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeea9383-817b-463f-bb77-87c6742ecb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e96b16f6-d310-4a23-b824-47ac7f32173e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ed3407-4f5d-4fb2-883c-9215d1e99e2d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3928a6-f3f3-4a19-b067-03c7c9805c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ee97ed-f3c3-4fca-8f1a-771b5ec6826a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b7c276-2cf9-4705-96c7-3f16363bbcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c2662cd-cec4-479d-af1d-8611878c8663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35ba118-1e6f-4a1d-98c6-91e2be90ca32",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56d3564-2be0-4584-8f71-d137eed30f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a619f917-5bbd-4e09-94a8-88ba0fcab1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da294dc1-ffdb-49c5-8756-ccb88dc73fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1449c35a-2ad3-45f4-a5f9-c4194c1588ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7376c396-a30c-47f5-9890-e0e62219dd15",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8931ed-5f07-4202-81f8-44e7e8b44b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c32604-56ff-4143-a0a3-2acd08c6065d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed39661f-118f-42a0-8e33-c890f7832524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "984d5cd8-5c80-4677-8689-467c737b9bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e42cf3-e5ff-4312-b35b-6e7d59dfe6c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2f2c3d-6559-4099-bb8d-fed36c4c66a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e8afef-018a-4f6f-b0ce-1de71faa46bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3a463e-bd6e-4661-83cd-be204e903871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "89a96ff2-56d6-4efd-9ed9-67e6f681b924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a280825-2b09-44a5-81e2-0d450561d76b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7b6c12-3963-46f1-842d-6f2c37a29703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ef6ec6-c01b-4001-9d76-d3233af6831f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b53587-5e72-475c-b0fb-41d6661e3ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aec417a-5a0c-4954-b41b-b38ce00e18e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c857fff-ecd9-44d9-8674-55f61fa15141",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3ac93c-7728-450e-84ce-1f6e91d169eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8822d7d7-d499-4ef4-8d56-5551560279d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd555068-d8c8-47e8-82fb-cadfc6da2563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "47786727-d12e-40c0-9b98-887aa321fc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bebbffe-0f0d-466f-be39-ff084dbc9018",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb24311-c7d2-4988-8ed7-470cb0ce27d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53cfaf5-f09d-46cc-9c99-09a5fee11a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce41f087-fd5d-4b7b-a169-c4a1cdd998e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "334da395-d897-436c-9ab8-8ed147dd5f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34f2155-0aeb-40c6-870c-fc7caf36387c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35783314-7fcb-4a0c-a49c-34e26dbf2c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8071eb7-2ca7-44c3-a5e1-a427069a7ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c635563-0275-4caa-921b-7511480e9b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3f033b-bd55-4d36-b648-6a36ecdcd395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f53507-a853-42ac-b6b9-b481a4dc468c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74d88ba-adb4-49e5-8386-a7779b0e13fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32760ef7-a7e6-482e-bac2-14d2c198cc60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919be2d7-cddf-4f0f-9ac3-696fa6a6d2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b492b16-6b52-469d-9c8f-fbdec8e2d386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef42e2f-b7ba-4613-bffe-33af0f0155b0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c935526-56f7-49d4-9fda-4d98c5ba2db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b6376e-8946-46e9-881d-2590177718ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e591e307-cce9-403e-b21e-0e07394279bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "109df604-9b3e-40dc-b0b5-10519c16f6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a005ffa-7386-4831-adfe-7513053858c5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c577b7-fdf4-4615-af6c-f995b38d315e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7793b9ca-2968-4bd6-93a4-25f5d47a7ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f47dfba-9edc-4fa2-a07a-4f6c0475f63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9430bf1-d131-45f7-a033-c5dc22ea7b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5686b265-2e0d-4bfb-aed7-68ee1f9ce7fc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b1d392-91f0-42df-b588-8e49b79a8825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c25680-1b52-4819-b06e-9c60a7887793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b4fa51-17a6-471e-a992-d9a7ba9d3eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f18e4465-f8f2-4254-86fb-bd4e82ddf043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24dc0896-7781-469d-a785-901ef5ad3dc4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2910a3f9-19c0-4abf-b1aa-8d882bbe21f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca84e9b-92b9-40ed-83ef-a1fd5ea8a5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19b509d-eca8-4342-92d0-5deb64becf2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a632606d-05ad-415e-b7f6-996b787cfa9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc65ff4-0341-4684-a6de-31c5640edd0a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d297ed6-d675-4f68-8ab3-e74e9448a3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8063304a-c09a-499e-b1b0-b7cc8791545f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac3b7b0-15b1-4522-b688-f4970794f91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11e6268f-3184-4560-92bf-9ab0b735eb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e132ac8a-e21b-4dd5-8a01-9a06634b6f98",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b338a61-20ab-44f9-b165-c57618ba54bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772804be-05a0-4c59-b674-298028991178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639a6fee-65d8-4917-bd3d-41422e3864cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dcdfe8b-2cb1-4a1b-a372-a2c4db6731e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236a3580-90b2-443f-be19-ac9998a79f16",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea2a5ee-1e5a-4d11-ab52-8cf1c1300ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a9b24c-540b-4d11-b8ce-a23b15d68375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3853c2fd-ab73-4016-9ead-194a11ae83c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc74f00-ebea-40a5-a1a7-8f45459cc99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d299f981-a103-4139-ae48-27fdaac526e3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7c8fe7-2b81-4920-9b35-1b324dea8144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1428e8c7-d229-45b6-8d9c-0b3222e7cce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547c2c34-f8a0-4966-9e38-67efb788b182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1d04f9-8c5c-4053-b2de-ae31811ebb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9bf94b-0128-4536-81c4-ed6e34041503",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e29c0f-589e-46f9-8fee-4420594f6ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f559465c-98d4-4125-bebf-7d226b24e2b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf67f98-6a1f-45cc-ab03-10fa7a25dd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1246d187-c39a-40b7-8d7f-d86d2d4eb9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1080b7e5-1a73-4fe4-9268-5863b425bb88",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37e69ac-480c-40ab-89df-a2af97e8035b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfcc31bc-106e-427c-8c19-ae0a7d0201e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0f0f0d-7a0f-4ba0-a54a-91ac5942b23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89743566-7236-4de5-a33c-f0bf65a16df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678e2ef8-43fc-434b-9699-778614bf9b62",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ace3b29-6271-44c5-a723-95bf2a006417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c316030a-2774-4b99-8b25-e9e5f64ab263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174fb9b4-4db9-4ab6-93d0-5ba264159bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61e0245f-1560-4789-9571-930ac702edad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e74edd4-be7b-46e8-aa1c-4f8ba997255d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616c81fa-d15e-4147-81c9-d4a8fc835928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762cab6b-2aed-4a7f-a53c-990b5c3be601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364764e0-4406-4249-85bd-d1a84da56025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bc7928-e54e-41cb-a7b9-f0b88106721e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b58cdd-d0be-44e4-aa83-c592681dc6a1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa68a12-9ab7-48d9-8c45-615f5aec1065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e813182-74d8-43b8-8833-8589dae85e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7db1e67-cdfa-4d0d-ad2f-4d4045bdbdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b217d993-9b75-4f9c-a497-e210dc2b1784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e5bf9e-1a97-4534-872e-0d1ad730363d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6222e9-879a-430f-91af-890c3a67a5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a985dcf-c3a5-4873-9295-93788001be3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46acc8e5-8a00-445f-94f8-3bc10f39a1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e70632-cf91-4d63-8fac-7e723de930cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c098c22-f85d-454c-9a50-22bd9937039d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2f98ff-fd5d-4f19-8a66-a9b52e213534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06120c31-6f01-4eb3-b949-56ad2397115b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b118b1-d091-47fb-85a3-87e9fe8a35fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "45482aaa-3bea-46d4-913f-a515bb9f7708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9faed8b0-c9ea-4836-b103-14dce00e64fc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e329fa-19e1-4f71-9e74-850930795324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7f94a5-f18d-4670-872a-a68e99ba38fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b278c0e5-cb7d-4198-84f1-b7ad3df47d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eac8cca-e9f6-4eaf-8e94-c822419f3c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e77ac6-aaf7-4cbe-95c2-aa20e277cf13",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04417796-8ab7-406c-9708-1eca19a96d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467906a5-80e5-43d6-9ebc-0c990e5718ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4223ebc2-9873-4ca5-b9ed-10effabf18c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b353c7-fc0a-4739-815c-54b0484841e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc215bb8-f634-418c-88e1-ac1d6ff274ea",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3db4b09-df93-4514-8f7a-975b354c81ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32028e20-0075-42e6-a44b-e7b1c00a1357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a5c38e-da31-4755-a2dd-2ac2c9695ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "865011da-c63e-44ef-a9f2-87bd01eaf11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b484e2f-366d-4915-8c06-e5ea99376ed1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1f8b0b-76a9-4f52-89ed-e8b80cf2a012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379ec16a-740f-407c-9c5d-bc2efc576e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f4c269-dee9-4177-9f6f-3542e92a98ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86bc6667-4b81-4134-8b7e-592217c2e060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d6a003-4df1-46c6-b5a2-492e988dc927",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbace7cd-26a8-4533-bc84-4d6247dca647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49509dc8-73f2-48d1-89f4-dc041a6ebd02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db91d4d9-7755-468a-a466-af5fb6dc78ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89158035-2cec-44a5-99a6-98962d5dd098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542dfdff-aec7-4ce7-9bbe-5437513cd58b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58184026-d18d-4c50-a824-70e7ec7cbc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee233e0-e2a6-4ec2-a79c-4e74a5f0d4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6808fed-f2a1-49d2-97ad-0989a55707b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4076803-f054-4ed0-8633-8454559e6c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82876bf-7f14-4db2-a5bf-c4ee3fe299da",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e254161d-f2f2-4677-830d-17e836c7d221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948e7802-14e7-403b-84b1-7ddd4773a986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d4fdae-f58a-43d0-b1b6-7abd181db84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5433b11f-b0d7-4052-b93f-6fd003c3e273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71198c39-0573-4303-aaf6-6b58a70b8f1b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a321bf1-fff9-4d22-8d10-db930a8fea56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f24be59-658c-4f84-aeb7-3a0cb58a63ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e0aaf3-2e81-4111-a7b0-73a1905e734f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7c8018-539c-48dd-9f09-41d1c73ed1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d99227-7029-42bc-b9a4-5ffe4ffef35a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c0c46a-b464-4041-9549-cd0d05347021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97ba404-bdf8-4b8b-b667-e25809d9bec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadef350-96e6-4e8a-ae65-8ea077786ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8162b241-83c5-43ae-a813-b3e6d0cc6875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4923d28b-e984-433e-8421-d9f2758a73e0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97865d82-366e-48e3-a66f-1f22a40a7b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ef6550-2243-4d1e-8f16-6a914d0c8732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104a9eba-19c0-4ba5-bcad-1684d5a96dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "78b760e3-5dd3-4a5a-8286-47bcf9c74065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c8171e-836a-439a-8360-243b2a30d0f8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37daa12-f8b4-42af-92fc-1e5901020129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "40874a05-7219-4dcc-923b-ee268b79e8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e01860-cf6d-4a6d-b664-6d2de4421ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9462d7d6-2274-4819-8212-88b911555a4b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a82034b7-ab6b-4888-9eb1-3a77c9a96199",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1661d69-ce1e-461d-a3b3-c824259ca358",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f217d6db-6e73-4f4b-9c35-29d31c78e027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e389b7ae-7448-4f8a-8c39-1e0eb22b1d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a20ee04-91b0-4277-a0e0-f429f7128bd5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b9fa558-6d17-42f2-8513-c8309db2030e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db41852b-eac6-4268-a203-02bf9f0b6df1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fcfb3ff-41d7-49ef-9bea-225d005f362b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c75d445-4bda-4809-a38f-a6446b471131",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "356932ea-9b9b-4277-8e0c-fee4b8eef789"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ec79366-9522-4cc2-abbf-b08753ecc8ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66506b7c-5ffa-4f40-b875-5baca7707a7d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "955dac1c-4ee9-444a-9577-915919993e96",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18932f95-9813-49ed-a486-28d8d4a1c657"
                }
              }
            ]
          },
          {
            "id": "7d1e18c7-c6bf-4c70-9036-c2c45af7341f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e77f5e2-6bd8-4776-9ec7-918aaa10aa94",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4d21db51-1b21-4feb-802d-2c737efdfc9d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9877927b-9c21-49ef-8858-48a32a1e3af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "66adf117-9458-4212-8079-aa9267d61aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bcecdc-fee7-4c8c-b223-b95893ccaa45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8267c14f-794d-4e31-b222-2c4022189e3a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "29ac6664-2245-4caa-8ffc-946f4d6ed7ff",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48108ebb-2cf4-4df8-b1fb-14c27f51ab71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "20731379-7aa3-446b-9573-5d7d9fa1c334"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b006ba5a-dfc7-40c3-b60c-26b95ed2b132",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2cc0f4a0-1696-4ea6-acb7-628c46ba9721"
                    }
                  }
                ]
              },
              {
                "id": "7371dd8a-dcb5-447c-aac7-0d6b5e7b5770",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd6fd0ca-fdd2-446b-90a1-912e4d8a3c32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc2d7885-6336-4f67-84f8-8efdc4191f5e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5813fd37-6ec4-4ec7-8c77-dc0b4de15375",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b1625ab4-cb05-43a4-8ece-5382c0a5a45a"
                    }
                  }
                ]
              },
              {
                "id": "268f2b57-bc8e-4c7c-bf3b-6680fa6249e0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bc1021b-c7f7-4009-a2be-49d17fc39461",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dde1c050-6635-41a8-80f9-8d7044d76bda"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66f6a9f3-208b-4adf-b012-1723b5842f01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "12472f1d-1697-47a8-8f31-ce6822274892"
                    }
                  }
                ]
              },
              {
                "id": "93171869-534b-47ea-bdaa-1f7beb6fcf38",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0a41cef-3784-429a-bf05-60709c0b762c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0f936c4-78b7-4b7f-a069-b6af46a5948b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46eb6013-4ed0-4c04-b9e6-712939c63077",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e90ea5ca-b946-47ac-a8cb-8ffa0362526f"
                    }
                  }
                ]
              },
              {
                "id": "fb43148f-96ba-4015-b365-ec706f1bb467",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24fce7ee-796a-478e-be5a-9cb61c3b3a38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "edad6a37-a53d-4044-93b4-71c4c7d667bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e850073-3a85-4dfd-879f-e690c1814fbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e288beb9-b4e2-4fa4-92b8-d3f70a2f5a92"
                    }
                  }
                ]
              },
              {
                "id": "890ffe85-aada-44e3-8faf-323964095b4d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dba2c3f-8740-4884-9c78-ab9a6f81ed41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f9c2cc2-4c8e-4d6b-9b71-80b536eef041"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb4cafc5-b9e9-4f61-9efe-87071ef05de5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9ca35e46-dfea-46f7-b00f-e47612348887"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6a2452d6-695e-4037-83fc-422ada9a2084",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94b2cf50-44b4-4f13-aaaa-02d6d4e51f72"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2f49f11d-bea7-42e8-b845-2d512ef3b10e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "37ab2696-c319-438d-947b-69eef8e31988"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83691a30-da9b-4d78-b171-6d66da9b6660",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f6d812c9-e548-4f3f-867a-3c1dc4227335"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fc8e871-8226-41c8-be9f-3fc50b788ee1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fab504e5-fac7-436c-8b32-6abb11bf63af"
            }
          }
        ]
      },
      {
        "id": "6d967e64-ca20-4fa1-aa5d-4336eae0fe8e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6114b2f2-c1ad-43bd-9a91-a713bea40031",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0255b12-93e5-408d-a55d-eb846d2de592",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f1efa37e-e60f-4a21-a0d3-8f9f93af24b3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3c21cd-baf1-4598-82c4-82e1cb941304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29deffc-e8fc-4211-b9cc-5582f73f4a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3618c699-9ece-4238-9725-7a87e460f670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae6ba0d-5e6c-4877-932b-2a75531dedf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f86617-ec41-4bee-bd20-4aa70e336a4a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3ee572-a036-4d00-9342-9a89d8f755e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90764219-9f90-4bfb-b0ca-e7a8844e388d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fcc350-26ec-484b-828c-c2f3369d6f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f58095-289e-4adf-be14-a1990f6b88b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cb750b-d320-4b70-9f01-6fb9f4796ede",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "744d057d-6590-4789-8b22-dc0ee75ea112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5f57a2-199e-4cd0-a3af-b2b70ea290c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b05ed94-57aa-4021-bd84-85a10eb691de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2dc6b9-35ef-49e4-bd8f-6c42f944e65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85335890-0fcb-43ff-a8ce-7b918ceb57c3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf524a72-b86c-4774-a4c5-ec1e06773a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446f718a-ab3a-43e7-bab4-60caa86ee51b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f201be9-57df-4809-88fd-702b3640feeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca36d34a-ac68-4051-9024-a0ab3e423d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0233f8e1-a341-4ee3-8d24-0911851f500e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff7120f-0d1a-4262-81e5-84f267fdbf84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacb7f79-93a6-4b2a-a526-25d9a37f4ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b570d3-cdfb-4dea-9dc9-152691b67746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b8924c2-2e73-4d5f-9b96-2784eb425b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8277d89b-20b1-485a-9ec9-85753d4fe104",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e00c12-2783-4906-978e-c081b4ef9fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f01d31-f31c-4807-8188-01db9d3a1037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3c0d2e-9b0c-4533-9bbd-851e1b7c7eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f14329c-429b-4875-9ad3-456b5874b69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811a1e4e-d4e6-425c-9473-cf88dc377d8d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fbbbb8-d517-4bb1-9bc2-ebe61183a064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00cc38eb-f220-4e29-be1e-20c2090114d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece3932d-510d-496d-bb23-b54f4313943f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7bb70c-c3f2-45cb-80da-6c5f49583fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56dd674-8718-48b8-a265-a2489864164a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d6e5ce-65bf-4563-9440-3947e103e926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e3d8ab-e7b0-4a95-8540-0e7120ea4712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c64fa6-31b7-4d91-9494-9308be965d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c60b7b88-a655-4713-8730-45ca59c86b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b950ed-0ad3-4702-a114-393d69585d26",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d67e100-792d-4920-aa70-dec78cd8a18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8066bb7d-f795-4fcc-943b-ae8f8fe70027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca015c61-7b2a-443b-85b6-3f9e3234ffa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "379584e0-28e8-4ee4-b7f2-3bb9e4fd5ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfdad8c-3cab-4408-baf9-481347777bdc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4df0e98-0dc1-4623-bc42-1657a79ce825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c73d131-63ca-420e-933d-427275031d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d741140-a648-410d-8dfd-b6ff8f660d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d87b155-ad7c-48ea-8766-a4de77196b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8816dc73-0440-4dd3-afb9-652bb42939f2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00c5d81-e1cd-4127-861e-62bf2a36e21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573952de-697c-4b1a-afeb-f9a41ee86e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba347ae-8088-4b19-8066-8e2b2a6a8464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "30bfdb5a-c4cd-4bef-8e75-edc8c7289902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126b6e70-c7e5-4d60-8ba9-a38cc7dc05b7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd76be8-faab-4fab-ae30-cf463a322cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48251ef1-713f-46cd-bc47-a1322c9a2464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc24ef3-51be-4c64-aefb-8e385e9e878f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf6c476-68fd-4466-9fd5-6a2df4eced99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c3c47d-07d3-4585-8f42-1f3bae7495d3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdb9f94-1863-4ea2-a8e8-6577d3d5f048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c8e78d-70d6-431a-845e-0677f2500cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c866937-5f0c-4856-aab6-cb26f6468e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a68759c-b286-46e8-856a-d990c628309e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf99f28-fb15-4e83-9aba-55442e2072bf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b836f751-9e04-4f49-92e7-4766d0e16b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b600778-01f6-4823-9fa3-20cadcb86571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d014123-6fe6-4938-800a-e5c802b971c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6cbadce-aa1f-468d-bc1c-7075d97a8b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54c6ed8-f97f-47c7-9e67-025ed2a42555",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a859e2-b5bd-4887-931b-5bda33eb3684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb73410-3009-441d-9fbc-d7bd4f18974f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3dfa41-5a65-49fc-8953-6750eb99ad9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b29b0f0-c701-44e5-8735-bf27a202e4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53e70fd-007f-40a8-8595-a74d07e75548",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b777c4b8-2e24-43ff-98a7-03186166f3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "820717f4-dc89-4c2e-b959-896fad6be4a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64dbeb1-30ff-48b2-a4bc-87a1f26f50e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e050fb94-9df0-496b-9d88-e7e0a7240179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f424406d-7666-47c1-8e1e-731cb8f5bbda",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327066c4-002c-4c06-9595-01d9fe4a9782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9945e42e-311f-4973-8e6d-88488bd39432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b30737d-b322-4bab-bbd3-723304c8ba47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "848c5a7b-dff1-4002-b5cc-995ebc1bdf7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddb495d-422e-4abd-841e-0e9c338b5b27",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfec65ca-4c6a-4192-9fd2-d799a8d3fac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47df708b-4709-4825-8191-b22cfeb3dd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e834cee4-e372-4669-afe8-e7994be85e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d377dc36-17ab-423e-a4dd-f44c99154aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11654c84-4a0c-419e-aef4-0aa62fdc4151",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e9189d-3f6f-4904-a160-f20684c3a99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084da763-8e05-4532-ae54-c51a71a0350f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f181a76-0dc9-4b6d-91ae-fe26fd68ba58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd65b8e4-5b9e-44c2-841a-bb9353e1c243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b872aae2-5ed6-41b2-ae4f-3d448b34dab2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879db8c8-928d-4f3a-b724-0111f6bbe39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20bff95-28bb-4889-b2c7-aa3281213403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a6857c-98d8-4d26-95ce-2d6f83ad3a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f876e5a4-4da2-4bd8-8cab-701bcf2ce1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f25040d-eeeb-4a61-993b-38bbeefbc25d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9d690a-0494-4aef-a644-8af615e5b0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08fe717-5c81-4585-b778-db6a56530d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda01a5c-aa02-4a7a-82f7-8abfe55f4f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f83d34-c7d0-47f4-bfaf-54feadb8c2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd8c158-55a4-4675-88ac-c749c171bb10",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98514e7e-5c3f-437a-932b-25aa360297a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84fc893b-f5a1-43bd-b84a-fcef1dfc0327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d4571f-c8d8-4f39-93bd-77a8b5b790f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22947dc9-429a-43dc-aa0d-07299500622e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0a5b3c-b253-4fe7-94e7-95920e885e82",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f88b75-2773-4a69-afaf-642c495c7de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a12a27-ee3c-406f-914f-e2f321aa3141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd9a4ea-2c00-484e-a538-429f83311b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62fbd53e-a196-40a4-b568-38f6cc591002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a33504-e0f9-4aec-861f-f0169afa1ed2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7672c725-a91c-4824-bc04-c0b5bf848379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd3d8c9-2357-4c4a-9983-8094247e0d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447f55d8-f777-4039-a7cc-c75bacbae26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5307dc32-ce6e-483f-9f9d-3708956206a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0126c6d0-f15b-41d8-b1be-e260c789caa7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b207c39-f7fc-4ec6-8188-6e343dfeb607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76232fb6-ee05-4c0f-afa8-9ad364ecf174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df1c1e1-e66a-46a6-a2fe-c9f29f5b9bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b783d0ca-fd05-4462-8cd9-ecc3b12d3403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83380fca-946d-4c29-a3e2-36ddee0bafbe",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a9dc8b-2f33-41a6-8427-b6f725892f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19ce754-c9d9-4313-b09c-d84977fbaac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83b81b1-df56-4454-a05c-637c4967fe07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3ccb23-e608-42fb-815a-5e7257b59a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16c1ea8-c4d8-471e-be16-401105924f5d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f34132-3026-4b63-84f5-26fa2bc6024a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbbb0c4f-582b-42a3-979e-2731aed88bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda1417d-3070-4e29-8fff-67035c7fea0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b05e8363-6a99-4c53-a3f8-b15b2b345a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095df32e-584f-4001-aaf9-ca199cb51e9a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d4c30e-a762-4e27-b5bb-54647d06a449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936d8b1b-eba6-4a97-abcf-f3042e067338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f29b4e-25f5-44b4-a36b-d254157f8cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1a0a53-c4c0-4c63-991a-fcf7e1674f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f05122-4649-41f2-95a4-adba30993c9d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2421e4e4-5e33-424d-b49c-7f746920f31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7988d09f-153e-43bd-b162-1ee8ebc5da50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0250ed4-508b-4f02-b9ea-aa5d08956aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffb93bf8-babe-4591-8d36-cff10ff5f6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a51b39a-d1e1-415b-ad76-af675b239312",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d534aac-ad32-4395-9820-6915af600276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19daa753-0126-43af-8750-31a128006b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee840de-d9e2-4568-9c05-125322584b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44e5b96d-8af2-4f52-b9bf-31c6485ba2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931e68fe-119c-4caf-9236-e19f583c54a1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce9c34a-d83e-4d1f-9934-450a73892472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a775c974-87ad-40fe-b65b-6ff8b90367d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a438c9ab-8d0b-47bb-aa70-8aa8c87fe9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad57475-9ce4-482a-8254-354b9f44fda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cff33e-0c23-4951-9cfc-b7492e37c604",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae14c1d-f642-4c6c-99e8-863212442abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881e94e8-ce81-416b-8a5f-d84f36faab2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600c6957-91c7-4243-b4b4-e24f3b766b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0175f8cf-82b7-4049-b18c-409b0a92a8e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1027a1dd-0d01-44aa-ab83-d27bdb357ef7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2716a55-049d-4973-b4e6-53a6fe9c1390",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e04e7c-269c-4ac3-bd1d-6c6512859d62",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cd804300-74c8-42ad-a2a5-8e63a4f7fff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9421626f-55e0-477e-952c-28da244739e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3af7fa5-9af9-418b-9a67-d5c134bc69fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad500ce6-a1af-46b4-a67d-de4f343055cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be17ccd8-602c-479c-a347-93141d238620"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "506b725d-0575-46b2-b94e-19bbbd1f1f67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5ed80b1-0eb0-41e3-b6bc-9f1cc22f8894"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15a1c56e-818a-4ad6-9eb6-57b79509c589",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9ccf071b-ccf4-4c22-9c48-f62f8f096473"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76dad04a-a51a-4f23-9d5b-5f8463a1bfe8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7040be1-a4d1-4a12-99c4-a8045eddd925"
            }
          }
        ]
      },
      {
        "id": "95a7dd90-3760-4e88-aaf1-49a8ac7abfc1",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "dee4f322-b02b-4b62-826c-561276515834",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0c88765-9537-44c7-850a-bfc33e6f104e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "04d370eb-c229-4391-9c64-3144513d41f6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052fc499-4fbe-4a52-ae02-9baee3de23da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada744ac-d3aa-40f8-8276-dd544a9a5266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa358601-95c5-47c4-b6e9-ab818ee093c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac239099-3f8c-48fd-bad1-84f5444bdc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b64dee-174a-477c-9a5c-8ee78674a700",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8ee256-1d6b-48d9-aaa0-7f1c0e15520f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32815b7a-28ad-4959-907c-9714cbec6058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3374efae-b5c3-4503-89c4-e9dcac1ae991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf2af1b-0383-4e81-ae38-b4bc83895177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f3565d-d859-4a64-9db9-27e1ada7ed2f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fcda8b-f77e-412b-a3c3-5daf21f546e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e951d8ce-4020-49c7-a719-eabd80a7bf51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3aad9e-6014-4091-a86b-b9d8b0e9e35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01eed0c1-9434-49cb-a152-9b798e91168c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9eef331-8b3a-4091-ab5d-a83166cfe779",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868d3917-5acc-4628-8d42-417fc3062dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0158fa-0d0f-4f48-ae66-703537174f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf8926d-e120-4d40-bd14-e78e1906c3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e46fd6e0-6ea1-4eed-9f76-30f3298114b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790f7c90-b665-44e9-a813-5002bed8a958",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d35dd8-5a66-47d5-b88e-72d0b5118719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b948bc2-53ec-4d93-b670-7478674a3e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80d6b7d-6151-4cdb-bf32-d9bdab5bd496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06199c63-41a5-42f0-838f-4a5afaf41fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069e502e-9bfb-4383-9a0d-8027cb674088",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69ef3fe-68cd-4546-b8ec-931534a09d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8f1932-ca45-45af-91c2-e968541b27bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f1c1a7-8b99-4e30-844d-d7f6e719ce91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9bfda9e-a245-41b6-aee3-980ff398a796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72589935-fbe1-434a-b6c2-3f93f00a6890",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cd068a-9fb3-4ab1-9982-3759deb8832f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549288b6-91a3-4889-b733-8489ff251745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687b0ae0-5e6f-4819-a751-7abbb3477105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "476db8a3-5a4e-41c6-8887-91bfbd209ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6633fd1-975d-4acc-a965-1ef2c9168f83",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47ae740-86f9-4793-a9fc-b9762055d638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b66345-2ffb-49cf-ac80-69e90bba3576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cec39b6-5113-4b5b-ac65-7242b127baa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7df6c540-10eb-4662-a4f4-ab95c90e482c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521ed44c-4add-47fb-b1b7-12d2577ae584",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f09a64-291d-4459-9230-7144cc6ab29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438b127a-d449-439e-8306-b45e37cfd31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c322764-d5a8-4548-8af2-11b7fc82a0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "341c0051-1d2e-4c5d-9dbb-ab36b599bcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0987f14e-4ab3-4657-8fc6-5722f779cc74",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cc121c-5fab-437a-ba31-23048c0fe43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df6c731-0235-4e2b-8c2d-8f4333214c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410a44d1-348c-45a5-ab40-da4f995d279c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c24e0f-f720-4717-b8f7-e80220114a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79134d7b-a452-4736-83cd-4ce4fd1ec7c9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6262024c-e301-44f4-a86d-622b4fc53f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a91cf7-6f61-4917-ba3b-feea342b9dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f9469c-6986-44d4-b01f-658a3546e12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3624510b-705e-4dcc-80c2-49f6c36191cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f84b0e-d814-4b60-b4c4-37e1cfa3cd50",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee28a01-c18b-45c9-857b-cae32d62df4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36930247-21de-4f20-8b0d-7366fab83ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134d8c9f-0b84-480c-922c-8572e086b770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce76d59-2111-4d87-9122-08b5c0198ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e694596b-bebb-4759-8b77-043022721db7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe81de2b-1d02-4b97-83c4-64110fb1a5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d276f25-2c5b-4693-bb13-934416124b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4115fd48-61f8-4ddd-9d24-ee25648d6133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf628d9c-d22c-40a6-b1f9-239c15151b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b33e4a9-0a1a-4a8b-8580-3caf886cffd6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb86c55-826a-4005-ac97-3803585cd976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c669fd-43c8-47a4-bb90-e7d759b8e38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c4ad03-bc0f-45b8-8db3-f19577df241d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c29782a-999c-4852-affe-59f95609e446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c830a878-587d-43ee-b18d-cc5fe75edf62",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53af5628-bfef-46b6-a8b6-28c18d8ad243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992e912d-2488-4e2b-a9b1-46bb64af5e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092d4ef4-f9fd-488e-baf0-1f68a3f5a184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e24d94-4f48-405d-b7e7-bea646026b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c200d8e-2b26-4a08-bdf6-b217a1d3f65d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e43e2d-0bea-4143-a381-73b24c17ac72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15b698b-c264-499b-bfda-82977ffb5735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3c539b-63e1-4d87-a325-bddc19a2bbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d99c548-a7d9-4ebe-ab51-0457b0f48f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d185fb3e-20fc-481d-84fa-558cb0fe4c50",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c8698e-93ce-45be-b33d-0253d559934b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2416a7-f073-448f-8db1-5c7b2fd32020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58b3380-e102-4cb4-839c-95fc7684f040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b259d6-f64b-48ea-83ce-95e7095dcfe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28c2752-2b98-42e1-8ffc-ab34c07cd161",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33706982-c145-40b5-bf36-529b195b80db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73dbe3ef-3fc1-48da-88f2-6d2e26914823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29081503-57e0-498e-9867-b066820f3318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cca9c06-9d39-4fbb-bd76-3441034c88bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abccf067-2890-4fcf-8432-9506791e0562",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6324286b-96eb-4018-b354-a675f130b0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "773adadd-610b-49d6-a30a-7ca400bee0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860d790f-3165-4d48-bf81-7667c9cf6150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6a8b1a-808d-4cb8-bdc9-78e5605d1782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e4121f-3075-4c0b-99a3-ea59cb9fb01a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483acb5e-3bcc-41aa-95ff-3c88c86edd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22522985-7668-4f7a-b2c6-096b18b0ba55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7056fd3c-042c-43fe-8d13-449c27580cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9df7bbc-e8e0-4671-ab2d-9811349edb74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c02ebf3-03a3-4336-92f7-28a37c868eaa",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81282e52-56b7-4ce2-92ef-f61acd965bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4397823-6eb3-40cc-bf8a-e786ecff65df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523928d1-7e27-46d1-86a0-50886dd14209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b178147-151c-4d6b-a56f-4fb5262f08bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c65c22-503c-4cbe-9617-670b9e20ffe3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400738b1-4674-42c1-88a8-1809ad348c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c804c503-6524-48a3-8769-263f90ab6edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affd6e35-3bc2-48fc-bb9d-c324c7e6bee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67fdd510-2009-4635-bbd3-60a80d498314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6090a5d6-2a89-432a-ba39-6a51adbaee1f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf7c565-70bf-4ebb-8fee-d70af9f5c4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642be236-e686-4a95-8930-2a7ff78dfc61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8d4640-a9ec-4adb-8ec9-31a78f4f222e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de4c763b-41b5-493e-a93b-58895b460855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833da2a1-f208-4ed8-b321-bbbfe9d95f13",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9975e50b-a5ef-42ba-b933-7fadcedb3ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e12e2f13-ffd7-4649-bc2c-162283b48c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893e1354-cce1-4a71-8192-2e10772aeb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "323c5c28-31be-4e90-b2dc-8e09d7496646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c95b58-2fe3-4cf5-9249-d1db37449511",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d177d42f-5442-4a9c-b2d5-4d0d960aad77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f290260-ece2-4f2a-b6f6-6275730e6c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e78e90-84f1-4458-bd7f-189810345282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "292b2448-bb94-4928-8ac4-c4c20dfed451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e046c706-4232-4bb6-8a3e-5bb6de9cdd6a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b3ef49-67d5-4317-b206-1aea8f05f692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e97f89-2dd9-43ae-934d-034769875eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40492407-a261-40b4-871d-336798f4c086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d45679bc-bf87-42f4-b739-9056acf0b2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9648c739-52f6-42f4-9b16-e24f4159e408",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed91af33-9b35-4c25-8d17-e1d63761d022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49bed820-9e64-427b-8837-c9f5f4d8d65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332457de-dedf-4366-ae3d-bacb8e094994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba6cfbc7-6f8a-4fe7-9468-69368ec20bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88344dc-96a0-4506-9da8-9ffa1cef8b61",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d96a7b-f046-4a58-8a37-372c207c8f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d424ea-16ed-4a5f-bb20-e01dab831512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e165a4-7a99-4a34-9bd4-b41aa2477987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2efa3a-25e5-4a58-b97e-e6a70d88607d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b595ba43-b97d-4df6-a910-17c44d36c6a6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc9add7-4e64-43cc-bb8b-d7099248ca74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6787ae1-4225-4947-926a-240d457772db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95293ac6-37d3-4197-9e33-93cc8783d5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d93701-6046-4589-9c8b-dc249668c668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c23b17-d213-4374-91f6-9c32e0ecb714",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0976798-d413-48b8-97df-67bc76ceaf2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3151223d-0cbc-41f1-92e2-e1dbacb6fb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782b6928-4bfd-485a-bb4f-28130f7e51fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9db73c34-e8e7-497c-a9dc-dc264c3bdc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38a168d-b00c-4f8a-9fb3-350ccfd2be55",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c46b6d-6486-44df-a719-dbbe47ee0bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38a845e-c600-4138-81bc-dc09f96abc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1363667-14f5-4ca6-89df-4e5b23324007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1585597a-d94a-4510-908b-1719c51da075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ce105d-baf3-43be-8aa3-4c350f47f2cf",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2236b89-630c-485a-a27e-56e71d446c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf2acae-51c6-45c7-8663-1b2eaea8f8c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d7426a-b6ff-48ed-b2fa-928ced00d62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5070f22d-9245-4a21-8d4d-b1f9a3c69be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0857883e-1c44-4d2c-b248-c0052dae8a1a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e42186-3cda-40d2-879b-e7de5f941134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcb7a6d-2422-4dab-b412-161a1a0849b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a58e7cf-8f79-44e8-946a-d279efd55ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32fbf661-063c-4237-833d-981bc628856c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3a162a-9042-4aad-8dae-7a72c19a9acc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9801b736-2fb7-4761-be5e-93c400dfc0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9990911b-99cc-486f-a121-852a14db1e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42b919e-6110-4ee8-8261-7623c636d01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78271fd6-c6bb-4301-a337-9ed8287c052f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab57cfc2-3d57-426c-999e-4412d983918b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d73d4d0-8b6b-443a-b640-51982584ed3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfaadaa4-b359-4068-a489-3e13ac473120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85927d5e-9254-4087-8af6-5df9f2dd96f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b81efa99-ec9e-49e1-a5d7-7c3bd9d29d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5828e7bd-b9df-4424-abad-66fc4cea68a1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89c2cac-4e62-45b7-acf4-7bff9706a11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2063914d-68ed-4fb0-bd06-2b6b7bb9c742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cccf6b-0fa9-4e76-8a7b-0f0f3da32eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afb29baa-bf06-4225-be9a-b8f0c00a1cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6b791d-4567-4f24-8e03-1f18ef953878",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71817821-7a51-43cd-9291-694afddb3b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46446bf2-4b25-4928-95c0-807867d52601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419f1a61-5642-41cd-8b7e-7a86e86081be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df9368ff-eb61-4395-a5c2-d301b4283abb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d81db0e1-c5b2-429b-b550-b99d17e3d29a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d491a70-c5b4-4aa7-85a3-0bf5f1bea598",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb6c483-5674-4fe2-a92b-cff8829cb6a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3a49c2f1-d86e-4585-ad5b-88674b3343f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddec2f2-5c84-41a1-90dd-55d7b4af2a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "695b9a55-3050-40b8-9baa-c62bfc583c24"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7caedbae-c2f6-40c8-96e4-63530da3b303",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7538a43-e67d-4f1c-8c5a-d6604f1fc610"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a45a082-3e63-494e-b09c-3a8d2293911b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39ec9c70-ef28-40c4-ad74-cbbd78f1fdec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9206a7be-4e1a-42e4-9578-8619122be941",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "11ada8c2-65fc-4a98-8cf4-bb40e90c0511"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "790a0d4c-2591-4ce8-8278-27871c1e7587",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34dfa872-5447-4cd2-80ed-6dbf9cb79f21"
            }
          }
        ]
      },
      {
        "id": "86c2df0a-a312-4f5e-b375-abe0e7d37638",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bbd65b06-ee8b-4e84-a5f8-f21ba1f6793c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9dc5ebba-e96c-4bb2-b570-c4f85628d2b2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a93e1bce-d18d-44e2-8112-352cdf3bfcdd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fec1ac-9f7c-4043-be6e-6bd39a90dbf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6e895d-0610-498e-819f-5399a20d34fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532af29f-19cb-4030-8f05-f58c2a9bf62f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4db78c5-7275-4308-8635-384cd4f8a1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a513da13-cfc7-4cbd-806f-33cecbc524fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0119fb45-2b58-430f-9a2d-7fdba3deafed",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce56ba6-7818-401c-a296-cb7f6edd6592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b436ed44-2ca4-41ca-a01a-0b37a43ccda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c446c69a-552c-42cf-b5cd-c75d4b70286d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41fc357-69cd-4f3c-95ab-8447f27151e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13f0727-75af-4045-afc3-e2e2bcbb2ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e8834c-51ab-469d-a5c2-43dabe1e7a4d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f7e172-579f-431a-8912-3591a3b082a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e0d8d8-16ae-45c5-8be0-25abda20fb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c029776b-a042-4840-8307-3d5d525b973c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696d9436-78e1-4070-a26a-1d3ba6fa2e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bbfcd3d-9b18-4221-844d-6d0881417a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4024ea-1bde-4bb2-b2f3-330147abe99b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0e0593-64bf-4356-85b9-8522e4c34e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2c695b-b68a-433c-bd00-9b9221c773bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a74be5-ea38-448f-acef-9bd0a2f08059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c80f57-0d5f-439c-ac44-935a7936fe5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54fc0a9-85fe-4435-9850-fa34d8a80e9f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bdc26c-c02f-4a4b-b0e7-fcfee718bc1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f729705-7b2c-47e8-b9dc-17a61a8a83b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd84f3e-d473-4750-8b83-8de772638a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977bb8d1-3199-4ed8-913a-a4021696c55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512ee4d0-07cb-45a8-a0d1-9ac8c7345405",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3896ff-5f55-4658-8f2c-02514f501201",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5702e214-2dbb-44e4-9d47-bb2e927640dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e91ef65-90ef-412e-9f45-c5d4fa6aaaac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f0f83b-0755-4ee1-8a45-d6d32ab598ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f69757-bd1e-43ed-a5ae-59feeb2f767d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2a5bc5-bd45-4e48-9460-aea6c2871f37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0f88ac2-f0b5-4088-b326-4093f4e0626e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52eb7f26-3a6c-4868-9298-2040f007538e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a218ee-4beb-4805-9398-c8d0766e87e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cc668f-2d42-49ce-953f-490f1c9237b9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15464977-db06-4978-bf34-62a789bd2935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd369a7-653a-4f87-890d-13ca98090da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881660bc-2ea4-401d-8beb-866a0f949a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54c046b-fc55-4865-a340-9d2615a9f1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c41728-4c36-4826-8248-f7a7e1f9ccbc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266b33ad-eb6f-45bb-acdd-2bdab59937f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd42f4cf-6979-43aa-b92d-61c4172de925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a399b34f-25bf-41e2-a89e-1df69eb4011a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc3557e6-aea4-4650-8f26-37961352e89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5c9e74-750b-4892-b23a-43fa95cd5c2e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d107ef73-9bce-4d3e-9f46-66c0f2b9f7bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "972c5deb-76b7-425b-944e-e73f34a2c095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197c6f01-c438-4d35-b895-46c436d4a439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1912c51d-7102-41ea-bfb2-064b516899bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5648022-e700-49a0-8fac-c8701498af14",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1deed039-1997-4dad-ab42-8d0432ba84d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "438d4b78-18d5-40ed-a3c5-869b830b5644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7867a7dc-124d-41a9-87fe-6360fc7eb9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7084adaa-89cb-48e5-b917-0c4c4a7969a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2eac33-690c-469d-8e72-6c7980d4191c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c632345d-8e77-4d9e-ab6d-f1f067daadd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c331ba98-73bd-488f-8692-25354eb57e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "738d2655-80bd-41fd-9ad0-4ca5809d9919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcfcc9c3-949d-459d-b08e-55c26f902630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78efa309-72da-4e12-867a-ffe42a716f48",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c0d654-5e63-4e7f-a2ee-b4e4e146cd69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "263cd21d-178a-4963-967d-571db39660ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0049c098-ec47-4823-b909-b3989c73455f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485834ac-94cb-4f8b-a2d9-2268c9133a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0b8421-6e52-42ea-be7e-eb2cf061fcb6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181c9c91-634c-46fc-9861-e82fd53c01d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa29dc3-3272-4908-9150-4a515c960854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "278f117d-6997-4771-89c2-e630ee0f3f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96af3f0-8bac-4878-ba80-3584033c041a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686cb8c4-df92-4099-acc6-9593e2909ad0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74743dd9-4239-49aa-a1f9-516934aafa37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33fbb4d0-45d3-432f-a3b5-50c76ab85ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3333ef7e-2ea5-4291-9e67-71f112ca13f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b952f527-2cc4-4179-9c8e-90baf040d58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a017811-9f50-46a8-a451-c12ee0442a1e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283434d4-18cb-4fdb-8450-d5243dc9a8e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa48cd16-4e18-4129-b20b-16a75cb64cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540b8a4a-e6ab-4d56-85f4-1d8af32cb4a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b623c480-1d5b-4aa7-b751-1469d78627fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47cb1b3-3770-4c0c-a6a7-c5e80b4d5516",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f7e31d-49be-4fcf-bbb4-199e9d6dcb01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e81e4a4-3f9f-410c-b40e-44cdc058343d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b726fba-259a-4842-896e-95143f9612a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb45a89-ecb1-46c1-981b-73ca20ee0a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534241f1-34ca-49a3-a009-0e81271de5f1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722e3eed-f72d-4fea-81c4-ac2d2c494eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7915619-c7e9-4988-9cde-b9ca87ed7013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00257c0-ea00-459c-b97f-ff2a67d97d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4c3476-54b2-4b10-9f62-1ce324a4b0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f940af-1e5c-48b1-a5b9-3592ba55d9b6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206ecf28-8d8a-4491-8514-d7369f96d613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e839e3c-f583-4bc7-a89f-40650df2f524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cff86e-a375-4492-96dc-cc174843de92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d64f0d-e3d3-4f4a-8011-3fb854029317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9b0694-e49b-4732-b5aa-5e924fcdd01e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cd4e3b-0e7d-4ee1-bed5-ed6a9967a98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957026fd-ed18-4cb7-9d37-c9a9b662471c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1422ea73-0209-4a5d-86bf-8d52a11c2738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935c520f-cebf-43b2-b569-cd10a75850bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f89333-489a-41d1-8911-a04ab3e20f79",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61644cca-1ec2-4251-8e0b-fa9e4980cac6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b82dad2d-13a5-4fa9-921c-caf62baf802a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f198ba2-8ed6-4bdf-81cd-a235a9f52849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f3e613-5c54-4110-befe-8d73f25d0e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f03c24-cb09-40e4-b19f-6155fbd98592",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f99e62-dd87-4fa7-bfeb-b6c2057d7694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e401333-3351-4fe6-bc8d-2a465f3a04b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "894244f2-249c-4998-807f-ea9e07c6095e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01e9e43-c304-45b4-b112-14e812a1bb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2e9f34-4721-4332-a07d-3146b5dbec47",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18a3c4d-9298-4994-98f6-19201d5c2153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3209d63a-771c-4c40-95b9-24e889a15248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45038d63-53a4-4b6c-9038-bc90d7e2a605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d603f442-f30e-40bb-9354-ef47fc4e8eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98d17db-7465-48a7-bfb4-b6882106aa4c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc42c93-b7e6-4c61-be39-ee5e50be2a48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76415056-f173-40e3-bc8c-c8ec9d80017b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2709d8-eec1-496e-8e1d-5164a85bbc89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebafc67b-c628-43ff-93b2-ead0ab4fdc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63da01bc-4876-4ab9-b3af-58d4f867d614",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b17ef0b-cd38-4723-b436-e14171a9df6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b22c9a-31a5-4b08-8872-de81e8b3d751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f5da3d-5ceb-46f0-88a1-cdfb7abcbd06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253ddd14-1366-489d-b290-0992cf4c7a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae04e89-88dc-4d06-bc83-2c24964e226d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed577d85-28ea-4ff2-8491-da1046664171",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aee7ceb-6031-4726-8445-1e8d6c5b629f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c1d478-e6aa-4998-bf31-367104736cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007f6bda-cff6-476a-9c07-94ba2fb439a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5479b636-4d7d-4b7a-b05b-738951257cef",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7f86ad-a61f-4c0f-9ffd-940c6bc2d86b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2effbf6-b7a8-42ee-8c23-93ae297fb7ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e175dae-1b09-42d8-a6eb-5f7f3e0b1b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32b1cea-bae9-4c63-bb8b-a000450b0023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2553dec2-1bc6-4c62-adca-f1d0c1233fc6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46aecbfa-5540-4a79-9d10-70f2729ae606",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "485108cb-5c37-45c0-958f-c46e771d1fc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b0b52e-ae90-4255-a5fd-11167ac9277d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95da9c99-d83d-448f-92da-9ee22ac5224a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dece7957-f6b3-45d3-ba4e-a3559ef3da99",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030272e7-fabe-4284-9d22-6e206941545b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "517f453e-5372-406d-9054-9419f62ea138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bac423-b888-48bb-aa61-304fdf7a1c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0991f24a-5d82-4d62-a84c-3a8b7b9f5047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c2ed23-85b0-4ebe-9afa-b134b5caf083",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbadd7c7-5cf7-4d24-bfd7-0f6cfba13715",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5be4ec6d-7a98-4885-9973-f43bd6ecd501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2feb8aa9-598a-42c3-bf63-a933ab3d8654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0890127e-3bef-4d17-a7ba-3a48f6f3e170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97492a8b-9391-4ca9-94f3-cbe31bd7ac78",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5bbfe1-63d1-4612-a997-b97434f71860",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3c633a4-9813-450a-948c-2a8c1d423081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c99d0f4-0ff4-472e-84e2-b0e1732250b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c859176a-a3a9-4d79-9bce-ade88aae8f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b83eca-2bee-4394-a99a-a1f9494dba97",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fe0964-775c-4d73-b5b8-524ba7e7b7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a58ed1-32de-4e8e-97b1-092e2066a878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cd8468-9f79-41c4-8492-b0937357b98b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccca203f-19ac-4e4a-9683-00c102ab4e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d1430a-5891-423f-a504-39fb1eb031fc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24c182a-affc-4c85-93b9-5b7a605d7a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61543905-4160-4204-ab71-138c221656b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645cf650-17d3-44f8-bc5c-0ccbdd0bf6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728fe464-996a-42d9-9d44-4fe96e338cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1779ef-51a0-41ee-933f-c33c7ab916eb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f40ec2b-2f5d-4077-a41a-564133240466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f5a2ac9-a5cc-41e7-97a0-5b42423bcef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d83cc6-1d9d-4ee3-8826-31b99f97b8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3893f6ad-4944-48a7-a146-f8b5796d267e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747e3f5f-fb08-499d-9db2-e1c02885a21b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53eb60f-de34-40d6-a472-bc3dfc1e2ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a25da91c-9190-46f4-87e4-2f2cb41780d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670dd823-da50-4139-957b-5bb65bdfada9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a3b82c-edb9-4bec-850e-e28bfa33610a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f36f460-c478-4d9d-886a-9db39c096b5d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4db293-79df-4104-b0b1-1c0121429247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ae7e76-14be-41d9-a426-90ce96b098ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1691168f-9329-4f32-b1a9-ae0b4d68e533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6196cf-ca97-4be8-98fb-266280e9802c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bad1b3f-5f44-40bf-a56a-d185f6d52797",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c877993e-8a55-4c99-9eec-ba2bccfcd050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1cd45b-ab2d-481b-a299-321b0be1fc01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad97d366-ee78-47ef-921e-eaac73870d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec43ae6-0c65-4b66-a35c-96ff6d5ab9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8db4d4d-ee1e-421f-8523-42a01364287a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26a909c-40b2-4a7b-b740-30aefd4837f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c8afdd-e586-4a96-8280-ec6ce61812cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be58ec6-a879-42bf-a4ce-93a4f3f8831e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c19d50-7e87-4d00-b36b-316f1b17ca2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e421a0f7-683e-4d5a-a63b-a78f55e22946",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be627ea-f1b1-4f0a-aa6b-a66b973d725e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d2cacb-2c80-4505-b7b6-1e3af39604c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c37298c-658a-467c-9149-f5fcd7e74a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84a7a3f-bd62-4e5b-b7c2-94daaeb953a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858c6af4-ae28-4891-b216-3d7d3fd5172b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7892e0-491b-4d30-8748-76af5d237f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9100bdca-8301-4294-b35d-b8bb98441345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ac4c0d-0564-4850-9ec8-025a9f59bc97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840f1616-d621-4834-9e0d-789d0f23dbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85864b11-82dd-4bd1-b7bd-73840fd1e8fa",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3561da9b-6db2-4800-9279-f8b0d6665ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86de62d-91a5-4baf-8c57-b6c647465260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47587024-9166-40c5-a911-e438a82e656f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50563f77-ecc9-4937-a413-a3745b6ed72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e71db17-55a6-4af2-a88c-e775e05921ec",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8820c0b-f926-4822-a764-cf6bd5d02c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1fd6889-deed-4888-a988-a888e0e25830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1b254c-dcc8-4693-adf0-25cf512191ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7f2462-820d-4830-b242-f1b40731470e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228e3474-add5-414d-8729-ef3b46f3ccef",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cddcab-2832-4e8a-b42f-0a4380575143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4182847-1372-47f7-b856-701c29e2ea01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbbafbf-7c31-4cb1-b20c-6819d8d26bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f6d962-395e-443d-a3fd-0a6cb2ffebbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79866ae9-0f87-4fc2-b4a4-9e2733257941",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4856bb7a-e5c3-4dab-88de-4bd4d13337bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ecbd296-ac64-493f-860c-ca9b633a13d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f015c062-fc31-40f7-a186-26b32808fc81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59e903e-c3c8-42f0-8e81-5913d5f361a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b679490b-5a77-4025-ba63-598db639ddf6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c39238-41e2-4564-b38e-9464563bd413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e75c25c-b5f5-40e7-8d34-6a459e4af63b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33bbe43-fcd4-42ce-9a41-a8c6dadcaf9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "210c35cf-0351-4673-9bea-5efc3766072e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9da9fb-40ee-44de-aa23-fec02541b8c7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756e8ddd-221f-4858-98f5-b76db473a917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130041c6-1a3c-4230-a310-1f7d33652f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "355f7d1a-40d6-42f7-bea7-4ab652b7351e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34203440-34cc-473d-9451-2ff489134cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c147401c-52dc-4428-b638-3586908028f8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f4b2e0-358e-44dc-acb0-c835505e8480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f25c346-f473-430a-a895-cca9242a837d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e7275a-8219-494f-bc05-6d5307662d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef76e05b-364a-45b8-afa2-5f841eb463ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45dc450e-0e8c-4bec-8957-c3788a488fb1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aacaa65-2b3d-43b8-b342-67ce831ac38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34878c27-c562-4a9b-8b92-1b67cfc4f74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787598a4-90ab-4808-8dba-1b763c7232f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59327b72-faa2-4fb5-8d5a-ca181c02ed6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174f225c-7fff-44f7-8b19-c163b22b930c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23ec247-19b5-4a9d-9b98-548e46a68f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6186fa1f-f898-42d5-9809-32ad0a54788b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "546a37de-5f77-4cc6-a124-aa653f2a5330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb40a8c8-2ce8-4d2e-b32d-27ad0e8f956f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12cce63-9b2d-4ab1-802b-656b5280e1c0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e11c295-8a3b-495d-a60a-4786b0a2860b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5187f3e0-6519-4d91-a8fc-8dfa0a3e67be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98006681-f917-4bbc-a252-105d1ed84c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7929aa8-e699-40c7-86c3-b87507f88286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca5ea0e-c0a3-44c3-b435-eee5b8f3a7fa",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53f03cb-ff71-4ece-8ae7-edd3f90fd090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72df52ed-cc41-445c-a570-f95ff616b475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e17e6d8-b5d9-44d3-8142-9f8db8d2d893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41122a60-c38e-4d12-8b48-431d35f2bf6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211c5b74-4725-4ab9-a27e-5e3342ddad16",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea106d2-0cbe-4552-8d10-22e99b5973cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5ac28a-2e79-4198-857a-9b8693cef7c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1921feb-cab8-4e80-9a44-7d5bded62ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5926f11f-dda1-430d-b6f9-af12e3d14d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b4de8e-c5a5-41da-a369-6eb28cb5ad46",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c70cc86-1118-445d-a86b-41b089e55fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f81aa94-523d-4bae-8b66-68c87cf3a1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8320acff-e481-47a7-b349-2782671b203e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ec76a3-2dcc-49e7-9094-1bab9b8cd25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814ed064-f1f5-4bc6-a985-0bc841b820a9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e39c3ef-2151-4de7-a90f-90f1bd33fd06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d00009-0960-451a-b317-0997bc509ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19887c9-1e94-4b80-8a43-b727cbe66946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43656fc7-c572-4012-a157-d23b03be89bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f96531e-1fe7-449b-b9fa-dc0c85279517",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d07c0d-e18e-4d53-a4c3-1e7a36c9dbd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e0d528-dbde-42b6-aa52-36358992fda1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8006bee9-7dd1-402c-a182-f43c40337840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746a3eb7-0bf2-42e6-af09-cdefb4e8ba70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce1158d-fa38-47d3-9de5-11753caf1ebc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bfd1bd-eddc-4231-a972-fdbf24b6c3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d082f89-6ad1-479b-9412-690b5f430626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955e58ea-64ee-49e4-8b17-ffe39fb3c0e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81f9a48-ab6b-47cd-a861-57a2ab5ada8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77399d18-1f22-4b66-a181-66ea4ad6de60",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b276e0e4-2d12-4536-a570-79c3b7afbd17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33345ab7-f13b-4148-a49f-4c56e5b6c614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3949314-b569-4ea4-a51c-6c4e169b36cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1126645-300b-436a-a1a0-863bf66ea5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b95ce0d-4484-4499-9368-ad613dc0ada2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65edad54-1472-4375-a81b-c8e57e0b925a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622760ef-1f55-48cb-8dea-da6a745b5803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41874eb-73f9-4cf0-a56b-a537315ed07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b244c50-3e9a-4d2d-806b-7462f60a2844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776a84f0-87cc-455f-8348-d4be6564778d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66daf5c-9f15-49ba-89ca-8533e163b325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13fcedd2-acfb-4703-a053-3ddb01c28d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0fb01b-4c17-4890-a147-adaefdfd1f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a2951c5-37db-4419-bd0f-fde8637f89d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41465a6-5b54-4191-9c9f-107fb6fa4b61",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7675a806-686d-430d-b376-b7f7a9beaffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe9112a-1958-4195-b5ee-e4f3f17ffa33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd9b6d9-5abb-4606-bba0-ebb202157b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0027d0-f895-4b68-818b-ed93f25ee862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af99d801-1095-4160-a4c0-97e15120b2c3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926dd2ce-b379-48ff-8012-564e0f94e8d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6ac606d-c92a-4fc4-9b72-5ae8a99f624c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75a0f0c-6a24-499a-a29d-d6d956f08b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec889cf-a675-4c64-ab20-0362a0e707d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013073ab-9487-4e13-8a83-bbc432f192b6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54599cb-cba7-478e-8f31-f78769501d3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bdea35b-d83c-4fc4-be6e-dbbfbb08b778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00f48c9-2558-4d03-a703-71003b19d2b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4c450f-7298-4df2-8236-d5481b9b2bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b9b0a7-a0dd-42a7-8a8c-5b28e8704b16",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e33d05c-fcb9-46e7-85af-29209bfc78ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "790e206e-408a-4dc8-92e7-4a6ebdf61b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1029f99c-c5d9-44be-b927-fb502f843a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38765abe-878e-4718-98d0-2fed0cc0313b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399323c4-47ac-42c6-9e14-84803a4b2c50",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b1bbe3-5698-49ce-acff-83380701dfdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "617bf447-65b4-4e47-ae03-08bc15120f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcc0ff6-2fd6-4783-b01d-c2279aa1ef53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af22680-abd6-40a4-bb74-a728fc345fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add0d78a-3550-4c54-ae27-e2ddee2bce4f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530bca2c-2c5c-4f2d-9603-c611da3898d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cf4adbf-76ed-4e0c-a39f-e607292a36c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61fb15e-706a-4d05-948c-2afbf2989af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d22bdcb-33ec-4fe9-a750-a448545b3ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d6fff8-93e1-441f-be33-250c6981a1b9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c3eaa9-c79e-4dbd-9448-a19950983a2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4b17de5-e934-45cd-b693-7ba0551c34a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "105fc141-b753-42d5-b35c-cc3e6165cf13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ef2207-0686-4bf2-b917-e3c4b63c55db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2a29b6-0213-4ecd-b3c4-4cc9ebd324e4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b08bb8-0fd3-4ef5-89f3-a8a2c72fad94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aa76d7b-952f-47c8-8b43-9ae5cdce27ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84b69de-4a65-4358-809b-76d10e12a866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532ea32a-21ae-46a7-8260-6d74bfa11741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee1135d-7fc0-4698-966f-9de65cf7c638",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03435a9f-af75-4efa-bcfb-83e83e30b51a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d27ba50-b16f-480f-a45c-4b4385f485f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dcaedf-2b6e-4450-a9f2-ec14caa2b50f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f296278-eb9d-434e-8373-5ca3e144a275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742ae082-099a-4f71-bb26-f1b13e29af6d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdfebb4-597e-4554-bf05-25d40e3e8055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "817d4b99-6bfb-4eef-a319-0a0f39a7fcc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69cc53a-d9aa-4bcb-ae8f-1a626a4f0d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55490624-d395-4468-ba1c-3ff0c2ca0dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06bc0dab-6476-4f36-9287-855eeaa6a9d5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f24518e-822c-4656-bd4c-e77288aeacf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74cb9ca3-9cf5-4907-9b8a-ce907b54ff8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b4c33f-a3e6-4347-a4e8-12990ccaae73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70590d8e-1ad3-4ad4-a488-3bc6fd2c2689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5e31e7-b23a-4f32-adc2-6d57ffec0aed",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4e48ae-824b-4fa0-8a80-3766788b2a67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd32d37d-f452-44d6-86d5-53839a768fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc6a2a5-ff48-4498-8222-6613c1cb7e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ae7ccd-2da3-471b-8278-c5d8373ba266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0420acdc-2c7d-4701-9a3c-d553b3b9fd28",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59421694-f12e-4690-aabb-b72ba198548d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8488cb2-5ca8-48e5-a189-a0dc2e977fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab014390-8a7f-41c6-846d-3e4ab024c789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04da8fdb-555f-4386-a9a1-10e60ed40ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df5b77c-d1b7-4ab7-a6dc-1c9fc7ac61b1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e57d459-f584-4153-af78-364f67d1b50f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c7af79c-d173-4574-9694-c69acd4ac8c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67094af2-1939-4921-b4e0-13f0ede39e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8e2005-2683-4c34-ae5c-c90d700c0667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7c3be0-1bcb-41aa-afe8-15110e844e5c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e891149f-fde2-4473-90bf-7130f1412e41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae35346b-3db6-413c-a814-44d5cc512bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98dc7db1-e3b6-45e7-b046-9d058d0ebb19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4fa386-e583-454a-99fd-ef0a056de8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c68570-7059-40dc-b53b-d0b97adc5514",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f7479f-2ab5-4c68-96fd-2cd91fcfa703",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a11b8271-bbab-4f90-8205-0051c9cc3f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b47014-e463-404f-ae23-fad2b984e979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae0c509-4ab0-4ccf-938b-42110599768c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ce1501-63f1-421a-9e9e-ea9811e21d48",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad91a20e-fb9e-45fd-adcf-fc4a1cce56d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "160d005f-e7ce-4943-a76a-cbe2c9541307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "207c4c44-eeaf-487b-bf19-35f169a3c2f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ecfce34-dbc2-47e8-80b0-98495f7d033a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49977c3c-ddba-4bce-ab65-60138f57642b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a97ceb-5da2-430e-945c-3aa6eb2c7d00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c556b869-d3f3-407a-b3ad-2757d3b552c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4db9f8d-c7be-4f7d-9e5a-97713cc14cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6673c4b6-6b5d-450e-bbf9-ce320b366944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73fbab0-d606-4a6a-b2a7-542c8ad4c66c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3eac04-8928-4cc7-8e0e-d1bcc86644fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53f8b501-1740-4acc-adfa-4f516c8a0a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30bfaff-e006-45b9-90c7-8bf2a42f5e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc5175e-8619-462f-bbad-89ab1fe8a114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03bf57f-ba92-4cfc-9ba2-2d4c133ce583",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eebf18f-50ab-4200-8760-61b93a7c69ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63359392-5065-407a-bc03-803cf17f7017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f9d31d-3b11-4394-bcd6-57561f2b8a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0805c6-b6ad-49b2-a72d-7cd45b89cae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0586c4-72b5-4ffd-b2d3-a0ee7d9eef7d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80a6bca-e773-46ac-b19e-b7e3cb77dbbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37cd78c8-b216-4a68-be20-8cd6632d8c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aafaa7d-a457-4670-ae53-dc9b37b11680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74e0174-e0b8-454a-8cb8-7e0ddb831d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d12844-5136-4d7b-9da9-2492d7b97968",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716dd0e6-30e6-4cc7-8758-f073e4c47fa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "508bdcf0-7cb9-4993-ba16-ba72f3558ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e621ae-9e43-44b7-bd27-b496fa1ea1ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73dbd7d-6814-43a7-a802-ae0f72e6a0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe13832e-5db9-4cc8-b0f8-0cedcac4584b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a524280-875b-4f23-be47-70026ab45ad4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dbdccfd-cb61-475c-841f-952b04698520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131123b8-2f23-4951-9388-077cf6c34f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9499dc8-623f-46a2-a1a7-f78bca469621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883d20b2-56f7-4e67-acff-657beb0a7c42",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d39e51c-f191-447d-b794-2a58bf22893f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1301a6e9-39ac-4dc7-b80d-46267bd34883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf44054-af23-46be-888d-8b87ad5a1cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b52546-79ee-49cc-93aa-4438f64d5fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddc2440-609f-4a2a-8d25-113b4ea85d36",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4569d5c-77a7-4147-86e3-c8ba5cb8a207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec73f048-a4ee-4b5e-9d67-7245839b7986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b7a903-007c-4fa5-a51e-7f15b24775eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd02c642-fdf3-4219-a09e-53402222ada4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4928161b-4084-4ed9-8236-7b0678ba498d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c535329-24f1-45d6-a895-5da779efe44c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec4f4224-95dd-4c2d-9d10-a98e7a145cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cc0a13-43e3-439c-ab0d-61693a18422d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5948b567-5f99-480d-9d41-b6153db758db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941ef36a-e7e3-408f-b009-5381047936a2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9a2bb2-fb71-4b7f-a094-78925ce72c0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9bc2a8b-4b8a-48d6-9880-6bd883b1e873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7e8bb0-a169-4c44-b809-6550ee960166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32dad76b-294a-4557-96c4-d1e76a2a2104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea29049-ec79-4e8f-a4b8-b460cc99b72e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cd6952-ab8b-4a35-b2ef-c4c26292b6e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f17d12c3-62a7-49da-977d-bbda5f39e73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39206d04-2430-4c9b-b336-119434f600cc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bdd8022-a32b-48af-b971-2c22dca07916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f59bda0-7c1e-4d60-b728-b2cead53f36b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b337a1b-2300-46da-ab9b-e4352f5670b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e07b6fa5-549b-4b6a-8060-309ff73fa686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e246e119-de27-42f5-9f15-ba09c01ea7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afdaac93-8d3e-40d7-baf0-57729f0a3cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be118d68-b704-4d1b-9ae7-5522bf1a8eaa",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55342cb5-a46c-479b-b0b4-5f6ddd63098d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad89b434-ad76-494f-9af1-caef7f3791a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8175fa39-df10-4afc-a929-c3b25b6fcc33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0102a28b-34b9-49b7-a190-e1f76592d180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dba506c-617e-4451-9f1f-06724a52280a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44caad5b-bd97-4759-9f78-8f38505f13c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9731537e-5af2-48b5-92ab-c7141e1ff4c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba0bc8b-0341-482d-9689-af1370b47430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f772e1c3-fa77-4754-a6ca-96cbfede4154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805a618c-951f-4d3a-916c-8ca907757832",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9626d0-ec5e-4521-9b30-2944089ecfa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a38e4e6-6a8e-4fb3-8323-bbede42ed209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5add2ae-86bd-4b99-a07d-a1a430e2acb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25cad58-0d42-4a56-b10d-9400381a5540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0697091-b86a-4b60-a5f9-948aa8fbe2d5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d97a069-8787-4cb2-af5c-e3a01c57aa10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54f3e149-8465-427e-bea5-860050b06ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26f048f-1bd5-4f44-8099-6437bb1aff20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c1b14e-e011-404e-9b7f-36816469c9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bd1081-d4dd-4db2-87a9-5e5ceae94ffd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7786eafe-2d4f-4c5e-a317-a538a95544e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a32ca470-8b64-47d7-9cb5-e864e95243bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4849efa5-e187-44a0-9a82-9e8e94aca60d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55628e9e-1163-4d51-aa8d-0c1d16e23a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e942c335-a56d-4a53-8778-6d7d81a76297",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a76cd92-fc5a-43d2-a466-ddb35cac265b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "245ddfa7-6c82-49dc-b1b6-41f6b80e9025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704c481d-c01f-4012-a6b8-f7c68178ca0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd213de-2836-462f-b8de-9afea087162d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b85dff1b-4da2-498a-8fb4-4496b529f7a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "366696ca-52f7-4e40-b910-b830bd40dfc7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3376fc80-3d90-406b-ac87-31f5b7185960",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d2d7f9b-34bb-4bf1-90a8-6864a2879002"
                    }
                  }
                ]
              },
              {
                "id": "d8ea9311-6f0b-404f-86cb-4f2f91ca1090",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be4c6fed-5fa1-476d-9565-9bcf017b0710",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b7b958-77ba-4f54-8f35-7a7550b164a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cae8e07a-9298-457e-83a7-3a72c180b743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45fd6ed-3402-4287-8223-1bbc10ac8b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57a29728-7577-4ab6-9290-2bc40cdeddfa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1a0e98d-eea6-4647-9484-1922963ee251",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4dc85ff-25de-4723-ab6b-451efb2745af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "274ea5ed-5079-43fe-aa18-422953452b83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4683a63-60cc-4f09-ba46-dfef1e722f70"
                    }
                  }
                ]
              },
              {
                "id": "b6c52f1d-0ad2-4f5c-b7bd-03d091ab6c83",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3d62d24b-c2cb-4997-b73a-4afd4a221dea",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72eb7000-0c78-41d6-9f66-c7d2f2696bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fec23722-6ff2-4153-a310-e8808df5f843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbd22d1-80f8-44db-9b28-cf14a716c0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853fe3ad-b1e9-48a9-ac97-4ff27d17c331"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8f6f2286-50fc-45bb-9f8e-497695ea753d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "497331c2-650c-4fa3-9d7a-98a7b7052949",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c294e20-5b73-4e18-8252-116ee37602d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5ac05c5e-21d9-44c7-8634-e958e11a5a00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "351574db-e193-4c81-b607-88b53950b6e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28708961-be7a-4710-979d-331ddcf5263c"
                    }
                  }
                ]
              },
              {
                "id": "965541ac-bda9-42a5-83f3-a198deeed694",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cc39038-3269-4df2-a84f-eb128b96852d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "90da834f-02dd-4379-9add-c51cac50dbf8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0da57487-1d53-4f33-b7a7-94c951805b27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4e93cf8-539d-4b70-bf16-befe875d6eea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df6ad296-ae5f-457f-9dea-d3a27a671e62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6a1f3b26-d9d6-48e6-b65b-94d7831f077a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c67b870a-6cd6-4334-baf2-d9b93c177f01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2434843f-e84d-4bc3-a10c-e9274d130997"
            }
          }
        ]
      },
      {
        "id": "4efa4610-805f-4ec7-bf46-e42ee83b4669",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6dfac18c-cbd3-4b20-a08a-4785ae2b2e08",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b685b6e-7fcc-4175-80e0-7862fe37eeb2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f983adf-8002-4295-8bfb-d1ec4e284461",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06105553-f009-4bf4-8c28-4d164096f1dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "51c867fb-1e4b-4677-8457-f2615b4db54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa61a0b7-cad8-4868-8ca3-1f78613dfadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edeb546a-d17d-4f15-a758-b678d9bd7f5d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51aa1ab1-c7b5-419f-85e6-b84873e924fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e454462-e0a3-452e-872d-cee88da2accf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eefd9910-e48d-4dca-9d4f-95c094b0c12d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61249e0f-d651-4383-bd10-b9eb0a24ba8a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "388ad75b-330c-4e3b-8da9-0082c63a6310",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "55841322-a9c2-4542-ad3e-ca5aa6604ff8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e24ddebf-24f9-4b3b-88ab-ef3a359e9d92",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb9d5d5d-224e-4df5-b48b-d8c407cb830a"
            }
          }
        ]
      },
      {
        "id": "1facb286-4d0a-4499-bc35-605169fbe24f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a99755dd-0e31-4b7b-9a5e-aef3ab2c1c4b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "972ad08a-a5ca-4a76-b498-eb9ba8428a17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3aaf0413-2022-4d9a-ac1e-631c6feaf6a0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c9f567-b21d-4994-b76f-8144559555a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5da660b3-e50f-4b9e-a3a7-e2d393881e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e68fa97-2d2c-4ad9-915b-71972d5f73eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e435e88-491b-4d02-99ee-d45caee54bb5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59f424fc-b4e5-4eda-b1c4-e6bcfac77a35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bdf3372-81c5-49e1-9f88-c00e0b650381"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3220fc58-5eaf-4496-9500-d6abaf25820a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f6924f9-f034-47d5-8fac-eda81ff75562"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88fd4ade-32cb-437c-ba32-9cd026144f09",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "74fc1209-55de-4449-a00c-84a02a75548e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ca5c18e-b0b1-49b8-99df-92a1271af24f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8126e75c-f6a4-4f1a-9b4d-831486ca63d8"
            }
          }
        ]
      },
      {
        "id": "6594c46f-9d8e-4ac1-b48a-48948062e396",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8ba344aa-0e7c-4367-a816-e62e8b526458",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd9a2375-4dbe-4f93-971e-68361374c5bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "787ca980-b380-4852-ba04-71fde16787d8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6204af18-268c-4fac-bbec-7b441866eaaa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ed1addd-6ada-422f-bda8-16b79ef079a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de85b14-e727-4b15-9b20-ec7f84529e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4725d958-0e3b-470b-b996-fffcd590a979"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79b9f0c1-1909-4468-8561-66ac86a9bdcd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abdde303-5335-49cc-91e9-3367356a3dd9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4068cd6a-d7f4-499f-b60c-055a3ab28cce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ff1201d-2cfa-49e9-9de3-c92971aecf22"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8a076dc-0e23-496b-acd4-f804c77c913e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b8c27a90-d3a3-4ef7-872f-a2bffd03154e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a04ba0a-a5ee-4f21-ab5f-7b85d9ce0e9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da40bf90-aa5b-4a34-bcf2-9362de24cef8"
            }
          }
        ]
      },
      {
        "id": "79698e07-a36d-4243-a6a5-cdce2a24bbd9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b6d1f82-b4f8-44d7-97ed-bb72a90e57e9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd9289c0-f646-4d2f-9c9e-d692f3cb0e67",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fb78628d-7294-47b8-b65b-3f6986dd786f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e5a32e3-2499-49b9-8141-bdc3711491f5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90bd6cb1-f099-4ca7-b503-0d19e1725730",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 361.919298245614,
      "responseMin": 10,
      "responseMax": 26255,
      "responseSd": 1751.8646178004935,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699922063088,
      "completed": 1699922175426
    },
    "executions": [
      {
        "id": "fc34d056-eed3-4fb6-9a49-70cec0cf1131",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4cda1f2f-a9e3-4d6a-b816-5decf4801edd",
          "httpRequestId": "217f2dd4-8856-4053-b8b1-320b0370c106"
        },
        "item": {
          "id": "fc34d056-eed3-4fb6-9a49-70cec0cf1131",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "524eca0e-df53-4ce9-ac85-847ef34a41ad",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "b2fcbf04-700e-43ce-b293-00d5ecc8d838",
        "cursor": {
          "ref": "fccd6a76-f3a8-4fc4-910d-5db78231cd0f",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dfe880d3-cf2b-45ce-bf15-835331960a91"
        },
        "item": {
          "id": "b2fcbf04-700e-43ce-b293-00d5ecc8d838",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9400cd12-e69c-4e86-9e92-65017ce713f8",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "4fa53f15-dde0-4c11-9efd-7cb31c845341",
        "cursor": {
          "ref": "e7529bc8-76c0-4ff7-a371-2a26c360cf1e",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fe69d189-d9a4-459f-a057-fa837840aa13"
        },
        "item": {
          "id": "4fa53f15-dde0-4c11-9efd-7cb31c845341",
          "name": "did_json"
        },
        "response": {
          "id": "db304956-956e-48a5-9572-c84862b262aa",
          "status": "OK",
          "code": 200,
          "responseTime": 576,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acb0664-965d-4881-86bc-8dda53449c56",
        "cursor": {
          "ref": "5955fcd2-41a8-4e38-b8ba-255da7a79801",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "144629c6-c01c-46dc-8bb8-648bae2b7088"
        },
        "item": {
          "id": "7acb0664-965d-4881-86bc-8dda53449c56",
          "name": "did:invalid"
        },
        "response": {
          "id": "b39b422e-9cae-410c-8eda-82704c448810",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1000,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acb0664-965d-4881-86bc-8dda53449c56",
        "cursor": {
          "ref": "5955fcd2-41a8-4e38-b8ba-255da7a79801",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "144629c6-c01c-46dc-8bb8-648bae2b7088"
        },
        "item": {
          "id": "7acb0664-965d-4881-86bc-8dda53449c56",
          "name": "did:invalid"
        },
        "response": {
          "id": "b39b422e-9cae-410c-8eda-82704c448810",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1000,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ef2e6a-a979-41f8-85f4-94153977cabb",
        "cursor": {
          "ref": "5b761fb5-1f2b-41b7-82c3-bfa70ec9cdb9",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a3104d04-b676-494b-bf25-e1d5735b0c3b"
        },
        "item": {
          "id": "a7ef2e6a-a979-41f8-85f4-94153977cabb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8e74a2ab-a2bd-48bd-bd6f-4282548fecfb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907fee62-955a-44de-86aa-97f40ad465ce",
        "cursor": {
          "ref": "8ebd37a0-f801-4505-87cb-cfd57eacbe27",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "69c9c22d-6c64-4802-896c-f9ab8ea0f869"
        },
        "item": {
          "id": "907fee62-955a-44de-86aa-97f40ad465ce",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0b6fc278-6bb4-40e6-a35f-07b0a055f250",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e972a996-f3fd-472d-8770-fe993623f92e",
        "cursor": {
          "ref": "4c535855-5596-4de8-a370-6f0f6f7851a8",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3f5146c2-0229-44af-ba7e-93dbc8f02873"
        },
        "item": {
          "id": "e972a996-f3fd-472d-8770-fe993623f92e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "29c36590-7c7b-40cd-a6bc-78aaa14c54a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 98,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bba52a9-b942-4d23-99c5-c706d3cd47ed",
        "cursor": {
          "ref": "b1885ae8-479c-493f-bb61-f24344aac5ac",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b6e170b6-6b7f-47bb-a0b8-ef92e26b6e91"
        },
        "item": {
          "id": "3bba52a9-b942-4d23-99c5-c706d3cd47ed",
          "name": "identifiers"
        },
        "response": {
          "id": "15671bea-6845-4b2b-b18d-96319caf7627",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebdf22b-ec8d-4faf-ac7a-7da41f093e8c",
        "cursor": {
          "ref": "546a66eb-afde-4e0d-9c8e-99f4cce004b5",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f81df41f-92cf-47a2-b3ca-c8b1a45e566b"
        },
        "item": {
          "id": "6ebdf22b-ec8d-4faf-ac7a-7da41f093e8c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "71cf2da9-e3c7-4cc9-8f4e-eb76cbd6fa5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d603d823-da92-4c76-b38c-ecd10ad7b6ab",
        "cursor": {
          "ref": "b455d638-0712-4d9e-a554-3960d4a24090",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "281b86be-cf28-4947-9b44-a7dfedeb2f37"
        },
        "item": {
          "id": "d603d823-da92-4c76-b38c-ecd10ad7b6ab",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b3fefe16-ee1a-4af8-a7a2-a1347ce1ae97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ebd475-fdca-4b71-bd48-26e630cd2b8f",
        "cursor": {
          "ref": "2b4f434c-605c-4aa2-be18-b6d6a305daeb",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "55e38569-f12e-48e5-9b0f-e6661558ef0b"
        },
        "item": {
          "id": "22ebd475-fdca-4b71-bd48-26e630cd2b8f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dddd3f69-9a79-47eb-859e-426ea633c234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322f1aae-1c83-410a-9ab5-5b45b5d96386",
        "cursor": {
          "ref": "c6c30200-8f63-40b1-bc20-7a41e0951c9f",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "59f47eea-6cbb-43e2-bd60-9cbea400098f"
        },
        "item": {
          "id": "322f1aae-1c83-410a-9ab5-5b45b5d96386",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1388595a-ae15-4fb4-b048-06ce975dd3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ec00d6-e0dc-4b3f-83d1-39f21643e677",
        "cursor": {
          "ref": "9a471016-54b2-4a58-93a4-8e29509d2f3b",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b4295945-cdc2-4c08-8ee8-650b305606c0"
        },
        "item": {
          "id": "86ec00d6-e0dc-4b3f-83d1-39f21643e677",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "96e08f5c-7a82-450f-897c-0a1189ab2198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221fe7dc-1df8-4b25-94ef-c819f883806b",
        "cursor": {
          "ref": "8598ea74-ab1d-4a54-83a5-fc107b4c58dc",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1c369f66-cc6f-4b72-a5af-8ca0e1d49b28"
        },
        "item": {
          "id": "221fe7dc-1df8-4b25-94ef-c819f883806b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2930e59b-84fc-4d7a-976c-1f4609451d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73647589-7368-4d15-93e2-32d1985d7509",
        "cursor": {
          "ref": "404eb4a2-74a2-4161-ac18-0f3eb285795d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "38477160-002e-4efa-83e6-588230274b2e"
        },
        "item": {
          "id": "73647589-7368-4d15-93e2-32d1985d7509",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1876866d-19ca-48ea-afd8-b55970b634e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2289d9-aebc-4678-832f-b2e1bef9a973",
        "cursor": {
          "ref": "3482e601-afa1-4d1a-a9c5-5553c7dc8191",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "06f67e69-6662-463d-b03c-3387eb8e831f"
        },
        "item": {
          "id": "fc2289d9-aebc-4678-832f-b2e1bef9a973",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "329e939f-4bcb-430a-a830-5be898e9d9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc346690-9b84-4b36-bbbd-56a32d98713e",
        "cursor": {
          "ref": "6378dddb-c441-41d7-b3b5-504529f1336a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7ef66123-6ac2-457c-aa55-9099db911c94"
        },
        "item": {
          "id": "dc346690-9b84-4b36-bbbd-56a32d98713e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ed6b77b0-8568-4d2a-8158-17cc7ae5b42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da6b7f6-fc22-4caf-a326-7f089db1d9d1",
        "cursor": {
          "ref": "c0790457-8d62-4082-b807-86e41c6d7a21",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "00f6384c-1986-4dae-aa03-f9ecfc028875"
        },
        "item": {
          "id": "9da6b7f6-fc22-4caf-a326-7f089db1d9d1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "346d8c64-6b8b-4cd2-ad7c-50169ba9bf43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84718e7b-5be6-4e97-9f73-4f10d5e08163",
        "cursor": {
          "ref": "d1299823-8ffc-4e23-a85f-c63e49c147e0",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "12c89923-8e79-4c82-b61a-4acfd53d8c9e"
        },
        "item": {
          "id": "84718e7b-5be6-4e97-9f73-4f10d5e08163",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b2a3466d-dbab-4ee4-9cde-2e752c03294d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042a6007-79c5-431e-baf8-a7de938d1da0",
        "cursor": {
          "ref": "17f638d5-a9f8-479e-9d36-bedbb7d5b22e",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5ad406f3-bbe9-4fbe-b695-c1fc7c02d9e6"
        },
        "item": {
          "id": "042a6007-79c5-431e-baf8-a7de938d1da0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "efe11902-64b0-4d49-bc14-e4d8f0d6e006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7aad5d-9249-432d-90f9-e8763857dc3d",
        "cursor": {
          "ref": "96afc6d4-2c16-4bc7-8ad4-b055264a17a0",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "182177e8-04ea-4e88-9a69-a6faab9d0a82"
        },
        "item": {
          "id": "2d7aad5d-9249-432d-90f9-e8763857dc3d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "722ea0cf-2a9b-4e4c-87a6-8473ecb30d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc1f143-7d28-4b7f-b30e-fb79141e1557",
        "cursor": {
          "ref": "0962c734-6867-4ccf-8b20-f2a054cd5359",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5db25b86-37de-4417-a6d0-955b535d9316"
        },
        "item": {
          "id": "ffc1f143-7d28-4b7f-b30e-fb79141e1557",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5b34026c-e956-4012-8be8-a80f49f848c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e387f8b0-6af4-4b27-850a-d74249fe5683",
        "cursor": {
          "ref": "39267aa5-12e9-4d23-8000-84fe8a6209a7",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5f447356-3e36-4198-a829-623f77d09eaa"
        },
        "item": {
          "id": "e387f8b0-6af4-4b27-850a-d74249fe5683",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "af078e43-73aa-4c6b-9fb3-8c8f16f9feca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc8a42d-a221-4d23-a5db-f36b226ee562",
        "cursor": {
          "ref": "df6ad588-6d6b-48cd-94bc-4a5cf08cecca",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "269c5fd5-1a2c-44bc-b264-b90cdec6e48e"
        },
        "item": {
          "id": "cdc8a42d-a221-4d23-a5db-f36b226ee562",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7496099b-c134-4580-b428-09b971d54273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74011a8-b68a-41d4-9b64-236ee31197ba",
        "cursor": {
          "ref": "24d8a8f4-0106-422b-b5c7-275918838c36",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5eb1a271-9b74-4f41-98d9-df5db22c3d2e"
        },
        "item": {
          "id": "a74011a8-b68a-41d4-9b64-236ee31197ba",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "94f26258-1713-4af2-86c4-d1a472e4731f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6ed413-10d0-471f-9544-1a9528c73898",
        "cursor": {
          "ref": "f7ccc55d-a0b5-4314-956c-50f31fccc2eb",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "22d168b6-abad-407b-98c4-3b0cd55c66c6"
        },
        "item": {
          "id": "8e6ed413-10d0-471f-9544-1a9528c73898",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1ffa3e18-c105-4e55-b538-d1dd8f2b5ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41afc5d9-dfba-4923-8ed0-836b80ffe837",
        "cursor": {
          "ref": "7acad452-7db1-4240-93b1-0a2db5426d32",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "77d7aca9-0c17-4e61-b19b-786e518789d9"
        },
        "item": {
          "id": "41afc5d9-dfba-4923-8ed0-836b80ffe837",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6de268ba-ae85-4db8-b9cf-b7fd5bbc421a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82c8439-74ce-41d2-bebe-5bf4e303c07b",
        "cursor": {
          "ref": "79c0d943-87a1-4609-959a-b47ab7ec57be",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "74dbde30-9ef1-486b-9865-b96fd6646f13"
        },
        "item": {
          "id": "b82c8439-74ce-41d2-bebe-5bf4e303c07b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1f8837cb-0b08-4b8f-9ef0-b837da78e1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937ba49a-9b21-416e-9af3-5fced19d9186",
        "cursor": {
          "ref": "e6ec4817-0655-4f5b-adf5-81a89021bc10",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "43b7fde4-e842-41c0-9f59-55c08fcca00b"
        },
        "item": {
          "id": "937ba49a-9b21-416e-9af3-5fced19d9186",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a3743f59-6d8e-4df0-9326-3d06a58e6336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78294f44-50dc-49a9-92af-6cdec8ac10f0",
        "cursor": {
          "ref": "d1853d06-dc50-4019-b860-2a03caca7e02",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "91dfd74a-d53d-41ac-b2b4-b2d115bc728a"
        },
        "item": {
          "id": "78294f44-50dc-49a9-92af-6cdec8ac10f0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "929bc39b-8eae-40e7-913e-07ded3ff7ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d265942-be36-4bc2-9646-f920146990c7",
        "cursor": {
          "ref": "4d976e77-74b2-4044-97cf-0d0173d390d2",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4c1bea7f-e560-4292-bca2-a9e49f5d65a5"
        },
        "item": {
          "id": "0d265942-be36-4bc2-9646-f920146990c7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "acfb2d4b-4fdf-4954-93bb-a8129a00c6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55799c1-3058-440d-9652-ce608bc0370d",
        "cursor": {
          "ref": "4bd73647-de49-4ea9-9358-18c6a8ee7429",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "405e9b1c-558b-44ca-bb8e-ab88a5d573a9"
        },
        "item": {
          "id": "c55799c1-3058-440d-9652-ce608bc0370d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1751f5f2-347f-4a05-81bd-40ee8c91f89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f215207-7df8-45fd-b177-101655920c7f",
        "cursor": {
          "ref": "9d8f179e-654e-43ae-ac8e-2db241250082",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2afe5e9a-4dc0-4084-ba07-7115195827d4"
        },
        "item": {
          "id": "3f215207-7df8-45fd-b177-101655920c7f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cd06e520-2508-420f-84c7-41babb4602de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b8a098-1a55-446b-bd61-d509cfd56fa1",
        "cursor": {
          "ref": "8804308c-2b74-4ce9-aee1-e8777e2a8d6f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f19d1cf4-1261-4cfd-960a-b0fdd3783bfc"
        },
        "item": {
          "id": "f6b8a098-1a55-446b-bd61-d509cfd56fa1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2e4388e0-f224-4054-b41d-44969decafe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd48fb5f-99d1-4b00-a7c5-4c7120a70b03",
        "cursor": {
          "ref": "a7b0ecac-6173-4dc5-8e5b-9efe511b1837",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "48984a51-b99a-4133-9430-319bafbc7111"
        },
        "item": {
          "id": "bd48fb5f-99d1-4b00-a7c5-4c7120a70b03",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9f1f6ef9-5ad1-4bcb-b42a-46dca440ca7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8ea454-9f4d-44ad-b22f-d0af159f264f",
        "cursor": {
          "ref": "0dd11270-ed63-410c-8330-1d92329f3fee",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "59d1380a-e96d-4c31-9461-fe61b5f795a8"
        },
        "item": {
          "id": "4f8ea454-9f4d-44ad-b22f-d0af159f264f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f0a81806-ed63-4f7c-96fc-7945c1e3b74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6821fcf3-5fc9-4142-b8a0-a5e518e410e9",
        "cursor": {
          "ref": "108aaa1c-3cd8-4a61-8fc1-eac75e7ef450",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bb639830-0738-4935-9a80-bcc682219522"
        },
        "item": {
          "id": "6821fcf3-5fc9-4142-b8a0-a5e518e410e9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "762acd66-d042-4aa5-ad2d-7c82aafcde4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7a3ebc-a8d7-4f93-9cd2-dadba9a0761b",
        "cursor": {
          "ref": "9350ac01-017a-40c0-9624-9f25f28e6512",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e68c6e07-6eb0-4a1c-a1eb-627b142bfb65"
        },
        "item": {
          "id": "8f7a3ebc-a8d7-4f93-9cd2-dadba9a0761b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8a062948-bba3-4c2b-8070-aea461cf0c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1590e9-d62f-4548-8887-8eaf57533d2c",
        "cursor": {
          "ref": "fe85ffd2-fb8c-4b26-8957-70a483c6dc08",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "53a30238-da75-47aa-9892-525d605113f7"
        },
        "item": {
          "id": "4c1590e9-d62f-4548-8887-8eaf57533d2c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cbac54c3-4827-4a31-8086-c1932573db78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299ddaf5-3722-4b46-a6b4-988faa740bf5",
        "cursor": {
          "ref": "38ef6a90-b098-4a52-9715-81a43085e889",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1835ed18-8b5a-4107-8964-a0af0d70c5aa"
        },
        "item": {
          "id": "299ddaf5-3722-4b46-a6b4-988faa740bf5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "aa0570f6-78ec-42cd-a2ea-f72aaf494828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f068a3-f0ad-4ee4-adf9-99110292f797",
        "cursor": {
          "ref": "04751abf-41d9-438b-a94d-04b66f04b420",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7f72e36e-f650-4c75-a5f7-9b7c0e33fdd2"
        },
        "item": {
          "id": "40f068a3-f0ad-4ee4-adf9-99110292f797",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a199501c-4e52-45fe-bdf9-9de3aa479f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dea3849-801d-4d04-9591-8a08dcc500d6",
        "cursor": {
          "ref": "3d49a030-c67a-4f47-aa80-185743f7f1a0",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5c836f15-df45-438a-a69d-759b11dc4726"
        },
        "item": {
          "id": "6dea3849-801d-4d04-9591-8a08dcc500d6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b56a25e8-d5a2-4e88-94b5-72fb5b035c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d7f11f-299b-43d7-8854-601b51db2dd6",
        "cursor": {
          "ref": "5cca2975-2dcb-495d-9a1b-4adcb176e3fe",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "57dd0787-bdf0-4383-a684-543bbeeeb9a7"
        },
        "item": {
          "id": "50d7f11f-299b-43d7-8854-601b51db2dd6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b92b8564-25db-4dcf-ae66-86b66e8a6baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ffe810-b2d6-4919-b795-f2203731539d",
        "cursor": {
          "ref": "be44c9b4-0460-49e4-b75f-e475ce7d78a6",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "29d22819-26db-43d9-87ad-990a4f7e1c89"
        },
        "item": {
          "id": "32ffe810-b2d6-4919-b795-f2203731539d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5c666f96-6ab8-4008-828f-7550ba26522e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba38b2ac-ad01-4029-b89a-3a6517c44f5f",
        "cursor": {
          "ref": "5fca901a-97d6-4a02-8dc4-70fdf2914560",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a94f46a0-ecae-44c5-a05e-7e52a4976849"
        },
        "item": {
          "id": "ba38b2ac-ad01-4029-b89a-3a6517c44f5f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "28234c11-9d87-446f-a993-f8784217c10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd210869-ae01-4998-bd41-5ea2533d7e0a",
        "cursor": {
          "ref": "41574a2c-7bc4-4967-b9ea-8e9e2da6d844",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f5d5c913-e8b5-4f66-8c97-de4a2ec756ef"
        },
        "item": {
          "id": "cd210869-ae01-4998-bd41-5ea2533d7e0a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3de8f621-8549-413d-80e4-af4d12d2aad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453effce-b771-41d0-9a99-69e2f97611a5",
        "cursor": {
          "ref": "93713907-c6a1-45e6-bceb-3fabe79f8e05",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "304ef0ce-1429-427c-bea8-1c50466d1dec"
        },
        "item": {
          "id": "453effce-b771-41d0-9a99-69e2f97611a5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3c3aae5d-e11d-4b09-8896-cd22f209f5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2874142b-1c89-49d2-b8bd-11b20d8685df",
        "cursor": {
          "ref": "e6d4f804-c933-4203-938e-199c57972d52",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "be85c314-0da9-4131-8b3b-696ee5a3dd9b"
        },
        "item": {
          "id": "2874142b-1c89-49d2-b8bd-11b20d8685df",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "dbe5c2d0-c804-4aa7-842d-a6bd28e7f16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a7162f-5ebe-4972-968b-c04884abcd6c",
        "cursor": {
          "ref": "e08e5fce-74ea-4847-b1d7-6b1a7233e220",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "de8482ac-b193-41fa-b4b5-6c152d072c96"
        },
        "item": {
          "id": "a4a7162f-5ebe-4972-968b-c04884abcd6c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "72d31144-1294-4470-bd93-eb7749da23c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86003c5e-3b76-49d6-b05f-a404b8231d45",
        "cursor": {
          "ref": "c7ef8bee-5843-48b6-b226-51fd6cecf3f5",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cff01179-4019-4549-9947-c2aee3d7a2c8"
        },
        "item": {
          "id": "86003c5e-3b76-49d6-b05f-a404b8231d45",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4bddf3fe-0c01-49f9-9004-370cdc17f3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c050ffc7-d23c-4bed-8ac2-9eb197771647",
        "cursor": {
          "ref": "2800b57e-e687-443e-b69a-1cc4fb8e7310",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "44d766eb-33e3-4526-a68f-23722e190937"
        },
        "item": {
          "id": "c050ffc7-d23c-4bed-8ac2-9eb197771647",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f47bba51-e37a-4c21-82e8-211196a4b488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24feb512-20f9-44e0-841a-5d70b7cd9321",
        "cursor": {
          "ref": "f788fa31-687a-47fa-8aee-e9ce46a91899",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "04d11eac-c63f-4eb6-9f64-5e58b927dfb2"
        },
        "item": {
          "id": "24feb512-20f9-44e0-841a-5d70b7cd9321",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "49761728-cd3e-47b4-9c7f-5405c00ad454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846b57b7-b46f-4898-b64a-1ad54b76e5ad",
        "cursor": {
          "ref": "84e8eac6-89d2-4a4e-a8c4-9eb349cfa809",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "086522c5-f2ad-4ea7-adad-0dbf173f03c1"
        },
        "item": {
          "id": "846b57b7-b46f-4898-b64a-1ad54b76e5ad",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a7aadbf9-ec63-47d2-b012-1ffab28a434c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cad09c7-168f-4e8f-a3f9-9d784191dc7d",
        "cursor": {
          "ref": "5e36bb89-1c27-4fab-93dd-d47ef5c1b7bc",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "05b8d2cc-d7b9-4d54-8c9f-fac969baef3d"
        },
        "item": {
          "id": "5cad09c7-168f-4e8f-a3f9-9d784191dc7d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b65121d5-2407-496f-af66-a2c1da1f5167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011a878b-c691-49b1-a658-55a04bf1670a",
        "cursor": {
          "ref": "b93f9c5d-f71c-49dd-9ed4-6e8d01bd9296",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "885c67b6-db46-423f-9851-eae8090698ae"
        },
        "item": {
          "id": "011a878b-c691-49b1-a658-55a04bf1670a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "072c84cb-4f66-4b27-b752-c6c19426466b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b481f5ba-907b-4d0d-ad35-6c782497625e",
        "cursor": {
          "ref": "d53eab67-6fdd-4620-af6a-b87822543536",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5b4e8c9d-d2f9-4c6e-a7ab-4788f1e78cc4"
        },
        "item": {
          "id": "b481f5ba-907b-4d0d-ad35-6c782497625e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2a036687-5606-4603-a9f5-bd13591bb508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1e7903-9a87-4092-bfa0-b1109b021558",
        "cursor": {
          "ref": "d5dc9d68-b58b-4b24-834e-13557148b409",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "de15c31f-c0d9-4241-87fd-bf4991855459"
        },
        "item": {
          "id": "be1e7903-9a87-4092-bfa0-b1109b021558",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7fa241b9-a88d-461a-bbda-915992b8776d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e9b4ed-96ff-4cfa-a01f-46cb7c56440b",
        "cursor": {
          "ref": "509da30a-b074-4d34-ba26-2410b1b61447",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f55f2e35-bf48-4aee-93ab-edc2a449921c"
        },
        "item": {
          "id": "94e9b4ed-96ff-4cfa-a01f-46cb7c56440b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "73a2d7ae-e69a-4b9b-ae94-8d833a060247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6199017-75d6-4331-9f5d-006c89939166",
        "cursor": {
          "ref": "d411510e-73f1-4333-a505-aab790c3d204",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3a32a631-af54-4575-9110-60a58caf6727"
        },
        "item": {
          "id": "e6199017-75d6-4331-9f5d-006c89939166",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b03bc17c-ed7a-4fe5-b46c-82fa09a4d6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc5d1d5-7f9b-423b-a635-7313deb448ee",
        "cursor": {
          "ref": "b56b82d7-880a-4f5d-8b27-af9ff82ca023",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "188cbbee-daa2-4e3e-a93e-2b1634bf7e3f"
        },
        "item": {
          "id": "abc5d1d5-7f9b-423b-a635-7313deb448ee",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f9b53a28-bcb3-487a-a5e2-e5c50a66c88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db1c36e-f9e9-465b-b84d-917760ccbcbc",
        "cursor": {
          "ref": "ba75f737-9e9d-4919-9a66-7bc1ed312935",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "321602c5-207c-41ff-aac7-25b3f25fd2ea"
        },
        "item": {
          "id": "2db1c36e-f9e9-465b-b84d-917760ccbcbc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ab6e72b8-3975-4dc4-ae06-0c06acf3342b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f7c1db-dcd4-49e8-a4e3-aa4074e5c1f9",
        "cursor": {
          "ref": "d49c727c-609a-461e-801c-8168ffeb102d",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9e711602-85e8-4840-8fec-5bb05c4293ad"
        },
        "item": {
          "id": "79f7c1db-dcd4-49e8-a4e3-aa4074e5c1f9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "64bf0e60-b367-49a0-816c-4985a48a3de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce6f57c-f6e6-4007-9b85-8265cd586c08",
        "cursor": {
          "ref": "05ec2e5e-7148-4f7a-816c-44574ada9cda",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "75737a9c-4d29-49aa-9b2c-8e48b56ffc68"
        },
        "item": {
          "id": "0ce6f57c-f6e6-4007-9b85-8265cd586c08",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3f6619c8-5a1f-4ec0-bdad-5a46abc99a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95c8e52-283f-4ce7-a4e0-f9ed054a00f9",
        "cursor": {
          "ref": "a5199fb4-7414-4587-909a-d04ff64ad9d1",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "210a1381-563c-47ff-9925-d19c48f046ec"
        },
        "item": {
          "id": "e95c8e52-283f-4ce7-a4e0-f9ed054a00f9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e5570425-1ca8-46a1-b611-4e6da2606cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c6ad41-bf82-4d97-85de-15cf6955b4f0",
        "cursor": {
          "ref": "d72f929c-3b30-4ef8-a2ac-91599d323158",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "efc16aac-4ea9-4fb7-8386-3e7295bf73c6"
        },
        "item": {
          "id": "89c6ad41-bf82-4d97-85de-15cf6955b4f0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "73fb4a7c-3b2f-4966-8cd9-339891afbfaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ed3407-4f5d-4fb2-883c-9215d1e99e2d",
        "cursor": {
          "ref": "18536f36-4dc3-4a2c-8959-704e98f9ff98",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4b370a15-a26b-471d-bbdb-b9e6529178fb"
        },
        "item": {
          "id": "64ed3407-4f5d-4fb2-883c-9215d1e99e2d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bba9bacb-587f-44c2-8873-c7b734f93dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35ba118-1e6f-4a1d-98c6-91e2be90ca32",
        "cursor": {
          "ref": "5d6207e0-86a7-40b9-8b3e-208d2a8b6b20",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b7a4b704-1082-481f-9682-c3e48dcd7ce8"
        },
        "item": {
          "id": "d35ba118-1e6f-4a1d-98c6-91e2be90ca32",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ac4740b2-fa1a-422f-99eb-29b9d675ef57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7376c396-a30c-47f5-9890-e0e62219dd15",
        "cursor": {
          "ref": "4000b08c-11fe-4096-a79d-d8877ac1cc92",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2c93c4f3-c71e-43b5-89b5-c2b88d432eda"
        },
        "item": {
          "id": "7376c396-a30c-47f5-9890-e0e62219dd15",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4183bb8d-7e90-42d5-bf59-558ce27e2c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e42cf3-e5ff-4312-b35b-6e7d59dfe6c7",
        "cursor": {
          "ref": "d0a51286-5ec3-421b-9c81-fc9d13e598e5",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "92faca01-6bfa-4b05-9b48-83ee64493290"
        },
        "item": {
          "id": "10e42cf3-e5ff-4312-b35b-6e7d59dfe6c7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9cbd6360-0adc-4823-9b97-eff1e6f91272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a280825-2b09-44a5-81e2-0d450561d76b",
        "cursor": {
          "ref": "295f5e60-8f0d-4411-bb0a-30e322869a0a",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "174398e8-7e33-4281-8ba1-c5fc71be671f"
        },
        "item": {
          "id": "2a280825-2b09-44a5-81e2-0d450561d76b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c83efab4-427f-4a5c-a114-5b3343d6d846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c857fff-ecd9-44d9-8674-55f61fa15141",
        "cursor": {
          "ref": "27f57239-5e99-4c37-9194-77c91b2d4504",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "dcab90bf-afe4-4e6a-bdba-aa744c4fda91"
        },
        "item": {
          "id": "4c857fff-ecd9-44d9-8674-55f61fa15141",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f7f84785-e757-4cdf-b673-a64d8c56f011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bebbffe-0f0d-466f-be39-ff084dbc9018",
        "cursor": {
          "ref": "74e51361-3b7d-4af3-8038-3fd6d35a01f6",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "16fd22fb-788b-4f99-b2d1-9b4deeb65fc2"
        },
        "item": {
          "id": "7bebbffe-0f0d-466f-be39-ff084dbc9018",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a6d3523f-29ec-4327-9a4f-805c3c057d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34f2155-0aeb-40c6-870c-fc7caf36387c",
        "cursor": {
          "ref": "f4578206-50c9-4d9c-8775-6599e84e96c6",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ea6e7685-c430-4f83-8d62-a8a397f1be2a"
        },
        "item": {
          "id": "f34f2155-0aeb-40c6-870c-fc7caf36387c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "24291b55-4f2f-45c0-83bc-f070e6f664fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f53507-a853-42ac-b6b9-b481a4dc468c",
        "cursor": {
          "ref": "f008c65b-a1c8-4200-b2bf-4aab72a92d02",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "eba46495-cfea-40fb-bc3d-1291793dbb7d"
        },
        "item": {
          "id": "81f53507-a853-42ac-b6b9-b481a4dc468c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f0991751-4e43-4371-bf92-c2afcf3b6e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef42e2f-b7ba-4613-bffe-33af0f0155b0",
        "cursor": {
          "ref": "2e285335-51e3-4bf6-9d29-6f963a2ee099",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a1d9417d-a677-45a5-b2aa-920ff487e10b"
        },
        "item": {
          "id": "0ef42e2f-b7ba-4613-bffe-33af0f0155b0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "269bc86e-b152-4f45-bea8-44de795bb6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a005ffa-7386-4831-adfe-7513053858c5",
        "cursor": {
          "ref": "3d5d1ebe-521c-4d91-b0c0-5e8cb7c1858e",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "45d0ce19-4040-48a7-b91c-1e2eacba0eb3"
        },
        "item": {
          "id": "8a005ffa-7386-4831-adfe-7513053858c5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "35867426-a9ed-4c7c-b08c-32d9b3621aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5686b265-2e0d-4bfb-aed7-68ee1f9ce7fc",
        "cursor": {
          "ref": "2ff1b3e6-c619-4b62-a79e-bc8c5c10b8ac",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1bcf5b38-03fa-4bf9-afc7-ea7780df1c5e"
        },
        "item": {
          "id": "5686b265-2e0d-4bfb-aed7-68ee1f9ce7fc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "15a89380-9c7f-4425-ac5e-8e76c7dc619c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24dc0896-7781-469d-a785-901ef5ad3dc4",
        "cursor": {
          "ref": "a4c23543-1d2a-4654-a2c9-bd47ca5fdcaf",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5968869a-0ca2-4735-91d7-b4c348f961b8"
        },
        "item": {
          "id": "24dc0896-7781-469d-a785-901ef5ad3dc4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "74c2307e-47f6-4f7d-82ec-3f830a62bf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc65ff4-0341-4684-a6de-31c5640edd0a",
        "cursor": {
          "ref": "339b33e8-b200-4629-8e68-89ed420c4856",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "202c2321-d4d2-4cff-b75e-03bc0406374f"
        },
        "item": {
          "id": "afc65ff4-0341-4684-a6de-31c5640edd0a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8f8349a8-af09-4cb9-a79b-c1e73f848507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e132ac8a-e21b-4dd5-8a01-9a06634b6f98",
        "cursor": {
          "ref": "cae5d183-1daf-4850-be6c-e70a05c92aa0",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "99f5f9b1-0d7f-4a71-bf6e-7c7475379c81"
        },
        "item": {
          "id": "e132ac8a-e21b-4dd5-8a01-9a06634b6f98",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "aadd3e79-5724-4a18-92a1-395b0f4b0b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236a3580-90b2-443f-be19-ac9998a79f16",
        "cursor": {
          "ref": "d7e2e569-0d67-4d5a-9726-d1f46fee9133",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d9f9f69d-e089-4794-9942-4eb5055f5051"
        },
        "item": {
          "id": "236a3580-90b2-443f-be19-ac9998a79f16",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "165e7e80-9a19-424b-8c7e-a8c0267bc25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d299f981-a103-4139-ae48-27fdaac526e3",
        "cursor": {
          "ref": "cc8d53fb-918a-469b-802b-04db401954f4",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "dcf92e90-f640-4701-bbee-47bbda11c4bd"
        },
        "item": {
          "id": "d299f981-a103-4139-ae48-27fdaac526e3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c4212401-bc3c-49c1-9e6c-be726461f360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9bf94b-0128-4536-81c4-ed6e34041503",
        "cursor": {
          "ref": "0f2ed0ce-181b-4786-bfa3-475997e920df",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "13b16aa8-e6e7-441e-aab4-e700897bcfce"
        },
        "item": {
          "id": "1d9bf94b-0128-4536-81c4-ed6e34041503",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "609e1eb2-67f1-475e-a756-39b36a129d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1080b7e5-1a73-4fe4-9268-5863b425bb88",
        "cursor": {
          "ref": "a3c7888a-2041-426a-ba70-2c53c6efc29e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "89bd464c-9b88-4143-aa04-4b83063e75ee"
        },
        "item": {
          "id": "1080b7e5-1a73-4fe4-9268-5863b425bb88",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "16246ffd-b0ae-45d6-9e4d-eb18b6faa7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678e2ef8-43fc-434b-9699-778614bf9b62",
        "cursor": {
          "ref": "9b19982f-c214-443d-ba5b-9d834ad1e42b",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "da3f2850-b1ec-47be-a6f2-b41e95684155"
        },
        "item": {
          "id": "678e2ef8-43fc-434b-9699-778614bf9b62",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a2dffdbf-5aa6-4dfe-9b91-cb83a253be5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e74edd4-be7b-46e8-aa1c-4f8ba997255d",
        "cursor": {
          "ref": "05d0a221-2458-48bd-b598-ea37b7d076c6",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5d9dc932-43f7-479b-96c2-1057534a2d77"
        },
        "item": {
          "id": "0e74edd4-be7b-46e8-aa1c-4f8ba997255d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "28aba0c6-90f9-430d-891e-b5cdedcdbd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b58cdd-d0be-44e4-aa83-c592681dc6a1",
        "cursor": {
          "ref": "2f3316bc-4b16-4f15-86d9-b52c08af72c9",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "74a00c08-7974-459b-87dd-10e12da1792a"
        },
        "item": {
          "id": "28b58cdd-d0be-44e4-aa83-c592681dc6a1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4b39b0b8-1ac3-4777-898d-860fed7d76fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e5bf9e-1a97-4534-872e-0d1ad730363d",
        "cursor": {
          "ref": "2151dee5-9734-4b83-a7d8-800b51b54db5",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "11c1e2d5-dbfb-49f8-bc2b-b6102dae52ed"
        },
        "item": {
          "id": "c1e5bf9e-1a97-4534-872e-0d1ad730363d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cd4c4f0a-3f99-4268-9c90-ff4c2517f856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c098c22-f85d-454c-9a50-22bd9937039d",
        "cursor": {
          "ref": "0a6650a1-2248-45f0-bb23-3b3d40bc0667",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "10cb1e3f-68f0-40ee-beaf-bcf775d12306"
        },
        "item": {
          "id": "0c098c22-f85d-454c-9a50-22bd9937039d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f8ab3a30-0cd6-4ed7-ad15-21981422698f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9faed8b0-c9ea-4836-b103-14dce00e64fc",
        "cursor": {
          "ref": "4f19efdc-985c-4612-a538-450feba67b94",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b066a5ca-add9-4b59-820a-3d1eff3a03a4"
        },
        "item": {
          "id": "9faed8b0-c9ea-4836-b103-14dce00e64fc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c53b01b1-da9d-487d-b86b-8527c3a1f81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e77ac6-aaf7-4cbe-95c2-aa20e277cf13",
        "cursor": {
          "ref": "86190761-10a6-439b-97fa-aa0f2267634c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "55730465-5429-45c2-99b6-df144f5ecea4"
        },
        "item": {
          "id": "14e77ac6-aaf7-4cbe-95c2-aa20e277cf13",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f6c04d48-fbc5-43d9-84f4-62b09bc7706b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc215bb8-f634-418c-88e1-ac1d6ff274ea",
        "cursor": {
          "ref": "863d2666-98b5-432d-b5f9-c879cde3d78f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "83d3484b-2395-4451-826e-e46a6df44fee"
        },
        "item": {
          "id": "cc215bb8-f634-418c-88e1-ac1d6ff274ea",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "dd55e185-d21e-4d34-b4c6-49ac00071d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b484e2f-366d-4915-8c06-e5ea99376ed1",
        "cursor": {
          "ref": "7adf0bd8-f239-4ad6-9a32-55b53e759336",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1ddd0689-d1fd-4921-bd08-f6974d6b53d8"
        },
        "item": {
          "id": "0b484e2f-366d-4915-8c06-e5ea99376ed1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "de96ca9d-ed69-48d4-afae-0c849d69c8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d6a003-4df1-46c6-b5a2-492e988dc927",
        "cursor": {
          "ref": "0e0aaa74-4d7a-4fb9-a7f1-b5f45e81b55f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d5983ae1-c3b8-4a87-84e9-018db9eab443"
        },
        "item": {
          "id": "18d6a003-4df1-46c6-b5a2-492e988dc927",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d5247cbc-8045-448a-99ae-2dc4b118c445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542dfdff-aec7-4ce7-9bbe-5437513cd58b",
        "cursor": {
          "ref": "128b6c4d-00ce-458a-8b2e-6e84770ad2db",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d6118d06-06d5-4685-8c12-54e0dbdd3fdb"
        },
        "item": {
          "id": "542dfdff-aec7-4ce7-9bbe-5437513cd58b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "76b5aac3-236b-4f1c-bee7-b5c274fd0a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82876bf-7f14-4db2-a5bf-c4ee3fe299da",
        "cursor": {
          "ref": "9c53cc7b-51c3-49ec-96c9-121ac53ff294",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2d2b5690-6854-406b-a81b-d36ba0e413fd"
        },
        "item": {
          "id": "c82876bf-7f14-4db2-a5bf-c4ee3fe299da",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3cf2b700-0099-4db3-8594-9cee6973e66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71198c39-0573-4303-aaf6-6b58a70b8f1b",
        "cursor": {
          "ref": "a8372830-3d1a-4c44-8cea-2e2d4d266a09",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6124a182-6bc5-4b5b-8219-11651e0745f6"
        },
        "item": {
          "id": "71198c39-0573-4303-aaf6-6b58a70b8f1b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "86f91b07-62ef-408d-b0be-afc6986efe0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d99227-7029-42bc-b9a4-5ffe4ffef35a",
        "cursor": {
          "ref": "b315376d-1771-4948-ac25-f30901e94566",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "eb1da6fe-98af-4529-8416-db97590a7802"
        },
        "item": {
          "id": "31d99227-7029-42bc-b9a4-5ffe4ffef35a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4c33da4c-a609-406a-a71c-8d7f3fa8a3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4923d28b-e984-433e-8421-d9f2758a73e0",
        "cursor": {
          "ref": "ed4bc760-2f97-4085-bca1-10abed6ebaed",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "45f35963-e6e0-42ba-b624-88eda63fb261"
        },
        "item": {
          "id": "4923d28b-e984-433e-8421-d9f2758a73e0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9b06317d-b631-4aa8-8d86-3e469d13e7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c8171e-836a-439a-8360-243b2a30d0f8",
        "cursor": {
          "ref": "73ea8904-267c-4a07-8d0f-fff93c4f884a",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "40d78a0a-1d9c-4360-bbc3-b2150467e764"
        },
        "item": {
          "id": "15c8171e-836a-439a-8360-243b2a30d0f8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "45778176-1f39-4a39-8c5d-396691fd3c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1661d69-ce1e-461d-a3b3-c824259ca358",
        "cursor": {
          "ref": "239d72aa-f4fb-460a-b17c-bc784f3e83df",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fe9fc4fe-264b-4830-b851-91ea61152588"
        },
        "item": {
          "id": "b1661d69-ce1e-461d-a3b3-c824259ca358",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c439658e-aa19-448d-a46d-21030ff078a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d21db51-1b21-4feb-802d-2c737efdfc9d",
        "cursor": {
          "ref": "2fcfedb9-33a0-4947-aca9-275ebdc40f7b",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bbb2ef79-1508-4a18-afb7-fbf42856f60d"
        },
        "item": {
          "id": "4d21db51-1b21-4feb-802d-2c737efdfc9d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "718aa752-5b4f-4a21-93a9-94e3a63f89c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "29ac6664-2245-4caa-8ffc-946f4d6ed7ff",
        "cursor": {
          "ref": "df3d33e6-4d50-4cfa-85d1-67f0bdc7c8df",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "25eb3f95-6664-4f44-adff-6a85b6e4b05a"
        },
        "item": {
          "id": "29ac6664-2245-4caa-8ffc-946f4d6ed7ff",
          "name": "credentials_issue"
        },
        "response": {
          "id": "aeff1ed2-afe0-4184-b349-b9f90075fab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7371dd8a-dcb5-447c-aac7-0d6b5e7b5770",
        "cursor": {
          "ref": "266a831d-4bf9-4b87-b460-6bd7aee04bd9",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "32c18461-2326-4278-8c9b-d59c07ae8195"
        },
        "item": {
          "id": "7371dd8a-dcb5-447c-aac7-0d6b5e7b5770",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b8f59ea7-30bb-4e54-aca1-34f559259015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "268f2b57-bc8e-4c7c-bf3b-6680fa6249e0",
        "cursor": {
          "ref": "76628886-ca1e-4491-96ab-d81fcfc88e11",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "03656a5f-c5cc-407e-9850-d5fad8c43e64"
        },
        "item": {
          "id": "268f2b57-bc8e-4c7c-bf3b-6680fa6249e0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "67b595f7-c4bf-4e04-8128-553edaa5832a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "93171869-534b-47ea-bdaa-1f7beb6fcf38",
        "cursor": {
          "ref": "9afd2945-13ad-4bbf-820e-55d0fda0cbc5",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "824b693a-692d-448f-8056-f84aff798278"
        },
        "item": {
          "id": "93171869-534b-47ea-bdaa-1f7beb6fcf38",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0cd2acb6-6abe-4de9-8c57-f1044bd77828",
          "status": "Created",
          "code": 201,
          "responseTime": 26255,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb43148f-96ba-4015-b365-ec706f1bb467",
        "cursor": {
          "ref": "a29891db-602f-473c-a4b5-bdb6a426f04c",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e083dadf-c4f0-4962-b172-7e09b9d9cd18"
        },
        "item": {
          "id": "fb43148f-96ba-4015-b365-ec706f1bb467",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4aefc64b-5a05-42d6-beb0-48f79e4337f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "890ffe85-aada-44e3-8faf-323964095b4d",
        "cursor": {
          "ref": "939af57e-7be4-46b8-a0dd-bd6de0c2e429",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6ec7e690-00c7-42f3-9497-d591b312b737"
        },
        "item": {
          "id": "890ffe85-aada-44e3-8faf-323964095b4d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "dd098079-cd73-4c51-af2d-2721323c046d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f1efa37e-e60f-4a21-a0d3-8f9f93af24b3",
        "cursor": {
          "ref": "a16d3e0c-829e-4d32-abf8-6ca42daba409",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ae684eba-2c95-4a75-8232-58ca4ca2a443"
        },
        "item": {
          "id": "f1efa37e-e60f-4a21-a0d3-8f9f93af24b3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5ddc4b97-e21d-475d-9514-bd4634dcebdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f86617-ec41-4bee-bd20-4aa70e336a4a",
        "cursor": {
          "ref": "7ed01854-4f59-4448-98b6-d9966395c36c",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0eb73946-8058-4cc0-b2d7-1d7ea6061fc3"
        },
        "item": {
          "id": "97f86617-ec41-4bee-bd20-4aa70e336a4a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "30ee5d6d-5aa8-40a0-ae8d-f0d1c3504867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cb750b-d320-4b70-9f01-6fb9f4796ede",
        "cursor": {
          "ref": "0371c25a-1a1e-4a0e-972b-ebfc89796939",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "48258e64-4a73-4023-bd7c-9402844d4f01"
        },
        "item": {
          "id": "02cb750b-d320-4b70-9f01-6fb9f4796ede",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0ffcacd9-edbb-4001-bb86-1b7acce0bfc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85335890-0fcb-43ff-a8ce-7b918ceb57c3",
        "cursor": {
          "ref": "c062b6dd-bc80-4783-b946-f79889a3d73b",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a502df12-05d9-4caf-9901-8a48020251ff"
        },
        "item": {
          "id": "85335890-0fcb-43ff-a8ce-7b918ceb57c3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "aa4087d1-2cd5-4481-b7f2-d78811a43300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0233f8e1-a341-4ee3-8d24-0911851f500e",
        "cursor": {
          "ref": "61d8dc1b-9ed4-4bfc-90af-58a0cb4650a6",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "47fc0722-0667-453b-8874-4f35d3417f59"
        },
        "item": {
          "id": "0233f8e1-a341-4ee3-8d24-0911851f500e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d72ac3a9-0287-4f0b-8492-dc1871581ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8277d89b-20b1-485a-9ec9-85753d4fe104",
        "cursor": {
          "ref": "6a971ec3-9030-46c1-b5e9-9685947b2bd0",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ef7b431b-5312-46d4-8711-fcd083871b87"
        },
        "item": {
          "id": "8277d89b-20b1-485a-9ec9-85753d4fe104",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ac7fdaa2-f3e2-48c3-bfff-083ff9cef851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811a1e4e-d4e6-425c-9473-cf88dc377d8d",
        "cursor": {
          "ref": "0fe0c675-8472-44af-9614-74c99a58f4a4",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "65bc770f-9dea-4ba0-ac5c-e98928efc6b4"
        },
        "item": {
          "id": "811a1e4e-d4e6-425c-9473-cf88dc377d8d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c2e1e63f-6771-4b1b-aa44-540e0d29f884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56dd674-8718-48b8-a265-a2489864164a",
        "cursor": {
          "ref": "874cdb90-078e-46cd-bc22-d7212839aebc",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f09f3779-977e-4442-b421-2e5220ad4dab"
        },
        "item": {
          "id": "b56dd674-8718-48b8-a265-a2489864164a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bf4e6d68-249b-46c9-9c42-edafa5401525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b950ed-0ad3-4702-a114-393d69585d26",
        "cursor": {
          "ref": "cdbfa25d-dabe-4453-9dd6-b7d0f9620d9b",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8af610cc-a3c3-4f61-b472-f6f2790dc0be"
        },
        "item": {
          "id": "85b950ed-0ad3-4702-a114-393d69585d26",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f7d2a71e-9384-402e-a916-1c3adc22e11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1070,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfdad8c-3cab-4408-baf9-481347777bdc",
        "cursor": {
          "ref": "174eae73-990c-4af6-bd41-b2eb967beda6",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c1b22023-152f-4f40-8f6b-deab47cee7e4"
        },
        "item": {
          "id": "3cfdad8c-3cab-4408-baf9-481347777bdc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f878d9d5-fa05-4a5e-937e-29ed144fbcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 894,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8816dc73-0440-4dd3-afb9-652bb42939f2",
        "cursor": {
          "ref": "edbb2bf2-6dd3-4251-8779-4d518e89099f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "97804cfe-95f7-473a-b929-d99ffe2a028a"
        },
        "item": {
          "id": "8816dc73-0440-4dd3-afb9-652bb42939f2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e517fe1b-16f0-4fa8-a90a-041b23691613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126b6e70-c7e5-4d60-8ba9-a38cc7dc05b7",
        "cursor": {
          "ref": "2f5b4a7f-7372-42c0-83e1-dbddd29501e8",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d83e0569-5329-47b7-af54-a5aa8b28cb30"
        },
        "item": {
          "id": "126b6e70-c7e5-4d60-8ba9-a38cc7dc05b7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "60a19763-9674-43a0-8f26-0cd7432f4410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c3c47d-07d3-4585-8f42-1f3bae7495d3",
        "cursor": {
          "ref": "23944fde-2245-4cba-a0a7-5f76ce6a4fc2",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "dc6ef789-4636-43ef-990a-ca7ed912a66f"
        },
        "item": {
          "id": "a5c3c47d-07d3-4585-8f42-1f3bae7495d3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3e2274fd-708b-4ad3-b582-6c4ffd26a65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1126,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf99f28-fb15-4e83-9aba-55442e2072bf",
        "cursor": {
          "ref": "3fd92e61-4b0f-4dff-9fad-c967e467e9ae",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "38cac738-238c-4873-a4ef-cff7dff5d90c"
        },
        "item": {
          "id": "dcf99f28-fb15-4e83-9aba-55442e2072bf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9087f55a-2202-40d0-ab8c-f0a29e413e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54c6ed8-f97f-47c7-9e67-025ed2a42555",
        "cursor": {
          "ref": "2f70da4c-b687-4f42-ad7b-a1fa025046d8",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "423293d9-e5a8-4a9d-877c-eca07ac08596"
        },
        "item": {
          "id": "c54c6ed8-f97f-47c7-9e67-025ed2a42555",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c773eeee-2f57-4beb-93f1-389aae5bfa5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 911,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53e70fd-007f-40a8-8595-a74d07e75548",
        "cursor": {
          "ref": "483b00b2-36c8-4db1-ac67-ac2e18503140",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "66f00b63-1546-4370-a400-03343a2f69c7"
        },
        "item": {
          "id": "a53e70fd-007f-40a8-8595-a74d07e75548",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7ee125ac-4c55-4edd-ba30-3378182af257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f424406d-7666-47c1-8e1e-731cb8f5bbda",
        "cursor": {
          "ref": "0dcf5341-ecf0-4cc8-951d-237b8d1ab9e0",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "425b991a-e117-4f30-bc0d-ae388e48c889"
        },
        "item": {
          "id": "f424406d-7666-47c1-8e1e-731cb8f5bbda",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b84fe43b-8c34-4296-b814-b740f4ec4c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddb495d-422e-4abd-841e-0e9c338b5b27",
        "cursor": {
          "ref": "52805e5d-57ca-4b2f-bc9a-9c22482dc693",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f8cb500b-d1a6-4d14-97c1-6229be47c2b3"
        },
        "item": {
          "id": "1ddb495d-422e-4abd-841e-0e9c338b5b27",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "78a77df9-46f4-48c3-b2fc-c4368897e153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11654c84-4a0c-419e-aef4-0aa62fdc4151",
        "cursor": {
          "ref": "2e4e78ad-1070-47e9-b11d-54a5a0e7f2b4",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3340d1ec-e475-414a-842f-4760eaf4a20b"
        },
        "item": {
          "id": "11654c84-4a0c-419e-aef4-0aa62fdc4151",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "269af9aa-c94b-45c5-9649-32ba3d4d5f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b872aae2-5ed6-41b2-ae4f-3d448b34dab2",
        "cursor": {
          "ref": "01ddc4ef-d10f-486b-84f9-cfe176be3558",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7d937e67-fccd-457f-ae94-dc0a16797e34"
        },
        "item": {
          "id": "b872aae2-5ed6-41b2-ae4f-3d448b34dab2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "12a15655-2519-4271-961c-348bf90acf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f25040d-eeeb-4a61-993b-38bbeefbc25d",
        "cursor": {
          "ref": "c62a8c6b-bb67-4374-bbf8-eec48f889b0e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "abac98ab-8d51-4312-8aec-b3ec9b783b10"
        },
        "item": {
          "id": "5f25040d-eeeb-4a61-993b-38bbeefbc25d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8cf1f9de-3101-4b31-b0ab-504db2c28533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd8c158-55a4-4675-88ac-c749c171bb10",
        "cursor": {
          "ref": "757029d7-c5e9-45ca-b6f2-c5153f4a0ca0",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9d8c82da-c21d-4d60-b5a9-9585e00ce5d9"
        },
        "item": {
          "id": "dcd8c158-55a4-4675-88ac-c749c171bb10",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3740ba52-2157-4cd2-a97a-eb9556f03a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0a5b3c-b253-4fe7-94e7-95920e885e82",
        "cursor": {
          "ref": "1a9de2ff-f644-4f95-8701-c4faac9b49f9",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bc0847e0-5daa-46d7-8119-b762e6a09cdb"
        },
        "item": {
          "id": "fe0a5b3c-b253-4fe7-94e7-95920e885e82",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "74d41f04-ec28-4f23-8458-763da79f37b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a33504-e0f9-4aec-861f-f0169afa1ed2",
        "cursor": {
          "ref": "deb8e020-da6e-47f7-83d6-dc7105acf534",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "94396d5c-5aa4-4cc4-974b-3415f1141ea0"
        },
        "item": {
          "id": "c4a33504-e0f9-4aec-861f-f0169afa1ed2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0719d48f-c6d1-4e97-97c2-538fed9e28f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0126c6d0-f15b-41d8-b1be-e260c789caa7",
        "cursor": {
          "ref": "48582189-4840-460a-9047-d62d762324d9",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "25de2d15-84f6-4f2d-835c-a1f05671ce92"
        },
        "item": {
          "id": "0126c6d0-f15b-41d8-b1be-e260c789caa7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7a6db333-8a5b-4b6e-8718-07b640ab2aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83380fca-946d-4c29-a3e2-36ddee0bafbe",
        "cursor": {
          "ref": "8c7cd851-7cf4-4f40-98fe-9c8383da1017",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "76cc8eca-8180-4d05-9830-86ba49f625e7"
        },
        "item": {
          "id": "83380fca-946d-4c29-a3e2-36ddee0bafbe",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5e96bbde-1705-4b69-9eb2-7f903048e3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16c1ea8-c4d8-471e-be16-401105924f5d",
        "cursor": {
          "ref": "1bdc84c5-1b29-46e3-a2de-a3afcfd4728d",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c90fc24e-594b-430c-a17b-bae9a7d5f62a"
        },
        "item": {
          "id": "e16c1ea8-c4d8-471e-be16-401105924f5d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bca98953-84c5-4581-8346-141c9659bbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1049,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095df32e-584f-4001-aaf9-ca199cb51e9a",
        "cursor": {
          "ref": "48d23fa6-afdd-4b59-9144-d6ca27848a57",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5c239b86-8510-4c82-97f3-64b059d3d2bc"
        },
        "item": {
          "id": "095df32e-584f-4001-aaf9-ca199cb51e9a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d94b552d-ec5e-43c2-9913-ea84057f5377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 931,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f05122-4649-41f2-95a4-adba30993c9d",
        "cursor": {
          "ref": "cb1d953b-addd-4491-bfe1-8aaf0969e153",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f5a8c51b-b651-486f-8296-084b860eaac8"
        },
        "item": {
          "id": "04f05122-4649-41f2-95a4-adba30993c9d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bbeda66d-6fe6-4cff-ad7f-35d2475424d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1232,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a51b39a-d1e1-415b-ad76-af675b239312",
        "cursor": {
          "ref": "14cc9af4-46b0-47af-a678-f834ceb1b0f9",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "16cf73a4-831f-406b-8f18-dbab71a37398"
        },
        "item": {
          "id": "8a51b39a-d1e1-415b-ad76-af675b239312",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bcda4769-8552-4e51-ad4b-256b86c8bb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1594,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931e68fe-119c-4caf-9236-e19f583c54a1",
        "cursor": {
          "ref": "cb5f4f2f-0b84-47bc-ad12-d9ca1d25f03f",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4e35e82f-142d-4410-99e4-2358ef2d771e"
        },
        "item": {
          "id": "931e68fe-119c-4caf-9236-e19f583c54a1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2fac1b03-166c-46e8-926e-f47c4915e17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cff33e-0c23-4951-9cfc-b7492e37c604",
        "cursor": {
          "ref": "3ad524dc-d9b1-43c5-a00a-a9a0c3d68baa",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d0861543-a412-49a4-9007-41fef1bffb4f"
        },
        "item": {
          "id": "05cff33e-0c23-4951-9cfc-b7492e37c604",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "10ad7e13-bc8a-4ef1-a2cb-2a4c019c46ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2716a55-049d-4973-b4e6-53a6fe9c1390",
        "cursor": {
          "ref": "4edab1b1-ad00-4bf4-8c5d-62a8f46e6f1b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4e0e6fc2-e7dc-4991-bab4-8eda592fbc1e"
        },
        "item": {
          "id": "e2716a55-049d-4973-b4e6-53a6fe9c1390",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "23e040d1-db51-4101-b778-9bccc8b2393d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 174,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d370eb-c229-4391-9c64-3144513d41f6",
        "cursor": {
          "ref": "5032efb3-a546-4b87-9517-d755e723cf7b",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2414ee16-7fed-444b-a9cb-84271f334ecf"
        },
        "item": {
          "id": "04d370eb-c229-4391-9c64-3144513d41f6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "23c604a6-77ad-447f-939f-e26329db5365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1632,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b64dee-174a-477c-9a5c-8ee78674a700",
        "cursor": {
          "ref": "4d17eb14-7377-4ddb-9aff-32c99fc98feb",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "80eeedd8-21e9-44a3-a791-ec079bb34824"
        },
        "item": {
          "id": "c6b64dee-174a-477c-9a5c-8ee78674a700",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3e4356ab-4d02-4fb5-968c-bfb94ee57544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1045,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f3565d-d859-4a64-9db9-27e1ada7ed2f",
        "cursor": {
          "ref": "c7f4b9b5-171b-4f99-b7a2-24f7659ca2fc",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3175d3f5-9f38-4fd1-af27-59eba7ad92d3"
        },
        "item": {
          "id": "d9f3565d-d859-4a64-9db9-27e1ada7ed2f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bfc96463-c161-497c-8fb8-bf36446a2543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2018,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9eef331-8b3a-4091-ab5d-a83166cfe779",
        "cursor": {
          "ref": "e457e5eb-24a8-4978-809f-9b6783159c23",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3cfdb197-9095-4860-a0ed-b6efc066e629"
        },
        "item": {
          "id": "e9eef331-8b3a-4091-ab5d-a83166cfe779",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dbbe2aac-aa62-46fe-9aa9-1d70bd8bdb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790f7c90-b665-44e9-a813-5002bed8a958",
        "cursor": {
          "ref": "9cd4ff10-0817-458c-9d92-8b0f2af9018b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ca894305-c66b-45a5-a905-569f270fa65e"
        },
        "item": {
          "id": "790f7c90-b665-44e9-a813-5002bed8a958",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9db04425-9028-405d-a51a-2cd413f1e723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069e502e-9bfb-4383-9a0d-8027cb674088",
        "cursor": {
          "ref": "1cc039e8-5b51-48a5-8afa-9e11f1d2748c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "844478d0-a675-4cc1-8063-369017bb3891"
        },
        "item": {
          "id": "069e502e-9bfb-4383-9a0d-8027cb674088",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9ad409f2-5716-473e-ab16-cb01c94c1492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72589935-fbe1-434a-b6c2-3f93f00a6890",
        "cursor": {
          "ref": "79b11f62-f504-4274-8f6b-906be3361668",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2bc501ea-2de9-44bf-b632-6ab2cc730b86"
        },
        "item": {
          "id": "72589935-fbe1-434a-b6c2-3f93f00a6890",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1bad0bb2-9c4d-41c2-887c-64a7cb025442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1125,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6633fd1-975d-4acc-a965-1ef2c9168f83",
        "cursor": {
          "ref": "6d4d7ca5-5bd9-4084-98db-59b5c2a6f73d",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0a0d68bd-1bdc-407c-ba2a-d1c3b6887214"
        },
        "item": {
          "id": "b6633fd1-975d-4acc-a965-1ef2c9168f83",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "61611fcf-5c89-441a-9dca-610dfc782496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1283,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521ed44c-4add-47fb-b1b7-12d2577ae584",
        "cursor": {
          "ref": "0da9a4ac-2c77-430e-8b44-e7a25c2310f7",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "469d4940-f634-40d8-afc8-2bfa024ae706"
        },
        "item": {
          "id": "521ed44c-4add-47fb-b1b7-12d2577ae584",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "59b3df6f-b8fa-4da2-bfaf-1d8973eae2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0987f14e-4ab3-4657-8fc6-5722f779cc74",
        "cursor": {
          "ref": "98e75b4a-f0e6-4a71-86e8-348b6afaa4f5",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2266d306-f975-488a-9814-1237387a1067"
        },
        "item": {
          "id": "0987f14e-4ab3-4657-8fc6-5722f779cc74",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b0f86053-242d-4cfa-8a42-f60b5dd4f921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 953,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79134d7b-a452-4736-83cd-4ce4fd1ec7c9",
        "cursor": {
          "ref": "548a454a-d458-4689-83da-84b3d70085f2",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ba5e5751-6464-4b0e-8089-f41a764bf89b"
        },
        "item": {
          "id": "79134d7b-a452-4736-83cd-4ce4fd1ec7c9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4a1ef969-4286-42b8-ae8a-9c6ee661784d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f84b0e-d814-4b60-b4c4-37e1cfa3cd50",
        "cursor": {
          "ref": "bf581ee2-8b67-427c-abd3-9678b9277d5e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8e16b36b-ad7a-49a4-b6f1-a8b58da8b5d4"
        },
        "item": {
          "id": "99f84b0e-d814-4b60-b4c4-37e1cfa3cd50",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bdbf7f84-48e6-41c3-85ea-9d3abd5632f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e694596b-bebb-4759-8b77-043022721db7",
        "cursor": {
          "ref": "7306987f-3353-4431-a60c-a7fb735ea913",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5cc96f43-0104-49c2-8948-7b4dfc35c613"
        },
        "item": {
          "id": "e694596b-bebb-4759-8b77-043022721db7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "86e35277-d5b4-4c39-877b-f95919edaa3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b33e4a9-0a1a-4a8b-8580-3caf886cffd6",
        "cursor": {
          "ref": "4cbb6749-bbc2-46df-a0c1-f627d374aadb",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "74f99cef-8b4e-423d-8da3-63dc17eceafb"
        },
        "item": {
          "id": "3b33e4a9-0a1a-4a8b-8580-3caf886cffd6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "77a057ac-301e-4baf-95e8-b97f2a2dfdcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4983,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c830a878-587d-43ee-b18d-cc5fe75edf62",
        "cursor": {
          "ref": "264f5bc3-1e36-4db7-9b7b-523363d2adca",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5ba636c1-4bcf-4022-90d0-9253008bf0fd"
        },
        "item": {
          "id": "c830a878-587d-43ee-b18d-cc5fe75edf62",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cf3954d1-f248-4ef5-b9b6-58fb55a761f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c200d8e-2b26-4a08-bdf6-b217a1d3f65d",
        "cursor": {
          "ref": "2d24b34a-4f75-4c11-a1b4-a8a58ce85f83",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c6f6e6a5-fdcd-4d5e-a1bc-b5c8969f042c"
        },
        "item": {
          "id": "2c200d8e-2b26-4a08-bdf6-b217a1d3f65d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e498ae74-bc0f-4741-b6b3-ed62dff2f4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d185fb3e-20fc-481d-84fa-558cb0fe4c50",
        "cursor": {
          "ref": "dc09b40d-67f2-42cb-87ac-fd68a4e041f6",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "082428b2-e3f7-43b3-8826-264776c7c6c7"
        },
        "item": {
          "id": "d185fb3e-20fc-481d-84fa-558cb0fe4c50",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7f5101dd-86e0-49fb-8cdc-a6bbb5722beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1197,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28c2752-2b98-42e1-8ffc-ab34c07cd161",
        "cursor": {
          "ref": "2769dc71-ebb5-480b-86c5-9f62b2f956f9",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "705a111d-3e7f-4450-9ccf-43fe9d3a2ff2"
        },
        "item": {
          "id": "f28c2752-2b98-42e1-8ffc-ab34c07cd161",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cec8044d-1d54-481c-98a9-18918a364ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abccf067-2890-4fcf-8432-9506791e0562",
        "cursor": {
          "ref": "57a14b27-c4a1-40f4-ac69-45b0515a20d6",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7588bde1-4a27-4bcd-b630-558c36bf0d30"
        },
        "item": {
          "id": "abccf067-2890-4fcf-8432-9506791e0562",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8767c5c8-8364-4558-9f28-0443317ce2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1324,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e4121f-3075-4c0b-99a3-ea59cb9fb01a",
        "cursor": {
          "ref": "29c35bf7-22c7-41bd-8fc2-f75161e3511f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1cb7f59f-0461-4831-a651-3f74172cba5f"
        },
        "item": {
          "id": "b2e4121f-3075-4c0b-99a3-ea59cb9fb01a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0583c1cd-9522-427d-ab45-428ce1ba237e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c02ebf3-03a3-4336-92f7-28a37c868eaa",
        "cursor": {
          "ref": "e7ef6284-5906-4ce3-99fc-e9f54b8dbf88",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "990d2df1-7a32-4fc0-bcd9-16741a846a15"
        },
        "item": {
          "id": "4c02ebf3-03a3-4336-92f7-28a37c868eaa",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9798249a-8800-4ee2-be1d-82242de64e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c65c22-503c-4cbe-9617-670b9e20ffe3",
        "cursor": {
          "ref": "2303a85f-5b18-4341-a187-9c9b7e318bc9",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9d128913-8009-44ce-bde3-97812fc59f65"
        },
        "item": {
          "id": "a3c65c22-503c-4cbe-9617-670b9e20ffe3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e476954c-6900-4fec-96a3-b732296323e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6090a5d6-2a89-432a-ba39-6a51adbaee1f",
        "cursor": {
          "ref": "c5ffaefe-a94e-43a6-b5ce-eaf35b032d44",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "604ae357-5018-4ab5-a1c1-ab2c1624b7b6"
        },
        "item": {
          "id": "6090a5d6-2a89-432a-ba39-6a51adbaee1f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "69e08a65-a2ef-4d09-839c-ce268cbed737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833da2a1-f208-4ed8-b321-bbbfe9d95f13",
        "cursor": {
          "ref": "6e2fe5de-e61c-4139-8f87-16f3bc077f63",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "56dba065-77a8-49a6-bf6d-e9ab5d49876e"
        },
        "item": {
          "id": "833da2a1-f208-4ed8-b321-bbbfe9d95f13",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a32c3c96-111a-4aed-ad4c-bc15b2d27524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c95b58-2fe3-4cf5-9249-d1db37449511",
        "cursor": {
          "ref": "1a790597-f73c-44bc-a16e-43dc0d49b1ec",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e1ac6597-1d0e-4d80-9247-2c92016b649b"
        },
        "item": {
          "id": "97c95b58-2fe3-4cf5-9249-d1db37449511",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "472e689f-3179-424d-bb51-6a7770251890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e046c706-4232-4bb6-8a3e-5bb6de9cdd6a",
        "cursor": {
          "ref": "2ffcaf20-b564-4aac-99d8-1c1a14be0a1e",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c347ee2a-487e-4548-a153-163b4304ef18"
        },
        "item": {
          "id": "e046c706-4232-4bb6-8a3e-5bb6de9cdd6a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "eb508a8b-3a71-495e-ac90-882d58cc4ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9648c739-52f6-42f4-9b16-e24f4159e408",
        "cursor": {
          "ref": "ffcd45b2-bc31-457a-81f5-c52e6ffa9d04",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3fce14d7-4c41-4b95-a129-5bdab45a7faa"
        },
        "item": {
          "id": "9648c739-52f6-42f4-9b16-e24f4159e408",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2a3f0ecb-5448-4bf1-b44a-e6bce1d2901b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88344dc-96a0-4506-9da8-9ffa1cef8b61",
        "cursor": {
          "ref": "a5baf5a8-62f8-454f-841f-f4f428469b3d",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "89e74225-649c-4a27-ab67-85af57be7bda"
        },
        "item": {
          "id": "d88344dc-96a0-4506-9da8-9ffa1cef8b61",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "db1722bc-94fc-4cb4-9f16-d976f4d0d2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b595ba43-b97d-4df6-a910-17c44d36c6a6",
        "cursor": {
          "ref": "69ca904c-047d-457a-bfca-c614ebb1b48e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c3d47c2c-94db-42d0-9f63-8e1f515faa82"
        },
        "item": {
          "id": "b595ba43-b97d-4df6-a910-17c44d36c6a6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "682f6e08-40f7-4dc0-b853-44f9264f33be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c23b17-d213-4374-91f6-9c32e0ecb714",
        "cursor": {
          "ref": "64cc13a2-7861-4406-bdcb-bdade40c0658",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "223dafad-d4fd-4008-9cb5-dee4160f9599"
        },
        "item": {
          "id": "e8c23b17-d213-4374-91f6-9c32e0ecb714",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a8ccf966-ddbc-4d10-9932-1874f1267271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38a168d-b00c-4f8a-9fb3-350ccfd2be55",
        "cursor": {
          "ref": "516bed5c-356c-4b85-bc3e-62cdd1124ec5",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "33e43091-6979-4b5e-be32-3bd092bfcc3b"
        },
        "item": {
          "id": "a38a168d-b00c-4f8a-9fb3-350ccfd2be55",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4bf4ba74-87ed-4a38-bb17-e6ab9621d1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ce105d-baf3-43be-8aa3-4c350f47f2cf",
        "cursor": {
          "ref": "7a10d7d0-9297-4e29-9c93-70976b85e9b7",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5424c7d2-0f40-46a8-ba9b-805ce6205c75"
        },
        "item": {
          "id": "73ce105d-baf3-43be-8aa3-4c350f47f2cf",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e1d90359-6a2e-4c21-96df-462e8f43d068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0857883e-1c44-4d2c-b248-c0052dae8a1a",
        "cursor": {
          "ref": "fde86353-5978-4158-afad-df35ba873fa5",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6179af92-e6b1-4af2-85da-71463fe1870b"
        },
        "item": {
          "id": "0857883e-1c44-4d2c-b248-c0052dae8a1a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6858082e-8e85-44d0-b309-31b85817022d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3a162a-9042-4aad-8dae-7a72c19a9acc",
        "cursor": {
          "ref": "fc644d57-c075-4060-b314-37cf996702fe",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3099de28-d221-4575-a2cf-7d301055502d"
        },
        "item": {
          "id": "ae3a162a-9042-4aad-8dae-7a72c19a9acc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6378f56c-9dcd-46e0-9cca-28d70e836854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab57cfc2-3d57-426c-999e-4412d983918b",
        "cursor": {
          "ref": "ede8e4ae-d180-4e48-924c-8eba22efe442",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "549e2e6f-c0ba-46c4-bbfe-539dcaafa8bd"
        },
        "item": {
          "id": "ab57cfc2-3d57-426c-999e-4412d983918b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fca28643-4a70-452d-9bd4-9c327e7bd62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5828e7bd-b9df-4424-abad-66fc4cea68a1",
        "cursor": {
          "ref": "944e10f4-fe72-40c8-883b-2a20efd55f07",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7698ceba-a389-4984-8845-d19490e85006"
        },
        "item": {
          "id": "5828e7bd-b9df-4424-abad-66fc4cea68a1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "aaa6c04c-f359-4942-9c8a-d2d7e96d97dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6b791d-4567-4f24-8e03-1f18ef953878",
        "cursor": {
          "ref": "b93ccc89-de40-4d65-b2c5-7895a5cca0cd",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ac82d6f6-49d6-4e4a-8b4c-3dcaf4e642d1"
        },
        "item": {
          "id": "ae6b791d-4567-4f24-8e03-1f18ef953878",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6ed4454a-1d07-4645-bd16-a9240f11076d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d491a70-c5b4-4aa7-85a3-0bf5f1bea598",
        "cursor": {
          "ref": "11f8a720-2bab-4758-8d3b-ae92ebc7f265",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9d7a5d97-2b3d-4d76-8183-b8367340f39c"
        },
        "item": {
          "id": "8d491a70-c5b4-4aa7-85a3-0bf5f1bea598",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "16549063-945e-4dd6-93d9-f61e5e401fca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93e1bce-d18d-44e2-8112-352cdf3bfcdd",
        "cursor": {
          "ref": "4d4d7cad-c779-492f-b656-ef281d3f5c67",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f2c84200-bc0b-421f-8272-859b3a4ba474"
        },
        "item": {
          "id": "a93e1bce-d18d-44e2-8112-352cdf3bfcdd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9f87bc08-62b4-4b70-a357-a5d28c0a38f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532af29f-19cb-4030-8f05-f58c2a9bf62f",
        "cursor": {
          "ref": "a7127361-15d7-4994-814e-0ad70b182192",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8b1b7ea5-c163-4f86-8981-2053857afe3e"
        },
        "item": {
          "id": "532af29f-19cb-4030-8f05-f58c2a9bf62f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fe1c196a-45d8-4c4d-a270-4bf4951fb37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0119fb45-2b58-430f-9a2d-7fdba3deafed",
        "cursor": {
          "ref": "213cce73-da7a-4f45-b85a-811e3796c463",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "597e3cff-3205-4b82-844e-3dd9c22339a1"
        },
        "item": {
          "id": "0119fb45-2b58-430f-9a2d-7fdba3deafed",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5eee9180-e7dd-4ec3-afb2-74ae1f4cf78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c446c69a-552c-42cf-b5cd-c75d4b70286d",
        "cursor": {
          "ref": "f8143571-2431-4631-9679-98cc8623927b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "373a6f06-c3ab-4234-af9f-8da828a382fa"
        },
        "item": {
          "id": "c446c69a-552c-42cf-b5cd-c75d4b70286d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f74e330f-b80a-478b-92d4-b184fbf85c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e8834c-51ab-469d-a5c2-43dabe1e7a4d",
        "cursor": {
          "ref": "cad653de-6170-4952-90ab-eb4230e1e8f7",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "673f2a3c-0802-4c1e-8fa8-0463fb40affb"
        },
        "item": {
          "id": "38e8834c-51ab-469d-a5c2-43dabe1e7a4d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f6c33e1d-741c-4633-8bdb-9eb6a5542d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c029776b-a042-4840-8307-3d5d525b973c",
        "cursor": {
          "ref": "7eb47af7-4e44-45fb-98f8-10d7617b3608",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "71f74d16-044b-4535-b0ec-10c93be30f7c"
        },
        "item": {
          "id": "c029776b-a042-4840-8307-3d5d525b973c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "92efc479-3bbe-412c-8ae6-559f707e6b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4024ea-1bde-4bb2-b2f3-330147abe99b",
        "cursor": {
          "ref": "c0eae3b7-14fc-45f3-a89f-c1ad9accd204",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4b14b035-4bd3-4e2a-bf89-ff33e1c038f0"
        },
        "item": {
          "id": "5c4024ea-1bde-4bb2-b2f3-330147abe99b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0c80bace-276b-4ee1-9081-38ee5d12f187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54fc0a9-85fe-4435-9850-fa34d8a80e9f",
        "cursor": {
          "ref": "620b9f05-d66b-431a-9357-58c19226944e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4c250f24-9eb5-477e-a31f-84b85def5a59"
        },
        "item": {
          "id": "a54fc0a9-85fe-4435-9850-fa34d8a80e9f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6f01e294-1ab6-48f1-ac88-66cf914a9f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512ee4d0-07cb-45a8-a0d1-9ac8c7345405",
        "cursor": {
          "ref": "98b483c3-9cb6-45d3-a1cc-c70726fa7a8b",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a3e8198e-2503-4ded-a3c0-8e9f464bc29b"
        },
        "item": {
          "id": "512ee4d0-07cb-45a8-a0d1-9ac8c7345405",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "656a48de-6fb0-4b8e-afed-e657d8e7e58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f69757-bd1e-43ed-a5ae-59feeb2f767d",
        "cursor": {
          "ref": "07658bf0-2671-4014-b79f-ffe24ec7646d",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ed5c2379-9e93-4994-b70c-4886dc80759f"
        },
        "item": {
          "id": "47f69757-bd1e-43ed-a5ae-59feeb2f767d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "247ab3cc-aa70-45bb-9504-25063f324723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cc668f-2d42-49ce-953f-490f1c9237b9",
        "cursor": {
          "ref": "121b7cf5-0b0f-4741-a4f2-b3fe41305ece",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2a424520-8165-414a-8d2a-d1db0fabf27c"
        },
        "item": {
          "id": "d7cc668f-2d42-49ce-953f-490f1c9237b9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "55276faf-66a7-4f39-ad2a-3ed0537f399e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c41728-4c36-4826-8248-f7a7e1f9ccbc",
        "cursor": {
          "ref": "19a816e5-9598-4580-8212-b13e47a55951",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8a59eea7-af1b-4b71-995a-bb48e1b3b2cd"
        },
        "item": {
          "id": "90c41728-4c36-4826-8248-f7a7e1f9ccbc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e1012f45-7b30-4876-9f52-c432cff3433c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5c9e74-750b-4892-b23a-43fa95cd5c2e",
        "cursor": {
          "ref": "cc0cf586-49a8-4294-ad3a-b8d542da621d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5598902c-b88e-4431-9961-927d9011cf40"
        },
        "item": {
          "id": "ad5c9e74-750b-4892-b23a-43fa95cd5c2e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "32fa7f98-ba1d-4da4-aab0-e524aaf47b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5648022-e700-49a0-8fac-c8701498af14",
        "cursor": {
          "ref": "8757960e-582f-4db0-8aac-541ed9ffd2d9",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "32f77081-fd94-4bc2-b569-81b81dfb3090"
        },
        "item": {
          "id": "f5648022-e700-49a0-8fac-c8701498af14",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b4d0f331-071e-4daa-8861-d59de762992c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2eac33-690c-469d-8e72-6c7980d4191c",
        "cursor": {
          "ref": "74ab91ee-c850-4ce4-84a1-aa405fc3718d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e1b91c23-825f-46fc-a1bb-d5c28b076188"
        },
        "item": {
          "id": "db2eac33-690c-469d-8e72-6c7980d4191c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "aa64536a-8d73-4a70-bb3a-3a17f3d36d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78efa309-72da-4e12-867a-ffe42a716f48",
        "cursor": {
          "ref": "e3c0d862-092f-473a-a0de-830218deef9f",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6678ff57-685f-456e-b3a8-d818fdda3c71"
        },
        "item": {
          "id": "78efa309-72da-4e12-867a-ffe42a716f48",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1948624b-37d9-4335-88bb-f0eeb55f3fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0b8421-6e52-42ea-be7e-eb2cf061fcb6",
        "cursor": {
          "ref": "e5f0243f-e7ef-44b7-b738-27a788ca8105",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3c7c58f3-cc16-4886-8348-80f9673a6ccf"
        },
        "item": {
          "id": "fc0b8421-6e52-42ea-be7e-eb2cf061fcb6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "efd9526f-3c68-4ea9-b130-6987b1804992",
          "status": "OK",
          "code": 200,
          "responseTime": 216,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "686cb8c4-df92-4099-acc6-9593e2909ad0",
        "cursor": {
          "ref": "9fcc2c48-6918-48a8-99ba-61794eb78ea9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "58a697cd-3ab7-47f6-ab0b-9e53882cb0d1"
        },
        "item": {
          "id": "686cb8c4-df92-4099-acc6-9593e2909ad0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6573fbfd-b100-4908-bd24-50f578f43e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a017811-9f50-46a8-a451-c12ee0442a1e",
        "cursor": {
          "ref": "63bbd26c-6ad1-472c-a8eb-21bbceb7f6d7",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "83c28f40-00b1-4e9d-a75f-8d5cbd04da2a"
        },
        "item": {
          "id": "3a017811-9f50-46a8-a451-c12ee0442a1e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a89ab6c4-1587-4484-a782-0c9f34f6052e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47cb1b3-3770-4c0c-a6a7-c5e80b4d5516",
        "cursor": {
          "ref": "066cdc0a-3cb1-496d-bd4b-4fc67304e594",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9f72e107-fc81-4244-bd51-654145c8a7d9"
        },
        "item": {
          "id": "f47cb1b3-3770-4c0c-a6a7-c5e80b4d5516",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "74d1b92d-5b77-46d0-9414-25b9bca1052b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534241f1-34ca-49a3-a009-0e81271de5f1",
        "cursor": {
          "ref": "87b5aa4b-b6dc-4a9d-a601-abbb006d937f",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "167f640b-ceb7-4810-82e6-6b77845cc8bc"
        },
        "item": {
          "id": "534241f1-34ca-49a3-a009-0e81271de5f1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c3513a4e-f9ec-49a5-ac39-6700d24ee4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f940af-1e5c-48b1-a5b9-3592ba55d9b6",
        "cursor": {
          "ref": "416070b9-dd52-4208-9350-059542f68457",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2dc4497c-0504-4a25-b8b7-a066d2af4ed1"
        },
        "item": {
          "id": "07f940af-1e5c-48b1-a5b9-3592ba55d9b6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2e211172-edff-4f78-9f62-52b740008b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9b0694-e49b-4732-b5aa-5e924fcdd01e",
        "cursor": {
          "ref": "6750194e-76ea-4e9b-9a0f-a8984be95974",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bee67dac-d9f8-4b2a-bb27-4b75b20d61a5"
        },
        "item": {
          "id": "4d9b0694-e49b-4732-b5aa-5e924fcdd01e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ff64932a-3c57-4bef-9f26-fd7f699b1728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f89333-489a-41d1-8911-a04ab3e20f79",
        "cursor": {
          "ref": "9f2a3880-4c58-412c-95c0-19236a405f41",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "209c9a8c-1bd6-482e-bf25-2cf712e52d69"
        },
        "item": {
          "id": "39f89333-489a-41d1-8911-a04ab3e20f79",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ee7a785d-8196-41b9-b796-561d0c7ed571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f03c24-cb09-40e4-b19f-6155fbd98592",
        "cursor": {
          "ref": "b0eeb82e-17e5-48d5-a5a4-fcbdcded2b20",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "35bf15c0-874c-435d-a12b-889be131a35d"
        },
        "item": {
          "id": "65f03c24-cb09-40e4-b19f-6155fbd98592",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6f63d179-b348-424b-ba32-bf14e06253f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2e9f34-4721-4332-a07d-3146b5dbec47",
        "cursor": {
          "ref": "11d20be5-155b-4b90-969c-8e040130fc69",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5076d893-ce87-430a-92df-3849a445f35b"
        },
        "item": {
          "id": "5a2e9f34-4721-4332-a07d-3146b5dbec47",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f35c711f-8e5c-485e-951c-c46d01af7d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98d17db-7465-48a7-bfb4-b6882106aa4c",
        "cursor": {
          "ref": "4f7b914e-bfdc-41d0-af93-4f667d4d5fbe",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a38dad05-657f-47ba-8b6c-8edcc170b9e0"
        },
        "item": {
          "id": "d98d17db-7465-48a7-bfb4-b6882106aa4c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "633d7268-bd68-46d1-a1f6-cd4ff766a408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63da01bc-4876-4ab9-b3af-58d4f867d614",
        "cursor": {
          "ref": "c9bf8a58-2eb4-4f51-a0fa-f66847d7b705",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8af953e6-1b1c-417e-b29a-0f9932f97903"
        },
        "item": {
          "id": "63da01bc-4876-4ab9-b3af-58d4f867d614",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c9a19694-dce0-4535-b6f7-c5d2d98f3991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae04e89-88dc-4d06-bc83-2c24964e226d",
        "cursor": {
          "ref": "f6b837b0-b884-4a8f-b187-9171e79bb8b1",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "43f7c961-361c-4337-882f-9235c38f97c1"
        },
        "item": {
          "id": "fae04e89-88dc-4d06-bc83-2c24964e226d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5b01e768-1317-4c91-9146-0ae7e077e111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5479b636-4d7d-4b7a-b05b-738951257cef",
        "cursor": {
          "ref": "a4948561-c80a-4cb7-80f9-7205dfbbcf64",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1df0fdb4-f14d-482d-85dc-92dfbd925ca1"
        },
        "item": {
          "id": "5479b636-4d7d-4b7a-b05b-738951257cef",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4762ef4a-116d-48f5-976b-ffe616e1e0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2553dec2-1bc6-4c62-adca-f1d0c1233fc6",
        "cursor": {
          "ref": "080c0c30-044e-4e0a-ad4c-a010178c97fd",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "20527e1b-5114-4823-a72f-659bf388d2fe"
        },
        "item": {
          "id": "2553dec2-1bc6-4c62-adca-f1d0c1233fc6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a6640714-b3ec-4428-9ddd-db719fde296f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dece7957-f6b3-45d3-ba4e-a3559ef3da99",
        "cursor": {
          "ref": "c39d97c4-2571-46f9-8f53-ae76e81a295c",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6146c8fe-6e96-489d-8915-ec9f9f6bf182"
        },
        "item": {
          "id": "dece7957-f6b3-45d3-ba4e-a3559ef3da99",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2aa04ba7-859b-4c28-be4a-6e21a6061e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c2ed23-85b0-4ebe-9afa-b134b5caf083",
        "cursor": {
          "ref": "4e58a0ee-b6d5-48c7-85f4-06b15427c9f1",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d4a5e6cd-6f9f-40e7-83a8-ee350288e94b"
        },
        "item": {
          "id": "04c2ed23-85b0-4ebe-9afa-b134b5caf083",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b6fd2410-b56c-4ebc-b2d5-3268ecbb246e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97492a8b-9391-4ca9-94f3-cbe31bd7ac78",
        "cursor": {
          "ref": "aa7590ca-3c3a-4e98-b2c7-fc6eaf179c63",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "22c91cf6-5425-45be-9949-1dabd4b8ed74"
        },
        "item": {
          "id": "97492a8b-9391-4ca9-94f3-cbe31bd7ac78",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "529f03dd-f85b-403c-a0bf-eb70c0e6823b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b83eca-2bee-4394-a99a-a1f9494dba97",
        "cursor": {
          "ref": "3f2722b6-fabf-49f4-b4a0-f1ecd94d2225",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "eb901888-9e0f-452e-bc7b-39de3f21b049"
        },
        "item": {
          "id": "b4b83eca-2bee-4394-a99a-a1f9494dba97",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c9ab857b-fb64-486d-a425-115fdbf03cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d1430a-5891-423f-a504-39fb1eb031fc",
        "cursor": {
          "ref": "e2bbc379-b37c-4605-b000-26a37460c08f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ece0c741-1010-415e-b51c-c8571a068a04"
        },
        "item": {
          "id": "a9d1430a-5891-423f-a504-39fb1eb031fc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "289a82d3-e93b-4ccc-b100-c4cb081ce4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1779ef-51a0-41ee-933f-c33c7ab916eb",
        "cursor": {
          "ref": "d606bf84-5622-433f-a0fd-3db1ca510661",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f8a54604-9818-43b1-8840-0b3bd4eea811"
        },
        "item": {
          "id": "3b1779ef-51a0-41ee-933f-c33c7ab916eb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c5e773b7-3459-42ef-b77f-5f01805bd20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747e3f5f-fb08-499d-9db2-e1c02885a21b",
        "cursor": {
          "ref": "49fc742c-77d7-4c0b-b654-c57655dfc779",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a735c596-5845-4139-a14d-3eb69ce8c225"
        },
        "item": {
          "id": "747e3f5f-fb08-499d-9db2-e1c02885a21b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "82840956-8d43-49c7-b113-c82d5ace3bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f36f460-c478-4d9d-886a-9db39c096b5d",
        "cursor": {
          "ref": "19a8ea1a-5c91-4847-80d4-baaf98627836",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "833382a1-3f4a-445f-ba58-62d484791f10"
        },
        "item": {
          "id": "7f36f460-c478-4d9d-886a-9db39c096b5d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "35d0c5ce-8744-4973-987c-945f03b166a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bad1b3f-5f44-40bf-a56a-d185f6d52797",
        "cursor": {
          "ref": "32dde203-7c46-438d-9916-3fa7601c6cfb",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "06c36eb6-462c-4325-bf47-28e9e816af12"
        },
        "item": {
          "id": "0bad1b3f-5f44-40bf-a56a-d185f6d52797",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d8b8f4a3-9ede-49f0-b986-f98a52aab94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8db4d4d-ee1e-421f-8523-42a01364287a",
        "cursor": {
          "ref": "feb809db-0480-4df2-b81d-a638fd76616c",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8204f59f-c034-4f98-92ca-b3f1ff2467ca"
        },
        "item": {
          "id": "b8db4d4d-ee1e-421f-8523-42a01364287a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "65fa37df-4c7c-443e-9147-aaf9d1a83f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e421a0f7-683e-4d5a-a63b-a78f55e22946",
        "cursor": {
          "ref": "f4584b13-197c-4eef-a937-dcb7a251f6ce",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cc2d5898-7e39-4dd3-bd59-97301640b241"
        },
        "item": {
          "id": "e421a0f7-683e-4d5a-a63b-a78f55e22946",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "932aa109-2e90-45ad-995b-a7ab0060bab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858c6af4-ae28-4891-b216-3d7d3fd5172b",
        "cursor": {
          "ref": "fe828f59-8e52-4529-a0bd-98ac5c95b7d9",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "45072fc8-52e4-456b-a3c1-dd2a5947dcba"
        },
        "item": {
          "id": "858c6af4-ae28-4891-b216-3d7d3fd5172b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0ae8a686-e312-4832-8dcd-3cb10782668c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85864b11-82dd-4bd1-b7bd-73840fd1e8fa",
        "cursor": {
          "ref": "ac4751d7-e67b-4e69-a2f3-e8360dd2ffac",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9f3ab6f1-50d2-4793-812d-31f385bd1bcc"
        },
        "item": {
          "id": "85864b11-82dd-4bd1-b7bd-73840fd1e8fa",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a3ebaadb-896f-437f-9ef8-2e65f6a5c9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e71db17-55a6-4af2-a88c-e775e05921ec",
        "cursor": {
          "ref": "b6382166-0a94-49a8-abef-d8071532e148",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "85291be8-9242-4773-aa45-fcf995e11b53"
        },
        "item": {
          "id": "7e71db17-55a6-4af2-a88c-e775e05921ec",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0193bbe1-69ec-4e67-ba85-47075045960e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228e3474-add5-414d-8729-ef3b46f3ccef",
        "cursor": {
          "ref": "11a41f48-5dd7-4020-bc43-97d94c5ae144",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "006b0f25-17fd-4be3-9d4e-f416b974ceab"
        },
        "item": {
          "id": "228e3474-add5-414d-8729-ef3b46f3ccef",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c6e0c633-f3f3-416c-b5b9-03c525540c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79866ae9-0f87-4fc2-b4a4-9e2733257941",
        "cursor": {
          "ref": "96e59022-4b84-48bd-9471-c8d7d497e140",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "57fabba1-f906-437e-8ec1-61b55194653b"
        },
        "item": {
          "id": "79866ae9-0f87-4fc2-b4a4-9e2733257941",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4a76d964-a7ae-424b-85e0-3a40f26ba514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b679490b-5a77-4025-ba63-598db639ddf6",
        "cursor": {
          "ref": "ea7bea82-f4ac-4146-bdae-bbda7ccf2f43",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8b78378f-0308-42ab-8b9c-9af7e1bcd4a5"
        },
        "item": {
          "id": "b679490b-5a77-4025-ba63-598db639ddf6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "97c032cf-889c-471c-b8cb-2b60866c1fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9da9fb-40ee-44de-aa23-fec02541b8c7",
        "cursor": {
          "ref": "fd6582bd-7d2f-4cb3-b383-9c8e5c316576",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bf7bfb7d-4c41-4e27-bdc8-7d17d9d22d6a"
        },
        "item": {
          "id": "cc9da9fb-40ee-44de-aa23-fec02541b8c7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "df13c262-0cff-4668-8b25-5476ad6f2242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c147401c-52dc-4428-b638-3586908028f8",
        "cursor": {
          "ref": "2668455f-4ce3-4391-86fe-9942219ff967",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fefaf312-8e3f-4797-b410-69238e050746"
        },
        "item": {
          "id": "c147401c-52dc-4428-b638-3586908028f8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f71b6d72-fb31-436d-8b1c-9a146a800c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45dc450e-0e8c-4bec-8957-c3788a488fb1",
        "cursor": {
          "ref": "dc8c3fb4-2787-48ab-892d-2df4c02e8d13",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "743a718a-8762-4090-af75-0d1835338ec6"
        },
        "item": {
          "id": "45dc450e-0e8c-4bec-8957-c3788a488fb1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2d5abca3-1fad-4683-868a-25a8ba6e39ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174f225c-7fff-44f7-8b19-c163b22b930c",
        "cursor": {
          "ref": "f7f1ac92-0a61-4564-8059-f361c5656c6c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fa9f1b2c-b447-4b2e-a561-20bf21f31608"
        },
        "item": {
          "id": "174f225c-7fff-44f7-8b19-c163b22b930c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5bcb4476-cc22-4c8b-978e-c01f110df710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12cce63-9b2d-4ab1-802b-656b5280e1c0",
        "cursor": {
          "ref": "31bd7588-0adc-44c3-b65e-b2fc15cf3900",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "634aee3d-081e-465b-8c75-49a47f1b63eb"
        },
        "item": {
          "id": "f12cce63-9b2d-4ab1-802b-656b5280e1c0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8e5604be-09eb-4b03-b6b7-b48c983f08c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca5ea0e-c0a3-44c3-b435-eee5b8f3a7fa",
        "cursor": {
          "ref": "0fcfdad8-4361-4e37-8990-9348c3723488",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7d492a6e-0415-48e0-9a21-02dfe8cb35c0"
        },
        "item": {
          "id": "9ca5ea0e-c0a3-44c3-b435-eee5b8f3a7fa",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "96496ef1-06c0-4046-9c10-390249f7dc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211c5b74-4725-4ab9-a27e-5e3342ddad16",
        "cursor": {
          "ref": "8823f6d3-92eb-4c16-bc9d-43064efb1695",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "95d0e299-bf21-4393-a522-2b3d2ab4bee4"
        },
        "item": {
          "id": "211c5b74-4725-4ab9-a27e-5e3342ddad16",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a5b1b444-fd49-48e6-8362-404a7aa40019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b4de8e-c5a5-41da-a369-6eb28cb5ad46",
        "cursor": {
          "ref": "32c46b53-0f40-4e14-a245-59d7e2ddeb81",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bcc59a23-c27e-4fcc-9938-6ddbc7cc1d79"
        },
        "item": {
          "id": "49b4de8e-c5a5-41da-a369-6eb28cb5ad46",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "330e4e94-a2bf-4463-a402-c167f2bfb106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814ed064-f1f5-4bc6-a985-0bc841b820a9",
        "cursor": {
          "ref": "0a220a8f-6def-47f5-b807-faee8ab72b6b",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "73b3d689-8c60-4a50-903a-d607282ed3b7"
        },
        "item": {
          "id": "814ed064-f1f5-4bc6-a985-0bc841b820a9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "56decbdf-b426-4e9b-9c7d-a924f5b9caf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f96531e-1fe7-449b-b9fa-dc0c85279517",
        "cursor": {
          "ref": "25050192-79b5-44bd-b863-c23abc4ed867",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "37953fb5-8a88-4770-8287-0776d4180f53"
        },
        "item": {
          "id": "0f96531e-1fe7-449b-b9fa-dc0c85279517",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f136dce1-3523-485c-9559-3b233981f1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce1158d-fa38-47d3-9de5-11753caf1ebc",
        "cursor": {
          "ref": "42f6ef60-4ae2-4370-8d48-6c2067322467",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "43b36990-a20a-4466-bb9b-1dc8ac7532b6"
        },
        "item": {
          "id": "0ce1158d-fa38-47d3-9de5-11753caf1ebc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "47b09b9e-7a3f-4891-b228-dbb1bdd85cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77399d18-1f22-4b66-a181-66ea4ad6de60",
        "cursor": {
          "ref": "e7fc368c-1c92-4c3a-988d-3e7e7762e64d",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3e900ce8-5fc8-47ef-a0fc-4985ba0ae353"
        },
        "item": {
          "id": "77399d18-1f22-4b66-a181-66ea4ad6de60",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bfd09d0c-bb97-4ed3-8875-f81891030f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b95ce0d-4484-4499-9368-ad613dc0ada2",
        "cursor": {
          "ref": "98664062-a56b-4485-915f-a3fbfb4ed1c8",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d1f3eae8-4529-43ca-9bb3-97fd599407af"
        },
        "item": {
          "id": "5b95ce0d-4484-4499-9368-ad613dc0ada2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "866f65cd-9217-43b4-9584-23699c8c5c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776a84f0-87cc-455f-8348-d4be6564778d",
        "cursor": {
          "ref": "6ca5edfb-0613-4d87-83df-76fb8cf26f0f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d9d0cad9-5ba7-4147-9866-11cd8588cead"
        },
        "item": {
          "id": "776a84f0-87cc-455f-8348-d4be6564778d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6a3d1881-90bc-4b7f-8669-0afa88b86f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41465a6-5b54-4191-9c9f-107fb6fa4b61",
        "cursor": {
          "ref": "deafabaa-e470-4273-975a-35dcabd88d2f",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e9c3b2e9-ae57-4a54-bbda-fe6300418e60"
        },
        "item": {
          "id": "d41465a6-5b54-4191-9c9f-107fb6fa4b61",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a919343f-1e0c-43a4-83ce-687b0f64e75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af99d801-1095-4160-a4c0-97e15120b2c3",
        "cursor": {
          "ref": "b37bc20f-de5f-491f-88ec-ef0066fbb139",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ef65b7da-5199-4762-9adb-d4e596c5371a"
        },
        "item": {
          "id": "af99d801-1095-4160-a4c0-97e15120b2c3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e6dbe536-967e-4b38-9c19-81acbcebcc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013073ab-9487-4e13-8a83-bbc432f192b6",
        "cursor": {
          "ref": "4ab63e8f-08c7-4b9f-a50b-e4a5f377e060",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9f5c0227-2fc7-4711-86f5-691681450c2f"
        },
        "item": {
          "id": "013073ab-9487-4e13-8a83-bbc432f192b6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0b530ff5-63d1-49d4-b910-3facdef5ef6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b9b0a7-a0dd-42a7-8a8c-5b28e8704b16",
        "cursor": {
          "ref": "51f04694-6c46-42b4-9329-ab38ef3e928e",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "63d3ee6d-bea0-4cee-9f09-5082898398ec"
        },
        "item": {
          "id": "02b9b0a7-a0dd-42a7-8a8c-5b28e8704b16",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6befbb5d-9a04-4221-a292-faf8e6febe06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399323c4-47ac-42c6-9e14-84803a4b2c50",
        "cursor": {
          "ref": "1b36ca56-6cad-4fff-9450-fa8882c0bf50",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3ce55a45-f750-4787-93cf-716088cb3432"
        },
        "item": {
          "id": "399323c4-47ac-42c6-9e14-84803a4b2c50",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "76c417d2-5cd0-4da4-9e52-d6134a229d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add0d78a-3550-4c54-ae27-e2ddee2bce4f",
        "cursor": {
          "ref": "df738db0-f4f7-4fe8-9f02-40f08d834399",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d7195933-a429-46f6-9aa1-3baf41fc7a21"
        },
        "item": {
          "id": "add0d78a-3550-4c54-ae27-e2ddee2bce4f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "aec7d1ed-6e85-42ed-9a1e-ff4c1202abcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d6fff8-93e1-441f-be33-250c6981a1b9",
        "cursor": {
          "ref": "f9395d1a-a75c-4fb6-ae42-35ee286f111a",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c1d8d597-5a96-4703-970c-ef6bdb4ee8dc"
        },
        "item": {
          "id": "04d6fff8-93e1-441f-be33-250c6981a1b9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1a8d47d5-963b-4828-a9d3-99d0110cbb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2a29b6-0213-4ecd-b3c4-4cc9ebd324e4",
        "cursor": {
          "ref": "c492fddd-9ed5-4f58-9d71-7bda84c09078",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9cbfd343-462c-420c-8c4a-3c5065727999"
        },
        "item": {
          "id": "ad2a29b6-0213-4ecd-b3c4-4cc9ebd324e4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d2ffc5d9-6642-4ed9-8de6-0b9cbc31342a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee1135d-7fc0-4698-966f-9de65cf7c638",
        "cursor": {
          "ref": "a7c4f356-e6ed-43a5-80ba-976babb84302",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cc807766-036a-4b26-9806-5b136b2838c2"
        },
        "item": {
          "id": "9ee1135d-7fc0-4698-966f-9de65cf7c638",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8a22d66c-4061-4fba-a9ae-4ed98b6c2376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742ae082-099a-4f71-bb26-f1b13e29af6d",
        "cursor": {
          "ref": "3642a0f2-4dc3-4108-9c42-dab71de12b40",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ecba0a1e-e701-42f9-8e3a-55d50dbc1de1"
        },
        "item": {
          "id": "742ae082-099a-4f71-bb26-f1b13e29af6d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e697e376-54b5-4af6-ade2-33580878d0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06bc0dab-6476-4f36-9287-855eeaa6a9d5",
        "cursor": {
          "ref": "c1ae0d4d-ad6e-475f-bca5-a01c34f9a34d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1f9f948f-7d4b-4e3a-a24c-50cc1557b522"
        },
        "item": {
          "id": "06bc0dab-6476-4f36-9287-855eeaa6a9d5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b52b8d25-68b0-4b28-bfff-9c65c9666e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5e31e7-b23a-4f32-adc2-6d57ffec0aed",
        "cursor": {
          "ref": "58dde4be-15db-4b56-9428-4dd663bd7593",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "aea4d8ad-3096-4c4c-a1b3-ecca54af9ee2"
        },
        "item": {
          "id": "1e5e31e7-b23a-4f32-adc2-6d57ffec0aed",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cfe4f1e0-b454-4407-83fe-bab67d2698a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0420acdc-2c7d-4701-9a3c-d553b3b9fd28",
        "cursor": {
          "ref": "f98d55b3-b0ea-4ffb-8ae9-751b26a2c19e",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7db24790-9b78-4ec4-a4f4-1819b0b70d29"
        },
        "item": {
          "id": "0420acdc-2c7d-4701-9a3c-d553b3b9fd28",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3859a51a-d50c-45e0-b996-4a87283b9ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df5b77c-d1b7-4ab7-a6dc-1c9fc7ac61b1",
        "cursor": {
          "ref": "1c0bdc8c-ef15-4406-aab0-898f69662674",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "33ce7e9a-fd28-40c4-8fbc-fb2945c018df"
        },
        "item": {
          "id": "6df5b77c-d1b7-4ab7-a6dc-1c9fc7ac61b1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c99743b4-ce97-4c27-9703-0a3ad109f1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7c3be0-1bcb-41aa-afe8-15110e844e5c",
        "cursor": {
          "ref": "93cc4c45-5024-409f-ba19-af30b49d0766",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6b5eb4e5-a493-4a80-8eb9-df8236cbaac2"
        },
        "item": {
          "id": "4e7c3be0-1bcb-41aa-afe8-15110e844e5c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9b07a137-b350-4717-baa1-657890cebfc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c68570-7059-40dc-b53b-d0b97adc5514",
        "cursor": {
          "ref": "dbef8bdd-1468-403f-b7a7-2123114f5fd3",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8c8ff3e7-7559-4784-81b6-129c193bfccc"
        },
        "item": {
          "id": "54c68570-7059-40dc-b53b-d0b97adc5514",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "45565608-0c58-4642-8401-6b25e5ba1cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ce1501-63f1-421a-9e9e-ea9811e21d48",
        "cursor": {
          "ref": "6c0653be-17bb-435c-929a-2879fd9185b0",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f4cddfea-8afb-42e5-9dfd-4848dc3ff5eb"
        },
        "item": {
          "id": "56ce1501-63f1-421a-9e9e-ea9811e21d48",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6e279a92-6025-4813-aff8-2952c75ae45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49977c3c-ddba-4bce-ab65-60138f57642b",
        "cursor": {
          "ref": "46ed53ae-7246-4d51-8653-71c84ceb3ec9",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "00d2a57c-3d4b-4351-be9e-c747aa4a0f18"
        },
        "item": {
          "id": "49977c3c-ddba-4bce-ab65-60138f57642b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "edd4f8a4-4e81-4461-bea1-2d460cf05c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73fbab0-d606-4a6a-b2a7-542c8ad4c66c",
        "cursor": {
          "ref": "cade9d2d-12a7-41ce-9e27-94b147a6ad4c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4943e41f-fbed-464e-9cbf-88c87ef0ea6b"
        },
        "item": {
          "id": "d73fbab0-d606-4a6a-b2a7-542c8ad4c66c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a8e1f6c7-a5f3-4dec-8997-f33eaf741b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03bf57f-ba92-4cfc-9ba2-2d4c133ce583",
        "cursor": {
          "ref": "1894a740-0140-49e0-bb4c-14d0ac35d4da",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c69d2966-6e67-4a0f-a143-ea03fd3040cf"
        },
        "item": {
          "id": "a03bf57f-ba92-4cfc-9ba2-2d4c133ce583",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "66eaf695-0f53-4cb9-a38a-1ec37de24a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0586c4-72b5-4ffd-b2d3-a0ee7d9eef7d",
        "cursor": {
          "ref": "7cbb7818-a77c-4c70-ad32-31a5d87a2cfc",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "819bf41e-8250-490a-be67-065da143f219"
        },
        "item": {
          "id": "df0586c4-72b5-4ffd-b2d3-a0ee7d9eef7d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "000aba39-0fb6-4dff-80f5-8208c02f23fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d12844-5136-4d7b-9da9-2492d7b97968",
        "cursor": {
          "ref": "c7a5d1c2-d3e6-42d9-9cbd-6c08ae274951",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8f9774eb-2b8e-4b36-a529-3f00ffe6514d"
        },
        "item": {
          "id": "e0d12844-5136-4d7b-9da9-2492d7b97968",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cd52e78b-11eb-488e-936e-6c4d4121ac5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe13832e-5db9-4cc8-b0f8-0cedcac4584b",
        "cursor": {
          "ref": "dcb1edf3-4d09-4b2d-be6c-f77cb31ff42e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "dd01efe2-46f8-4dd5-b5f0-23801450ada3"
        },
        "item": {
          "id": "fe13832e-5db9-4cc8-b0f8-0cedcac4584b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "18f1ca02-3137-4ae5-8246-99c82c7b6b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883d20b2-56f7-4e67-acff-657beb0a7c42",
        "cursor": {
          "ref": "df947049-9e26-4d79-90d2-3ab821595982",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4ffa7c3f-be5b-42fb-a6fb-256800d1ce1f"
        },
        "item": {
          "id": "883d20b2-56f7-4e67-acff-657beb0a7c42",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "82e76af6-f6a1-4851-b445-099e66ca91d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddc2440-609f-4a2a-8d25-113b4ea85d36",
        "cursor": {
          "ref": "3738d893-047e-4215-b987-d8128b63edd5",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "39dff2ed-6121-4053-9c57-441b50e949f1"
        },
        "item": {
          "id": "cddc2440-609f-4a2a-8d25-113b4ea85d36",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "de40fa76-56a4-4ff2-8cc8-bd9d5d5fd9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4928161b-4084-4ed9-8236-7b0678ba498d",
        "cursor": {
          "ref": "961f142b-4083-4b82-97c2-a900fc63fc46",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "555d8c86-d185-47d7-8aa3-7e2191e61028"
        },
        "item": {
          "id": "4928161b-4084-4ed9-8236-7b0678ba498d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b676a88e-6f05-47fa-b2dd-0ea580b717ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941ef36a-e7e3-408f-b009-5381047936a2",
        "cursor": {
          "ref": "0b4a6547-8b81-4aea-9497-280bcc1fbd55",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b393396e-ff43-4319-b842-1f34957ee830"
        },
        "item": {
          "id": "941ef36a-e7e3-408f-b009-5381047936a2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5afdc905-ef92-4463-9b18-6d938ad9479f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea29049-ec79-4e8f-a4b8-b460cc99b72e",
        "cursor": {
          "ref": "2304258f-3128-4ddc-ade8-128a1b2cdbea",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2c0e9221-e4b3-4874-98fb-f9ac26bd872d"
        },
        "item": {
          "id": "aea29049-ec79-4e8f-a4b8-b460cc99b72e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3bb813a6-201f-44a7-8650-d66c29bfa0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f59bda0-7c1e-4d60-b728-b2cead53f36b",
        "cursor": {
          "ref": "5839472a-8a7d-4672-ba7c-158af983493f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9a7e796d-3d11-4682-bc41-2b8601220443"
        },
        "item": {
          "id": "9f59bda0-7c1e-4d60-b728-b2cead53f36b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "43cd9437-7ed1-4c31-a216-315b8c186a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be118d68-b704-4d1b-9ae7-5522bf1a8eaa",
        "cursor": {
          "ref": "9451a903-6d2e-4bbb-9b8a-eae3ec6d9538",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d7df45bf-0149-43b1-93a3-23ba4027bbcb"
        },
        "item": {
          "id": "be118d68-b704-4d1b-9ae7-5522bf1a8eaa",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "544aaeac-d263-43c4-86f4-e4fd5c5de9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dba506c-617e-4451-9f1f-06724a52280a",
        "cursor": {
          "ref": "d4b09f4d-956a-43b1-83fe-40750a7ddc0b",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0e92a2dc-2078-44f8-8694-69b2930ae1ff"
        },
        "item": {
          "id": "2dba506c-617e-4451-9f1f-06724a52280a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0ed03bfa-5c17-465d-ac38-b6e3c0b86107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805a618c-951f-4d3a-916c-8ca907757832",
        "cursor": {
          "ref": "4c6a3d5d-6f01-4607-abd0-e5296efb2e44",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1dd63ad8-5c58-4fad-97f9-4753a9697ac3"
        },
        "item": {
          "id": "805a618c-951f-4d3a-916c-8ca907757832",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3a17bc7d-28d9-49bd-bdfd-d292903e0940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0697091-b86a-4b60-a5f9-948aa8fbe2d5",
        "cursor": {
          "ref": "3c2dbfca-1d4d-405e-86ee-681512fea18a",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0af3fc8c-a880-4567-9bec-7723d59bfbdb"
        },
        "item": {
          "id": "e0697091-b86a-4b60-a5f9-948aa8fbe2d5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2bf998c0-15f5-4664-a6cf-003eb90ffdbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bd1081-d4dd-4db2-87a9-5e5ceae94ffd",
        "cursor": {
          "ref": "827ef747-cb71-4f5c-988a-fe49d40b21a5",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "38899d91-766c-4dab-9d13-1401a39427e9"
        },
        "item": {
          "id": "e4bd1081-d4dd-4db2-87a9-5e5ceae94ffd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6d8c4dbe-5e2b-46fc-be94-f899bf54d788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e942c335-a56d-4a53-8778-6d7d81a76297",
        "cursor": {
          "ref": "20a9e729-6a11-47da-9d49-50c79714e889",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b2a765c0-6f2a-4884-888b-35cf3a81fad5"
        },
        "item": {
          "id": "e942c335-a56d-4a53-8778-6d7d81a76297",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d61f2b42-7aba-4ed6-8d3e-98cee3c5ea62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4c6fed-5fa1-476d-9565-9bcf017b0710",
        "cursor": {
          "ref": "80a8ac31-a14c-4460-8436-bcb1930062dd",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d40b964f-c484-49f7-8801-caef964da13b"
        },
        "item": {
          "id": "be4c6fed-5fa1-476d-9565-9bcf017b0710",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1643137e-eba0-4d91-9461-bf09d763cce6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d62d24b-c2cb-4997-b73a-4afd4a221dea",
        "cursor": {
          "ref": "c4585595-c0e6-4bbd-a7f9-c0b2b3eef686",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "47ee1d75-0e27-412b-8433-21656f729d8b"
        },
        "item": {
          "id": "3d62d24b-c2cb-4997-b73a-4afd4a221dea",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3766ab64-24e5-43f1-a1d1-3039ff6f681e",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "497331c2-650c-4fa3-9d7a-98a7b7052949",
        "cursor": {
          "ref": "d3b1d0e7-4593-4869-bb4f-5caece02ef54",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e8d87646-c146-4213-8d64-90f88796642e"
        },
        "item": {
          "id": "497331c2-650c-4fa3-9d7a-98a7b7052949",
          "name": "credentials_verify"
        },
        "response": {
          "id": "08120893-da39-408a-846d-08b797a39173",
          "status": "OK",
          "code": 200,
          "responseTime": 11385,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "965541ac-bda9-42a5-83f3-a198deeed694",
        "cursor": {
          "ref": "53352152-b1e8-4fa6-bcd1-b5558d370351",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b13b4391-75ef-4640-9140-c4eacbe8542d"
        },
        "item": {
          "id": "965541ac-bda9-42a5-83f3-a198deeed694",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b082216b-515a-4d84-acef-3c10faa2987f",
          "status": "OK",
          "code": 200,
          "responseTime": 2688,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f983adf-8002-4295-8bfb-d1ec4e284461",
        "cursor": {
          "ref": "2fa2b3a6-4515-4712-bae0-c8fa4c35d02f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "deb0ba84-ef09-45ff-ade5-cac8f18ca89f"
        },
        "item": {
          "id": "7f983adf-8002-4295-8bfb-d1ec4e284461",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6da8a025-2ef6-4ba6-9952-e352aeebaf0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f983adf-8002-4295-8bfb-d1ec4e284461",
        "cursor": {
          "ref": "2fa2b3a6-4515-4712-bae0-c8fa4c35d02f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "deb0ba84-ef09-45ff-ade5-cac8f18ca89f"
        },
        "item": {
          "id": "7f983adf-8002-4295-8bfb-d1ec4e284461",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6da8a025-2ef6-4ba6-9952-e352aeebaf0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aaf0413-2022-4d9a-ac1e-631c6feaf6a0",
        "cursor": {
          "ref": "eb5d6ca1-e71c-4faf-a745-5f3ae68409ec",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e6bd984c-28b9-4bf3-aba4-500bf3911552"
        },
        "item": {
          "id": "3aaf0413-2022-4d9a-ac1e-631c6feaf6a0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "abd25488-8a53-43e9-8ba2-4d3f11bb93ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787ca980-b380-4852-ba04-71fde16787d8",
        "cursor": {
          "ref": "10addc6b-9bd9-4ef2-8641-b655888c4af8",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "bee40080-6438-4380-87e7-05b184a5f606"
        },
        "item": {
          "id": "787ca980-b380-4852-ba04-71fde16787d8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3717ff69-fef5-4def-b9d4-3c92f46d1042",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}