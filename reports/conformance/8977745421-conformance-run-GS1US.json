{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "750c0f8b-4144-4d5c-b657-c0253a15facc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "214edd96-07e3-4e44-b21e-9e6150855c2f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ace80721-2e7e-4d4e-a4c7-8010b7bcb412",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d5f4e2f5-9724-49b2-8d8f-b0826c8a2efa"
                }
              }
            ]
          },
          {
            "id": "5cc4401c-2a91-4229-8e9f-111c43f4844e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca4ab788-5131-47d9-9616-0766f7851586",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6ad4034d-bf84-4288-8c74-63057339e9e7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "02cdeeaf-ce5e-4cd1-b73e-24237ca1e1cd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "72602cb3-a519-4663-9edd-3c4fb918a4a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "74eb0d29-c352-4ac0-9ef6-b3b429bd55f3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7920ba78-2dd1-40fb-81c4-3d4c8d320396",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec3b455f-b55e-4ea1-9470-f4b2ae97f6be"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "568950cc-66c2-43bb-8188-56b0e3c7c471",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89583198-5fbf-459b-864b-1715b9a4a808"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "37b306f6-a36b-46bd-ab08-45924791bca1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "48116634-4f07-49b2-acb8-ceebb342b76e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3bb52293-3b2b-412f-85d9-f946158d1fde",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "769689e3-e011-4351-92ba-bf93416198ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5c351f0-24d2-4b86-affc-42014f73dc8d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23fc00cf-ed93-4eeb-9d70-28f422f45a57"
            }
          }
        ]
      },
      {
        "id": "3972a74c-d73c-4081-843a-3393dd28049c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "744b449c-54e8-45f0-aa59-fa94b2050d10",
            "name": "Negative Testing",
            "item": [
              {
                "id": "844d02e3-9f42-4c0a-9898-775b6cad1082",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "817a55cb-f770-4b2d-acff-83a4fe6f9813",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a8c254-70e1-4677-9be4-4ffb7a9808c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92da1759-9dfa-49a0-aab2-ddf9ef32b7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6543fc2-dc6e-404f-b135-a2a3f094e995",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8661d90e-be85-470c-9334-83256d3540c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f9e6c20-02f1-4372-8120-c34317b7ca5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87459263-d8d2-4ba9-8b02-90575efbb12d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6e6f8b-7dc4-4ae5-9c4a-d3783b819ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e011beb-8f9f-4e32-9534-c1b7458bab14"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22ce49e9-4ffb-47ee-b312-1db1a78e9308",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2f29889-33d2-4eb3-a5fe-fa3212fa78a0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc0fb40-9a37-4841-a001-ecd9a0d5d091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a1c78df-42a2-46eb-90dc-573fa7681217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efbcd2f-4ce6-43cf-bfb7-b7294b2f16dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e95a18c-111a-4989-96b9-bec13d943d94"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f5fac351-ac98-4a6e-a91c-cf474019f4c3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d2a56f23-c3b3-417b-9772-0870fc90f041",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28285092-f481-4aee-8195-b67bddececb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "18770526-a69d-443f-93a3-7128f914bc84"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6ee9fea-a5c7-4e40-a013-f84b89bace0a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6c6a6669-2b7c-40ec-bc9f-4156bd78acbb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "516dd63f-6132-4be6-a83a-5141949046d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2285a39-32bb-4a8e-bdac-938453bbb973"
            }
          }
        ]
      },
      {
        "id": "69c3c2b2-4eca-42ea-912e-40cdf0a2f3da",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "08b79b75-e317-436c-9d3c-a2b9cdd70a53",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75b72d1c-a10f-4a13-8e5a-5dfaf2d5113f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "76b90b6f-8093-4986-a1c6-d2a62a834fdb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04d76fe-dcc9-49cd-9a83-e9e42735c0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9799312-7dfc-4c7f-ba83-7a62126255b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d926f26-8828-43a1-9ef6-29ee351e6cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b62f9548-35c6-4788-8066-7fcaa9c3de6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29879c6-552a-47d5-a10f-271da1d50b5e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1a0abc-b47f-4551-a749-5cce6ee940a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083ce9c6-3901-46a6-9b13-881c194e40a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca232358-6691-49c6-ba2e-8dee4f92018b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf54966d-796a-4d0b-960e-c1d691200d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48e712a-860c-4c10-b123-1e13c31ac16b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c48eafa-1892-4773-a067-709ec3c59db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e43261-8672-41a6-8dde-e4f3c5db3ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29a4e45-f36c-4fc0-89a5-6b0773fc7880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea159cea-09bc-496d-ba67-d7449b76c62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004b4c6d-6a8c-4c61-b7b7-569ad47f3455",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67a41f9-d8f1-4a76-bfff-031a16c5b398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db1aeef-59cd-46c9-8bfa-ea27dd37fdc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9da18f7-c963-426e-a7bf-b537128e9b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0568851-bbe4-4f70-a91d-51867b83a6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3955df-8297-4eb4-8079-659f6219448c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f5b67e-3b44-4d51-872f-8240d983df6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a576296-5f70-4ddd-ad63-df5c8ee50333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996d85db-5f31-4cf3-b0f7-8da44d4c069d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3adc296-2984-4a34-a30d-7201da55e426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6daca827-7cc7-476d-9767-fe1396effd18",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c5c48a-bb09-4f3a-8f87-1b8fb435ec87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4963d6b-64a9-4dfe-b1f9-31d76060bb30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331e5902-05ca-4e9e-9b50-af7922ba8621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5c021d3-59d0-4c1f-a790-49ff7d44dab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390c8bd5-f813-4857-8e26-1e5e81a63cab",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4b9d28-a6e3-48c0-a6ed-9be2063072e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6c5ca5-bf60-4d7a-b69f-bd3df3d78488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacbd426-4907-4a89-84d2-56e1f2092233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4f35702-a675-42a3-8975-1e420e524622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf0a305-2496-4543-a1ed-a1bc0fffaeab",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cfb68c-1c5b-46a3-9bea-cb98ab719e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68fe6e2c-cabf-4186-9c59-bc76a2a9b4b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f998f8b9-8095-41fd-90e1-cbf0f45c49e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2ab6695-c026-4181-890f-3cf706e7b369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d10356-9edb-48b5-8247-f7af3b0d468f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a25190-e711-4acf-92b1-e7b02644176a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef5069f-447e-4619-aaeb-04f0bc2eb1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b884c045-9a9f-4359-a1d6-f81e68e0a61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc989e3e-24ff-478c-bd29-a3565c074259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26155ed9-4c2c-4226-a15d-dad705f16e47",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aaa7586-32db-472d-ad4e-c7eefbf84737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f930476-9b5f-42f1-ac11-95d0230a133c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504a5a22-7845-4305-a3e6-79374a4f71b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "646f58c7-e8cf-4936-a880-3bee9443f4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a686f016-beed-462d-a353-baa473f664d8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64313ab-8f2f-4b0f-afbf-bab8a4d3a91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f139bcd5-e96b-4063-88ea-e20e1ce70f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4d9469-eb1e-4349-bee3-d17a708d348a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae4ec09b-6f10-4167-acc4-81aeab95c2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39062751-a6c3-41d0-8af9-7eaed3cfd455",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ce47e8-6400-49f9-86f9-64798dd4209d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44478b9d-c072-447e-a575-e947175bff3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e60e778-4536-47de-bb17-cbe1ad877779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d52c5148-4b10-4a45-9c9f-3b4376ad56a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32dcd796-f3c2-47ee-8ef5-64ffea3be52d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b065fe01-f860-4c23-b98e-abe1dac0905a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97e7953-9d2f-4f01-b13b-0baa0b06bfa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7ce1a0-a6ff-4833-b765-83312290f3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "307912f1-27bc-43fe-9665-6c7c65c8a107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7229330-38c1-48ef-9761-0a35148119e3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede57082-7f84-4c62-8d7e-d04fafc80bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71fee4b2-4283-4b36-9eb9-c72ca9966732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ec986e-accb-4fa5-b595-9a70ed54a931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a1aaa5b-5381-4e44-babe-6061833f91d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a382629-867c-404a-a134-2be051829310",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0bceb6-4ed3-4084-8898-d28453114441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc976fa-b7c8-45ac-908b-11e95c20522a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5183b6f0-aea5-4781-8d01-14a3a5cde003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a108c0b8-a7dc-4298-80c6-708a6c4df492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1ac8ec-3c4a-4436-a2ce-6d089fc22490",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32590da7-92db-49fe-8f80-c9356dccdfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712bb12b-2a56-4831-9c4e-fb9d8748a5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d712ab9-ae52-4f26-94a8-3dcfe2796458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0ed239c-6433-4ed3-a249-9d903a63fa27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ef84ca-28a6-4a92-b694-31c46534cacb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dad0a9b-1811-4477-82a5-2bb9b92704c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6c12db-7446-4fd1-9629-1bbf5ed750d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780ddae3-e559-40c9-b9c0-295e64b1f4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "350ca9cb-6fe7-4f97-bda5-9bdef947a0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb2a991-e490-47b9-a116-8bf25f4b480f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e54db2-5055-426a-9058-8445ecef67f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973eaa69-4c62-41ab-8b8b-c009e247c1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00df79b1-bb55-4d64-82da-5d0e81e3a7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa335d5-0e79-43c5-8fb5-4f48501a0b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d40274-2624-42ac-a41d-cd6d972a213a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d68e6f7-8080-433e-8f59-4595ff894185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d2ec49-8de2-47d9-bfd3-5e5d106a9de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66df389-b20e-4ef4-910e-9884d5311640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1258f2dc-3433-4079-a5c9-031cf585396d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a4afaf-8e68-42a0-8468-d333398b6be9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68198a5f-ed14-4059-aa4e-ca536a11d44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43206645-4df7-41d2-b728-c5ae9d92d16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb65e526-5b31-473c-9b98-04af25d60db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55f9a54f-733a-4853-8996-da96b76f3037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bd68e5-599a-4cf6-8597-1529c96def8f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7910feb-5ebe-4a5f-a009-46d5c25b289d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd867825-e2a2-4ecc-93c4-25be18b9651b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98be5aaa-c030-47da-9cf8-167587b7ef95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f269dc3-3fbf-4e62-9045-018fb7740288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62ed438-a9c8-4986-915f-38e49aee7cba",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6d42a7-525c-4078-947c-55819b4f296e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68fcd1d-7a6c-4954-b9f4-d424f2005697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc9bfb7-3469-4e5f-9fd5-98483f47b32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a846208-7a88-4af6-b9b2-299bf1b88ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380e7e91-1f1f-47f2-854c-c0bddc14706e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2293eff4-1455-40e8-a057-89c011c0f1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472c64d3-edda-402a-9979-9e742c242c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df9016e-0325-4c5a-bb0b-3c99e36b6c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2a81c7-b45a-4bbf-80e3-a9bd5c5dbc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2f6956-5ddc-4ba6-9e17-eb3b2bf5a195",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e4e48e-7a11-42f2-8926-0161ff1fbea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c408f69-c878-41f6-82ec-873760a7ce10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd240c0b-367b-493c-b42f-c85f2736f95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "677108e2-4130-4dc9-9c77-c62d8626caf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86efd83b-004c-4ecb-b285-231221d795b0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a58fd0-32b6-4130-84ea-6f23ffe18a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fb164c-320b-4606-a4a0-fe3fee2248af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6f27a9-d0a1-49bb-b27b-fc6c95aec634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc907e8-6613-4a08-acaf-56ccaa8ca548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de853a8-5f48-4345-bdc0-0de0d3998794",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3931a208-0897-4bc2-bfb8-628dba75fb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b128014-0d34-4a96-8de7-4c8492eddc9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebc5bc3-959f-4c6c-993c-94afd36e56a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b24c98-d91a-4f26-8b8b-d03dbc3698c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c991bd73-91c0-4a35-9659-ce187e024b8e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4331f2cd-37b5-4fa8-b94b-8b30a4879ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c90df9d-0616-473e-a20b-605a146e8005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da731279-6ad6-4375-b2df-a3f2cb1621e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a7d859-ab06-4298-9317-e1755c652bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420f1b51-9aed-4002-92d4-d0101fabaf97",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ba3cc9-066e-4a7f-89fc-55650e31cfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b8b61e-4bd7-4e78-ac2a-258c6cc9775e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccac9bb-839b-450d-bd91-14f9130c9dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b0bec16-b5ea-441c-82d6-346b892e2f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8a942c-73ce-41df-9ff5-779776cb0121",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa2ab03-f779-45bc-943b-4e75c87b6301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b46368-9574-4289-995d-3385514a6ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54947c6a-7735-4fd2-a6ba-6ed8281842ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f731020-8825-472a-96f1-60662edb584e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82107e66-992b-4763-9324-ddae8d578d02",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53774622-4f31-4a9e-b58e-db172772d854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8dd5d36-8c1d-4b92-8cf9-05dfd38cd2d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1b3652-38d6-429e-9edb-ab18ca5dc652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "af7adb58-8b6f-4a24-8a65-80c430758dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c50318-7c64-4bf4-9f7c-cfca2683a9a1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef58615-81b8-4290-9509-e53cd29a677f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a768efad-bdba-4084-89e8-d5cc1b4441ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c956778b-37ed-428c-a60d-6a36fce92da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28fb28e7-4609-4e7c-80ed-ff8ef914c50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71749154-24a8-4a27-95ec-c8699beb3c51",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067eea78-df29-4abe-8ebe-0a92b038a98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d285e2a0-a78e-4d62-8a56-3a849c62596d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a13785-a08c-44b8-8945-a7445cabd669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0936d5a6-72e0-4849-9590-866243afda51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6e7f0d-9c78-40e4-a446-3245cb0fdbde",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261f95e9-2201-499d-aeb7-303ea5e4c0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b91418-0edd-42c3-bf97-668c56d8d839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5444c7e8-a761-412b-b8a8-4ca47851a54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ce6551-efc3-40f1-ab63-f9a9b69b4897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2425b2b4-2599-4e3f-8880-7b9c924d40e6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6316dd3d-32a5-4403-9403-4c39b941c7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35763de1-61a6-41e5-a7f2-bee22eb43b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad67397c-0cc2-4213-9e05-1392e9bb4a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e359866-03c4-4055-b160-98f80e7438b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c7576a-d726-41d0-843a-2e159cd23be7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57440e5b-be33-45b8-93b5-79ac5e826e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2404cded-ff99-4cc3-9362-8b43a2602cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdc1bf6-59d2-407c-b8e0-b92525371d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "10942e60-1a7b-47f5-8016-11e8d20239b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31d75d4-1bcb-4ebb-b0d3-78842f159e36",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb1dc4d-fc19-40ec-9dea-b5fcae35763f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c09d8bac-de51-4a98-829a-c0f3ec65e771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7167290f-475b-4e0d-bcac-25ea90752fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc49dfee-fc61-4136-8918-37fb118f87e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7b93cd-b445-485c-99c2-acf329975d1a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7677be-0f1c-4c5e-8776-fd88c40ff24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0538e90c-187a-41b9-bb7d-61f26a848684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff36f593-953c-4565-9d7c-88993556f38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "68542f30-8339-474f-b86e-6308d2fe05c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fd3c66-a9bf-4aa8-a18c-1b28f526cd45",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e227360-09c2-4a34-bce7-6d7ace00d6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea88e872-69b0-4b09-b365-02d7cfc866db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf24efc-041c-4b6f-bc26-9b4ed702e476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "20240d77-7539-4f18-91ef-518684b4d285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033fe25f-7267-4f10-b86b-1909570f69c7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7d27f1-1d50-4f97-863c-79ed5f31ee3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca461611-05df-464c-a208-41c18e73676a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e5853f-38ce-4179-8687-038363e086e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b73c8e-4a56-4e6d-8e47-aa2bd2818c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257e55f5-a039-442f-a754-f674bf40c3a5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f818245f-8c46-40b4-93b9-4508e10f5682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d552a38-2a51-41f5-8c34-3b70205cb86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91bfd2a-61b1-4a5b-801a-e0a5d1cc1560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7602bf-4a3b-4ecd-b661-0fb6e8e46ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53502db-bdc1-4a71-8dce-e903608b6741",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3838d2be-5034-445e-8c0e-371750224b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1004e0-c8a1-4273-826f-bf5c0b0c52cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d4489c-362e-4217-a70f-d316de570578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9f6f73-0bfd-4368-99b4-05eae92db96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64822a18-3cb6-4cd4-9fb4-506465736028",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04b7e1c-f8ca-4f73-9e15-455574dd3250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a02804e-8707-4f33-84dd-0c7cbd09b6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cb8ec9-7801-499f-80a8-ed1557b49c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "66934a86-e454-4007-b535-36610f964b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab991b6d-9872-47ad-a7b6-bbdbd0afd488",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64358f6a-229d-44b6-9fcf-d0ea1405a6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054004c8-b460-4ba1-b5a5-9ffad7662072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2296b5e-5a49-48e7-8f48-1ec9c18e2daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d43b6198-c9a3-430c-91be-c17b51e6ac75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a944d2a2-4262-4550-8701-ec0786c83dea",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e1802d-771f-49a3-81cb-9a422dcd071a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b0dee9-a854-4136-b809-0950cb14f871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c3a917-8887-4e84-8a37-c04c1cc08dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "98b1efdc-59f0-4427-b9ec-08d524b5cbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f31811d-0344-41d1-96fb-6a2bc22a0150",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3d381a-2856-4f5f-a114-b30cb2ef62e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f6e490-dbdd-416d-a5eb-744966f8afd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eaa203f-69de-4f25-9f21-86df3afb4efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7049e011-cd0e-4211-b59c-454188bf0719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603cf3da-e814-4919-9c18-a752af584827",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fac2d3-0910-442a-86fa-a1f0523e7bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c9c89d-7ea1-4eca-9f98-bd3b95218390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9f3f28-2eda-44e5-a7a2-809dbdac6636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43aec17f-4454-43b0-9b59-46368a505f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c93f92-669a-42db-880f-15c1693adb14",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84396f63-a37f-4d78-8692-8b571af17433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4a7a94-8e01-4297-a126-3752e0b36a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71dd03f-e3eb-490e-a21c-90d1ce04aeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7c4c8d-6517-4829-ad5e-e3aded1bfe17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b49fae2-8b6a-4781-a591-610ea4447c70",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e71b2c-ac25-4d88-98cb-3fa28aa9b0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfd9108-51e2-47cb-b408-0e28ba74346c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e725876d-87bf-4b0e-93ae-87481e0fe722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "539b202f-9351-47c0-9b6f-6c7a0f6acf09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4443f2c-dc6d-41eb-af25-6d94b43a87bf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e06781-0ae3-400f-8d32-53955edc9a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9ae8c2-6ab4-4c67-9aca-fe079f0cd29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8712f2c-a682-472e-ba92-6b043e7d33bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41429d48-52d8-4af2-9a16-dcc81ff94dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32af6940-600b-4392-8bcf-302d8a2eba4f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4915652c-5993-4b5d-b289-a01d4180e7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8cbff75-0a20-4787-88ff-6a2fca7c5042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cda923-3113-4e5c-96f4-da4923fa7c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b32f5a8c-0326-4d9d-b0b4-404f02fd8b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65939eea-7f61-417b-8b27-7129c5835f01",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3e4c36-4364-4981-bc18-40af94c45d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f11ee2-548c-4512-bd87-bd2e079408a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8d0127-b65a-478d-876c-b7ebeaf2f994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d6e85a-19dd-4d8f-890f-a020c5c167fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf46aa25-aee1-4e44-b7ea-fad15426d021",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9179d24f-6207-4ff1-9605-25d684ab2ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35e1017-df58-49f3-933e-b425e1426e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d616580e-e6b3-4611-9f87-0b87fb97461c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "29f846a4-babc-49b6-a028-170a8cb407d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c3bbc7-8a48-4cc4-9846-1cb8178a5eec",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a435e826-c533-4b98-8f3e-8003c81ac4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2cf5537-a7cb-427f-aaa0-28f68d2fc0e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1117e62-a972-474c-9aa8-f1bcb9209649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c9270f-c355-4d66-9bd3-37861c7de262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b737368-bfc4-4429-9cc9-0427fb1495de",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185b11d8-068b-403f-bfba-77a01b88f2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928d8b43-13b1-4fd4-81c0-7913593ee920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb4d7a3-e462-4387-9a37-cc66f5c40500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6781446-491a-40e6-a740-7a06eacd1904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea26e71-35e7-45d8-9b56-87f3907646b5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e71196-d447-4425-8a72-327210701b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c12133b-4c82-4679-a825-15a386512fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1458c8-7424-4988-8c5b-19ec4ad3f252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8394741f-6236-4a2a-9034-8f5bb4946530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6a4388-285f-4f22-b6a8-e36af840aafa",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a21c1a-d958-4b38-8ba9-11375640a150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3452c1-046f-4398-be42-4e155c1a5048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a9ee0b-bbc0-4a31-80ca-ff15a9e3a3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "037ab4cc-6a71-4404-882e-79552090f922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ecb76a-b810-4d8a-ad5e-2d2443e3eac3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1707fa1-e472-484d-bcdb-95713e852c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355114c2-b48c-43e2-b4ca-5aeea0a2225b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317a6b02-7d58-4925-8f6c-d00844e83610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc91c05-f5f5-4522-80ae-3dd7ebb8f7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274556b1-f987-42d7-a028-769d4c10d5fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063dca93-4bf1-476b-b233-5f311f334632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c7d687-7f0b-4cda-846c-13ed08e96147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39030e4-b7c4-4db5-ae62-3f126f487420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "299b5453-c4f0-4f1b-be5a-55099281c0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ac5ccb-9650-45e6-a994-f9882f18fd71",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85e1155-be01-4f05-84ed-e1285646f0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07673b8d-1f6e-4025-8c1b-87961613a156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0ed2f8-a197-4230-9047-1dcf23e62c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "67f6a475-5a00-4847-8b03-6d6ee4560cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c8eb34-446d-4f8f-88b9-6a8fe4f2c261",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae46485-9b90-4292-a731-3136fcf348ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cf4527-1750-4e13-ae88-d168a68808e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd119306-2f59-4dcb-919a-d55c0ab89bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4db12c13-36f7-43c5-80f1-eb74eb41bdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955bae24-caef-42f3-8199-899ae39817bd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf164612-b07b-4c5c-a3ad-320119a5f349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f213fdad-8236-41e0-90a1-f90f58b640dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982d8109-3e9d-4764-8570-24328ee9a55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "711f0e96-4550-42ed-94bc-1ecffc06fc8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7a09ba-0ae2-43c7-80db-c469b3a5fe7e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0480abb5-0ba9-4707-9f88-7c50e877f774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e614289-7568-4078-b301-948abc7b093f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce7e01e-5b6a-4a17-982e-cae8bad8806b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "59b13229-10bd-4a2f-9e00-424e378dafcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9850e80-091f-4016-a7a6-27a9a776ae2b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19509407-a927-4db7-8151-4578b7cd5e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5221532a-082e-4624-b98a-3d740c3a3fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c25b21e-3f5c-443d-ac0b-f36b0a61abe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e4ad0a-5e5a-42f9-af53-64e1975a937c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906a42d5-9a48-4903-b023-58ce7077b225",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9a68c1-df2c-4d95-9153-1369e62ea65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd4c419-f1b5-40a7-8539-a487a79a0182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9127a1a-bf45-41c9-b734-d1d1b134b565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ace400-1dd2-4086-a0b9-c40bfb05f209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfae270-eaae-476a-b36c-c94683c698f9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "919b1527-1f63-4f6d-80dd-949cb5a605db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869a088a-87f0-4790-81d1-7113cf5e63b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4310e9db-a8f7-416c-8a6c-39bba80faa67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "155ae7d4-3132-4a10-9865-1496854068d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9f90d7-c9b4-4c30-b16a-cd6821bae009",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7f4294-4660-483a-b4d3-a8609daaa58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c50bd1-6c30-48c4-b14e-3815ebd8ec63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae88b4e-2e23-48da-b54c-2d4a2f93356d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a04d86f-4f98-4b17-a1dc-7066b9f18b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec7229a-2f12-489f-9125-0481c14c352a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd7eb8b-ccc0-4161-a1f7-4b1239a38bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b379be-d10c-469f-9ed8-379dd39ffdc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0229d633-75b5-4f08-95b9-2b50aaa07298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47d949e4-df98-426b-bc14-6888680e8dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d052dd-1c4d-48f4-bc1c-d5a155042cc3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6caec970-0525-4d03-b248-2f75b01b6450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcebc6d-8df7-4b19-99d6-d0d73413d69a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91538a39-b031-48ae-8ac3-77cb3ac36894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b283649b-5860-4a18-959d-2d1f5574cdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a501dca-938f-4251-b535-2f9736e5aa16",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f7925a-1fef-46e3-8e4e-23d02d56f6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb07d9bb-63df-4d6a-b4a8-fb30c99cd4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffaa28c3-512b-46e0-b991-cc44fa36fa41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb9193b1-96ef-46c0-8e64-ccd6946f6904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a997ed6d-d389-4aaa-813c-807d85fa2e1c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693fd4b3-cb27-4e6d-b50a-8ca02109ef88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d15cf0c-baa6-46ba-a00f-d4057d49430d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ecec55-d922-4854-906c-b122ce6c7f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb218d40-66a1-425f-b413-3427da8e6c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bd913f-a021-473d-8395-1be09cd379cf",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a9a876-255d-4a89-84f5-43b06399db26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d8d3b4-578d-4b79-818d-9412b12f4f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d5b246-f879-4d8e-a0be-7601fa366660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b120130-df64-465e-990e-36770492e8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139271cf-182c-4775-b786-bf6a0c9e9d64",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b05e3eb-d087-407d-8b4d-879ad99b4bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f18bed5-1b68-46b4-a8a1-98d454a17449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1b2f81-6d15-4f57-b245-3a1c9628a1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4a1fc2-770c-43b7-80fc-536def07d5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9bf166-b361-4cb9-8a66-cb5cca15e64f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8184b2f-8be8-480c-8405-80c925293a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1f341a-c2b6-4d5d-831f-356d086ed253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0740e7df-1a50-435d-84aa-40ac509781a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c86dc2bf-3e9e-498f-9a5c-b0db3479f40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f52b5c-eb82-4335-ac18-d54da28b10d4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b208ec8-77c7-4906-9c83-e568a1e0f006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4c9164-64d4-4625-b495-d5fa9bcfccfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85cbe0a-29a8-402e-ae1e-492fec94b849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ee37c1-1a6a-433a-a71b-96f133077ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d086d54-de80-46b3-93bc-96ac921a796c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b67db6-33e9-4871-9aaf-5e67cfbf7f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75871df1-6c15-40d2-977c-7b7f2a4adae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2113e62a-9aeb-4518-a65f-80f133545dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a8b73c-5ee7-4b6d-92f5-6f29d2168212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbac891-5c56-4d0c-b123-448ceeda117e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dda5e4b-6751-4996-84d2-c220b5379ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b03e6a-b6d7-4fff-958b-74354477f075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7f807e-ede5-4060-83e7-71b64d8b8381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47d7dbdb-49ef-4b57-bf17-1f15515405a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82f62ab-f5b2-4d96-889a-fa5d8bdd281b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5719c345-3d46-44be-8811-17977df1b092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c9baa0-a97d-4b3b-bf42-c29886a4f150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e178591e-f5f5-4c32-b8f1-f067c77e8d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3089aac-4d69-44f9-bdf1-f0d00b41626e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c30133-00ca-403d-b3b9-4a4f4eaf8368",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9154eb28-8f26-41c9-a072-b91ae1ab6521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c41c3f2-b81c-4889-bc9f-3cae57cf515c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61e9c59-3c24-418f-bfb8-52e13752cbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12b6740e-f3ba-455f-b047-3c53cfdc6881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576db4b7-ed50-460f-9fb0-702baa8bcdc7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ceffedb-9e02-4be0-9e65-e88b8da956ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1e3ea1-00b9-45cb-b99c-798071ec5443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8dae34-df3a-4186-bf5c-2e6d101bbaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b80d767-1850-4c52-904f-38bd6c75600f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41018864-5ce2-4d65-beec-23da54f8e866",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b1e2ae-988d-4aa2-b5ee-2b553f3ee846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1888be5-33ac-413b-b934-63ff1e6d263a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ad9b9c-558f-4527-876e-db9cfbb2e1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0114bb-68a5-4f88-b151-c3265b3551e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e132a318-7faf-45d1-a919-01ad9eff0c74",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2046e7bf-db07-496a-8ea0-17faa9cb7813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0510d728-dc12-4b89-b6c4-477501ec1b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72486b79-1e6d-481f-9fe3-291e68cb08a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4031f6c-5c14-4ed4-856c-3f2621944ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7722871c-4ab8-45cd-b91f-23e7ef7fc683",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50563396-ff5a-4ca0-b6ac-1e2ffea808e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01d7949-d150-423b-bd33-edb1932ac659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423c8c5b-1d49-43e9-9da9-f432838161d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76cf904c-9bc5-423a-98fa-6b8760d48c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc73d17-3e39-43dc-a6f2-c6cae2d05757",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc556d8f-4838-4c15-92af-a8d8dd146b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c825b5ec-7330-41bf-9fb4-812787cfc077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ce6596-37e9-4b1a-9545-5046e56682a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f856c1a-8c26-436c-84fd-48ac855a3140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82909dad-24a0-48ec-b972-2f74c271ac96",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4c9579-907a-44c4-9253-68975ea10561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b789e657-5768-48d4-948c-fb2715cbcf23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb51792-8073-4f74-9fd2-f35bf24d691d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbaa1f7f-0107-4198-b274-352799cd1ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d0cbb3-4441-4ad1-b8f1-2ee2ce6c47e3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96af63c2-2975-4015-a2e3-212d2a7f676f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefd36bd-24d7-49cc-8c4c-c36c3c1457cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0904ac5-52ca-48ab-b031-1d35f944293f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c977a7f-04ff-4680-b49e-724090b3df7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9ff42d-2b6a-4e7f-aad5-165237399189",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd16dda-b5df-48cc-9ab5-0032adba781c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ee1bfb-0c91-4037-aa73-694318e74eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3a0c49-5552-4158-9bfe-fa40f4fbd984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9794af46-605a-4435-8de7-9b6fd16048e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233cc803-1c6c-4c90-9ef6-2bf1fe8b13a1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d39b13d-f1f3-4625-9be6-22e083bd8743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a88263-e296-42ae-81d4-7980f762c820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc10d8c8-691f-4a94-8bd8-619b595a12e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "46d91260-1189-4faa-96c7-e76ec4236563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bcfbf93-c31b-488e-aa50-4137393c461d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f56130b-897f-4d70-93cf-12f742e5d457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a263c26b-a9c8-4d5f-85f9-b449e866298d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a45694-c51b-4a0e-b88f-0212131d7ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "14a508a7-04da-47f8-a66b-7f74b85aae34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e7b973-e068-40bc-823f-6984611a05c4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bd09a8-1b12-4670-b21c-976ba44ed99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c2d92d-9f57-4074-a4d5-ab905e1e1ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2c5b7d-cdc7-453e-8e32-9f8c74151bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa21855-3545-4824-8cb4-e8f7039be42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5825e0-7512-43f4-beea-0551c63a1b88",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29ce0d7-cbac-4c8e-b88b-9eece094d727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426afab9-d603-4130-b5e1-d095fad59557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af660325-c5ca-4063-a419-165b3983874a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "89796783-fceb-4c3e-9dfe-0b50d490fcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2425c28c-2b0b-435a-91b6-c3b8f251fb2c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d130b1-e7f9-46ef-84d9-e984ce218e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f73642-3fd2-45c1-8e6a-9b3dcdb12004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b82003-d3f3-4632-a8c6-8660f777bca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aeca2d53-0afd-45eb-af4d-6c1193733f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80048181-252b-4e0e-a7b6-ab8313e60276",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4a4e29-9233-4cc4-9d9f-891879a7f08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "930c047b-0981-4486-80d8-20e0eb8c7cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f2a6ee-f5c9-44f7-b906-22a18b61b94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f40e00c1-5cb4-47dc-aa6e-0c72c923c52e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "007492e9-17b8-47e2-a3b4-72e156180d18",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48311898-ea57-45e2-9708-f3068c5cfd46",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7ab62a-8246-483c-b595-445f1a1d024a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9d7b321-7a69-428c-a452-2f51e01008f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ea3bf7-1e8b-435d-bd71-8c98bfc793b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01196695-e7ff-4f6c-974b-0010e1682282"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c95798c5-d928-4f40-a0c1-3776c04cf249",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c708e42f-449f-4c30-8755-ffca0c07ecd1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f8e3ced-4b74-487f-b2cc-320bf26c485f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e28a4192-dc9d-40f7-af9e-c4eab37c5d73"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e30546db-c854-4d6e-bbaf-1023f4203eae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "45ba691b-ce6b-44b2-a419-c56ebf0befc7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "92414df2-2fa3-432b-885c-d3f3a26e4ad1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c83f00d9-59cd-47a0-b522-95354acfad4f"
                }
              }
            ]
          },
          {
            "id": "a51a761e-9386-4b8f-a49f-c880c7293692",
            "name": "Positive Testing",
            "item": [
              {
                "id": "56bb8aec-3c70-4a20-a99d-652207ba69c7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3d3de5ad-1a98-4999-aa64-40ba2485f474",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4d9910-847b-4ece-b97b-7571ae83c9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "19618adc-479d-4b24-9b00-ae3d4d967a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb234ee-f7ad-4ed7-b0f0-c72ac2609187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac37d43d-ad6e-4baa-9ac1-7c8363a7152d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad211dd7-8b93-43fe-88da-fcbf6066a335",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a028899-583c-4633-b989-29e86f42005c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6ce1e82-0bc4-4e2e-bc8c-07a17416561a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9330be0d-2279-460a-a20c-f178771b03a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d60e669-a1a7-44b2-aec5-367ea25b0ec2"
                    }
                  }
                ]
              },
              {
                "id": "edf69f87-4939-4990-a946-4dd93cbdeba2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81282c56-3005-4f56-bb2b-c82e2ce08018",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a93e193f-93e2-48d4-9e74-13fa04929e88"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35e07426-6e19-435e-94d0-7ba81612b4f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "42e0eabb-ccf5-4e4a-89f5-de17da22ee84"
                    }
                  }
                ]
              },
              {
                "id": "74cdc5aa-918b-4eb8-a8eb-be87b68b10f0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4626d79-8287-471a-a7a4-7c5f83be1202",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fdc9cbfd-2533-48c9-bf6f-fe1007f182ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aaaf2472-1ed8-43f3-a5be-70edc64dfb30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4053d4b8-418a-4409-b68c-e404a6d0a610"
                    }
                  }
                ]
              },
              {
                "id": "24c254d0-207f-4aed-bb4f-89f5468be71c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "adf7682b-aa3b-46ba-990a-c5f6d790f571",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76105a4c-3abb-40d0-82fa-f353ee29697f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a75ef553-b34e-4c41-aab0-c486b052ba3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3f9b8c92-cede-406b-bceb-2cc58b57a6b0"
                    }
                  }
                ]
              },
              {
                "id": "d4741d4a-dac3-4a21-9998-9ba0cdc1f4e6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0b390b2-a4a2-47d3-a14c-957ce1e21994",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c0b0d7a-efe8-48f1-81a3-413b7dfa3a89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2879e9dc-1516-4ca7-8807-46cf81ba4222",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8d64aeaa-ea10-4d52-96ed-cae3349a7f3d"
                    }
                  }
                ]
              },
              {
                "id": "a0b8e7aa-54bf-4c8f-829c-a7928e67465a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcfcf4df-0b14-4191-81ba-9ab96ba685cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "897aef55-b0a3-40e7-8afe-9cf1173aa33c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3341cafc-9191-48fc-af49-23b73402d887",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b7b60cce-b089-4ebf-a98f-9db350f862ea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b1f42af-fbfa-43fe-93d5-66c43e4947dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9274ecf4-fa37-4ec0-a599-a6a80a86a0b3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "568fee84-8ef8-4c2b-862b-70c8caf426e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aa411971-14c1-4a78-ba94-eaf01bcf9a91"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de22c937-37bb-47a5-a6f8-6d616ac34c7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e383eeeb-6ace-47d2-a3cc-433aae81b624"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62e1c98b-4735-4556-b99f-a320fcfb25fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b44c769-f203-4e3b-b309-fc93fdb9e650"
            }
          }
        ]
      },
      {
        "id": "32605f3d-a37a-43a8-b545-a760fb2e0f2b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9ba05bbc-f572-4d82-b330-419d7d1a9cac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a58058d-4fa6-41e5-9171-f469908ece25",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0002267e-d6b3-4fe3-9c71-3f3de7dfde88",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743a7a79-4552-4083-b045-7ed0a4cf4cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4003ba7a-3f64-4de9-998a-9c4eec2e076b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9723de4f-f976-4551-8ad1-8680317b136e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "58522031-a4d2-46c3-8c1e-5493d9c22035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8044b40e-3980-49d1-ac70-ca3e1567b59a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9366e977-9b56-4d7f-9337-b51e4096c755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c01399f-8751-41b6-a2c2-b546fc78f9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543c013a-9aff-4385-a0a1-94ca7775367e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b10665-3b6c-4208-8d9c-2064bf82d0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b210c0-645e-4c3c-91bd-884f212fa928",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726f24ed-00aa-4e9b-9bad-fa5f058d5c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0d1cd1-6570-4754-bffa-b8f2533c0ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5666ea2a-b771-4077-9ebb-d7f496b8c912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f1d00a-3c5b-423b-8034-d654fa9128a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc711d22-bc3d-47e0-9056-6faa5731d992",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ef772e-0da9-497e-befc-f9023733c99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1561724e-d207-4b47-ac8b-da403e53aa5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6400701b-5d7d-435f-a525-c62e783c56bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4699a8a1-62a9-4ef6-a61d-f298593615be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93937093-098a-445d-828d-8734e418fa5e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d48ec2-97d1-45f7-9cef-c6b95eaf56aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd3503a-b626-47a8-a494-3206f11132f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c39691-ade6-4d6f-b42a-3d39cf3d3583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "514f1496-e21c-405d-9735-91bc11ca6f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f91a15d-8bc3-4c75-956d-f84d404ea504",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49d7438-4ce2-4cb9-8444-926057262e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025bd98e-e69d-46af-adc4-0c4292a5cbc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4b053e-0392-46f4-a422-01538b8dbf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e53bd809-997a-4bc9-bdeb-9a4e21fd8bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9ec852-45b8-4566-8838-25a61211fcf4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d300a2-6571-4f57-99ae-b3305caddb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e547726-6198-472c-beca-3e6de2f2885c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c340b7f9-fa87-4251-9cef-37dbec6eb4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3b78e5-5fe8-4ff4-9cfb-8ae398a1765a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72fb3f6-ac36-46ac-ac13-6ab4b98c592b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e433c79-b87d-4f66-a695-f5ae3ece8480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3eb61a-0ba1-4a45-bd73-692d678b2fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8117d8b-b83a-4761-88af-48bbe49a8952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efb19874-2fa4-42ba-8e5d-ae51fc29c21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a122433-ebbe-421e-b755-5843eb595925",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164fca97-4b01-42c4-93d5-00b8e9bf9f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca75d580-4600-4e95-9298-c052d52bd0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe64031-accc-4dd8-95f7-e51b6e0aa78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41c01158-0695-475d-935d-31dd3243b2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84516c66-c565-41ad-ab65-ce8323b89f33",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd329717-9dc4-46ef-b09d-2346084d0f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9266f7bb-95d2-427f-ab72-49df6136fc48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4ed3a5-f7c6-4b61-a185-6e53bc74fe2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5141bcb0-60fd-454b-b109-1f41b47fdd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144e6e3e-20fd-4b78-8d90-bd821b7f0357",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a51a425-6060-49dc-8df9-939e8daa41ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116a624a-bce0-45c4-b567-c1737721ad87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886a78b3-0dc8-4d0e-8ccf-e34a8a1df2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0469ba-a1ae-45e5-adaf-5942000d2123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79df51b7-e156-4131-9305-1c7e2cd69a63",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d12addc-b8d0-4f8e-a124-6def59032a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8190ce3-0322-4c0f-a83e-004bb655d53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1820de8-2bec-4012-b43c-33680abada26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37d9ddf4-e0ef-4400-b831-4c1b3f670cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842b3459-c53b-41b0-a98a-c0b9e164e4a3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcb16cb-7f91-48a8-8566-f8b63489e5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec8b5c0-91c9-4f34-b2dc-0597abcaae46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4026039-84c6-4273-bd36-288b2b02415b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0958808-2171-46bb-a6ee-8069d1082512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a89cef-deec-42a9-8bbf-2e72ca2ec0cc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370b03e5-5742-4e17-a756-b5edbd61727f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff423bf9-83d5-4f94-94a7-5646111578a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f184e146-c204-44c1-a245-b14da2816aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba56b1d6-5e16-4e6d-b195-f73093115701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b853d0-8310-492f-9b29-c80c514e7085",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff275062-08a2-4ca6-bfeb-6d5565012ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b841df1a-3bb3-4b47-bc66-ec45a2cc152b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65722ecf-f238-4ab4-9d3a-c3f90e7034c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2132ceb0-0495-4c78-87f4-a30ae80d55e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fb627f-f403-4dd3-9952-fb2156482164",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bea852-1abb-4e39-999c-6cd8c0c4ca57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fcae2c4-899a-4372-b1af-12d78ebc1e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26f246e-27f7-4827-bdf6-22b2782ff035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "31d4aebe-dca9-40fd-ba6e-e62c21d05409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a6e5ba-0acd-4ce3-a032-4ba55e8bde9a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec603e0c-a7de-4f2b-8191-14dfe25291c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d85cbe3-6a0f-4871-a6f0-6460d1022ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03904d16-c645-43ae-beca-896d495c6d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd9137d-7be5-4882-94bc-3e88f9e4ec89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd15a381-8634-4781-a851-4b352346c4db",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b59be9b-e233-4ed1-b43d-507e779495bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71bdc0b9-b394-4763-b8ca-edde577f8fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d504af60-5ec8-4f2e-b4e9-d7a5d865b7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f29e84-6fb6-4df7-ba16-153547987d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c4951d-ed2e-4f80-8ab1-1533ccafb9ae",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0865cc0-e895-45de-b48f-e088e6a101eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9384f808-96ce-4626-81f4-fafe36a8f784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb2282e-6f0c-4bc1-8d9d-ab8038150bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd5dee9-7b0e-4ae3-b49c-e89704213a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b719c70-5d7a-4254-864e-93e38aace426",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9263c792-cebb-4a4b-9885-b3122483e791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d96c4be-fbec-48e3-abc4-0d9a556686f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6805be75-088a-4b43-9d2c-a944cccf888d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e3d8bf1-50fc-4afb-bea1-67c1286e84da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2043fd0-a289-411a-a8b0-c0f6248b5e3a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a4c24b-7adb-4735-8d29-676613acb945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5518d895-f95a-4672-8827-a89e74e28144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91dee351-981a-4c31-bf76-89f62fa77a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7011ae-3092-4f54-a38c-3f68422721fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa312781-f0b5-4641-b297-5b72c7257531",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1d4db0-b95e-4e76-960a-3287f41d278e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e782c2f-bcae-41b0-a33b-a1fae6739a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb0ff91-1e7c-4f56-ab70-ad08a8e22e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a93f028d-c148-47c8-b3af-f11dcdf066ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ed548b-2dad-4ecb-b8d3-d332d1fc2555",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcc41b5-83c1-4f4f-a0e7-aae7df3c742d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6388f6-3a3e-44d3-a45d-c830525317f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d07f584-5ac6-4fd7-a40b-1a888a09be5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa7ffb4-d375-4884-95a9-d34b380ee3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340baa5b-3cf6-4c11-bfdd-37ce5cb57050",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe91d27-ccde-4663-bfd6-6e257410cf4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68d3cd4-4719-4a89-b881-1c35c67af97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2479f8-a307-4cff-a5ee-f995d83089df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5433eb8c-a190-463e-a519-4fb738802fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35481989-373f-46ac-926f-fdb80b8d4d17",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fc8a45-dfe4-46e2-b8bc-c9d43402c16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8780771-54af-4a8e-b079-120c04f15ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056d2f1e-4a61-4303-aeb1-3e18d7ea17e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66910eaa-9374-470a-a9cb-7e46f959257c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0210aab4-2979-4c72-a6cb-1adbb61c0489",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4454388a-7ce6-4c75-b7d8-bf2d5a8eff71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21255c7c-9c9d-4cd6-9b84-4c7c1ca93dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c28d1a1-7973-40a8-a05d-b5424ee46ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48c432c4-e6dc-4c6e-98cb-6d9a41010d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9558d3-8fa1-4eed-b100-8b144263ff73",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4a9d86-395a-4a3a-b698-17f39921edc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b21472-9f04-44bf-a5a3-ee695f6f602b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a3846e-3c20-4e13-8406-3b80e0cba0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1dc7a27-338f-496d-86a2-428bfbdca9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78e0adc-2767-4695-b07d-de61bf6d1be0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73f2334-2387-45b6-99b0-cd35a1456b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2354880a-3dbe-4263-bc41-5d562157321e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997213ab-f9e0-4a87-9267-c8ea4b0e8146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e10d5ae-7410-42d0-ba8e-88589c5f2465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51dcad44-a9c8-46ef-bec1-d866ac219ed1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bd434c-c879-4912-85d1-35b19b2fb886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3dd381f-0d86-4533-8eb2-3d401f453829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2849195-cba7-4a97-9907-30fc9f5c173e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4992e754-c3aa-495a-95d0-8c86cfdd2ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5ca608-bddb-4b12-9b48-a75e02185022",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3339fb24-394d-478a-ad4d-305534d8ea54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ca902b-98e2-4f3a-98ae-02f59f88f12b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a78fe2e-8cb4-41df-9969-ced064aeffe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb18e0f-bc9f-49aa-aac9-84391a7b7d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a790f2-dbde-48d7-8f10-a64033b20293",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72fd142-280d-4fb3-9ddf-7fb74a9b9216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb4b679-bd5d-45d0-a9a4-8422168af131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007b8de1-df96-4c83-b1fe-8cc330de650b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b25f69-ca62-4a36-8480-a2e5f562c514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386f7620-62aa-4176-a8e3-728b6e30188c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e733cd3-7d82-4fda-99cf-f43e0a9162ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25721302-365e-43c3-9468-0dc69977f104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d604370-4f79-420f-a4c4-a23d272dc7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "529e7801-91c7-499e-8bed-169fc07be998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0649827b-2925-43aa-b931-bc8f584e53e1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558af7fe-d4b6-4554-b36a-c16eb4bad428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "090390df-b074-4043-8555-e6cb6003b566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e9f2f9-81ab-4fb2-afdd-6a580b74225f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8df18a9b-7ca5-4914-90ad-0da8d5573bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe678a0c-d81f-473d-9009-adadb2a93a89",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965e3511-589e-4861-9b54-fddd989916c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7cb3a3-1e80-428b-a1d0-b79d711d21cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00769fc8-e6f8-4d21-ac26-1be2a215fe40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd28024-2a5c-4200-913e-9c0721562091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434951af-c927-4248-b5ad-57c9b295580c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289bf7b1-5681-4815-8f40-4429e86af1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03eebc8-2818-4c85-a3e9-10b6c6a8e6d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236abdc0-d04c-48ec-9478-c4908c472e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e935a1d9-961c-4dc8-8b19-d4e045dbcd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4579633e-1aca-4013-a4fd-3a2305756782",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d153f16f-d250-47f7-a402-015c76de8d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "831241e1-d9ff-4c42-a5b6-6b4857af31fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d23611b-c094-4e24-a366-52c6f87ce774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05933e38-a6bd-492b-9307-104d2ec7216f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1e2f59-51fe-4937-a538-c734bdc300e9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf01660-959e-4fcf-b7ee-b453e883ecf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de0b633c-e5d0-4ee3-ad85-75dcfff22059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e6e0da-c5e5-401f-af02-491cd2effe87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "078cefe4-2a37-4b0f-95bc-9dea0c84b61a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e2025fd5-6062-46b6-af7b-dbd6a7ec4b83",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0aab2444-064e-46fd-b47b-7510de196f1e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3d3101-0233-4eef-ac2a-4ca2e071447e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2e8165-0280-4030-817d-e125cfaec3f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f64942e-d7ed-446b-babe-8f49fcadd0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02bad847-89b5-4858-b65e-46112ba7dbca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a1fbe56-3e01-440a-bab9-98aa05f92c22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7815a114-9bf3-4dba-842e-d2ec12b8d3c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfc5de04-a783-4c5b-94ad-2c312a7e8173",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6840d85a-4a6f-41e6-9b81-99d7034c5176"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12b16265-b49a-4eff-9c8d-fe32cad36e5d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f6431f1-8ab0-4bc8-990a-c52be5f85669"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e899f1aa-1cda-4f1b-bbce-a33f0e7bbfe1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e7f7971-97b2-4b14-a8bf-6ec673ecc248"
            }
          }
        ]
      },
      {
        "id": "8d97b0a2-c3c8-456d-8070-99056d21d428",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1b043af3-4253-4383-8f8b-89b1c83ebeee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5174f927-fe8f-4e1d-9b83-3eee1b7be8e4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "df96d9a6-3b35-4bad-b4da-04a1b2602be7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84340331-b59e-43cb-8c9a-103a8e4cb195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4190f5-1c2d-44fb-bc24-fbae4a4e5196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b6a622-555a-47ae-9207-661d02fec6b0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31affde-51b5-4633-ad30-77c13584a987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9848715-0523-4715-8b35-365587ce5f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1de8ec-72cf-4201-a795-443680535315",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a15b76-3e05-4f33-836e-2900e09f58b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db4b5db-58db-4646-8b41-daa8c5db8304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae67720a-52bf-4c5e-abcb-17c08d4366ce",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e305372-ca86-416f-be2c-06347d4e9357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d01387-be58-4d95-852d-d3e2da0a9fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f1e00f-1e75-48d3-9095-aaba4e33730a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f507dd-cd41-48da-ade2-23c2bb146612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f6ec74-1d41-494e-92f7-6e382a37a130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d447fa-59e9-4cb7-a708-9284963c876a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74de1aa-6ea0-46e0-8ba0-7b36c1681ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039a21c8-4080-4ca2-be58-1e4f07e343cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227a05d4-3bba-4f86-8bb4-a8e785b6b22e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6bfd52-8680-40d4-ab58-249e8c4ddd15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f41e6c-179a-42cc-990e-b55a6690029a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfe8a3b-e04f-4fc4-9995-37af8dfd8f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f686c4-d492-492e-80d0-e6d83f7338ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14411ce9-e65b-4a88-8e2e-9b45657bf68d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae29df8-8938-4951-bd72-27863729652e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03dc2038-b91c-44f4-9f91-b8c5ee82ea7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238ac5a6-80bd-4f49-beff-0c3e4933b59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a856396d-1a1d-4d8e-8c58-5a2c0005f4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db319b1-2290-47b8-b1f1-b1604e590e6d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf9b5ff-2678-4e83-a892-5e18227176e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cac07a7-3a3e-4ae0-a3ce-76bca8f1a0ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d8189f-c3f6-4fc4-9be4-3598569d1aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625833d1-2a58-4fa3-9eec-81bb3e08bbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28ef92a-a49f-4376-9998-13c9680eb878",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc53741-b5a0-4a40-b862-644e4f52b6b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d7cc5cc-a965-4175-bc30-8732ddb40bc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd6320b-1152-4826-b298-29933a38a322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17e8424-3c78-4adc-9b9c-cfaa555799c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adad2d0-1d0d-4050-a899-952edcc7bc87",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48ef43e-2d0d-4545-a7a2-9627583b2d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37d3df9-0f2b-4315-bf38-cac7f5666320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc967ad-3485-4b9a-bcdf-6cd2ae49e687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9799af87-2c88-4bf6-b7d9-5ec860081fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7816e1cc-2e07-42d9-9909-95f89a1f3a30",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6d4d84-8296-4e36-9d62-c2d1ad2dcf16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6def9f8c-a62b-496e-b156-c7ccddc419bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4c75d3-488b-4655-8bc6-48d6147a479b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59623fd8-f0ca-44ca-81f9-4eff3d2c78f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b991dc57-cc9c-46fc-8658-2265d9b75d8a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888f2587-eefa-412c-94fd-f127932631d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07191a66-7fcf-46ce-9f04-a892b8444a5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e95e61-2a03-4d01-bbb9-a6d606ca5861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552ef3fb-db17-45dc-9281-921ffceb92b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8eea683-352b-4b5d-a3f7-f78521c3b13c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6b86a1-b21a-4d04-baf3-9b44292c634c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccc19b76-d0c9-416c-a94f-39c141dd33cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2abf905-30a9-4e6a-8aad-ac3d9bcb4e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc8a185-42b9-4c11-bca4-a404320cd426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35afe230-113c-4190-99ae-04b1298423fc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40c46c7-24cd-44a6-865f-d3ddbdfa9d37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8ad05fa-55aa-439b-a1ac-f740445056a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847e713f-5672-49aa-b31a-38c904ba649a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a0f133-4c45-4ec0-b1cb-4262f93468a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46288bbf-b454-4808-8903-86e5fdd888d3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d972c1cf-bca9-4f98-9e62-fc93660de47b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14e5f18f-047c-487a-9cdf-29ae390f201f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a467b956-a7f6-4159-98a5-7f0ff9b1a5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1b869d-c29e-4773-94fe-fe82541f17ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4a4de3-7956-4b80-83fb-38af1856c499",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff082831-99a3-4bae-adb7-9892046b2421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64121a38-14c7-47e6-adbd-44698a7aadd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b48f17-1457-4079-a98f-9147d5bdf0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f583f4-8a86-4dc3-ad90-1f8d1f9b952f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a373e1-2e49-434e-a02f-c81181f53767",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c87a0a2-899f-458a-bc3f-08bfee6fc1c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3758555-f1b5-4c2b-82cd-30e37961ffe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1137869-f6b2-4e1e-8e42-6490034e80d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f63f19-8510-4724-9fd8-ed9c7aabbf3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ac8924-5d14-44d6-9434-9d1979fdc33d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4424022-f9c8-4948-a942-65bca2ce7f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c575d12e-2758-4e93-9267-e0473539b73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acaae2b-f87a-454a-ba77-c76559b7ab7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f18b79-e054-4675-8f6a-401407f5ec27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e9978a-5b93-4e12-ba41-91da649a4513",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b5750f-3d76-467a-a7b6-53ad5e5417da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ab115b-712d-4c9b-ae52-849ac6c7f7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b50417-a9c5-45cb-ad88-b52efe87d4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c3a7a7-6e5f-47e8-a232-856482a89f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423e1239-475d-404d-8327-228671f479ee",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03817b98-8ca0-4ce7-998a-9a897b00f539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "924a41a9-00d0-4a08-9e55-3f76787f64da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7e3074-24bf-4e6e-86bf-b304f5b14a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9fbd91-3d3a-49ba-9836-0dc031355b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec13459f-5ff6-4cc6-9b3a-c89e12382925",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1382abd6-055d-4289-a9e0-ed6b6b3d5291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d345c17f-eea6-4b72-a425-be2f147c7c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9413f7cf-d2ce-46a2-997b-936d1bb5fb98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250e11d0-7679-407a-ae1a-50040b7ff3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d28c77-6ac4-4ac6-8d81-ec643c203ba5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa6fda9-3137-4bca-8c37-4692ebda2bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f7ba81-7696-499e-9c15-d323a65a06e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00f26f7-953e-49c8-9cdd-7469a5a0ad5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff9a2b2-7b51-4510-94e2-9fc933f25fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db0859b-2099-44ca-978a-0830beca7ac2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cc508d-1bbc-4d3b-b158-b43cf59abe8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "591206dd-4157-4aad-af58-84adf68be2f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09eb9786-6f2d-48a1-81b2-532311b1d9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a838b1-9981-490d-91ec-dc77fd4778c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab34f890-0ce6-452a-85e9-9e287908a2ec",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c432fc-90a2-4861-b7df-90746512b498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d38d435-dfd2-4858-94c1-f098021609eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5024d538-d519-4a5d-b700-a20bac2e5bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b36e12-a714-4e6f-abfe-3390b5e577bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2aeec6-7a9b-45e5-acd4-2cf19fe3a9fc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3281f0-9fd4-49a8-a37f-1cf66fe9ba65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "282bffbf-4397-4b20-88c2-24044177bae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bddb8f-828e-4b4e-9d98-2b5372fcaf39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8022dbe0-b79f-46ab-b14f-2c9338718b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183b6a0b-d30f-4cb4-9e64-59dbd12db907",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc8cd61-3ca4-4044-b873-062fb854b1e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "474faa0b-3059-43d9-9117-271ae9c6f68e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2465751-bf9a-4d40-971e-8de6242ba151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8b60df-ef01-45b4-8946-d489f2db692b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2023d0-2d1b-46b7-ba06-5d5943b0eaac",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a928b551-6716-4f39-8f8a-8e43c506439d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8315231d-f193-4de5-b038-55d3eae4282d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ace865-5b99-4527-9b24-a4847028f590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2fbeb3-8107-4953-8abd-56807eec133d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1aec8ea-e936-4f18-8aa6-38517b05e635",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9caec0f1-6bc5-4732-aff9-e8133014f8a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "055af52a-434b-477b-94c7-d7bbe444756c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f056bd1b-8b11-456f-80cf-3706a80fd2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a428be80-a218-43ec-820c-b68bf5f08072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7687a88-2973-4fe9-b114-b27e3d11cf60",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b381c4-d2a9-4e0a-94ba-345e9e5ae46f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc9c5a69-ea06-4eb1-a127-23ac07a1173d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4b00d7-1af1-4320-b05c-da79b89081e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669d5cb5-32ff-40ac-9b9f-d4c5ed69d5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b6f1a3-0084-4f54-b825-5e0f2f549615",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d5ecc4-30e0-49dd-87d5-71be834df40f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0662adc-3190-421f-9b75-d048998e605c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b43c69b-cdac-4d26-addf-a0c0980103a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceba0dab-d798-411b-9fea-58abbd3136cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db94458-733b-4c48-9aa2-63c5f51a0a54",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabdc0ec-7900-4b9e-b287-61d8d191d268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a36411f4-bfbf-4b7f-89db-39752d1762c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07854244-c2a3-4c35-8966-ca932cdd346c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09db2b8c-0244-4647-9f51-424c96e8513a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7f10ad-6ab8-43a9-9aa4-07ff050b5e1f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d30b497-6384-42d4-a4ed-0d2fee1a42c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5353def1-b4ef-4769-81e7-701266d74e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2afbf5-c81a-4388-b4ec-801e9e30c141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1437e07-0402-4230-919d-86fb264289bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d014dbc-b634-46c2-b986-2830a020f484",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d042a511-2c1b-4636-9a0d-ba060d51aa5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47402f83-e266-4de8-83ad-c0254cdb6bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ce8eac-51e2-41aa-84a1-e5aa3d0360bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972ca13f-3176-4a90-804b-925d2f97ffa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0c5df3-c869-4934-a6e4-5bafc1c61032",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2c1274-4252-46ae-b6b7-f01333519ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53b091d-16a6-4fa8-9d20-0e7fd941c5dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83cd541-1818-4461-8b16-1e5c2597f8b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb3a5f6-19bd-4428-81c7-35f08772e544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba36a41-82eb-4dce-890f-39617a938aaa",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd6929b-85f5-4f3e-be53-81e5ea4a3b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9e7c21-640b-49e8-8b66-60872fd5b998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0dc9eb-a898-4774-ba01-54a5dd998dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe24277-911d-4776-a586-b6217129f6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2cb93a-9d59-4742-8027-52aab4aa4b27",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1838491f-4e4f-4fe9-ae83-ce532e599bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757ee4b8-1af2-4c8a-ac10-d8e365746313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93ba5b2-86b8-4481-93b6-4509f91fdd46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aee16e3-eb27-428c-a72d-39e3b94a36f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7fc064-c3b3-452b-9cf5-4c10e79a6bfb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe51064b-dd4c-4e86-bab4-ebaab9c8267f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b536ad-4592-4b1a-a371-22da548e9553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "106e18e7-2f4d-474a-acae-91b95ce5acfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72f4b22-ac8f-44d8-b9c6-500d80d7ddf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ba5168-8aee-407c-9018-502e7231d4df",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1768c4-b19b-44e7-8b22-d373cd1de78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2215c7-3341-4516-bdc7-e144ccc7fe57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0313afa5-c935-4d4e-95b5-94d610760e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f71a6b-ae4a-4d39-a126-f271edfa3249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e42e50f-aa9f-4c9d-b4af-998f96c6741e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d679fa30-9e29-424f-b111-23a7a40abd5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45cc10f5-2e1c-4f4b-b22e-e7e63ea8437e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e88cbd8-2c9e-4208-8c1b-acf409390f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7c30e5-a3fe-4ed3-a1f9-53eb600b972e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51abe7fc-d47d-4852-8914-9136f3b09c42",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d387cf0-2f82-4d79-8807-4ad4f6ed2e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f271c01-bd83-48a5-8861-2a37aecbfdd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de0b7e8-cd91-4ae6-b02f-cb184e747cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1292a220-35cf-42ba-9748-aaa1484143a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583a13c9-6efb-4fc5-8a4a-0913a808c602",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8610ff3e-8d15-4f9e-9616-51750958f23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a3ddcb-4f12-4dbd-a58d-808061463ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8dd23d-7b43-4669-a827-d26ac3710cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00dfb45b-cae5-4c58-95cc-9e10d6e11e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3c9d98-95ea-4f48-9bb5-49f563ba001b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5d1b72-7596-4709-b1df-6bf49eae6d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213242a2-7e82-423b-a805-7acb3847ce21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c126c6-a326-4a75-a7a3-4904bccba11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a346e8d-5586-4d1c-89f6-06af78207d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df356e99-8a8d-4094-9725-69f65a0cf7c4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4418db-8d3f-4037-a5cd-28d6b0dde006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa9a0ad-4d94-474f-a816-34dd1fb55c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "087906aa-592f-44b3-bf57-e5730580cf6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6f4675-088c-4e73-82df-6305f0fd5759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4fc378-02a5-4dcd-a8d2-3de3d2dface3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a138a44-2425-4aca-830c-034f11d72c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c387c205-57eb-49d1-8ecf-ea0862b2ab10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa9b4fd-a221-4dd3-bb1e-1e8d19361c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5910748-2b97-46e4-a0f9-9a3558fcd944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818f87ff-7708-4dd8-93b2-a5c8bc4750d1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c72d0e-0b3a-4d36-930f-4a62e94079a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56dc62f4-a540-4d62-998d-e00037cfd497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae34144-9f38-4374-96e8-1cc7603fd2fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56766eb-9774-4078-b4b2-4d24161616d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e454dfe-e810-4e40-a928-84be29490b22",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec15f45e-1906-4050-a0e9-f54c9f5a48de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a8cecb-1df0-49a1-827d-cfc497dd219e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f8c68c-b4fe-4b85-809a-46d04509dc6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bbff3b0-f9aa-4d65-b836-93a9af4d6ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613f4f6d-a605-4727-9f3b-db2e0f2281d8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa17f5c-b8fa-477f-a77a-ee1bf7f1714c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a07d76c-8575-42b6-9624-9889845afb30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e36cf43-d8d0-4210-8d0c-811a8ffee392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2158fa47-c6d5-4a00-ba35-e9ab1cd067fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a93b27-d4f5-4e6c-95df-ed59c3de5556",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db826274-8841-431b-a8e0-c44af6915a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf2a663-52d5-4fe4-abef-aa134071f712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e73029b-99d2-4cb8-b91c-eb9fd3e6811c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1b0e67-89b6-4539-aa94-4fa4527df222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f891f4-8331-41da-ab29-4c7f1f582e90",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6f60be-2210-4b9e-934a-4f15252ec2dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4133106f-bba8-456c-b9f6-26a2f87fe572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "567576bc-59c2-4b34-a6ab-b35b01b1f421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ced3e5-848b-4a76-8c56-076247dcfc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a347dd7e-5a74-4747-85ac-b48ef0dfd031",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1c58bd-94e9-4e5e-823a-f34da7b5cdbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153eb20d-f088-4092-9be7-409f5927bee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a44df3-f404-4ad8-84c3-64542d3e3972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ee4191-bb3d-4d81-8266-99ae7a0ce5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0cb0ef-64e1-4952-83cd-a1c64d8281e1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f30f90b-7943-46d9-85bb-e1961060a736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e92b14e-b8b5-4e98-8491-0464107ab5f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5634127-243c-4c69-a0b3-c707b442e891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a22056a-1b2a-4562-9365-4ae071bbc5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f778f55-fed7-4f24-9b65-5617d79e374b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbfad01-c641-4dc8-9c89-ab485fa23a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f0fb8c-b57d-4d6b-9cd2-5bdc5dc9da39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dad534-10ed-4bec-b674-fa4f6dd7f100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51065851-0152-4f37-b59d-175c684c7008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0560ac4b-92d6-43d8-8a7b-560df655bee2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8015d640-d3db-4799-a0bf-d4cdefa993d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5188a63-67aa-469b-a94d-ed82cc4dc548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f1f8e7-adf7-4751-bd15-7863dbc81d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a320d0-2ff9-4c5b-a083-3af4455ee931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc3bf13-adf8-4980-8ee7-bf7c2a7253b7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec1c55d-d4e1-4625-906f-5184b70b5b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d253f58-ffc5-4d58-ace9-a9f1cf937e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c3c35b-7ff0-4c06-a4fd-0b44da4e00fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d3a234-3988-4834-b12e-e56fbb7cbbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7dca71-40ef-4c26-b30f-c8ed1c9d16f9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953e0394-9385-4eff-9605-dfa9d294307a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f454d0-0db4-474e-a4f1-8f44597fc64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8970810b-298e-4caf-9553-d36db1dacb0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933abebe-c335-4cbc-95d0-dcb26fd0fd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6befe54d-9352-470c-b960-2b3fb9b383ce",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2ad9eb-f1df-40d1-abfb-a45cccdb6323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1f1c63-912e-4241-a088-f0583bd53677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69dedf0-73f5-4e2b-9da1-dc2ba8e18864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad40c9ea-4672-4512-8119-2230b9b3a38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668a5d25-5bee-40d8-8ccf-c70402690ea5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f0e9c9-e72a-4563-9c95-6fc4b86f3b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0e41a8-60c1-4be7-9934-4f1b35f2801a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcff895a-2b39-40d4-8536-7c050b0c6773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d309b78f-b99b-4150-8008-d3ff3e569ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a4f6e6-9d5a-435f-9928-4b1b94db6796",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3052914a-e974-444d-8b48-74e3e3860713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b7ada4-fea7-42d6-944d-d7e2190f3c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed9649e-5168-42bd-a2e5-39d6f27bcf24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a17a470-fc78-4ce2-8dd1-9f8366331a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fcab93-eb6f-405f-901a-4898e63c79a3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a06c2e-a7b0-431c-819b-acd498addbaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f810fdcf-1e63-41c3-a365-fc783b7b4e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b823bcb2-a646-4407-b202-c39890b069f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ca68ec-289b-446b-a954-bc574404b0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdafcba5-dd6e-498e-9222-ce689dff1bf5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c57f8b7-51fd-4750-8b70-0ac003b05fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd6eaf6-d07a-4152-af9a-9fd55c04da39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1f5fbd-69f8-45a0-9dd5-4697dc69be1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117870e9-143d-490d-94d5-036f8a13cca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fee7db-8399-4da8-9492-4c4a21de5c9c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee2a180-d62e-4b6b-82f2-1b9bfe79da07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06ba41a-46e2-45e4-8729-2f57c0a1d386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea67e83-3bfe-4444-b463-80bc3b86701e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc537a5-6b6a-4e66-82ab-ee7b2abe0a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4075f643-543d-4b74-99d2-0e32bc664b71",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3b0d83-ba30-4c29-b459-1c663fea90aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790de4a3-d6a2-4df4-9a89-103ec61793f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c98ac7-b2a2-4586-9a9c-d7967a38676d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd9494d-909d-4571-a3db-dcd0cd6ff772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be13dbae-be15-4134-a09f-33a311cd5d83",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca7ec22-529a-4c3e-b200-bbe0292f19f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8824dad8-dc9a-4414-9a31-7ae07db48c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63350a6b-658f-4ca7-9e48-54bf2cb2a88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f485538-4c1f-4be9-b679-2d35ab46ed8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7148682e-8fc0-4ee0-80a1-781369556dd9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9480027-947f-45bd-96e9-6e99da9e6fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8121dfd8-bcdf-4c9a-9bb1-b634a1b05f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7ddd0a-1b8e-45e3-af23-fabc1e425502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead11934-c162-4c16-887d-355c19fcfe4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e34c30a-30bc-4521-8134-864088f97c87",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6108d7-2cb3-4f4c-9a6a-55061df99d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72c484ef-23ac-4c2f-b2bd-224a6713f867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f02595-e3a5-4a82-b6d2-912f77a55c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a496ba2e-a9f1-47f5-baa5-43bfd1cbaff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55422494-a8ff-481d-8adb-d06cded96a03",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05f13ba-896c-402d-bf3e-7089d9f0cf66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf64ce9b-4eb7-4abd-acff-090b7fb65057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "326dff79-a3bf-4bb7-907e-eb46b1bf6363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a96769-ce4b-403f-9135-62cf9b25df78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a3f64f-8827-46a7-95ed-75a0696d1035",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139fbdaf-8486-45bb-8e02-29f609a9b469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b63df2ce-7ae4-4394-b76d-4f2ef0db2248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5957e20-f86f-4325-b078-736a7f1ac49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a94eaa6-3327-4712-b86d-36d7376dd160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca41115f-c2d1-4135-8442-6dbddc281afc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6de2bc-6ef5-4dfd-95e5-5c66de7ca365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8eb6fa8-ea75-412a-b6e9-889d8434f033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44895bb-e976-4c10-a16f-6f44d3b704ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963d446e-5d37-4ed7-b59c-97630ae7cc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab17ff8-3cef-492e-9a39-212a20aebc5e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eacde6b-9544-49ac-b88d-7d3274608849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dce1810-4d4d-4541-ade8-d89813d0b96b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844b5196-22e2-4021-85ae-ebfdcd3b910f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f23eec7-f2a8-4612-a11e-ce5d88e74eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ca954d-0b0f-4b5a-b1c7-61a6e8fbe3c5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3721965c-d836-4f8e-8aa5-8c3301fe63a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40b255d3-a0ef-4396-a168-4f5d2d22f3ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad65d4d-dfae-448d-85ca-809455b233d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0ed1b8-320b-49fc-90ea-97c8ee2f3c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778ef7c9-087a-42bc-a4e4-074c23764257",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7b140a-fd2e-4357-8693-47f782bc3a48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "034387c9-3d26-4bfc-8c0f-3da220d0db14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "789a3d30-931f-4481-ab11-e907ef1e12ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68fdf5e2-289a-4d3e-9048-3e32e3cabb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bfa1e8-ca96-4e5a-9a16-d308a93fe8f4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57396cc-2921-42ef-9527-14651e25453e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78a0b7c9-19d0-4d59-bb78-7d9ace48fdb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7130c1-df29-4d95-b92a-7004259fc639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b7ee3cf-bfd1-45b3-afb0-4694ffe4d753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76ea103-6dd3-44ed-9bf4-814760eed98d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4af5f1-e0a5-48bc-bef2-22148ea83759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3131bf78-c4ae-4133-909c-750eb921fd8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc13d54-af39-4b41-8bea-714acd68ba9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b43e929-8505-4c68-b661-e0a73b97df71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779e43b2-5701-481c-b05f-e8c205d0aeb3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94a8f2b-e58e-4398-8f80-b6dc66b86da2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72730e25-4e43-4329-bfde-0704cb831264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fe1d42-70a6-42de-b0d9-01defaa51d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c587e01-6bcd-4093-9cf7-62370b97c226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964965cb-f3f2-4315-918e-92a80e761a3d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cfb7dc-75d4-40e2-bd5c-50ea138713d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e3e20a7-31c8-429c-aff8-30856a6dfdbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc0550c-063e-43c8-9469-bbdf91e4c480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfed4fd-8342-4a54-b10a-f2e229d81c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2978478-11ca-4198-955a-9c3ce18e97a6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e36078d-921c-41d0-b325-0af3ada51f6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06fb1ca8-95a1-4c9b-8a7e-c5ac7bf43aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0422208a-580f-433d-870b-2ef76467dc5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06d8b90-990b-4804-8c64-d43b2860770b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42d07f2-55ef-4d2b-9b69-0aad67a5e483",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b31ea1-37e6-49dc-977b-0a71ec4cac0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79204e8f-3a23-4029-95e9-10165152db57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4f4dc2-a4e0-4269-9287-4cd6990340a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9beb0271-e018-449a-a18a-229da49cdf0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf155fe-4f85-4062-a43e-823bf3892088",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0882ed-62cd-4613-9fdf-b17b5d46b0af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1a8fa9c-bc5f-4dd2-bcb9-8d082801e492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a72d83-c21d-4520-a41c-8af7bf11a6a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9d21b8-1bb9-4e1e-9aec-4b8cb1a8c580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1050e4b-1c7d-44d9-8b2c-ecd2a1b66747",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb588ae9-38c3-46f2-bd1a-0d5cc46e11fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a6f82c0-9e39-4beb-8c11-24a2cdf23d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "441a0829-aa79-40ed-ab57-e76f5c450d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60eca6b-6d37-4612-ab51-d9175e6aae8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702c0b72-ffb1-462b-ae1b-8a5c3236e1a1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05337b8d-e31a-4a90-a48f-2c9f71b45f93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "512e175f-6951-4019-b38b-1a2c9d9688d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0be83c5-8d3e-4a58-8773-ad32b3c3ccfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9768505d-ec4e-4b7d-97da-f78395a30dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67452589-6291-410b-beaa-867e670834b8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29ee2f6-2c57-4ff2-b6a8-561dcacb127b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aa24909-b5c7-4450-af4f-dc6c91bf3619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c46c36-b0b3-42cc-948c-6e28ac6ad32a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ec7951-663b-41cf-9bc6-dae79750e123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9506e0b5-f077-4a76-9341-7475ecdd55d6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b8201b-ed76-4b62-acf6-56d6e2a1264b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4981a0d-0cc3-4582-a515-f5a7b9411996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c43799-c966-4861-b295-8370f7ae5049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8386700c-a084-4e66-9dcd-fd1c1040a3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d0c2cf-ac77-4d29-9695-129dc6cd2b64",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4591327c-d505-451b-84c0-9a4c2d165b52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e93a0bf8-57bf-45f7-8ddb-f590ea13a873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9549c43a-d2c0-4727-b074-e054b4daaefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1917b5b-899c-4b2c-8c5b-10f43285138d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a6969e-d33b-4f90-b163-7a68b62f9516",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a5cfa7-9c80-4e44-87f1-cd9186e4c504",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4306cda-baef-429a-b058-9ff12922efd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06c3596-ab8b-44ed-beba-11aca4bfdff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e2a7fb-2bec-4a68-bba9-7f0f6ef9b137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c5ca0d-4c28-444f-a9db-686a9fec71aa",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfbf8cd-6209-4ce4-89f8-c4e310278fe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4c7840f-35e6-4aed-a50a-c7e506fd6a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc335246-6d33-455e-b0eb-41d8501a79f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e43ab92-b799-4123-bb06-2ccc52dbe220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc09f2b1-7f1a-45b7-adad-07fb85d6f0be",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802311bd-9954-4ba2-836c-ca8a1ad15339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "816a5836-5f41-4390-9752-6808f6b8702a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "082e54c2-0fb8-4bd8-a082-722445db49ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd4c38d-3039-486c-8eaa-5569080c644f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794f9c8a-654d-4293-b180-da7d8e68b735",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b1f3c4-d68f-4097-8493-4592ab09b08a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a887a065-71fb-49cd-8d0e-7fe190027b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81984fdc-b722-4c35-8355-9422d75de31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0b4acf-e4c4-458b-81ad-b08965568768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2230b252-e6d4-48c2-81d5-e04f155d3a27",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2174e02b-6065-4d0f-b8cc-1a024cf31b72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdeb40ac-3b79-4d61-a2a8-7afcde56b7ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7dfea75-5c5c-4d0f-9bb0-33b32234b164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b34291e9-00ba-4951-83cd-735d70808ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5362ff-5211-4ebf-b0af-75bfc2da90fd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af55c77d-804f-409c-95f6-a6f7a0239024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63ab5a1b-26e9-4055-8a6f-751d523b9b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c506f31-276c-4a1f-b6b4-2de0834094c1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8debb890-7157-4fb6-92b4-2c8d2e6d69e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88430ce8-c431-4c9f-9f5e-a7d24a2cead6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bf23e1-85f7-46ef-8745-3e883f7f87bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "979eff4b-0d9b-4202-b64e-c4008104a05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a489a2-3dd8-44d5-ad72-9d41a7b5521b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e145ca9d-18ee-461b-9e6b-6b92e0cd9bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46609e78-2572-4c15-bf8f-66ccebc12b1d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6a199f-31cf-4224-b338-94ef3f862151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58455cb4-ab8a-427e-b78a-b22037b9f636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ace8d1f-9bd5-47a5-90eb-33d35d5e7741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54170b4-c57e-4eeb-9a88-82846ff91cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d105d2f7-e3ba-4885-9b50-7a51ff7c5ac6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93240d2-b77f-4fe3-9580-3ea62b78054c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed587891-5a8f-4f55-af68-201dfc6c1def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "264e834e-85e8-48cc-8bf6-554ab4077891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4466a584-16d1-4801-a94f-784508a27e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c46261-7f56-4129-884e-01cde505bf72",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8ea41d-f1c6-4658-9c81-1deb53703c76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "face9e51-9149-4437-b9e0-08b93540f4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "732d10fa-24c4-4eff-9aaf-98ecc0c54f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0470af5-e84b-4c3a-a44e-3b483aa9003c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4896405b-e51e-4b03-ad79-791b5d0acb00",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2094b154-c73b-420c-8949-45e7a4116034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d95bef71-0018-4824-9e00-3264e7bb07e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119256c1-fd7d-4516-b2aa-323bc5409e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f67f2db-740f-423e-a310-0531166b477a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fa768e-dde7-4fdf-90c7-67f92fb6e475",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fb2fb4-8629-440c-97e2-f2b51cb614c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a50d13bd-7131-424e-a22e-623c8a7f255a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b5ecc9-cfce-4d9d-82df-b1bf7a97c902",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e6bc0c-9c00-46ab-aa80-d751193003c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccfc546-177f-48c8-a3bc-f4140ca28b9e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a9885c-a29a-47f8-a664-08c69aa6c3bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b08bf60-fab9-4c37-8465-2022bdf73ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3763f25e-116c-48f6-a695-84292745bc00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0964b78a-ccd5-40ed-8655-bd84aa769e76"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "377bcf0d-12cf-4ba0-99e5-68a0a7798489",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb612070-1f3d-44d5-864d-abfe61b892e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8339f489-9c79-493f-9b89-f1876b12ac36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e6a0cbe-132b-4edb-b56f-b1c3b47db05c"
                    }
                  }
                ]
              },
              {
                "id": "0c3b3d39-e513-427c-9715-d4ec5970a3dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c19b23af-170a-49d2-9e39-aa84fc8c0cd0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aff16ab-9501-4fcc-80b2-5bc08216795d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e444b782-4996-42bc-b2cc-e3223a6d0169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b401fc36-2c8d-42c9-b8d2-35d5833909f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "940f0311-bdd9-4bc8-b1b7-f704d89d544d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f427ee0f-fd9d-400a-9b92-6eaad2aae3b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "076fe3bb-3d04-41de-bef7-7b69489b6bad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b75c758-de88-407a-b9c9-0da6c84c1c55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04e5ba72-bfd9-48c0-96be-d454b84c1b06"
                    }
                  }
                ]
              },
              {
                "id": "1633031f-fbde-41e0-805c-0687c7565a7e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "23275187-55b0-40d8-aa72-93c403499268",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47024e2-9734-4b39-b90f-0ec5d64a486a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6498f8f2-3a87-42a0-b6f8-0c37c61f3eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d88f40-ad4a-4b59-a668-4aa5d928b0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347ee8f3-55d4-4069-bd67-3f9b4b6ab346"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5e3f3885-05ad-47c0-93d8-8f3c72269e71",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3cb49680-f3c0-4af0-af84-ce4c62e0c752",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0204d4f4-c388-45b7-a823-722c5dfa8c2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "17965a8a-9a47-4007-a02f-97dc5a630858"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b676fb8e-b309-44c9-9fb3-b9d43e448260",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a23092a7-9471-476f-a710-342d6db96b06"
                    }
                  }
                ]
              },
              {
                "id": "34d77426-811f-4b0e-a3cc-b7f52a7f89b1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6db678f-77b8-4d9d-b5df-a065c883d6c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "552c4d29-3eac-4d22-9264-ce8f090141db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "121e89ce-4370-41f1-9b1f-4b7c8fb07966",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bac53709-6512-4161-8760-90298a7e9430"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29f524fc-b337-4eec-a19c-dffa52fb7640",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7fb7de0b-cdfe-4613-a316-faefa8f42ffe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56982c5a-abf3-40c7-a3c3-b0a4d1e057f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef0d472a-d76e-40e3-a01e-17613e87f441"
            }
          }
        ]
      },
      {
        "id": "aecd3211-296b-463b-bc9b-4232e7e279cb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5c0253d4-6237-4404-9e97-2aa17b2907ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e4707c1-9132-46a3-97d0-570eac85bf2a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "037b7b36-4047-4d51-9040-7dd6dd9f65f3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2485e0c1-7f88-453c-bb2d-262d2a087bae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f81a95bc-d94f-48ed-8a66-30e8e7fe822d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a575c43-c23e-4d5f-b3da-6dcb78e5355b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0790c51c-80e6-44ea-8c36-80f91404f1ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5eeb8218-c0c1-40d5-9661-1ac4cb439be0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14e4211a-588a-40ca-ac1b-cf6b77d8be8d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "315fc1b0-cdd0-4ce4-8696-8d5d44b1dd94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c35dbca3-54fe-471c-93ce-ecbf7d63b730"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44e964db-4825-4628-a818-b4d68b9f64b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1725d5b8-0f91-4ffa-9510-694a32f3fdf2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32a9255e-0698-4553-a8fc-226fbdc38b69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c250cf14-3f2f-4701-bd86-c753b52e018a"
            }
          }
        ]
      },
      {
        "id": "7fc431eb-7a05-4a93-903a-b273bf1ebd10",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ac197a9e-ddb0-42ac-b8b4-6758af5df9e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57f48802-fc53-42f5-be2f-53fc062a2273",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "956cf2c3-f1cf-46a5-b854-49216daf09f5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759331a9-a5ac-4771-aeac-2c1479144ef1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f8047d4-2bb4-4cdf-b760-db5efa221a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a208c3fa-9885-4021-92eb-d2b894d874a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5643bd6e-514e-4dcb-8804-3e2742ed6784"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a7b8749-65d6-4b69-af05-19d81d200cc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d864fc4-f1ca-4bc7-8f2f-5b731219c80d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcf3c63b-b17c-47f6-979d-91a65bed3de3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bbb6123-7d09-4290-9c4c-c09c2d638913"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0bf7768-a6b3-444d-8975-b16d56d4cab8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "29c5f572-72cc-4e44-8123-710b43050798"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c62d733-96f5-40f8-ab74-773dc4d589d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be24d6d3-8a80-484e-9469-6083f03e9a5f"
            }
          }
        ]
      },
      {
        "id": "92b39820-bfd3-496e-bc40-4e17b6f06196",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3b90edee-c57b-40da-add2-0b6c3a3754fd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "113c1b57-c338-4a18-9689-1d958279e7c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ba78068-6cfe-4bf1-a126-5b35c48dda78",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b40e77c-7ead-4f28-9492-c713b18cb783",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f3d9473-5a9c-4431-a6fe-608b81c3a811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "394e6a79-8165-42f0-95b9-6f8414917a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ce20ef0-aa10-4268-af0e-53090a1e465c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d53efeb6-14a0-4a61-9676-f0c958c1e49c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "426c63bb-0014-42eb-809b-ffe8ae2609da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21775ec1-aa56-4dc9-a831-e1fd7963bbe9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6624b84c-72d0-4890-ac68-55e31576bd8b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b04ee9c-b824-418e-af55-b4dbbf05fd52",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e6655a9b-7ce0-465e-83fa-a5c476a813eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac135ead-628e-4be3-9c55-845c1bae3d52",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d7882b6-9530-4d5d-8210-4a97a600b690"
            }
          }
        ]
      },
      {
        "id": "d59167f1-1631-489d-b4aa-ab8dfce32ed5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b0978e7-2d7b-41b0-8d14-9c889b702e00",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3b59825-25b8-46fe-b729-389e24fc1079",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "735a9c6a-0e06-4a0e-91aa-1ebf5970d488",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee62d5c5-b591-428d-8090-8194afd9b08e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa6fad66-9204-4f27-8a46-fdb758c03b4f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 100.57142857142856,
      "responseMin": 4,
      "responseMax": 11913,
      "responseSd": 789.2803476079854,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1715042156681,
      "completed": 1715042190637
    },
    "executions": [
      {
        "id": "214edd96-07e3-4e44-b21e-9e6150855c2f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d0ac1d75-e124-4cd9-ac4a-0a08f0d587ef",
          "httpRequestId": "6159ad78-f9e5-4121-a2a6-8562d7c23174"
        },
        "item": {
          "id": "214edd96-07e3-4e44-b21e-9e6150855c2f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ed69d456-6c48-42e3-b283-b1663b86c072",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "5cc4401c-2a91-4229-8e9f-111c43f4844e",
        "cursor": {
          "ref": "89464429-56da-4463-8dae-21442b6d1b7a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cda2a953-6626-41dc-8679-68e4d5db4cbd"
        },
        "item": {
          "id": "5cc4401c-2a91-4229-8e9f-111c43f4844e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ec224fef-fe73-4b24-88fd-807102bed463",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "74eb0d29-c352-4ac0-9ef6-b3b429bd55f3",
        "cursor": {
          "ref": "8e8a2862-7f9f-4644-8a4f-a000ec41d8b8",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0af4acd2-e936-4014-8975-bb35bcc5d65e"
        },
        "item": {
          "id": "74eb0d29-c352-4ac0-9ef6-b3b429bd55f3",
          "name": "did_json"
        },
        "response": {
          "id": "f25030c8-487d-4ea1-8fde-5549f359fff4",
          "status": "OK",
          "code": 200,
          "responseTime": 262,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817a55cb-f770-4b2d-acff-83a4fe6f9813",
        "cursor": {
          "ref": "d744bbb2-54cf-4e65-9112-e4919ec7a98e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "237004a1-e1c1-434d-b84c-239e8e78990a"
        },
        "item": {
          "id": "817a55cb-f770-4b2d-acff-83a4fe6f9813",
          "name": "did:invalid"
        },
        "response": {
          "id": "2084650d-501e-4319-9f06-6cf285eb55c8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 524,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817a55cb-f770-4b2d-acff-83a4fe6f9813",
        "cursor": {
          "ref": "d744bbb2-54cf-4e65-9112-e4919ec7a98e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "237004a1-e1c1-434d-b84c-239e8e78990a"
        },
        "item": {
          "id": "817a55cb-f770-4b2d-acff-83a4fe6f9813",
          "name": "did:invalid"
        },
        "response": {
          "id": "2084650d-501e-4319-9f06-6cf285eb55c8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 524,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6543fc2-dc6e-404f-b135-a2a3f094e995",
        "cursor": {
          "ref": "c6671725-d73b-404b-b1c7-e0a3418553b6",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7eee738b-6692-41a1-8b3e-c9c18dcea508"
        },
        "item": {
          "id": "d6543fc2-dc6e-404f-b135-a2a3f094e995",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "68c08e1d-941d-47e8-a91c-50619cbffa13",
          "status": "Not Found",
          "code": 404,
          "responseTime": 17,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87459263-d8d2-4ba9-8b02-90575efbb12d",
        "cursor": {
          "ref": "97af8a31-eecc-4f24-9064-04f2c9138fb2",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2c24edca-cf76-4788-8dc6-6c770e8d3ee3"
        },
        "item": {
          "id": "87459263-d8d2-4ba9-8b02-90575efbb12d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "82600e9f-b28b-4d18-a495-7c9d4fb81d9a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f29889-33d2-4eb3-a5fe-fa3212fa78a0",
        "cursor": {
          "ref": "ec63bc20-b3ca-44bd-93b1-78cc55b597dd",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ba9ba922-ac66-4e4e-96be-0c8a9f2b7c52"
        },
        "item": {
          "id": "f2f29889-33d2-4eb3-a5fe-fa3212fa78a0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "021139cf-d74b-49fa-86de-1db3e7aa9625",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a56f23-c3b3-417b-9772-0870fc90f041",
        "cursor": {
          "ref": "31bfd707-a575-436d-b87a-b84a8b99e225",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e5a1311c-f4dc-4675-82ef-05e2f3a1189f"
        },
        "item": {
          "id": "d2a56f23-c3b3-417b-9772-0870fc90f041",
          "name": "identifiers"
        },
        "response": {
          "id": "7352c27d-7473-41a8-a0b9-f7483db1f5e6",
          "status": "OK",
          "code": 200,
          "responseTime": 29,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b90b6f-8093-4986-a1c6-d2a62a834fdb",
        "cursor": {
          "ref": "585423ce-37d3-40c1-97f4-044586b37b24",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d6d8a4af-2aa4-4dbc-82c7-300eab097492"
        },
        "item": {
          "id": "76b90b6f-8093-4986-a1c6-d2a62a834fdb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6b1c9606-b4ef-4e6f-9bf6-a0ae0a4c87d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29879c6-552a-47d5-a10f-271da1d50b5e",
        "cursor": {
          "ref": "275805d7-632a-4588-a0c3-6bdab52e8814",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ef4d09af-a224-4d1b-a63a-45f56d624c49"
        },
        "item": {
          "id": "d29879c6-552a-47d5-a10f-271da1d50b5e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "044b0e98-50c9-430f-9350-b2794acb6259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48e712a-860c-4c10-b123-1e13c31ac16b",
        "cursor": {
          "ref": "8f801a76-2282-4543-aa73-a21392c3d1e7",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1e3dd582-7660-414c-bdae-230764a04c46"
        },
        "item": {
          "id": "a48e712a-860c-4c10-b123-1e13c31ac16b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ec1ea89b-0c75-408f-99ad-9924adba0be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004b4c6d-6a8c-4c61-b7b7-569ad47f3455",
        "cursor": {
          "ref": "ae3120fe-6926-493a-a8f4-a28609c9d883",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4371c61e-093f-43e0-9b69-59d1074d0d4b"
        },
        "item": {
          "id": "004b4c6d-6a8c-4c61-b7b7-569ad47f3455",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2119f7c9-efca-4deb-91c5-661cb171df43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3955df-8297-4eb4-8079-659f6219448c",
        "cursor": {
          "ref": "fbaa70e7-79c6-42c6-a54c-dc4a5f8c654f",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "267fefa4-945e-4844-95c5-875773841624"
        },
        "item": {
          "id": "6d3955df-8297-4eb4-8079-659f6219448c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "480f5985-6809-4c67-b928-a3c8477973e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6daca827-7cc7-476d-9767-fe1396effd18",
        "cursor": {
          "ref": "2c87e9bf-509f-40e2-8579-9b6d9e72a7a8",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a50ae3ae-c895-4342-9f9d-1d577551e8d9"
        },
        "item": {
          "id": "6daca827-7cc7-476d-9767-fe1396effd18",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ca5a80d0-a5bf-46ac-85a4-1ec6a3fa1490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390c8bd5-f813-4857-8e26-1e5e81a63cab",
        "cursor": {
          "ref": "2d803664-c0bd-47e6-a8bd-ed80fc65f630",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d43ce94f-6979-4660-b49b-ad92f7cb99a2"
        },
        "item": {
          "id": "390c8bd5-f813-4857-8e26-1e5e81a63cab",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "26ec6f90-a513-4c49-885c-0b186ba3f16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf0a305-2496-4543-a1ed-a1bc0fffaeab",
        "cursor": {
          "ref": "026cfc9e-8400-4b28-8255-0c794942c4c9",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f95e9b43-b434-4737-8cee-8ab54119c74b"
        },
        "item": {
          "id": "cdf0a305-2496-4543-a1ed-a1bc0fffaeab",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1d891741-59b2-4106-943e-63ee2f1dc4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d10356-9edb-48b5-8247-f7af3b0d468f",
        "cursor": {
          "ref": "1e43ab94-174b-4771-b072-7cff03dbcda9",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a4874f1f-c0c8-4ba9-8fa4-3c3c18f85c26"
        },
        "item": {
          "id": "a6d10356-9edb-48b5-8247-f7af3b0d468f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "137b4e36-03e4-4e70-9fc2-dfe987974590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26155ed9-4c2c-4226-a15d-dad705f16e47",
        "cursor": {
          "ref": "102f1925-bd0e-4d63-b6b5-58a8a90422f6",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "040da429-cc07-491e-836f-97d0df7c1008"
        },
        "item": {
          "id": "26155ed9-4c2c-4226-a15d-dad705f16e47",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8e05371b-6709-4f66-a480-e6ad972b7634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a686f016-beed-462d-a353-baa473f664d8",
        "cursor": {
          "ref": "a2bcddd7-4078-4831-921b-9e55fb9a469d",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5e952453-5e6d-442a-acc7-f5602f19d70a"
        },
        "item": {
          "id": "a686f016-beed-462d-a353-baa473f664d8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3ddb1820-4b06-497d-b3e0-002711818114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39062751-a6c3-41d0-8af9-7eaed3cfd455",
        "cursor": {
          "ref": "3042d46c-2e32-4f16-a501-a6a4b081772a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9c184610-20d6-418f-b9c3-4e7ff24c753c"
        },
        "item": {
          "id": "39062751-a6c3-41d0-8af9-7eaed3cfd455",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d7949dda-63f4-4702-8a58-1e796b33cc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32dcd796-f3c2-47ee-8ef5-64ffea3be52d",
        "cursor": {
          "ref": "0d9c78fa-8dcc-46ee-8a79-4f406fecd855",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fc148125-095d-4c19-bc58-c805e14f6b2a"
        },
        "item": {
          "id": "32dcd796-f3c2-47ee-8ef5-64ffea3be52d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0973d32d-2c48-47e8-b343-981c4abea6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7229330-38c1-48ef-9761-0a35148119e3",
        "cursor": {
          "ref": "58a0be9e-2e4c-4c15-8527-202aae457810",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "383f3bce-fa58-4ea0-b461-db8d7e7de119"
        },
        "item": {
          "id": "e7229330-38c1-48ef-9761-0a35148119e3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2bac307b-2723-4565-95ee-21448d755e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a382629-867c-404a-a134-2be051829310",
        "cursor": {
          "ref": "3ec1c1fd-3c04-4f62-898e-0d4863733865",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f7b984f0-de53-42bc-9f39-3eeb9981afbe"
        },
        "item": {
          "id": "9a382629-867c-404a-a134-2be051829310",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cc66b852-532c-4723-93d2-9238cf3b6fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1ac8ec-3c4a-4436-a2ce-6d089fc22490",
        "cursor": {
          "ref": "280c74dd-8de5-4713-b5fa-d2efd44e377f",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "456450c8-cb20-4b93-a8c1-d5a38f793436"
        },
        "item": {
          "id": "2c1ac8ec-3c4a-4436-a2ce-6d089fc22490",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "87d57c80-3a3d-40ae-8bc3-b40b8b07607a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ef84ca-28a6-4a92-b694-31c46534cacb",
        "cursor": {
          "ref": "e5c358f4-37c4-4354-a7c8-ddbd773efa50",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a930b34e-409f-4923-8da3-e8e29f06768e"
        },
        "item": {
          "id": "e7ef84ca-28a6-4a92-b694-31c46534cacb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a0dcd80d-9b19-45ce-b8c3-bb10a7040d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb2a991-e490-47b9-a116-8bf25f4b480f",
        "cursor": {
          "ref": "54278d6d-f563-4d77-9dc9-37da1e4409db",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "869ff7be-1362-4db9-a109-13e9c0399a41"
        },
        "item": {
          "id": "6fb2a991-e490-47b9-a116-8bf25f4b480f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1cfeb5b0-f215-4b82-970d-d7d7fc81c2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d40274-2624-42ac-a41d-cd6d972a213a",
        "cursor": {
          "ref": "f483f1d9-232a-475a-9ad9-0a322fec356e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d4309a73-fd43-4461-9da0-59d79a03a83b"
        },
        "item": {
          "id": "b8d40274-2624-42ac-a41d-cd6d972a213a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "80d571e4-5bce-4859-959c-3d048fdcdbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a4afaf-8e68-42a0-8468-d333398b6be9",
        "cursor": {
          "ref": "46cd8f23-3915-42e1-88d1-c0f654a3e93d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "00e3189a-7384-4151-9e10-2b076ae8ebab"
        },
        "item": {
          "id": "74a4afaf-8e68-42a0-8468-d333398b6be9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2cf569f9-6ea1-4114-b285-a18b888bc752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bd68e5-599a-4cf6-8597-1529c96def8f",
        "cursor": {
          "ref": "7996f505-3a2c-4c6c-9e20-39920cca84b5",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "870452d0-da20-4e8b-b2dc-ae62e062c726"
        },
        "item": {
          "id": "01bd68e5-599a-4cf6-8597-1529c96def8f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "37721071-b26b-442e-8b93-bd2375aba683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62ed438-a9c8-4986-915f-38e49aee7cba",
        "cursor": {
          "ref": "a11600ef-aa85-4ad9-9915-31561041f0a1",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2eddb0b6-0b07-43c4-a6ba-4c5fe15e1e1f"
        },
        "item": {
          "id": "e62ed438-a9c8-4986-915f-38e49aee7cba",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "670edf08-bb77-4daa-8d7e-b869ff7c2780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380e7e91-1f1f-47f2-854c-c0bddc14706e",
        "cursor": {
          "ref": "228391ab-3e6d-4ac3-9104-c8e486964701",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d5b6f267-10a8-44ce-96af-6a6f46cd494e"
        },
        "item": {
          "id": "380e7e91-1f1f-47f2-854c-c0bddc14706e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2ea235eb-426b-40be-a42c-4decfafeffbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2f6956-5ddc-4ba6-9e17-eb3b2bf5a195",
        "cursor": {
          "ref": "4cb95624-f26a-4f0a-8582-68c1f2ef6654",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dbaa64ca-b440-467c-b1fd-4921f891de36"
        },
        "item": {
          "id": "0c2f6956-5ddc-4ba6-9e17-eb3b2bf5a195",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "09380b86-545f-42ec-b269-c18dc0514492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86efd83b-004c-4ecb-b285-231221d795b0",
        "cursor": {
          "ref": "64d3cd15-fd18-4a41-bdb8-bd7d7b2a463b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "610a3b3d-8bb1-4f6e-abd1-1e372d287a40"
        },
        "item": {
          "id": "86efd83b-004c-4ecb-b285-231221d795b0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "36833e25-5090-4932-91c9-2001566d89dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de853a8-5f48-4345-bdc0-0de0d3998794",
        "cursor": {
          "ref": "592a72a7-3a90-438a-809d-af333082f6ab",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d2f6a26c-9239-482c-9109-a98f9739a6d8"
        },
        "item": {
          "id": "8de853a8-5f48-4345-bdc0-0de0d3998794",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "912e2002-c2a0-4c18-85ec-3ba3607f6fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c991bd73-91c0-4a35-9659-ce187e024b8e",
        "cursor": {
          "ref": "ea434e37-1a23-4789-b2b2-1ac09bfa6e6e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "802fdb00-401e-45db-8a80-05440ef7badd"
        },
        "item": {
          "id": "c991bd73-91c0-4a35-9659-ce187e024b8e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "272efabb-fe53-49bb-8320-52b85216706e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420f1b51-9aed-4002-92d4-d0101fabaf97",
        "cursor": {
          "ref": "36868b4f-d93c-4199-9dec-d4066203a05d",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3efaf044-7a6c-4c24-b1c1-32a8bba35af8"
        },
        "item": {
          "id": "420f1b51-9aed-4002-92d4-d0101fabaf97",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4348572a-feae-4292-aaef-6af4a409f8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8a942c-73ce-41df-9ff5-779776cb0121",
        "cursor": {
          "ref": "c5995ec5-932f-4562-b32e-8482d6b647a1",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "501f033f-b2c5-42b2-a169-b63fb7b13d55"
        },
        "item": {
          "id": "fb8a942c-73ce-41df-9ff5-779776cb0121",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5b73896a-c9f9-428a-b420-26c4c10a8e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82107e66-992b-4763-9324-ddae8d578d02",
        "cursor": {
          "ref": "863618f8-124c-443c-8aef-bc5ae6521c5f",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5eac96f2-d074-4f1a-962f-0b7b1fcfd143"
        },
        "item": {
          "id": "82107e66-992b-4763-9324-ddae8d578d02",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "865e30b5-48e6-4ace-acf1-0ccee286a5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c50318-7c64-4bf4-9f7c-cfca2683a9a1",
        "cursor": {
          "ref": "d99f02c8-54e4-4208-ab5a-41bf616e33a1",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "49544c67-f5eb-4f0c-80e9-4376b6f32eb3"
        },
        "item": {
          "id": "23c50318-7c64-4bf4-9f7c-cfca2683a9a1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d89e9453-82d2-4ad4-b461-baa3e1c191a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71749154-24a8-4a27-95ec-c8699beb3c51",
        "cursor": {
          "ref": "f3b2dbd7-9f94-467b-81cc-4778534eadc9",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9f09a0ba-8af6-43bb-9eed-cc51b8426b38"
        },
        "item": {
          "id": "71749154-24a8-4a27-95ec-c8699beb3c51",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "038ff998-a107-46fb-bbec-93df12b7250a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6e7f0d-9c78-40e4-a446-3245cb0fdbde",
        "cursor": {
          "ref": "508b18b6-783f-4d28-96bc-1df21f09aba5",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "43b77874-c9ed-448b-bbed-13c57a038e60"
        },
        "item": {
          "id": "fe6e7f0d-9c78-40e4-a446-3245cb0fdbde",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7a36d56f-ef51-4218-87c5-105c5e4be810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2425b2b4-2599-4e3f-8880-7b9c924d40e6",
        "cursor": {
          "ref": "95d2a57c-9f82-4998-9373-166f69fa8afd",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e3792c60-284c-408d-abdc-da7eb5a8cc46"
        },
        "item": {
          "id": "2425b2b4-2599-4e3f-8880-7b9c924d40e6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0224dff6-5b90-4ecc-bad3-9202cc38fa6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c7576a-d726-41d0-843a-2e159cd23be7",
        "cursor": {
          "ref": "2ac2e4f4-b465-4d44-8826-569087dd064c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "49fcd078-6e78-4c9c-8131-37892fd2e708"
        },
        "item": {
          "id": "73c7576a-d726-41d0-843a-2e159cd23be7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e54c4747-99ae-4cff-b3c9-8623a25a6098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31d75d4-1bcb-4ebb-b0d3-78842f159e36",
        "cursor": {
          "ref": "bc583800-bddf-4800-b74a-69783ef43070",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4fcf8ee1-a0fe-4bdc-8bd8-526bfe0755b7"
        },
        "item": {
          "id": "e31d75d4-1bcb-4ebb-b0d3-78842f159e36",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cf77a504-fc2e-4193-8136-5d69547f36e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7b93cd-b445-485c-99c2-acf329975d1a",
        "cursor": {
          "ref": "4ca0474c-494b-466c-b5c7-2727020ab973",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e71be8f4-fc3e-4a8c-b84d-8a98edc5ccd9"
        },
        "item": {
          "id": "4f7b93cd-b445-485c-99c2-acf329975d1a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fecdce7b-0038-4084-8d21-9f8435c228a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fd3c66-a9bf-4aa8-a18c-1b28f526cd45",
        "cursor": {
          "ref": "6975403f-c054-4cb3-94ac-3253539ba042",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "182bdcb7-6886-4cef-b2de-152db37420e6"
        },
        "item": {
          "id": "c4fd3c66-a9bf-4aa8-a18c-1b28f526cd45",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "03d68926-7cff-4ce6-a513-60faab505206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033fe25f-7267-4f10-b86b-1909570f69c7",
        "cursor": {
          "ref": "6bfdcbac-7abc-47f3-b7bc-5a72bfefbc31",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "23461e7c-2144-4cbf-baaf-adb43bdc5f97"
        },
        "item": {
          "id": "033fe25f-7267-4f10-b86b-1909570f69c7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "82456495-2e7e-441a-83a7-06820429ef67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257e55f5-a039-442f-a754-f674bf40c3a5",
        "cursor": {
          "ref": "422b9ee7-8c3a-449c-b747-bb24f20d9eda",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ae9dce7c-4494-4aed-8ead-8a968f6863cb"
        },
        "item": {
          "id": "257e55f5-a039-442f-a754-f674bf40c3a5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "74b9d44e-54ef-4624-958f-3e6f5d34fa66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53502db-bdc1-4a71-8dce-e903608b6741",
        "cursor": {
          "ref": "b7cf0285-49e9-4be6-b1d0-c5321cbbbd66",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4e08163b-349a-43df-88ea-4ff1539e173d"
        },
        "item": {
          "id": "d53502db-bdc1-4a71-8dce-e903608b6741",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "30256e52-b795-4741-b0eb-d0ad8677fc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64822a18-3cb6-4cd4-9fb4-506465736028",
        "cursor": {
          "ref": "6d286c9b-96ca-4175-8e39-951a4083b730",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d86033c2-e745-4fd8-a379-c7fe03773627"
        },
        "item": {
          "id": "64822a18-3cb6-4cd4-9fb4-506465736028",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d4da47ae-fca6-4481-825e-4c80b808f551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab991b6d-9872-47ad-a7b6-bbdbd0afd488",
        "cursor": {
          "ref": "9c94c761-4bac-4fd7-9d81-003f5bcb2722",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d855ee32-ce17-4293-b177-be0459090467"
        },
        "item": {
          "id": "ab991b6d-9872-47ad-a7b6-bbdbd0afd488",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4ecf1153-d1c1-4370-8120-e4305445607f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a944d2a2-4262-4550-8701-ec0786c83dea",
        "cursor": {
          "ref": "9048879f-483c-41f7-83ac-8d313159c2b5",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4700ccea-5b66-4126-894a-ffda4faf8ac0"
        },
        "item": {
          "id": "a944d2a2-4262-4550-8701-ec0786c83dea",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "104f3f59-980b-4f5b-aba7-5cb516ca343f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f31811d-0344-41d1-96fb-6a2bc22a0150",
        "cursor": {
          "ref": "607fd152-017c-43cc-b8c5-a50786698fdf",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "072cceff-f2fb-4654-86b1-d64e0771b7a7"
        },
        "item": {
          "id": "6f31811d-0344-41d1-96fb-6a2bc22a0150",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b5a841ef-b6b9-4a17-98b5-fb8c30ba81e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603cf3da-e814-4919-9c18-a752af584827",
        "cursor": {
          "ref": "b88033cb-949e-4f2f-8765-7614e775b4eb",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a7bb89c7-6041-46f2-96bf-50bdeb86fc87"
        },
        "item": {
          "id": "603cf3da-e814-4919-9c18-a752af584827",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "35d5a31c-482d-4739-8239-6392d177bc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c93f92-669a-42db-880f-15c1693adb14",
        "cursor": {
          "ref": "c3cf2da3-cc44-44b3-990e-ae17958d6a06",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ca5fa28d-475e-412a-89b5-eb98fd79162b"
        },
        "item": {
          "id": "a9c93f92-669a-42db-880f-15c1693adb14",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "860c5246-118d-4997-b400-08e5c60d8360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b49fae2-8b6a-4781-a591-610ea4447c70",
        "cursor": {
          "ref": "84c50e4e-ff14-4ef1-937c-26c2a203ae96",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b697b669-72a7-4e0f-9d4c-a0d2c3799257"
        },
        "item": {
          "id": "4b49fae2-8b6a-4781-a591-610ea4447c70",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b907d787-f212-40fe-b30d-8c7a8970f989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4443f2c-dc6d-41eb-af25-6d94b43a87bf",
        "cursor": {
          "ref": "8c968dae-5264-47d8-8a83-cfd616a8665e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "aee9414e-f9bd-43d8-88aa-b0b0f67a0bd8"
        },
        "item": {
          "id": "a4443f2c-dc6d-41eb-af25-6d94b43a87bf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4d97d00f-055f-4d14-b347-5f3e8446b758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32af6940-600b-4392-8bcf-302d8a2eba4f",
        "cursor": {
          "ref": "42c36479-2a4a-4285-a23b-4f3e84c405b1",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3950fd24-048e-4d31-a8ca-ea2a052b4f2f"
        },
        "item": {
          "id": "32af6940-600b-4392-8bcf-302d8a2eba4f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f6e02e1b-52e0-45ad-9d37-a330c665435c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65939eea-7f61-417b-8b27-7129c5835f01",
        "cursor": {
          "ref": "55b33875-8671-43ec-ae65-63229b4e841e",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "170f8c13-ea6a-4e3a-a0f8-16cf494f761e"
        },
        "item": {
          "id": "65939eea-7f61-417b-8b27-7129c5835f01",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "00777d67-c804-486b-a210-c0114058f2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf46aa25-aee1-4e44-b7ea-fad15426d021",
        "cursor": {
          "ref": "e4fa4d28-3228-4970-8ec3-0dbfe3b90f5e",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e3460a17-6f34-4c12-8f3d-d2f97368f4be"
        },
        "item": {
          "id": "bf46aa25-aee1-4e44-b7ea-fad15426d021",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ab5880c5-e047-4266-a36d-4ef4a5e9b621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c3bbc7-8a48-4cc4-9846-1cb8178a5eec",
        "cursor": {
          "ref": "cde43945-4614-4360-b298-010a76f9e478",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b9fa0f58-a6dc-44ad-b707-eeb0ba8c54fc"
        },
        "item": {
          "id": "37c3bbc7-8a48-4cc4-9846-1cb8178a5eec",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e7457f73-a6bc-4b6c-982b-e7d0294da761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b737368-bfc4-4429-9cc9-0427fb1495de",
        "cursor": {
          "ref": "606f2077-4edc-4bbc-87db-5204fb33b42d",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "46528560-0d8c-48de-af2b-ffbf675de7d4"
        },
        "item": {
          "id": "2b737368-bfc4-4429-9cc9-0427fb1495de",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fe832b6b-19c9-4789-b8e1-b4fd79343130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea26e71-35e7-45d8-9b56-87f3907646b5",
        "cursor": {
          "ref": "63cb0033-7c40-4262-9b93-9a7f546e0c93",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "35285bb3-2f53-47f9-8348-c8e9445b52c9"
        },
        "item": {
          "id": "aea26e71-35e7-45d8-9b56-87f3907646b5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b0fa1bf7-1777-45a0-b6e9-3f4b0c9c039b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6a4388-285f-4f22-b6a8-e36af840aafa",
        "cursor": {
          "ref": "d9779a52-96bd-420f-bc8e-ad0375e42ebf",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "21119fae-6d02-4dfe-8bd1-379108403731"
        },
        "item": {
          "id": "0a6a4388-285f-4f22-b6a8-e36af840aafa",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "53cc45d9-06a5-4a90-aa26-5b6a7cafb7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ecb76a-b810-4d8a-ad5e-2d2443e3eac3",
        "cursor": {
          "ref": "4bda49b5-2390-4eef-a3fc-6deacab1e97d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "532f0f3a-388f-4886-a34e-cd154bdd27f0"
        },
        "item": {
          "id": "e8ecb76a-b810-4d8a-ad5e-2d2443e3eac3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "761aa4ce-ffe6-4d88-ba4c-80a31d5c9861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274556b1-f987-42d7-a028-769d4c10d5fe",
        "cursor": {
          "ref": "104b9408-f372-4fa1-aad4-23c461db2ca1",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "20067410-97ab-47d3-8b97-eafdfc700f43"
        },
        "item": {
          "id": "274556b1-f987-42d7-a028-769d4c10d5fe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7de6963b-6326-4ff0-9b0b-92e45b57ae26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ac5ccb-9650-45e6-a994-f9882f18fd71",
        "cursor": {
          "ref": "27cfadad-e712-46f0-b6d7-9cb70b93576f",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a1cd29a4-b9e3-4fc5-9ef5-7a77858d8e89"
        },
        "item": {
          "id": "b2ac5ccb-9650-45e6-a994-f9882f18fd71",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "47c1e244-d694-499f-b989-9a831af9bbad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c8eb34-446d-4f8f-88b9-6a8fe4f2c261",
        "cursor": {
          "ref": "99eab3bf-faec-4514-bc75-31dc5842c531",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f73a5737-958f-4ac4-8560-b08fe14aaf89"
        },
        "item": {
          "id": "16c8eb34-446d-4f8f-88b9-6a8fe4f2c261",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "920c1c52-772a-43a4-9ab0-cf0c442b6a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955bae24-caef-42f3-8199-899ae39817bd",
        "cursor": {
          "ref": "4d3ebb6e-6482-45fb-a564-e0494a4ad325",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "752be063-fdae-4e88-b88e-650cef01262b"
        },
        "item": {
          "id": "955bae24-caef-42f3-8199-899ae39817bd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "653b1dec-53de-43ff-8031-badff311093c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7a09ba-0ae2-43c7-80db-c469b3a5fe7e",
        "cursor": {
          "ref": "028d34eb-d165-41a6-945e-07fa1a670d26",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "82f14682-cad4-4f01-bf1b-aa836ae9cf95"
        },
        "item": {
          "id": "dc7a09ba-0ae2-43c7-80db-c469b3a5fe7e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "74dd8abf-2214-4e2e-93e9-da3606f79084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9850e80-091f-4016-a7a6-27a9a776ae2b",
        "cursor": {
          "ref": "19371eb0-dda2-4ce3-ac5b-b1ed5abeb868",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e5bca0ff-1021-4b57-8758-581a165d932c"
        },
        "item": {
          "id": "c9850e80-091f-4016-a7a6-27a9a776ae2b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3226322b-e53e-4ee7-a8fe-711c3ccadbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906a42d5-9a48-4903-b023-58ce7077b225",
        "cursor": {
          "ref": "4c1ae34b-b94f-4d14-a9a3-7a158fe15154",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "129e74cf-d4dd-4039-9251-c8de164d7079"
        },
        "item": {
          "id": "906a42d5-9a48-4903-b023-58ce7077b225",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "99d6e555-76cf-40c7-9e0f-29bbb4970167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfae270-eaae-476a-b36c-c94683c698f9",
        "cursor": {
          "ref": "8e20c53e-9b21-4889-a4e8-665e8238ecdc",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fbd9581a-5fac-4dfc-89fd-f834b2896277"
        },
        "item": {
          "id": "2dfae270-eaae-476a-b36c-c94683c698f9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f6489e07-a932-4737-93b6-dc1511cb738c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9f90d7-c9b4-4c30-b16a-cd6821bae009",
        "cursor": {
          "ref": "72233cb4-19df-4543-a626-5eaaab2fbdde",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "98fec101-13dd-4598-ba0d-ded8154dc828"
        },
        "item": {
          "id": "6f9f90d7-c9b4-4c30-b16a-cd6821bae009",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "87ad4802-efe1-4ea8-881c-cfc1e3983fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec7229a-2f12-489f-9125-0481c14c352a",
        "cursor": {
          "ref": "15f83d2c-68ca-417e-8aa2-83cf1b16ca63",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "91214414-ea65-405c-89ba-76f62988740b"
        },
        "item": {
          "id": "3ec7229a-2f12-489f-9125-0481c14c352a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4208ef16-7bde-4760-a1cd-bf27aea176eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d052dd-1c4d-48f4-bc1c-d5a155042cc3",
        "cursor": {
          "ref": "f6159dae-a016-4962-b9f1-728f5f931306",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e3057dbe-eddc-40a1-b516-c6173b52b5da"
        },
        "item": {
          "id": "76d052dd-1c4d-48f4-bc1c-d5a155042cc3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4416bbfd-7d00-4d13-a379-bcaad5c04ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a501dca-938f-4251-b535-2f9736e5aa16",
        "cursor": {
          "ref": "87a6e590-fa90-4873-a23a-6e3c9a5e46db",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "201d2b89-9a9b-407f-8f3f-753657cbb834"
        },
        "item": {
          "id": "8a501dca-938f-4251-b535-2f9736e5aa16",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2263568e-f27b-4fd3-a74c-2978bc2d244b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a997ed6d-d389-4aaa-813c-807d85fa2e1c",
        "cursor": {
          "ref": "53c2528d-588f-433f-98b6-bc0205d475a9",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fd22a7f5-fd20-455e-af53-7fc6b3f701d4"
        },
        "item": {
          "id": "a997ed6d-d389-4aaa-813c-807d85fa2e1c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "92efdff7-594c-48fe-be8c-d5c7d75c66e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bd913f-a021-473d-8395-1be09cd379cf",
        "cursor": {
          "ref": "9910e7c6-b22d-44f2-a067-58bfdf423d1f",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ae97b270-63d3-4bec-8589-91e6b98b680f"
        },
        "item": {
          "id": "a8bd913f-a021-473d-8395-1be09cd379cf",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0d01b5ef-e7b0-4edb-9691-cf3701bbed8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139271cf-182c-4775-b786-bf6a0c9e9d64",
        "cursor": {
          "ref": "530f4065-f4ba-4971-a6df-96736d54055c",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fedde7a7-15e6-476a-a2d6-0368f89a60ff"
        },
        "item": {
          "id": "139271cf-182c-4775-b786-bf6a0c9e9d64",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9550e5b2-fa9c-45d6-ade1-93430f04f054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9bf166-b361-4cb9-8a66-cb5cca15e64f",
        "cursor": {
          "ref": "d645543f-518e-45b6-8cc0-09e78440092a",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "05a51233-b565-4535-9fac-62af0f2398e6"
        },
        "item": {
          "id": "be9bf166-b361-4cb9-8a66-cb5cca15e64f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b9231964-901a-4233-ade1-9219d825fc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f52b5c-eb82-4335-ac18-d54da28b10d4",
        "cursor": {
          "ref": "a641d1d1-751b-4636-ad23-83d2f82037ed",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "94a6815c-b231-4d22-8393-40f42a1639c0"
        },
        "item": {
          "id": "f4f52b5c-eb82-4335-ac18-d54da28b10d4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6dc6f759-7e25-4bcc-ac1a-5ed64e84a545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d086d54-de80-46b3-93bc-96ac921a796c",
        "cursor": {
          "ref": "4110520f-a9fb-4dfc-9438-5e675a5568a2",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0f145eb0-4494-418f-b15b-ea9ad637bd49"
        },
        "item": {
          "id": "3d086d54-de80-46b3-93bc-96ac921a796c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5a0ae388-71ba-4281-8180-c7b3eb303dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbac891-5c56-4d0c-b123-448ceeda117e",
        "cursor": {
          "ref": "f3501ecd-e9f9-427f-9e6e-bc9d1aaccbb9",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a148b45a-78b8-4783-bb25-f773f3ac8e1f"
        },
        "item": {
          "id": "ddbac891-5c56-4d0c-b123-448ceeda117e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "62ad5968-39aa-4aff-a58a-6860c5b7af89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82f62ab-f5b2-4d96-889a-fa5d8bdd281b",
        "cursor": {
          "ref": "df151300-2626-452c-8001-119cbf6e3d50",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d8214485-6b78-43e2-aca9-df2d84750b7d"
        },
        "item": {
          "id": "c82f62ab-f5b2-4d96-889a-fa5d8bdd281b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2a457900-2933-4fb8-9774-a30270666c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c30133-00ca-403d-b3b9-4a4f4eaf8368",
        "cursor": {
          "ref": "0a2df1fa-efa0-4517-a526-74ae0bc42e11",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "de59fa90-1553-425a-9f89-cbbcedd1b39d"
        },
        "item": {
          "id": "d8c30133-00ca-403d-b3b9-4a4f4eaf8368",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "941e391f-1711-4a12-9af2-f3660a023e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576db4b7-ed50-460f-9fb0-702baa8bcdc7",
        "cursor": {
          "ref": "ccc70855-68ff-4884-9421-6300baae99e5",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9fc12706-7266-4e51-8159-1adb926c9842"
        },
        "item": {
          "id": "576db4b7-ed50-460f-9fb0-702baa8bcdc7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f7485e3b-1b58-4f94-9439-21824986d0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41018864-5ce2-4d65-beec-23da54f8e866",
        "cursor": {
          "ref": "71a046b9-b753-4b96-8efc-106510f2b213",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5a942a52-1fb5-4191-a897-d5c89c3ac3c2"
        },
        "item": {
          "id": "41018864-5ce2-4d65-beec-23da54f8e866",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f5cf3d98-c674-48e1-99b5-65cd46ccfa8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e132a318-7faf-45d1-a919-01ad9eff0c74",
        "cursor": {
          "ref": "1c8f43cf-ed0b-4974-aa6e-06f72df816a3",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "deff95c4-3ce9-49ce-849b-e69a3d35db96"
        },
        "item": {
          "id": "e132a318-7faf-45d1-a919-01ad9eff0c74",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bd0f690e-f1c3-49f7-b6ac-4980255075cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7722871c-4ab8-45cd-b91f-23e7ef7fc683",
        "cursor": {
          "ref": "7ac84871-767c-496a-a6ea-5e916077984d",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "aa43f985-1b3d-40da-968b-b876d68e49d3"
        },
        "item": {
          "id": "7722871c-4ab8-45cd-b91f-23e7ef7fc683",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bd7d3784-59f5-45fa-ab2c-1664c61fd10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc73d17-3e39-43dc-a6f2-c6cae2d05757",
        "cursor": {
          "ref": "c8cf982e-9022-424f-bff3-87f8e19f5a3a",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "904ad72b-2aa2-4deb-a005-19f27e442056"
        },
        "item": {
          "id": "9bc73d17-3e39-43dc-a6f2-c6cae2d05757",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "05852a69-e1a4-4ada-89fa-c81fbb837e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82909dad-24a0-48ec-b972-2f74c271ac96",
        "cursor": {
          "ref": "82fa68be-1ed9-4d18-9f6e-e6bb4e077874",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "13362ce9-acd9-4b06-93bf-85840d9006f6"
        },
        "item": {
          "id": "82909dad-24a0-48ec-b972-2f74c271ac96",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "57c6014c-56cc-4f0b-9768-021ad84d82ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d0cbb3-4441-4ad1-b8f1-2ee2ce6c47e3",
        "cursor": {
          "ref": "08df2c9b-fbd8-47e2-8c47-ffc96815c4de",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8a4c310b-8599-4a91-aa9e-f16a6c2b2d78"
        },
        "item": {
          "id": "f9d0cbb3-4441-4ad1-b8f1-2ee2ce6c47e3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e3452012-11e9-4a1a-a042-ee09fcd161ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9ff42d-2b6a-4e7f-aad5-165237399189",
        "cursor": {
          "ref": "463ecb6e-5105-4ee7-9184-bf5f6f42318f",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "620e498d-bab1-4de4-aaee-e488a968df7f"
        },
        "item": {
          "id": "5e9ff42d-2b6a-4e7f-aad5-165237399189",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5c644d90-e0e4-4120-8b17-d24b5ea3ed12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233cc803-1c6c-4c90-9ef6-2bf1fe8b13a1",
        "cursor": {
          "ref": "fb7e8b5b-9efb-4085-ba44-46183baf174e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b3dfd278-fdf1-4392-86fe-f63f49bc4405"
        },
        "item": {
          "id": "233cc803-1c6c-4c90-9ef6-2bf1fe8b13a1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9e57c5d5-40e7-40a2-a72c-2e1748ce6ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bcfbf93-c31b-488e-aa50-4137393c461d",
        "cursor": {
          "ref": "05519f92-a7d1-4bb1-8816-f58f1354ae41",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4bd514cb-def7-4532-af9c-fcae49e66f94"
        },
        "item": {
          "id": "3bcfbf93-c31b-488e-aa50-4137393c461d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "89949928-ad3e-4424-a40c-53c969105ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e7b973-e068-40bc-823f-6984611a05c4",
        "cursor": {
          "ref": "14bdbf89-be73-40d3-ada1-6816719ceebe",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "41863c56-731a-47e9-b4d1-0ed7db9813cb"
        },
        "item": {
          "id": "c3e7b973-e068-40bc-823f-6984611a05c4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "164f7c8c-b201-4aec-b52a-d9692a414f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5825e0-7512-43f4-beea-0551c63a1b88",
        "cursor": {
          "ref": "8d8a332a-fd03-40af-abad-a9186046dad5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3946f73b-35b5-489e-ae6b-2a604f6f6ff5"
        },
        "item": {
          "id": "1a5825e0-7512-43f4-beea-0551c63a1b88",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "338ad454-7d8d-47fc-8432-783b7b90c335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2425c28c-2b0b-435a-91b6-c3b8f251fb2c",
        "cursor": {
          "ref": "b7a1af32-a615-4ed8-8ccd-902ddb505aa5",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c00bfc26-0c87-45e6-be0f-f9057a495649"
        },
        "item": {
          "id": "2425c28c-2b0b-435a-91b6-c3b8f251fb2c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b4ee28b6-d19a-4c1a-b25f-d996af05e077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80048181-252b-4e0e-a7b6-ab8313e60276",
        "cursor": {
          "ref": "650686bc-177c-44d7-8115-10a918474897",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "62ee6b7e-6793-45b3-bd75-47b3c3056673"
        },
        "item": {
          "id": "80048181-252b-4e0e-a7b6-ab8313e60276",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c0f9e688-ebb3-4464-9135-94b58e8e8881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48311898-ea57-45e2-9708-f3068c5cfd46",
        "cursor": {
          "ref": "35d198e1-fc06-4864-ac06-96551c90e4dd",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ed6946c0-2ddc-4c0a-8d1d-f1180ead7b18"
        },
        "item": {
          "id": "48311898-ea57-45e2-9708-f3068c5cfd46",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f9ac0f95-4ce8-46e6-bb3f-681cf189b27a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3de5ad-1a98-4999-aa64-40ba2485f474",
        "cursor": {
          "ref": "35ab20ed-6526-4eb7-89ce-e350391020d4",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cf8625a3-693b-47cb-b0d6-0ed409c067cb"
        },
        "item": {
          "id": "3d3de5ad-1a98-4999-aa64-40ba2485f474",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f2817a02-49a8-4944-8b64-65c8eef1cf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ad211dd7-8b93-43fe-88da-fcbf6066a335",
        "cursor": {
          "ref": "39710236-0dd9-4211-9392-b7e7fbdbddb9",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "93f9270a-6e12-4a7c-8e39-397a51a5555f"
        },
        "item": {
          "id": "ad211dd7-8b93-43fe-88da-fcbf6066a335",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ea20a1c8-ab2c-4dbb-ae99-9f6d38c5947a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "edf69f87-4939-4990-a946-4dd93cbdeba2",
        "cursor": {
          "ref": "ac8f1d3c-30e0-484a-ba6e-276015ceddce",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b98deb28-2a7b-48cc-82eb-1e3c3ea4e89f"
        },
        "item": {
          "id": "edf69f87-4939-4990-a946-4dd93cbdeba2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "96fc8dfe-9286-432e-b3bb-83359a5d395c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "74cdc5aa-918b-4eb8-a8eb-be87b68b10f0",
        "cursor": {
          "ref": "bebfbfaf-106e-44ee-8ed4-ebf098c0d795",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "30458ab5-28a5-49da-b296-3f249ef9708e"
        },
        "item": {
          "id": "74cdc5aa-918b-4eb8-a8eb-be87b68b10f0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3c4b4dd6-d2be-4c00-9c71-f464c36113cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "24c254d0-207f-4aed-bb4f-89f5468be71c",
        "cursor": {
          "ref": "826b59dc-ea4e-4df1-b524-4477279c569d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "59406980-4f91-4215-bb14-074b9645eb21"
        },
        "item": {
          "id": "24c254d0-207f-4aed-bb4f-89f5468be71c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1fcb670e-bfad-4c39-81f7-bc71c87f43b1",
          "status": "Created",
          "code": 201,
          "responseTime": 11913,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4741d4a-dac3-4a21-9998-9ba0cdc1f4e6",
        "cursor": {
          "ref": "83de798f-b102-4c36-83ad-4b30047a925a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a002895e-ac30-4b3f-a142-d2aa9427b514"
        },
        "item": {
          "id": "d4741d4a-dac3-4a21-9998-9ba0cdc1f4e6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6e3c3aee-9adf-4029-873e-5075345aa67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a0b8e7aa-54bf-4c8f-829c-a7928e67465a",
        "cursor": {
          "ref": "18de5f06-971f-4467-8276-361755212d0a",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3641bdc5-6574-4e99-b105-473cdad80d36"
        },
        "item": {
          "id": "a0b8e7aa-54bf-4c8f-829c-a7928e67465a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "446ff231-6fde-4370-af2c-1797b8b61832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "0002267e-d6b3-4fe3-9c71-3f3de7dfde88",
        "cursor": {
          "ref": "c0b1671f-3a58-4281-b382-e16ad8d78b4a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b008981c-0d89-4c3a-a221-2215daa9fa4a"
        },
        "item": {
          "id": "0002267e-d6b3-4fe3-9c71-3f3de7dfde88",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4d1cec84-e468-466a-937c-c4d2a67c32d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8044b40e-3980-49d1-ac70-ca3e1567b59a",
        "cursor": {
          "ref": "0624c55f-b06f-4185-a569-84fb7ddf37eb",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2dbace38-a54f-458c-971b-af76ea287f13"
        },
        "item": {
          "id": "8044b40e-3980-49d1-ac70-ca3e1567b59a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f821f8f6-71f4-4877-9e0e-ba53964157c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b210c0-645e-4c3c-91bd-884f212fa928",
        "cursor": {
          "ref": "1ad8ddb4-f087-47c7-a22f-f77a353f1f06",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "04affb57-f02a-43b8-a336-d27aec90dfe5"
        },
        "item": {
          "id": "58b210c0-645e-4c3c-91bd-884f212fa928",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "56eb5c41-ef31-49a1-aea5-4e86977cf553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc711d22-bc3d-47e0-9056-6faa5731d992",
        "cursor": {
          "ref": "c7acb9cf-5702-4592-876d-fa4fd40cfb09",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "edaa8ea9-0762-4aac-aa13-72ec2a27098c"
        },
        "item": {
          "id": "fc711d22-bc3d-47e0-9056-6faa5731d992",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e77eae54-10aa-4a91-8be3-e1d469c954eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93937093-098a-445d-828d-8734e418fa5e",
        "cursor": {
          "ref": "f6b828a5-1572-4dae-88d3-cd9b5bdb5a90",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cda232a6-fc49-4117-bdae-cafc5e64e5b2"
        },
        "item": {
          "id": "93937093-098a-445d-828d-8734e418fa5e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ae84ccce-23ea-41d5-bdd9-577a6f6d8a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f91a15d-8bc3-4c75-956d-f84d404ea504",
        "cursor": {
          "ref": "f428ac90-372f-4560-af02-aab38f035448",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "633ec14d-e55f-48e7-b2cc-3f7a9ca77287"
        },
        "item": {
          "id": "1f91a15d-8bc3-4c75-956d-f84d404ea504",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f215ac11-ad96-4148-9dad-8fd991c4b200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9ec852-45b8-4566-8838-25a61211fcf4",
        "cursor": {
          "ref": "0437f695-38df-4af6-88eb-14fd679bc2ca",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "69b87011-4156-4f3d-b2a1-3dc3444df95b"
        },
        "item": {
          "id": "4d9ec852-45b8-4566-8838-25a61211fcf4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9d359733-f6ec-4ce1-b52f-2df3eed4b668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72fb3f6-ac36-46ac-ac13-6ab4b98c592b",
        "cursor": {
          "ref": "3a75b186-1c59-4b1b-86b1-7b7af9472d6a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8e2e0034-ee93-41f6-9d98-7ea797cfa034"
        },
        "item": {
          "id": "d72fb3f6-ac36-46ac-ac13-6ab4b98c592b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "985166d9-4f5f-4079-b652-a851a5f23064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a122433-ebbe-421e-b755-5843eb595925",
        "cursor": {
          "ref": "37b3c3ec-911a-4166-8dcc-5d0041703a74",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4ae08838-bfa9-4e65-8a58-d38979f54d55"
        },
        "item": {
          "id": "8a122433-ebbe-421e-b755-5843eb595925",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1368b745-6432-4eaf-9227-94fdadd86428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84516c66-c565-41ad-ab65-ce8323b89f33",
        "cursor": {
          "ref": "74030de8-b440-46a0-9588-8167911aefec",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cf0f729f-70f4-4c96-8f49-f21b6a370d8a"
        },
        "item": {
          "id": "84516c66-c565-41ad-ab65-ce8323b89f33",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d2fa344e-b40c-464b-a4bb-276de2f999c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144e6e3e-20fd-4b78-8d90-bd821b7f0357",
        "cursor": {
          "ref": "2d450950-8f9d-4fd9-adb8-c5a0558d8f7f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b9722ca8-bb6b-4370-83db-8d42291ef3c7"
        },
        "item": {
          "id": "144e6e3e-20fd-4b78-8d90-bd821b7f0357",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "626ea8b3-7e56-47a1-80cb-b5b53658d0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79df51b7-e156-4131-9305-1c7e2cd69a63",
        "cursor": {
          "ref": "f2086e91-9311-46ce-9b84-a47ccb8b0e5c",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "dfea4e52-1f34-4858-8f8b-6d8068d30340"
        },
        "item": {
          "id": "79df51b7-e156-4131-9305-1c7e2cd69a63",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6c6be880-1819-41b0-8ad7-5722895d3b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842b3459-c53b-41b0-a98a-c0b9e164e4a3",
        "cursor": {
          "ref": "defb9595-6a7e-4d58-982f-0c50ecbe2def",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b490cbaa-59a6-4e8e-9d21-f7f0e63dc3ca"
        },
        "item": {
          "id": "842b3459-c53b-41b0-a98a-c0b9e164e4a3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6081808f-eaf7-4e9b-ab4d-012352ddc664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a89cef-deec-42a9-8bbf-2e72ca2ec0cc",
        "cursor": {
          "ref": "e710d245-ed86-42c2-92fa-379eca25e48c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d857a2c5-0afd-460e-9437-27fc8084b48c"
        },
        "item": {
          "id": "e7a89cef-deec-42a9-8bbf-2e72ca2ec0cc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6e3d1b6b-5ff3-429e-a6d0-c05e2046a5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b853d0-8310-492f-9b29-c80c514e7085",
        "cursor": {
          "ref": "6505b35b-6fac-45de-8358-af635ee098fe",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "44c7f11a-e82d-44c2-accc-80ef8000a616"
        },
        "item": {
          "id": "65b853d0-8310-492f-9b29-c80c514e7085",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "074eaf34-9a0b-450e-ab83-75f91fa9dee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fb627f-f403-4dd3-9952-fb2156482164",
        "cursor": {
          "ref": "697c25fc-f278-4008-ae4b-9be83a2f2942",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c38f7427-a077-4d9b-87f5-5a3a0f50b33c"
        },
        "item": {
          "id": "45fb627f-f403-4dd3-9952-fb2156482164",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f9d040c6-ad37-42bb-a08c-33e6718dc27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a6e5ba-0acd-4ce3-a032-4ba55e8bde9a",
        "cursor": {
          "ref": "7a71bacb-b30b-4e72-a0a9-623cef77de84",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4dd0c53f-6bbc-4ed4-b0f3-e68c9a11d410"
        },
        "item": {
          "id": "40a6e5ba-0acd-4ce3-a032-4ba55e8bde9a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b132334c-fd05-4ce6-8523-0d71ad2c1993",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 23,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "fd15a381-8634-4781-a851-4b352346c4db",
        "cursor": {
          "ref": "5da55d8a-91c0-41be-9cc0-f03848027927",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a77d67d2-52b4-441f-bff8-51c983e05398"
        },
        "item": {
          "id": "fd15a381-8634-4781-a851-4b352346c4db",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7c15b37c-4de8-4d47-81b1-095a1e47c92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c4951d-ed2e-4f80-8ab1-1533ccafb9ae",
        "cursor": {
          "ref": "a91cfd0b-c239-429c-ace6-60848b11a023",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "21929129-4d41-4f6c-b3a6-88c020ba4b88"
        },
        "item": {
          "id": "06c4951d-ed2e-4f80-8ab1-1533ccafb9ae",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c65fd390-435e-45d3-aa7e-39e8c4a71519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b719c70-5d7a-4254-864e-93e38aace426",
        "cursor": {
          "ref": "28846519-4a83-4c89-a33b-0cc8d6f1ae10",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "034d51b3-e697-44fc-80cd-f733fae3c708"
        },
        "item": {
          "id": "3b719c70-5d7a-4254-864e-93e38aace426",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7222553c-da0b-4968-a7b1-0ac8b75dd2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2043fd0-a289-411a-a8b0-c0f6248b5e3a",
        "cursor": {
          "ref": "d19d0d58-8642-4ab6-8216-99a9b6193a69",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "36aaba1d-0cd2-41cb-b954-725d5e1846b4"
        },
        "item": {
          "id": "b2043fd0-a289-411a-a8b0-c0f6248b5e3a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "af0315a0-e4c8-4454-9d9c-8221e2e5dc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa312781-f0b5-4641-b297-5b72c7257531",
        "cursor": {
          "ref": "15679f2d-bcde-4408-902c-b02ba8b62786",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d362fbe3-7c9c-420d-a05f-b40b7cf1ddde"
        },
        "item": {
          "id": "fa312781-f0b5-4641-b297-5b72c7257531",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cf43d5ce-1add-4204-b5f4-28339e0eede2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ed548b-2dad-4ecb-b8d3-d332d1fc2555",
        "cursor": {
          "ref": "e2f2cbe9-a0d1-4c75-9f2a-f4545ae2cdcd",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a10d5fdf-affb-443e-82b9-d14925d45549"
        },
        "item": {
          "id": "17ed548b-2dad-4ecb-b8d3-d332d1fc2555",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "65bbc1df-a854-40ea-8dcf-b63d8981cdfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340baa5b-3cf6-4c11-bfdd-37ce5cb57050",
        "cursor": {
          "ref": "a5cc9d79-e136-49a3-bf03-4bc18f3f4616",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bd23e71f-3bc0-4143-bf9f-7a976f2b183e"
        },
        "item": {
          "id": "340baa5b-3cf6-4c11-bfdd-37ce5cb57050",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e6a9ff09-d772-4a76-a48d-40e188ce152f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35481989-373f-46ac-926f-fdb80b8d4d17",
        "cursor": {
          "ref": "3c8385ac-7df3-44aa-a19e-d112ef7df50c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e8e7e726-6d8e-41b7-81bd-409850352d1a"
        },
        "item": {
          "id": "35481989-373f-46ac-926f-fdb80b8d4d17",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "22236f63-e015-42e3-b49d-d9ddf70d38c4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 27,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "0210aab4-2979-4c72-a6cb-1adbb61c0489",
        "cursor": {
          "ref": "7dcd14b7-498a-49f1-895e-c9baec8b8384",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "75b29a4b-5c2a-4dbd-bcf3-b18d586f3087"
        },
        "item": {
          "id": "0210aab4-2979-4c72-a6cb-1adbb61c0489",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c67a3c46-f43e-445b-a13a-23e28b601641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9558d3-8fa1-4eed-b100-8b144263ff73",
        "cursor": {
          "ref": "772a1208-c749-4da6-b0f5-8f3361deabcb",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "36a86a61-b22c-481a-a3e4-4cef5a1d2c69"
        },
        "item": {
          "id": "9c9558d3-8fa1-4eed-b100-8b144263ff73",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b2560235-28d2-4382-9547-641f1f4d7e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78e0adc-2767-4695-b07d-de61bf6d1be0",
        "cursor": {
          "ref": "e4e8f761-7ca4-40db-82b1-2aa075b423a6",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2fe2402e-37a1-4f3f-bc8a-d6d80e91cf85"
        },
        "item": {
          "id": "c78e0adc-2767-4695-b07d-de61bf6d1be0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2e5c5c16-1364-42d2-9767-4755c4404f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51dcad44-a9c8-46ef-bec1-d866ac219ed1",
        "cursor": {
          "ref": "eae42736-b183-4666-a72d-47a3ba0f1a7d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ca33de4a-1133-40da-a79f-f8095a97e26a"
        },
        "item": {
          "id": "51dcad44-a9c8-46ef-bec1-d866ac219ed1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3ad51874-e9e7-436b-b675-faa572c17dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5ca608-bddb-4b12-9b48-a75e02185022",
        "cursor": {
          "ref": "cc1d9534-2e5e-4ad7-8206-f18b65ad6d96",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "915fba8a-f615-4288-bb81-bfae721b23f4"
        },
        "item": {
          "id": "2f5ca608-bddb-4b12-9b48-a75e02185022",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a362d613-9765-44eb-a6fd-8b2e26b242a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a790f2-dbde-48d7-8f10-a64033b20293",
        "cursor": {
          "ref": "301a1bcf-25a4-4790-a1de-92e9d69a4ae7",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5a35fe44-d9a0-43df-95f5-162cba2c3d1e"
        },
        "item": {
          "id": "f9a790f2-dbde-48d7-8f10-a64033b20293",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9125e1c9-8331-4854-9dfe-84e17672f66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386f7620-62aa-4176-a8e3-728b6e30188c",
        "cursor": {
          "ref": "8ee28551-8f2d-423b-bda0-97ac3997f860",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d853dd37-55c5-48fe-a6f2-a5954193c8ea"
        },
        "item": {
          "id": "386f7620-62aa-4176-a8e3-728b6e30188c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1f912100-cc5c-4949-ba05-8552fcf17a46",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "0649827b-2925-43aa-b931-bc8f584e53e1",
        "cursor": {
          "ref": "4b3cf435-160b-4bda-81cc-167f921570c3",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f0f6dcf9-7b55-48f9-9b33-7e4828ab335d"
        },
        "item": {
          "id": "0649827b-2925-43aa-b931-bc8f584e53e1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9baf66dd-ca62-47b8-aa46-237f69334a46",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "fe678a0c-d81f-473d-9009-adadb2a93a89",
        "cursor": {
          "ref": "625c60ee-6040-4684-9572-761c2e97198a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d134a83a-0d48-4f4e-933d-c53d135ec0d4"
        },
        "item": {
          "id": "fe678a0c-d81f-473d-9009-adadb2a93a89",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b4d084e6-186c-4eac-ad3d-3e7e940a7db4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "434951af-c927-4248-b5ad-57c9b295580c",
        "cursor": {
          "ref": "153d4b81-9653-4779-92b4-0605907e739d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d2a6f1f2-dbbf-4605-a292-6601746a87ce"
        },
        "item": {
          "id": "434951af-c927-4248-b5ad-57c9b295580c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "deaf1426-30ee-494f-ae4f-2aaf1309a2b6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "4579633e-1aca-4013-a4fd-3a2305756782",
        "cursor": {
          "ref": "809ce384-1d6c-47ab-ad45-798876a2c5d5",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f76742b8-cc83-4ddf-8c42-ebc7edefe5b7"
        },
        "item": {
          "id": "4579633e-1aca-4013-a4fd-3a2305756782",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1533d0a2-0d66-43e1-9b2e-e83d765f2c0c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "fc1e2f59-51fe-4937-a538-c734bdc300e9",
        "cursor": {
          "ref": "a7da977c-0609-48a3-a301-097d7be15564",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a34c54bf-f3d4-40ba-949b-fc05bb8a58b3"
        },
        "item": {
          "id": "fc1e2f59-51fe-4937-a538-c734bdc300e9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6f10f934-9cb7-42f5-b139-9d762f6331fa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "0aab2444-064e-46fd-b47b-7510de196f1e",
        "cursor": {
          "ref": "57b52619-1901-4779-8d81-84017a621c02",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3bb6f39f-ebe4-493b-af78-3f875d2ae281"
        },
        "item": {
          "id": "0aab2444-064e-46fd-b47b-7510de196f1e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "33c419a2-5a7b-42aa-9f6a-2785a20fb785",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df96d9a6-3b35-4bad-b4da-04a1b2602be7",
        "cursor": {
          "ref": "29f8f322-7272-4496-810f-1a3ea9522998",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8eb8d394-7e41-45be-837b-4d0ca2f8eb0b"
        },
        "item": {
          "id": "df96d9a6-3b35-4bad-b4da-04a1b2602be7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "17cf1e64-ea19-442d-9d88-dedf31a3b3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b6a622-555a-47ae-9207-661d02fec6b0",
        "cursor": {
          "ref": "85e0dc78-d9f8-4970-938e-69fcca2b9a31",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "41e5f880-9d22-48af-b9e5-79833290dabd"
        },
        "item": {
          "id": "b1b6a622-555a-47ae-9207-661d02fec6b0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "886ca4de-e87c-4e15-bbd4-a855c68e4548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1de8ec-72cf-4201-a795-443680535315",
        "cursor": {
          "ref": "a2a34c72-29b8-492f-b1d5-7d195d1d1428",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "de9105da-b149-49b0-8f51-315144e75f3a"
        },
        "item": {
          "id": "2e1de8ec-72cf-4201-a795-443680535315",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "97b70f44-ba27-4b8f-8c63-51908e68431c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae67720a-52bf-4c5e-abcb-17c08d4366ce",
        "cursor": {
          "ref": "af181b10-93ae-4a7d-ada2-3673b7e21cfe",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "498b4f51-c929-4790-bdf5-a25b25397f37"
        },
        "item": {
          "id": "ae67720a-52bf-4c5e-abcb-17c08d4366ce",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4baf9d88-9a73-45d4-bb00-af988dd92c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f1e00f-1e75-48d3-9095-aaba4e33730a",
        "cursor": {
          "ref": "e046cd22-776c-4189-9ecc-a01b4792ce05",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2a586663-5663-45bc-9afb-1981b167c688"
        },
        "item": {
          "id": "b6f1e00f-1e75-48d3-9095-aaba4e33730a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f8cb3698-0bd4-4746-8cb2-c02af195b748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d447fa-59e9-4cb7-a708-9284963c876a",
        "cursor": {
          "ref": "9cc1dd9b-37db-4715-bebd-24eeffb7b053",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "40676009-9a0a-441e-adea-e494ac95921f"
        },
        "item": {
          "id": "80d447fa-59e9-4cb7-a708-9284963c876a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "355aa554-21dd-49c6-bf56-c1e14572aeb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227a05d4-3bba-4f86-8bb4-a8e785b6b22e",
        "cursor": {
          "ref": "b157cb94-9855-473d-9ba5-cb9cefe6d0cf",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0d048f73-cfda-41d4-a0df-0d7d1313384a"
        },
        "item": {
          "id": "227a05d4-3bba-4f86-8bb4-a8e785b6b22e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "993d463b-21c4-46d8-b49b-7bedfb54bad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14411ce9-e65b-4a88-8e2e-9b45657bf68d",
        "cursor": {
          "ref": "853b2c21-8a5f-431c-8529-f7542858b632",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9b17f5fd-1382-4b92-8df7-24dd5f3566ae"
        },
        "item": {
          "id": "14411ce9-e65b-4a88-8e2e-9b45657bf68d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f413d980-5c5d-40b6-a315-75b2a45e6b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db319b1-2290-47b8-b1f1-b1604e590e6d",
        "cursor": {
          "ref": "f01b69ed-d97c-4b72-b57d-2c9ad917bb33",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c25150a6-e165-425b-bb53-71f39f566db8"
        },
        "item": {
          "id": "8db319b1-2290-47b8-b1f1-b1604e590e6d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7be56bf0-5695-4436-84e0-f834c289536d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28ef92a-a49f-4376-9998-13c9680eb878",
        "cursor": {
          "ref": "e37a5303-bee0-49c0-839e-8ff5cdfe6f9d",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9049cd09-69b0-4933-89f8-021271caf49b"
        },
        "item": {
          "id": "e28ef92a-a49f-4376-9998-13c9680eb878",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b0b21a8a-3d49-402f-876c-c65251974e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adad2d0-1d0d-4050-a899-952edcc7bc87",
        "cursor": {
          "ref": "73c6f9f7-961d-4b58-9db0-4a457d39f86c",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "431bbebd-3278-461b-89f6-3ef405c39506"
        },
        "item": {
          "id": "9adad2d0-1d0d-4050-a899-952edcc7bc87",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6e32942d-41f4-4b72-9fcb-ded73431e1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7816e1cc-2e07-42d9-9909-95f89a1f3a30",
        "cursor": {
          "ref": "a56717f1-d84b-4879-bfec-f2a76e6de311",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9f785689-f6f5-4aa1-ab98-e3911c3dc167"
        },
        "item": {
          "id": "7816e1cc-2e07-42d9-9909-95f89a1f3a30",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8198533c-7718-4c40-a48b-c998642fe9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b991dc57-cc9c-46fc-8658-2265d9b75d8a",
        "cursor": {
          "ref": "abac16f9-1d4f-45ef-a425-de0d60f07c88",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "082276ed-c62d-41f6-9b3f-17f52493b739"
        },
        "item": {
          "id": "b991dc57-cc9c-46fc-8658-2265d9b75d8a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "71d82960-b9a2-4055-b222-7d698056bfd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8eea683-352b-4b5d-a3f7-f78521c3b13c",
        "cursor": {
          "ref": "cf9a25ab-b7f0-4c72-8f91-775c85bf7f77",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "adb245f9-3d26-40f5-95bf-07810f34666e"
        },
        "item": {
          "id": "f8eea683-352b-4b5d-a3f7-f78521c3b13c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "eb08dc63-6553-4a7b-8ad1-a856a741e61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35afe230-113c-4190-99ae-04b1298423fc",
        "cursor": {
          "ref": "3bd72a03-1e5d-4668-8e8b-756854334c97",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ef745b63-c7c9-4497-86c3-434ffa5a6cb5"
        },
        "item": {
          "id": "35afe230-113c-4190-99ae-04b1298423fc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "65ea869a-bd68-4322-bca7-e03ccc3da590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46288bbf-b454-4808-8903-86e5fdd888d3",
        "cursor": {
          "ref": "b064b9d3-0e0f-4dad-9330-10d5e05ed06c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "941f78fe-9f70-41e4-9ac3-5a9c329ecc40"
        },
        "item": {
          "id": "46288bbf-b454-4808-8903-86e5fdd888d3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "42cf9a03-312b-4c76-95be-adb99f3f60f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4a4de3-7956-4b80-83fb-38af1856c499",
        "cursor": {
          "ref": "de701282-1f3a-42dd-b06c-82f5bc57e38f",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ab703934-f4f5-4573-b8a8-2d8a54d4a7dd"
        },
        "item": {
          "id": "0d4a4de3-7956-4b80-83fb-38af1856c499",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fed8c027-501d-465d-b23e-eea5afd66d7f",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "a3a373e1-2e49-434e-a02f-c81181f53767",
        "cursor": {
          "ref": "a317a2e5-a667-43ec-85ea-ab60c0f9ce0e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4c9ba669-01f3-4d92-bb6b-d7f64e5ff15d"
        },
        "item": {
          "id": "a3a373e1-2e49-434e-a02f-c81181f53767",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d2c136b8-1116-402b-aa22-70db94f42ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ac8924-5d14-44d6-9434-9d1979fdc33d",
        "cursor": {
          "ref": "908ea125-276b-40ec-b087-ff468db6d1c4",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b31511d6-429b-473f-a520-beecfee422a7"
        },
        "item": {
          "id": "91ac8924-5d14-44d6-9434-9d1979fdc33d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a4c053f5-9fb4-409e-98ee-b22223540081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e9978a-5b93-4e12-ba41-91da649a4513",
        "cursor": {
          "ref": "39748c85-a1a0-4b9c-a366-b62c107d03dd",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d59379c1-c65d-4425-aca9-940b67931f27"
        },
        "item": {
          "id": "11e9978a-5b93-4e12-ba41-91da649a4513",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "afea3728-5a45-45b1-9dea-742a3b171f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423e1239-475d-404d-8327-228671f479ee",
        "cursor": {
          "ref": "7b7ea015-9e82-4f39-88b4-dfc0790f67fc",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a3ca945b-3c28-4314-b80d-5275f15363f2"
        },
        "item": {
          "id": "423e1239-475d-404d-8327-228671f479ee",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ada7f0ad-232d-4725-ac49-547dbf6b7b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec13459f-5ff6-4cc6-9b3a-c89e12382925",
        "cursor": {
          "ref": "813620b8-96fc-4f45-bdb3-f99c978a8da9",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "19c63cbc-956e-4386-b848-040ddeac379f"
        },
        "item": {
          "id": "ec13459f-5ff6-4cc6-9b3a-c89e12382925",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1afb49b7-b142-4b01-b643-8c0d1aa0e707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d28c77-6ac4-4ac6-8d81-ec643c203ba5",
        "cursor": {
          "ref": "6b9feefe-59a1-4f5f-8ac3-ba2123b60ca2",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cc4c46ee-01c9-47fc-adaf-dd64e0167517"
        },
        "item": {
          "id": "09d28c77-6ac4-4ac6-8d81-ec643c203ba5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "dc110c42-7887-4afe-8bc8-73c2aa9b654f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db0859b-2099-44ca-978a-0830beca7ac2",
        "cursor": {
          "ref": "569307e8-2030-4591-87be-b3fefd2b4345",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b4625490-aeee-4e1d-ac70-bb1495aee933"
        },
        "item": {
          "id": "5db0859b-2099-44ca-978a-0830beca7ac2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "32c5b20f-abe2-4877-b378-0dafde5f479e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab34f890-0ce6-452a-85e9-9e287908a2ec",
        "cursor": {
          "ref": "53842143-ee41-410a-aaf4-797cab525629",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f30053b5-3f64-43b2-9cde-f8dc353e8b8b"
        },
        "item": {
          "id": "ab34f890-0ce6-452a-85e9-9e287908a2ec",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cef49274-d35d-480d-bb68-2b76a2d17ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2aeec6-7a9b-45e5-acd4-2cf19fe3a9fc",
        "cursor": {
          "ref": "161213f1-4ca5-4ed0-8ec9-ad84acb4dc59",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "92f69450-7878-44ed-9037-c401700af45f"
        },
        "item": {
          "id": "0d2aeec6-7a9b-45e5-acd4-2cf19fe3a9fc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7d69e868-007a-43b6-b1b2-a21c2abd7848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183b6a0b-d30f-4cb4-9e64-59dbd12db907",
        "cursor": {
          "ref": "f67c3f65-496f-4861-aeac-ef94f1435f1e",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "27a5f088-29dd-4c38-aba1-c82ffd766133"
        },
        "item": {
          "id": "183b6a0b-d30f-4cb4-9e64-59dbd12db907",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "192f78ee-7856-45ac-b634-0db2dc3d3872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2023d0-2d1b-46b7-ba06-5d5943b0eaac",
        "cursor": {
          "ref": "d5f6ccbf-f995-4bcf-b3b1-73b67abf1322",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fae92df1-8e92-462f-9dd6-198452952b97"
        },
        "item": {
          "id": "2a2023d0-2d1b-46b7-ba06-5d5943b0eaac",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1ece1485-f1e8-4ba4-b629-5af04bd7e335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1aec8ea-e936-4f18-8aa6-38517b05e635",
        "cursor": {
          "ref": "0f8851fe-4351-4fa0-a8d9-48c8f7c4f2db",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "857ca32c-07bc-4cb2-b6ca-6dc79127b1f5"
        },
        "item": {
          "id": "a1aec8ea-e936-4f18-8aa6-38517b05e635",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "38506062-f2b0-4f1a-93bb-244333b147e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7687a88-2973-4fe9-b114-b27e3d11cf60",
        "cursor": {
          "ref": "fb2e44d9-fe6e-4c1d-b5af-9121f5d7d140",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7fb60a79-926c-46cd-956f-76865352c854"
        },
        "item": {
          "id": "e7687a88-2973-4fe9-b114-b27e3d11cf60",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "70590f62-abbe-4315-9d75-06fcb1b4b75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b6f1a3-0084-4f54-b825-5e0f2f549615",
        "cursor": {
          "ref": "6387756d-b381-4169-bca3-085157e28e09",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4969e978-79f6-446c-8e9e-236e202ad4c4"
        },
        "item": {
          "id": "42b6f1a3-0084-4f54-b825-5e0f2f549615",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "57f500c7-5367-474c-ba35-89e5f5bf3e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db94458-733b-4c48-9aa2-63c5f51a0a54",
        "cursor": {
          "ref": "8e2b0422-ae26-4622-aa5a-dae6ce9f25ff",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "de560b22-8103-4399-a1dc-736391a7208b"
        },
        "item": {
          "id": "4db94458-733b-4c48-9aa2-63c5f51a0a54",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1541d171-d912-4263-ac60-094300f54ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7f10ad-6ab8-43a9-9aa4-07ff050b5e1f",
        "cursor": {
          "ref": "1b289318-72f8-4568-9a05-6e9c3aa75c2a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "de211a8a-f12d-411c-a76c-f7672f92cd40"
        },
        "item": {
          "id": "ac7f10ad-6ab8-43a9-9aa4-07ff050b5e1f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7397b9b3-ee4b-42d6-b93e-7854acdfeae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d014dbc-b634-46c2-b986-2830a020f484",
        "cursor": {
          "ref": "0908a30d-0332-4477-bd0a-6a08a98532aa",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ecb63249-f1d6-41fa-83af-9995557ae5f7"
        },
        "item": {
          "id": "4d014dbc-b634-46c2-b986-2830a020f484",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "109c89ce-1553-4f1a-b927-afcd49ece60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0c5df3-c869-4934-a6e4-5bafc1c61032",
        "cursor": {
          "ref": "499661e5-1139-463e-bfbb-11002d192ac8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "32798b58-ae7a-4c51-baf0-db213e0b5b95"
        },
        "item": {
          "id": "2a0c5df3-c869-4934-a6e4-5bafc1c61032",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a612ba03-47f1-45be-841f-bb184b995bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba36a41-82eb-4dce-890f-39617a938aaa",
        "cursor": {
          "ref": "5b09d494-ebc4-4288-8196-1aed4941862d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b55e87f7-ec12-407f-98c5-5cfc3bbfd2fd"
        },
        "item": {
          "id": "aba36a41-82eb-4dce-890f-39617a938aaa",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "88424699-edfd-459b-8489-5b0b8e1aeb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2cb93a-9d59-4742-8027-52aab4aa4b27",
        "cursor": {
          "ref": "69abd72c-dc97-4336-969f-a8df6e943056",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a4f20df4-f11e-4284-a656-9195d729299d"
        },
        "item": {
          "id": "1d2cb93a-9d59-4742-8027-52aab4aa4b27",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "00706a27-5e5d-4793-b231-0c4004fb22ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7fc064-c3b3-452b-9cf5-4c10e79a6bfb",
        "cursor": {
          "ref": "3c7299cc-65d4-442e-9b78-a047d6fc2ae3",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e1ee4e2b-4dfa-45f1-8e65-1cc09a6a3913"
        },
        "item": {
          "id": "7e7fc064-c3b3-452b-9cf5-4c10e79a6bfb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c7eabfb2-de09-49b7-bed0-0f866e1ad44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ba5168-8aee-407c-9018-502e7231d4df",
        "cursor": {
          "ref": "864d689d-81c6-42f5-b70e-7e1661e51790",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c128fe1e-72fd-4a8f-a19d-f8c18101d03a"
        },
        "item": {
          "id": "90ba5168-8aee-407c-9018-502e7231d4df",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3a393d3c-e86b-4502-a6a5-7b94eea43e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e42e50f-aa9f-4c9d-b4af-998f96c6741e",
        "cursor": {
          "ref": "0f4e7f35-3794-4929-9228-be29181fd16a",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cfc5316e-008f-4db9-b46e-5fc5159f4992"
        },
        "item": {
          "id": "8e42e50f-aa9f-4c9d-b4af-998f96c6741e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "592c996b-4dba-4067-b798-7ae765c6f5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51abe7fc-d47d-4852-8914-9136f3b09c42",
        "cursor": {
          "ref": "3b24d1cd-b2cc-423e-af2c-893d44158efc",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0ee794aa-0f86-435d-ac7d-50f2d8ace461"
        },
        "item": {
          "id": "51abe7fc-d47d-4852-8914-9136f3b09c42",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "33338a0c-ac70-49d1-8032-83c4467cd3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583a13c9-6efb-4fc5-8a4a-0913a808c602",
        "cursor": {
          "ref": "2e108325-ed99-498d-9cc6-a9abf34892e2",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2a0dd1cc-0ebe-40c4-9378-7114b81f7925"
        },
        "item": {
          "id": "583a13c9-6efb-4fc5-8a4a-0913a808c602",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "08502a21-ae8b-4bcb-ab2e-e55e33b03977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3c9d98-95ea-4f48-9bb5-49f563ba001b",
        "cursor": {
          "ref": "f9857122-eba3-437e-b268-83f9693ded1b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a2a85ff1-ab37-4ce2-be81-c9736e90503f"
        },
        "item": {
          "id": "ee3c9d98-95ea-4f48-9bb5-49f563ba001b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bc400452-ace6-4148-a715-e4a912bff7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df356e99-8a8d-4094-9725-69f65a0cf7c4",
        "cursor": {
          "ref": "b51808b2-5201-4c67-8084-9198dc5c0822",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "304574b2-7403-4ae1-bea9-5c662fe993f5"
        },
        "item": {
          "id": "df356e99-8a8d-4094-9725-69f65a0cf7c4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d89e6ada-c044-4364-b89a-9f833ffaee9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4fc378-02a5-4dcd-a8d2-3de3d2dface3",
        "cursor": {
          "ref": "697db675-a325-4044-a027-01c67eea77e3",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "00beeec1-7253-449a-9dda-c80ad2ee2173"
        },
        "item": {
          "id": "4e4fc378-02a5-4dcd-a8d2-3de3d2dface3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0fb18a44-da7c-4ca3-86b0-07f8de20eb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818f87ff-7708-4dd8-93b2-a5c8bc4750d1",
        "cursor": {
          "ref": "63bc8688-6d1b-40c2-b9a9-40f032b99e93",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "01518e65-a84d-4496-896a-de6ae22bd721"
        },
        "item": {
          "id": "818f87ff-7708-4dd8-93b2-a5c8bc4750d1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e4b1efef-edbf-4ae3-8079-17635058d52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e454dfe-e810-4e40-a928-84be29490b22",
        "cursor": {
          "ref": "c6bc44d0-cf36-4770-b797-f3a65d92d818",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "07ff1410-f783-45dc-94f7-f542103bf2d3"
        },
        "item": {
          "id": "0e454dfe-e810-4e40-a928-84be29490b22",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e9747190-4479-47ea-9c8c-1b6e07f01aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613f4f6d-a605-4727-9f3b-db2e0f2281d8",
        "cursor": {
          "ref": "4be9a27f-aedc-4f86-ae07-73a85ce16832",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c7299e35-3407-4591-bb7d-6a73555666a0"
        },
        "item": {
          "id": "613f4f6d-a605-4727-9f3b-db2e0f2281d8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7340b041-1cdf-4e2d-92c2-1f5534761f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a93b27-d4f5-4e6c-95df-ed59c3de5556",
        "cursor": {
          "ref": "251fe4e9-6684-4781-a550-4613c926cdcc",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "95249740-4253-4fae-8d1e-5852387bfc30"
        },
        "item": {
          "id": "68a93b27-d4f5-4e6c-95df-ed59c3de5556",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6802df28-dc1c-4fcb-a020-118601ec559f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f891f4-8331-41da-ab29-4c7f1f582e90",
        "cursor": {
          "ref": "b9501ad2-cb2d-4bd0-9d66-a85ee0545e7d",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f9e18ea2-c669-40f2-a55e-bc55130bbedb"
        },
        "item": {
          "id": "63f891f4-8331-41da-ab29-4c7f1f582e90",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e4a268e2-fdc9-4533-93a8-ab0f92b8b2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a347dd7e-5a74-4747-85ac-b48ef0dfd031",
        "cursor": {
          "ref": "d8c978a1-d6d8-416d-a935-146b101aa430",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3b8ae00a-ad70-4c6c-9119-51d2e933a6a6"
        },
        "item": {
          "id": "a347dd7e-5a74-4747-85ac-b48ef0dfd031",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cf1fa547-81da-4b97-880a-a7136104e88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0cb0ef-64e1-4952-83cd-a1c64d8281e1",
        "cursor": {
          "ref": "8573ae55-7688-4a22-b22d-c3dc151309ec",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "30168d32-a098-4cca-a7d2-a3fcf237d85d"
        },
        "item": {
          "id": "1d0cb0ef-64e1-4952-83cd-a1c64d8281e1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "66e8396a-afb9-4efb-849c-5ae9ca2b6aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f778f55-fed7-4f24-9b65-5617d79e374b",
        "cursor": {
          "ref": "5d7acf4b-3829-4523-ade4-670ba270e909",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c8b259a3-c3a6-4fd8-add8-a1f617125e95"
        },
        "item": {
          "id": "6f778f55-fed7-4f24-9b65-5617d79e374b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f592b103-413d-4d9b-af5a-8812df865ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0560ac4b-92d6-43d8-8a7b-560df655bee2",
        "cursor": {
          "ref": "c81ae7b9-5b81-40ba-9fd0-9ea0bff6926b",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "86f2eb3f-7df9-425a-966e-d67c85a25326"
        },
        "item": {
          "id": "0560ac4b-92d6-43d8-8a7b-560df655bee2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "68ebd2e2-ff4c-437d-b5cf-352b911859ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc3bf13-adf8-4980-8ee7-bf7c2a7253b7",
        "cursor": {
          "ref": "d85b6874-1ac1-4b6f-89d3-d2b2ca8aed53",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7279a63d-b413-4025-8a76-9ff5edfa931d"
        },
        "item": {
          "id": "9cc3bf13-adf8-4980-8ee7-bf7c2a7253b7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0802bb83-f881-4d50-8447-12c52fffb058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7dca71-40ef-4c26-b30f-c8ed1c9d16f9",
        "cursor": {
          "ref": "ee18bcb5-4bee-4d4b-bdbc-13d3760606ff",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ea9a3001-0bb2-48c6-b43d-6e42bbbec614"
        },
        "item": {
          "id": "7f7dca71-40ef-4c26-b30f-c8ed1c9d16f9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "be83d336-8a24-44ed-9b2f-3bbaa16c46c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6befe54d-9352-470c-b960-2b3fb9b383ce",
        "cursor": {
          "ref": "aebcbaba-fdfe-42cb-a437-5705ebcd3e26",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "da164c89-791e-4059-9c2a-0a53fc9739a5"
        },
        "item": {
          "id": "6befe54d-9352-470c-b960-2b3fb9b383ce",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a13fc430-c59b-42ef-bfbd-f00bd3225603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668a5d25-5bee-40d8-8ccf-c70402690ea5",
        "cursor": {
          "ref": "af31ec5e-53e5-4d20-b551-d84669573bb3",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "62432809-c251-4fe8-987a-f5f856e48467"
        },
        "item": {
          "id": "668a5d25-5bee-40d8-8ccf-c70402690ea5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "134c8665-93c5-4766-b41f-880940df722c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a4f6e6-9d5a-435f-9928-4b1b94db6796",
        "cursor": {
          "ref": "7db3122c-f972-42f3-ba65-e63f83cd5e11",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fe1cd74c-75ef-4c3c-80a8-ff1c4b6b0cfe"
        },
        "item": {
          "id": "94a4f6e6-9d5a-435f-9928-4b1b94db6796",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "184ad9e1-6674-4350-a8ff-a6ef90783f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fcab93-eb6f-405f-901a-4898e63c79a3",
        "cursor": {
          "ref": "e88f4e42-bafb-4816-aae3-e58117e3b1ef",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f31a0fff-9296-4e5b-a8de-69bf845ae8a1"
        },
        "item": {
          "id": "26fcab93-eb6f-405f-901a-4898e63c79a3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "619bfbc9-6fea-4952-949f-f5038a354a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdafcba5-dd6e-498e-9222-ce689dff1bf5",
        "cursor": {
          "ref": "3bfa1222-2fd8-4ecf-91c5-f275e2c9a237",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6d1c22ec-6044-40f5-89ad-fc17e2f51051"
        },
        "item": {
          "id": "fdafcba5-dd6e-498e-9222-ce689dff1bf5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f46b1b4c-7a07-4cd8-952c-c12ee0c72f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fee7db-8399-4da8-9492-4c4a21de5c9c",
        "cursor": {
          "ref": "bde04d88-d7fb-4171-a5f3-1406bd06c751",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ddb471b4-d324-452c-8ebe-b6badfc6f1f1"
        },
        "item": {
          "id": "46fee7db-8399-4da8-9492-4c4a21de5c9c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "60d7a2d2-75ef-4f82-976a-3337f19d83c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4075f643-543d-4b74-99d2-0e32bc664b71",
        "cursor": {
          "ref": "283a96c5-604d-4999-af68-90894bf9e0d3",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6d76e32d-e61e-41a5-a6b1-092d2097e479"
        },
        "item": {
          "id": "4075f643-543d-4b74-99d2-0e32bc664b71",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "683fd0e7-15a1-4578-9b3e-707f055025ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be13dbae-be15-4134-a09f-33a311cd5d83",
        "cursor": {
          "ref": "b4271aab-182a-4fc4-b940-71f5e61cb9cf",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6670a064-5ba9-4d9f-ae9c-625bc540dd98"
        },
        "item": {
          "id": "be13dbae-be15-4134-a09f-33a311cd5d83",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "50dd2857-a63d-4716-aff0-bbdcbe4a0771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7148682e-8fc0-4ee0-80a1-781369556dd9",
        "cursor": {
          "ref": "e769ebb9-76d5-418f-9212-fec35d4745b7",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "11f5a632-9bb6-4b37-93f1-4358e2c6052e"
        },
        "item": {
          "id": "7148682e-8fc0-4ee0-80a1-781369556dd9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c2f62c98-5a22-4283-95be-14cfd7e179e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e34c30a-30bc-4521-8134-864088f97c87",
        "cursor": {
          "ref": "71e92abd-a00b-4c29-980e-10dade05c1be",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "be502de0-c782-48f3-8d07-ec5eca535c45"
        },
        "item": {
          "id": "2e34c30a-30bc-4521-8134-864088f97c87",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "78b73c7c-dd01-4bbf-ad12-53959f412425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55422494-a8ff-481d-8adb-d06cded96a03",
        "cursor": {
          "ref": "9c03f2ef-b4e2-4f75-a250-f3bbf12a37b2",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "44942be4-cbab-4d05-89ed-b7e8c6ca65a3"
        },
        "item": {
          "id": "55422494-a8ff-481d-8adb-d06cded96a03",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8a24adb3-451c-4b18-b376-bb4cf3f1bb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a3f64f-8827-46a7-95ed-75a0696d1035",
        "cursor": {
          "ref": "91d9a5db-d5b5-4538-8136-576562566823",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8ea55d9a-09e4-4747-aa27-9db39148bc0e"
        },
        "item": {
          "id": "14a3f64f-8827-46a7-95ed-75a0696d1035",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c32db0eb-6028-40e6-a0a0-ba1863cc4fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca41115f-c2d1-4135-8442-6dbddc281afc",
        "cursor": {
          "ref": "74575bc8-f8d9-4e84-a7b7-caac35c597c1",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "dac80a8c-ba01-4a7d-a484-5fd42bdddda2"
        },
        "item": {
          "id": "ca41115f-c2d1-4135-8442-6dbddc281afc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "60cc7a99-7a03-4632-8090-c9c4937411ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab17ff8-3cef-492e-9a39-212a20aebc5e",
        "cursor": {
          "ref": "0da1c76c-7ab9-43ff-849d-da165d49c524",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "704aad4a-81db-4b7f-af29-fc26e50afaba"
        },
        "item": {
          "id": "4ab17ff8-3cef-492e-9a39-212a20aebc5e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "79d70ea8-12ad-489d-99f2-bae7cb12039a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ca954d-0b0f-4b5a-b1c7-61a6e8fbe3c5",
        "cursor": {
          "ref": "6e3ed9b4-fea5-41bb-979d-628776de2a1e",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1b7272c5-9ea6-4286-8c92-7df5278c5b51"
        },
        "item": {
          "id": "a1ca954d-0b0f-4b5a-b1c7-61a6e8fbe3c5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e814dbb1-0e47-48b8-995f-b4f99e2c644a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778ef7c9-087a-42bc-a4e4-074c23764257",
        "cursor": {
          "ref": "5df53a5d-b77d-45fd-9230-c5db297eac3f",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b41c9657-cbeb-476d-a65c-09efdad3d859"
        },
        "item": {
          "id": "778ef7c9-087a-42bc-a4e4-074c23764257",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "964cfe41-119f-465a-8c77-16027dac77bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bfa1e8-ca96-4e5a-9a16-d308a93fe8f4",
        "cursor": {
          "ref": "23b14fa9-11c3-4b66-b36b-8ff55c514448",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "79f89c51-e284-488a-aa34-8741dcf5892a"
        },
        "item": {
          "id": "b0bfa1e8-ca96-4e5a-9a16-d308a93fe8f4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5c4733a0-180d-44fc-b970-49737b5a339b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76ea103-6dd3-44ed-9bf4-814760eed98d",
        "cursor": {
          "ref": "17239526-0a5f-43bc-bdbd-5a3fda5431fb",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1720d689-7641-46c7-baa0-3d28a2ce013d"
        },
        "item": {
          "id": "e76ea103-6dd3-44ed-9bf4-814760eed98d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "be1a18b5-bf6c-4847-b855-902452d058f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779e43b2-5701-481c-b05f-e8c205d0aeb3",
        "cursor": {
          "ref": "278a9425-d378-4153-84fd-64313e1bf065",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d3516375-b972-487c-8793-c667057e6a4f"
        },
        "item": {
          "id": "779e43b2-5701-481c-b05f-e8c205d0aeb3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ab13d26c-6fcb-41cb-8601-5bba002fbeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964965cb-f3f2-4315-918e-92a80e761a3d",
        "cursor": {
          "ref": "90d11466-ad6b-4641-a3b1-88e9e16fe5b9",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b1132a14-6b32-4564-a277-4d847c695cbb"
        },
        "item": {
          "id": "964965cb-f3f2-4315-918e-92a80e761a3d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "219d1bfa-041f-4d40-84ac-6048d051f40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2978478-11ca-4198-955a-9c3ce18e97a6",
        "cursor": {
          "ref": "4c3ea49e-f196-4d4a-a761-0afd9e0249ba",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cc33e30c-3c20-4bd0-85ad-3ddbb51b930f"
        },
        "item": {
          "id": "d2978478-11ca-4198-955a-9c3ce18e97a6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "95661465-5e30-4936-ae13-673e220a1d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42d07f2-55ef-4d2b-9b69-0aad67a5e483",
        "cursor": {
          "ref": "030d647f-ad39-451a-b159-338b783ce7cc",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "10595ae9-331a-40d4-afe2-9e7ba3c0d974"
        },
        "item": {
          "id": "d42d07f2-55ef-4d2b-9b69-0aad67a5e483",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6f60d653-5206-4c0f-bfbe-82e154506c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf155fe-4f85-4062-a43e-823bf3892088",
        "cursor": {
          "ref": "99b55e27-43b0-44bf-9620-aeaf9145d653",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "947fe309-6929-4198-aa23-96f01a488eee"
        },
        "item": {
          "id": "aaf155fe-4f85-4062-a43e-823bf3892088",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "177c17cf-16f5-4b90-aac4-75abcf318940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1050e4b-1c7d-44d9-8b2c-ecd2a1b66747",
        "cursor": {
          "ref": "cf1ffd79-a4a7-4b95-a0b4-300649688257",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4d9edcd5-98e1-4719-a154-428535ee58d6"
        },
        "item": {
          "id": "a1050e4b-1c7d-44d9-8b2c-ecd2a1b66747",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "89841b3f-d59c-47de-8888-b98494d98ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702c0b72-ffb1-462b-ae1b-8a5c3236e1a1",
        "cursor": {
          "ref": "9c0f70a0-4764-4ab7-b394-979a6fc7feee",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "619fdcc3-eaf3-4622-a1e8-712e94596b38"
        },
        "item": {
          "id": "702c0b72-ffb1-462b-ae1b-8a5c3236e1a1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "84366cfd-d606-46cf-b89a-fee8f52c7f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67452589-6291-410b-beaa-867e670834b8",
        "cursor": {
          "ref": "b2c7308b-1c4b-4a76-8ea5-5f159e3fcf4c",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1896fe90-f36f-456a-91f0-6307d3a3f99c"
        },
        "item": {
          "id": "67452589-6291-410b-beaa-867e670834b8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0d8828a5-2377-4986-aa8e-6838ef7cd572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9506e0b5-f077-4a76-9341-7475ecdd55d6",
        "cursor": {
          "ref": "256406d8-e968-4b68-b206-7de42c9c4f13",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fcf597c3-5221-4bd3-9fbf-b095c2262107"
        },
        "item": {
          "id": "9506e0b5-f077-4a76-9341-7475ecdd55d6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "804c5e8b-de6a-421a-94c3-cd128036cff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d0c2cf-ac77-4d29-9695-129dc6cd2b64",
        "cursor": {
          "ref": "bb51fc84-172c-435c-986b-980b4c722037",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d0f8da67-830a-4af5-8bab-1fd03d864a2f"
        },
        "item": {
          "id": "22d0c2cf-ac77-4d29-9695-129dc6cd2b64",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2ffde27d-7d00-4d9e-894d-417b79df40b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a6969e-d33b-4f90-b163-7a68b62f9516",
        "cursor": {
          "ref": "5c4c0682-fe2d-4689-86ce-7a4605735769",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b088971c-6adf-4602-9627-7485ce2b91f9"
        },
        "item": {
          "id": "f5a6969e-d33b-4f90-b163-7a68b62f9516",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ec1ebd5c-c72e-4eb4-82b6-34c56b676141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c5ca0d-4c28-444f-a9db-686a9fec71aa",
        "cursor": {
          "ref": "d5f5a610-2cd3-476d-8f96-0f675dd46cd0",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "23c4ef8f-43b2-4c1b-bbbc-0befe6308660"
        },
        "item": {
          "id": "79c5ca0d-4c28-444f-a9db-686a9fec71aa",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2899dcb2-f121-4aa2-8e0b-cc36c4ef10f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc09f2b1-7f1a-45b7-adad-07fb85d6f0be",
        "cursor": {
          "ref": "0344aac5-17f2-4412-ae6d-3445af075d89",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "95169469-0a47-4237-8116-66f7284622c2"
        },
        "item": {
          "id": "bc09f2b1-7f1a-45b7-adad-07fb85d6f0be",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "efe63cff-f89f-4158-8e25-594c0b8f3078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794f9c8a-654d-4293-b180-da7d8e68b735",
        "cursor": {
          "ref": "2d1ef13f-8a05-456c-ae32-61bf29bf7e91",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ba90f122-b920-4bdc-8b83-8dfd0d62ed66"
        },
        "item": {
          "id": "794f9c8a-654d-4293-b180-da7d8e68b735",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a486c0b2-f341-418e-8d97-026987caa28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2230b252-e6d4-48c2-81d5-e04f155d3a27",
        "cursor": {
          "ref": "78b6c337-d5a7-4fa4-8338-1b21c2c3dec6",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d0a975cd-6125-4092-9f9f-31fba4323372"
        },
        "item": {
          "id": "2230b252-e6d4-48c2-81d5-e04f155d3a27",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2e651d78-e132-4a4b-b823-1cc3a2147059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5362ff-5211-4ebf-b0af-75bfc2da90fd",
        "cursor": {
          "ref": "250503a0-6891-447d-b468-049d56d52d38",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5c93481f-b7a1-4860-a633-f612de332074"
        },
        "item": {
          "id": "4d5362ff-5211-4ebf-b0af-75bfc2da90fd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "57c5f736-b85f-4973-b4a4-b7fee90b2fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88430ce8-c431-4c9f-9f5e-a7d24a2cead6",
        "cursor": {
          "ref": "d1dee5bf-4416-4699-89e1-75666b0b2f4c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a6821c62-e6d4-4a0a-9827-a8d1bbc05443"
        },
        "item": {
          "id": "88430ce8-c431-4c9f-9f5e-a7d24a2cead6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "87f7e79d-e50d-43f0-8ed2-75e0f85ff3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46609e78-2572-4c15-bf8f-66ccebc12b1d",
        "cursor": {
          "ref": "c7eb4005-52d3-41c5-a6ca-1f91d406580a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1b13e23b-ba30-4a98-8013-81cdc83dbbd4"
        },
        "item": {
          "id": "46609e78-2572-4c15-bf8f-66ccebc12b1d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3fb71817-bce4-4e52-a419-df5720c187eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d105d2f7-e3ba-4885-9b50-7a51ff7c5ac6",
        "cursor": {
          "ref": "62de9ba1-0646-4a7c-acac-0be582d6f165",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a1a7ecfc-1db5-42e6-adbb-e7ade50e39d7"
        },
        "item": {
          "id": "d105d2f7-e3ba-4885-9b50-7a51ff7c5ac6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e0e886ca-c626-491b-8f6b-c0a2d5927c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c46261-7f56-4129-884e-01cde505bf72",
        "cursor": {
          "ref": "dcb19b5a-4024-4fed-80e5-701562f7fa55",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5cea0153-5da4-44f8-8d44-a36c1e3a0472"
        },
        "item": {
          "id": "90c46261-7f56-4129-884e-01cde505bf72",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f382bf4e-7ea7-44f5-926c-abd10d261f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4896405b-e51e-4b03-ad79-791b5d0acb00",
        "cursor": {
          "ref": "38cd6517-5f4c-48c0-862f-e3c56d3a2dca",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "38945b5a-ce06-4809-85fd-31acfeec8433"
        },
        "item": {
          "id": "4896405b-e51e-4b03-ad79-791b5d0acb00",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "270d75d4-23e6-47fd-bf82-7fd3af19a594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fa768e-dde7-4fdf-90c7-67f92fb6e475",
        "cursor": {
          "ref": "24d3f455-ecae-4b1b-8ea8-00431c1d0d3b",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "10a8fcce-65fe-440d-ad94-72c77e05cb35"
        },
        "item": {
          "id": "29fa768e-dde7-4fdf-90c7-67f92fb6e475",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7152497d-a3e4-4543-8447-b346eb1f7570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccfc546-177f-48c8-a3bc-f4140ca28b9e",
        "cursor": {
          "ref": "3773b014-a190-48c6-b604-20c10101da64",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3203fbd0-9990-45c5-829a-eb40936af57d"
        },
        "item": {
          "id": "dccfc546-177f-48c8-a3bc-f4140ca28b9e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8534cc6c-e9c5-436a-a044-3d868585974c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19b23af-170a-49d2-9e39-aa84fc8c0cd0",
        "cursor": {
          "ref": "0a778a65-9dbd-49d3-ab14-e79d88409fad",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b83ce206-a16d-404d-9f57-8c039b1fe109"
        },
        "item": {
          "id": "c19b23af-170a-49d2-9e39-aa84fc8c0cd0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1a7491b9-02d2-4d81-94da-8f2a3cc37a7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23275187-55b0-40d8-aa72-93c403499268",
        "cursor": {
          "ref": "89311333-8a36-4be1-8944-b1e2f30cdf67",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "345276cc-39ac-4d6a-be5b-6829e54d5220"
        },
        "item": {
          "id": "23275187-55b0-40d8-aa72-93c403499268",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a38ce724-1ce2-4588-852d-75f60fd6228d",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb49680-f3c0-4af0-af84-ce4c62e0c752",
        "cursor": {
          "ref": "be1ddd0a-a688-482a-8556-eb32732d2f3d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7407342e-9595-4480-8f9e-d9d2e661642f"
        },
        "item": {
          "id": "3cb49680-f3c0-4af0-af84-ce4c62e0c752",
          "name": "credentials_verify"
        },
        "response": {
          "id": "762614e2-e9cd-4682-8dcc-b941b9ac7bef",
          "status": "OK",
          "code": 200,
          "responseTime": 2800,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d77426-811f-4b0e-a3cc-b7f52a7f89b1",
        "cursor": {
          "ref": "9db8322a-fbe9-492f-8407-da1062afccb4",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "979fe4e9-ecd8-44e3-898c-0c278c46ad93"
        },
        "item": {
          "id": "34d77426-811f-4b0e-a3cc-b7f52a7f89b1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d41e4724-347d-4efd-a6f0-ad6792e9b0b0",
          "status": "OK",
          "code": 200,
          "responseTime": 2762,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "037b7b36-4047-4d51-9040-7dd6dd9f65f3",
        "cursor": {
          "ref": "ca54bc2e-184e-49ff-8263-7ccb1d364964",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1bbc78a9-dd9f-4999-a952-4a49070eee61"
        },
        "item": {
          "id": "037b7b36-4047-4d51-9040-7dd6dd9f65f3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "df280093-5a3f-49d5-a9e8-4ba402a3dada",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037b7b36-4047-4d51-9040-7dd6dd9f65f3",
        "cursor": {
          "ref": "ca54bc2e-184e-49ff-8263-7ccb1d364964",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1bbc78a9-dd9f-4999-a952-4a49070eee61"
        },
        "item": {
          "id": "037b7b36-4047-4d51-9040-7dd6dd9f65f3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "df280093-5a3f-49d5-a9e8-4ba402a3dada",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956cf2c3-f1cf-46a5-b854-49216daf09f5",
        "cursor": {
          "ref": "c54f4ad5-726c-4973-984f-08b92e4c751d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bfa02366-04aa-488b-9484-9905ba9fba97"
        },
        "item": {
          "id": "956cf2c3-f1cf-46a5-b854-49216daf09f5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ab2e920e-b6f2-4c82-ab2b-4c5031dfb3b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba78068-6cfe-4bf1-a126-5b35c48dda78",
        "cursor": {
          "ref": "51531a3e-742c-462a-b8e1-2a552f31d162",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "dcad6c36-c03c-4a0c-80d8-f98f972256ff"
        },
        "item": {
          "id": "1ba78068-6cfe-4bf1-a126-5b35c48dda78",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "275ce83b-732f-4e4f-86df-e121599eb266",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}