{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7cb199fc-bf29-4e09-b8b7-838f170af8af",
        "name": "Clear Cache",
        "item": [
          {
            "id": "19f65bc6-076e-4e25-b4ea-133a9e4a2195",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "08f6f448-6d5e-4878-bab8-3a964aba03b0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "98dba436-cc71-428c-b37f-1ca8beb7aee3"
                }
              }
            ]
          },
          {
            "id": "19b9cf20-4fea-4fee-bfcd-39787b0eaa8f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fb9765f1-84a7-443d-9d35-b3053b024371",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e463fe52-6317-4304-9385-6e293812b032"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "efb4d956-9e8c-498e-b62c-16967fa14742",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "da9b689c-4afb-4370-b8cc-70ff9148b073",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e8303aa3-fc13-4f49-8f05-fd7e9afd3faa",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44a99ca6-4e2e-4182-8c55-e71b7826aea2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e52e52c-4f09-4b7e-aeb3-b595e28219e7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b28eb778-879a-437e-868d-6bb3be7ee8e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03a247eb-74ca-40c0-b9cc-96647ee93506"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "16025c30-1b1d-4c98-a874-070327e0335d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c707fe6-52c6-4ac8-ada5-72066c0022dd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2e04d02-3e68-431b-99ff-763407ecd452",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8899b89c-e010-4937-8c86-b44092c26167"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8471ce77-63f3-4ba5-beff-9e14d58cb657",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6e85cd6-ea4d-4cca-98c7-67d8d9ecf0db"
            }
          }
        ]
      },
      {
        "id": "18259a97-d30f-49fd-9aa6-2f7b6f046c51",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e5ddde2f-546a-45f8-87dd-29ce71451fe5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e82770d-e523-4f1b-b619-bd27fd523764",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "acc21482-1bd5-423f-b244-50264ea9e9eb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8642dab4-8d51-442f-97b7-ba0c84f54077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "690d1f3d-4666-4089-89e8-f43650068179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a060195-ddda-4c5e-a568-a12c99806db0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b4bbcc-feb6-4f07-bb94-683933ea42b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52bf37f3-3d75-4add-ab28-bc26fe750e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d70949-3af7-4452-9e5d-6860eeba4bfe",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb053180-22de-456d-917a-9bc7c23aae5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb463086-eb5d-4372-b3f9-91ffc51bbae6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f75000fe-860e-4f69-ba69-616be1541696",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "672ae626-6d65-47ef-bff5-556384d054ca",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32367a8a-aac7-48ea-91c8-b753be553880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af7ee6ac-ea42-46af-83ef-62474c3aed4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5cfd59-20e7-4030-91d5-09eea1813e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba2148e-ab4c-408c-b325-f9ba8b5fdf57"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0b9db644-16a0-410c-8470-5c3f346b0100",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d25f4e31-a9f1-459b-8019-1bd3f9a13555",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1aa1ec7c-af1f-4ce1-973e-a0b079a71c29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "57523a53-584d-4f01-8960-54cb4c74d3ad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f61d6f4-8003-48a1-84aa-178040392391",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7e46a42b-9eaa-411b-9250-621678a46e17"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bff4d75b-1f66-49ae-a651-3817d4309e67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3af4808-cf78-4c94-8d95-c8afe213c679"
            }
          }
        ]
      },
      {
        "id": "6179811a-adae-498d-b60b-dd9b4cab58af",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e6e10df8-a0e0-4f46-aa7f-70e5d224c921",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d2a7ba9-a25e-407f-be5b-3f2af260380c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f11db9b6-1008-4189-bf46-1d99a9afa4bd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bc6c34-5eb3-4ab1-9283-dc52833e8759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec94d7a3-4a20-4137-a388-34f369a3b3b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2b8512-9e69-4939-a4bb-d6bdefe3a04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1499f6b-cd8f-4f4b-b0ac-457e05e9ee31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614397f9-456e-4559-a4a5-334612a54ad7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c936c9-278a-46cb-9fa6-b16eae2977e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9565d821-be23-4dcb-8050-617fa603eefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3eaffcf-8d78-4ed0-b0f7-5b7f2d0743dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bbb2208-b1d2-49d2-9106-e2a4f608f126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da238d3-c90a-41ea-9a55-135d16d1779f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a202a0-3c27-46ff-82ad-efc4907f9e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be8a32d-a2ab-4f5f-94e1-7a0e1485d5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb1e52e-90d7-4f8a-ae9c-a24e7ac476a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef1b9456-f415-4468-8f40-91b672753c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633b8dd3-d219-4f30-bf43-26582763a8b1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804f4fc8-afa1-4228-a059-f8768f492ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51635f00-c099-41c6-867e-223f5fcc6b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16e9834-1211-44c0-ab0d-797dcbbb841c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29ea24a0-9cd1-4ae5-b154-bcb647486851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab8db0d-8358-4f0f-b3c2-adb6fa794afe",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a580d298-f447-4c34-a559-9abbf537ecf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e870c7-afe5-403b-b271-bcce236e2fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9685b5-abe6-461e-bb8e-be829f1d79a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db528d64-2de8-430b-8f82-645b9e854f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aca4265-8aee-45b1-810b-1b1e1b939cac",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8ae916-7a93-4825-8031-846ec0b10633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c9d6d1-949f-4da4-b45f-4343e314007d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2536240-2659-4712-8726-4394c33bb195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52f02509-d6b2-48e1-9d02-40a83c5f689b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6df71c-c5ca-4059-81f2-c9e975a21ed8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ce136b-d1b2-4a3b-8ab7-60e94841a1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66eaac3-4c37-42da-8bba-90e4a003ea5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0608a2-a5be-4636-a01a-df56a57b4a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b77b03cb-6955-41e4-abce-e0157eb8d0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f2640e-da7b-4265-8a10-1b1a025be280",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f8fed7-e7c1-48ea-b306-6edccd4a7122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87051658-535c-4366-8ba7-8c7b7dfb0d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33757aa-8e08-4341-b8e6-c860be236ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9809cda6-0bc9-4406-9dc3-446c32567194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9810444a-f952-4f9d-a7ed-7f76084f9f44",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3394577f-0855-4859-9c28-9eda7f975df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f367a12-8f14-4024-9d2c-ebda7f3effec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0a5fbe-9c8c-483a-85d2-8a6a2d412602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e16cc794-0172-4b81-8d83-50dd7a42db7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311ae4c1-1670-4143-92b8-709d520f49a0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c0e55b-8394-44a4-974f-1cf52dcb35c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df335b93-1f3b-43b7-9985-62d09cf41c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b3f387-6e21-460f-bbed-f8c84235a658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24669dd4-3b51-4878-8164-68f834a13673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d42b17d-53b7-4813-80fd-627008bf9d80",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47299d9d-9858-4cb4-b486-ea085c6ebb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9acd63-ec91-4377-94f7-5f5680692022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b37e87-b70a-418f-89fd-fbd941081be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b06645d-6ed5-4f82-8d08-774bf63ac04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbb5837-65b0-4a91-b864-d7c6f898b585",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c1f659-7f6b-463f-a576-6d1d0e21a590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfec322-0920-47ea-8feb-d22466711641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204b9cf2-baa8-44d7-9de1-d76cf2c1252e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "037675d9-ed09-42b0-b46d-20482c9a6d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f131f8a5-6661-44d6-a8cd-2ce692fa668f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963ff0cc-ed0a-416d-af29-6e04714242bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94fb7058-7356-4bee-8a84-d3bf6fca49b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd2fb31-6246-4e4f-8286-63efe142f3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb242923-aee4-4557-b7f3-6e68f570f359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae22364-392a-4d4f-9494-28af8a60e292",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0512a0bd-722e-4acf-a4e4-7d3929828d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68735637-571a-4ea4-82ae-30ac002a8bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1be182-c6a1-4611-a055-ff3569867940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c35052f5-f4f5-4b9e-90f9-6e8c54c7ac93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a2483d-bbd0-498e-b22f-3f31fa0dc4af",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b574237-e2a2-43a3-a548-6f2a1bc824d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbf2f52-34c2-4589-ad18-6e8c7c631689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a92fcd-fc30-4c77-a329-1a143a1a971a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6aba36a-743c-46d5-9e2a-9ee3c7383777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cea8af-9f81-41a7-b70a-913a052be61f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2739b708-bc49-42cb-a625-1a5ceb63c3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36316fa1-f47c-477e-81a9-2be4bbaa5d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7869e19f-1019-49a6-9e2b-e9f8df825c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e962e74-9e9c-4881-9070-ed402ae2df5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6694c265-4b7b-4729-b80e-835ceaf1a8bf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539d5807-62eb-48db-98e0-a9e983b787a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9230493-05a1-4284-8ea9-65743f450563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffc3851-0b3a-439f-a4fb-6eca4ced9c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35fc5eeb-af89-4566-a187-d8d4c6b94718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da58a8a-b145-4021-90e1-3311598db3d5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6927a9-6f6c-403a-ae9b-7148e028e397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b941040-e8db-474f-88f6-6e4eca6cd3a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee583c5-3e21-4055-85d7-1b12bcefae0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d25dca92-1ff4-4287-a3f4-0dddca196e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7d489c-81be-4389-bc71-814445f035e4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56dcae1-a4ae-47c4-90b9-7fcd1f173b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a4813e-a9f7-43d9-a9e0-2ccd4771086e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e9edd3-7236-4236-8f8e-7f804da735f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "650a8ce7-24ab-4c72-a5d1-788a2871791d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ac183c-bf05-4924-ac2e-8aac9590f2d3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c0f5bc-ed13-4ae5-ae48-85c27f493f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ebe283d-7672-4428-bab9-0a9022df1fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3bf8af-a2d9-4f9b-84d2-0d5ed14401b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "639fe5d7-2fe5-4cdd-b07c-66650b6819ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bce714-23ba-4fb8-914c-93ba76510439",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98fdd6a-7448-4283-b420-1cb0fde380e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86446a5-899c-4232-9dba-8533e1690762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8dda34-3c48-41b7-b1c2-2eb3e046b26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c83c686-8fd0-40cd-b40a-0af1fb341c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e866fb-5132-4d24-8542-ccc57d4a4d4a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2073ed-32ba-4511-acc3-b444b978d25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616e4133-48d8-490a-a719-53b8a60b044e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a9b4db-ce09-4833-8dbb-ef3ba2e4d91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2580f0-32e5-4357-b059-39d76410f1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84424233-6797-4fae-ab99-8f6cce3d8838",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0316e8cc-0e97-4e9e-86d1-f6c4729103f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a41f699-b5fb-4c95-afc3-16a5a7a2cab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc913dc2-c04c-4b73-9da2-79914c371ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a303c769-586e-4cc0-b3e8-d7772ee63342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d54722d-2949-4e95-b390-90f5af984183",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7688e21-ba44-44ed-85b9-9d2e9a33d180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80303a4-8efe-4059-a9c5-ce27c87c2b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d817b4e-dd29-42c6-929c-6418d55f567e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbdc8468-aa19-49b7-a48d-19f36bdc935a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689df2b9-9fa6-498c-9d2d-bdc951491d22",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab82297-1e95-47e5-b2e2-a9c6c59b4029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "090726d9-6b06-40ff-9c92-f0e906191644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc44786-3927-42d2-8717-05e0e8b40067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "34449a94-d41d-4de8-a48d-145870296e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662dfb0c-4e61-4960-8429-0b0487c47c6a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3a2efc-f333-4f8b-85c7-2b7d12a92a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc357d57-12e3-4d99-ac63-09a2d93ffa37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e308fd1d-a776-477c-9d8c-f05ac0db306e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f037282-dd23-4aec-9685-c8f5643c4727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7f36a6-e4cc-45b3-baf1-a16b6a42d250",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32548e8d-5492-47a7-8116-f8672be6b65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d536657-93f8-41d9-916d-6ba299be2543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d24c955-c6de-4190-9c95-479c6f2c6ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1cd02a0-7bdd-419b-9d60-f9d5a52d5fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a732303-35b3-47c7-a5aa-52ae7d43c790",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6113497-fef5-4dbd-83c7-c29e02106f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4234ebf-c18d-472a-9983-69f671d34be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc86be65-a259-4077-8608-08eed9a49bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64c38c51-c638-4d09-8b87-a7d3092e5e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f94969-9661-42ef-8319-ba3a2db135fe",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8345f5bf-89b8-41b4-8220-517423428386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62dcb65-f471-4461-aafb-a4be45101083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23020f1c-aeb5-42d5-933f-275c341945fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea470a0-8841-49f0-8cd8-a8a89985d114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10447689-44b6-4394-8aa4-20af56524054",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6445aff-bc81-434b-9668-75307eac516e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0ec444-a61f-41f3-8172-7b7fb380878e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d891a0d-3087-49b7-94cd-d8ddd571eca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d79eec3-ea77-431d-abef-a0d4e1e45872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823d2c37-11dc-4635-974d-5bd105c2d8e0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a50b0e-f444-4ac2-ad88-5741c63d5e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683b8861-74b3-4b37-b0b6-5c66f3ecc1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e743b476-b05b-4e5f-8cb2-76618778cbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19ce6ef4-c016-44b7-afc2-da3815268c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516d941a-d703-4367-8ad9-ad201580913f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21197a94-13a5-46a7-99c5-9ac722f84373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "247ded8a-0e40-4c4b-ac59-381036f3905b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608137ae-4cba-499e-ad44-8d4c7704425f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "242a2e7b-ace4-4954-acec-7953f9ce0fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58c0d8c-beba-4885-8b16-6775c7769a28",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf93766-3526-4f6d-956f-6f628f42bcce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a3ef46-1b85-41ee-84a0-96ea944a613f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51deb9c6-a538-49df-b674-36ab23ad9439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7368d653-772d-4e73-85d1-f769836cb29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e5416c-4169-458a-8981-653410cddbdf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743b544d-b9f6-49ac-b28e-65368c3041c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be603526-29f6-49cf-8808-c4fb9ecd702f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0150a14-3f30-44e1-8996-a4447c88afe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be7a51c5-9ebb-4e41-8cd4-8bc9c0c8f741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17cebc7-6822-4880-ac85-693a8bdfac78",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6524b156-7190-4f1c-812c-6a8bfd5d256f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209f94da-2141-412c-8bdb-510131c08911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43403e19-725f-4e1c-ae84-c34f7ab231b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "665ebc28-992f-4aca-a379-0ff5bf5302b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cac5a8-94fe-4395-88fe-d18a09b51e53",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39815f9-9537-4b2d-a2ed-3482ff50369c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfe3ad6c-b005-457d-ba36-b46c48c070b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7351a9a4-c9b6-4a6b-bcbb-098da32fabe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e1b303d-c0f3-4e4c-8d53-36ef5e18c01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c27c831-79fc-4541-b7a0-034962d0677c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af1201c-ff4f-41ae-8e88-c9393a33d138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8e08f5-6a1b-47ab-85f7-2d7faa285f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563928d9-06b0-433e-8cf9-0ad6539b938a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92f6599c-83a4-4657-bffe-5d7005817684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80fd35e-3e34-4c47-8aca-45d2f300728b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f4b74a-e44a-42c1-8bfe-c2a1a5b23bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b15528-2043-46be-a00c-04971e17b0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4bbd58-8673-46e4-b577-e1179a00a747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2eaa6b-e3b7-4392-8669-88c16951c4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c7c904-c434-495e-a04d-138ce3102c21",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f3321f-fb7f-4464-adea-18147c69c7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff61b0e-b6eb-49c2-bacb-8f79441f4b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7638148-96d3-43fd-abb9-35b22e1f226c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "03b6903c-4755-457b-b965-f83f9281dbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9247c0e8-939e-40d9-a2b8-7ba0cb2a6b26",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581caf43-bf1a-496c-9473-f6457e0b19a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b15fd3-b6f9-413b-9433-2884913ea715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7cab9f-0717-4a65-87e8-3715312a2a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c019b1f1-c73f-460d-977b-bf281d65ba42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175694c0-6612-4012-bd8e-3ecb6b7c8955",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b071077f-9218-432a-b1e0-5709d077ebdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7323157-09a9-4588-9f32-e2f55619eba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877d7e40-81ac-4c00-84b8-588572ed2e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0117777-14d4-43a0-9ee5-e78aa2d6253d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f5987d-27ad-44b7-a78e-90ce7a7a2e5b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1542c76c-e513-4cc4-be9c-ffa288cc2bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3feb16b-69cc-403f-ac93-461b57872709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee102e1-dfbc-4898-9719-8bc89898728b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "427cfdc9-40ce-4e17-97fe-0914fc34e0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356124d6-dc5d-41c2-9cad-029fd27b6856",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92725d01-a143-450d-a7c3-2861bfa64b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019f530f-8cca-4a32-b1fc-abb0860dd423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270256af-b43c-4edd-8d68-6f1a545d0c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc889076-7009-4c25-aa82-2e86a7d1d832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be4dd89-3ef8-4122-b54d-62616832d833",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9897073c-7967-43d6-87cf-e60e36c1ffa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93072d48-2ef1-408c-a773-d6edda8a78f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45dc0b3-a699-4f6e-a238-3230a9467489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "af128b7a-9e36-4a6d-9b23-5159e69e4ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ed851a-84a2-421e-9ffc-d2658c7753eb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36677071-b373-49ee-8d9c-27dae76f2fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd41343-bb67-49cf-9c89-aaec36c1962a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576c6116-6337-4246-bfee-32fdb6bcca33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "601e013f-70bc-4297-be53-c221354f036f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00883a7-6be3-43f1-8fac-6ddd3edf8083",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f31f5ac-7e30-414d-a047-7f905a9cfc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de44242-c905-4d70-bc43-5de5dc14167e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b5fcc8-3521-4547-b7aa-10d44179613e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a894eef3-0100-44a6-9994-cc14934d9bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798dd43a-b045-43b7-b67c-a21753cec64e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2683d3a-3175-496a-acca-12adb23a2e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdcc1ea9-9eca-4cab-bc3a-c50cecfc35af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d921dd2-a8de-4d0f-88e5-dfbfd5edfc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19f22c5e-8416-4486-b97f-e36fc37acfda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd7b14c-1ad5-4d30-b554-b185907cb694",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91c79be-f767-4fff-9ba7-3534133308f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3ba398-1bd3-445d-9184-23e27f862e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831ad74f-b4d9-4726-81b0-5fc3b14d039b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b080d405-4eca-495c-92a5-93563286aaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb72d64-070f-4de5-b014-a82dcbfea8e4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8672ae92-fa5c-433b-b352-29d997a69d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6215730-18cd-469c-a0f4-d38aabc8f979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd710744-4478-47e7-b0b9-b46aeed50e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "afa422ab-ead6-476a-8ca3-63d1ef3c8ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6793b10-671f-4dd1-93ec-5691c0994494",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37b58c1-5af0-4e47-8ca2-b59bc2afefc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2650e0-7d1a-400f-8a47-a6feb5b04ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5e2cd9-e207-44da-bf93-a5b91db50835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7418654-b932-4c8f-9ed4-6f53d063add9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1402dbda-e13d-48e8-88a2-ba6f1cb1ea6f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d393df6-520d-432c-b07b-82a1b7aa8974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fcb8d85-f893-4dbf-8a99-e58d718a211e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54eea2b0-9d2b-476e-85f8-dc595e7688cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5e7365-8053-4a69-924d-4c0a7dce36e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac29bd1-c652-4b86-8d6b-399899d11472",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2616b384-98df-4252-a232-03bbaa71a8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9aa4536-ddbd-4bea-b41f-4474fd42447e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a25d8b3-45cb-4534-bfca-58c33e46a44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae72805-7446-4da3-84e3-1b1bd313db96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9683dc40-fd6a-4d6c-893b-a60c0548c5c7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e5b723-216d-46ea-98db-040cccba34fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db99cb96-4247-46b2-8772-d2fc4f386daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526a3b9b-c5d7-497c-a698-95724a4b68e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c99a157b-267f-4d85-a1e9-959d7ceebc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2a4290-559a-4d91-bfb6-11f974c53cbd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60340096-f888-427c-9647-797642de3bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b81a0cc-7446-4cfc-b0d9-8a7d1e8a0159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e557c4e-0880-43c7-8120-2f156098bafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2772dc3b-1b12-4b73-964b-c75c68f5bd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f0197c-8429-4342-b3b7-e1dbb229e7a0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50631d72-1147-4d43-ad96-0e57fc92fb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e12e0f-632d-4174-a4d6-e5bb8814433f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cf455e-f111-4f01-bc32-ffaf9f973053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba67868-85c8-4ade-acfa-3eccbe8b2277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37560827-f2e5-491a-bd06-949a6815890c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2025ea2c-1ee3-4952-9cc6-1da15bb67a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a397e612-5900-4141-83ce-feb887b81069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c799c91-aba3-4365-94af-0ed330fdee13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b41c03-8467-49d3-8605-76d44aa8eb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f97a52-4ad6-461f-be1c-a22efe1199a5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f195da9f-2625-46de-952a-2d0ad1b5f26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49a3744-0fb5-40d0-bb1d-e6acaf154c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f73e3d-5bf2-4c6a-a201-f9a85fab22ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4feb2d68-a1f5-441c-87a1-cee29cc4adaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c439c890-2ab7-40c2-a8dd-9529d080d68b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26165e22-6081-4a3f-a203-3842b64c427b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b314993-1658-4bd6-a43f-2cba4f4bf571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0371d9c5-b946-4382-89d1-a366e76ecca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "07e37cbf-484a-43ef-8ea6-3f576e41a63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269374db-64c7-44f1-b40b-005850791117",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4fe817-2d6c-4647-a0d2-b60e2e0ef588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2dea303-f2a9-4f8e-b5e8-2f1faac7ad74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71047185-b144-48e6-bcbf-f8eea30ecc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "72066f55-6043-4921-87ad-33b47267aec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a15729-ca53-45a2-8440-84e7924b7a60",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8e47e1-e1d8-4e0e-83af-9cc76687c8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673581ee-de19-4cf7-96a5-f6f823bbfd86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974fb905-8676-4602-a117-b9f32fc88028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6680a22c-6c64-464f-a7d0-18b2dcedf0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef1c6d7-137e-4daf-8d6f-e6b650faed40",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5c1fcd-054c-4cc1-b6c0-b5d761bd6e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf96c0f7-a18c-43bc-81d3-3254d4873fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7e0dea-b3da-45d6-b22f-8aa7e3a79a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f93b3750-0831-4c59-8eac-26bbf57790f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bee0321-05ff-4325-aa53-1ce1c8f78864",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97a8646-e564-418d-844a-7151e39ed3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19302f7c-1b57-49d1-b639-23780b127e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094a21af-8167-42d7-b628-ee751d7d5401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac9bbd1-9b0d-4518-9ab6-52ad8de926a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6733fea-3f42-49fc-a3aa-d5bfdc8697b5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be515154-58ff-424a-95e6-21e071ae4a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3594e436-5fa8-42e8-924b-65d163c4e0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a2355c-2be8-4e12-95f4-f40ed78fc51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a005e802-e1a2-4f85-9b06-9796e9f5eeab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa2bbb4-53be-4203-b925-f722c57a30b9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f1259d-b8d1-4855-9c3a-f1fef368d4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901031a9-924f-4bf3-affe-6ec7d70b36e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2e9ace-4fd5-496f-8df5-da2953411385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10466dc5-f7f7-4428-ab19-380596610601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d9ed59-4efe-4f61-880a-34f55748cf37",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1311a900-2915-443b-8a54-6795029b2407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67566617-90fd-4332-99fd-e9dbea2564a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69872a15-b818-44d4-ab20-31de0f8a935b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34c8e7a6-1d4b-4863-bafe-3328919ba8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb4d155-08e8-4591-9e1f-14a88adf0e65",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc9add0-c6d4-4aa4-b6b4-50f10b753ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a259bd6-73b4-4106-a78c-dcb845bc95f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e64d48-3d2b-45b5-826c-61f852a47b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89f7269f-7f2c-4662-b3ab-7ef251f288fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fdd8d8-6e28-4027-ae07-9c07f9988200",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2a73ea-8f46-4420-a574-d815cdb06d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb112fb-99e3-4a19-b749-ac497043d5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4844a534-fbcb-406d-ad2c-67eeb00e0d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd67663a-0b5a-44dd-b218-4577d19104e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a0b099-5d30-4e30-9b99-c1eade844e84",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a31561c-f608-450b-96f4-ba7c496aa5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd22e37f-f9e4-44aa-93d9-e8865042d1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d811ed84-888b-4c67-b925-2ed02d3dc5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0912745a-02a6-4477-b29e-b16bbe1f8527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cac4bc-a6fa-4465-845a-2d1204d48599",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca439b3-0cce-4693-aeb4-4899310864b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df17078c-8d29-48fb-81f0-9c9a99c2f43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ce0c47-87bc-4860-9b79-229f0fe17f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "451c773b-faae-4940-90c6-f9a8038ff768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649a7b9c-a981-4d02-a729-a258213ef33e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36520a5-11a3-40b9-98a8-247de69c0d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1821a5-091d-450b-962c-8145a968038b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a027011-8411-43ae-9b5c-7d5a51ae4247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "716ab30e-9875-423c-a77f-e80c28e0a3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb912b7c-bf9b-48c2-8e1a-4a7aa0f6554b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a8d717-09c1-44e4-9ada-e3a0da085d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5fc0a0-260f-4aae-ac85-9e5aaccdc582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37094ff9-9cdb-42ac-9fcb-6e2776b1392f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27d3e3a3-caec-4169-b89f-fa353adf113d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7205ddf-13c6-4766-9001-f3bf873b23d6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c090578f-bbb2-4858-9b08-a4d7b9b8578a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9acd5b88-bdc4-458e-9f42-ece1ad68ad38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708cde1f-4f7a-4743-a8f4-29a29d2adf4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b40dc6dc-e3f5-436f-8759-0303354530cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830c64ca-adca-4d2d-9a46-9f7dfe4552bd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c87c49-481f-4c1d-814d-6e6eaa4416c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fdcc3e7-17d7-4dde-92b3-4879f66f9783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cbe468-f5c6-4723-b842-0cd45eb95e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c125a8cc-1f02-4716-856d-cd7e6d9fbaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f217f7-eed0-40d8-8a3f-505416c08f8a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07ccf61-432f-4fb4-89f5-14c7578a9a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66bb6274-0919-492b-bd25-a71b364ed6db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b555278d-6132-4cad-b1c8-b9d1ba7bc051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b642f13-486c-4eec-8f76-81dffc4b8b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719e6ef2-a14d-47bd-a519-b4a678356fae",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0783303d-ec9d-4252-8fcf-ed3336b1db11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f20c015-ca1d-4011-ada5-fd7324e70843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12a18be-ef0d-47f0-9d4c-bb667856bedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ffd1d0b-e12f-4e68-9ee7-478fcfffc149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0021aff-8d5a-4550-b0ec-445b2ff017d4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db8e2e9-6711-419c-9954-24493290736e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2e7155-3f9d-41a8-978e-b02b8ff8c2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1066e8ce-70f9-4518-b7ee-ba9f48632071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63fa74db-7302-430e-aacd-0b86b536af64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a308b52e-24e1-4ef2-b41c-f394fb9f883e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923ae109-1d50-4872-ab5b-3f1ee9222d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37fc18b6-1a25-4bcc-94de-ca6f28871999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a9c23c-317e-4d11-8d13-a3662209115d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfb53cc-98dd-4eab-9fbb-911540320ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552c133c-61d3-43a9-b0fb-14db4f036d0c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34eefc9-37a3-4afd-ba9e-4ad13a21a0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0d7c16-4753-45b5-b11b-e66540ef0830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0eae63-b6e1-44dc-a9c3-dc5e4d2e5174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36945eb8-4485-44f3-9831-2ec58849d7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d31ed54-26e6-48ce-8398-e35917f15617",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926b258b-9298-439e-adc0-7d8946d6cf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b68a73-372a-49ad-b13b-172bc5d34190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fbe18f-c701-4473-86bf-fc0ffd10268c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "575875a4-ce10-4368-a748-4af44ff83b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8011168-9e4e-455b-9b6e-6989dc23f82e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b811986-6c04-4dcf-9b02-bc89cbc31e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a987a6-851c-4982-93e6-44fe727c3116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743c97ca-3fdd-44ff-ac98-b503e029a1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af0d0cb0-e808-4095-9960-252cc42fa63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef0ff2c-513e-4616-8138-542fe2196db6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1278351b-09d3-4407-b7f7-df0eea545e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98d9380-6492-4a04-92e8-ecfacfc02437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7891930c-f7e0-472e-8223-34355648d053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3972f3c4-511c-410a-b5a5-539c759311c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf43699-12b1-4b32-a70e-401ddcf86177",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09e74ba-36f1-4227-b6e4-a6e1f663c2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928d5bcb-d730-45d7-b43b-f55371a1307d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab2bcfc-a961-40af-8b6b-83bb1909db5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c75e131e-08f8-4f17-8ba0-9b6a36178819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b7d0e2-64c5-4182-b1e4-91ab142589fb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a523ae5-bcef-4d55-8911-ce78ea2e3e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70b923d-8fa6-4af5-a6ac-6a916f039ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a991482f-695a-4ba0-9cef-6bb56314d29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e338dfc4-fe52-4789-8a31-f3bf339fb98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77999abc-7193-472d-81de-4bca0e4ea73e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212c124b-0a02-4f31-ae6a-51e1e4127664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15eee52c-7641-430e-b0c2-fe94328d4801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0beb81b3-ad7f-46ed-b98e-e6eba7607770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50b2145f-2c62-4292-87f4-3e08a383a651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1b070e-692d-4e8a-a4ed-598940e54300",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a288a6da-2030-43aa-a78c-7faa02fe3736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6067d04a-9604-4675-b612-45053efd36fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d1a619-08dd-42bb-9377-22a5069b6761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3399f4-3eeb-4cb7-a5a4-cc1442115942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f493131e-fce0-494a-8abf-4ac3ebf4e53b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673ab000-f05a-47f2-8910-2dfeb9025f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceafc371-f423-4afe-9fa3-b9c34aa484ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b879d8-8983-474c-9cf9-f71857371452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb064a26-fd1c-463e-85ad-168243488f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b277e7d1-4bec-4114-82e6-9969f6c23471",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131d659f-e77c-4735-955f-bf88a7893318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee1d2e1-b5c3-4373-8b7f-b7466b9a87f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef00c0bc-447b-4aea-a112-fdf77a86a98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0a1303-0b79-41bd-a1c2-001c55913748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40a55f5-4641-4367-b15c-bb83e5539bf6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39150d4b-992f-43d4-a6aa-007ff1dcf4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2056b3-fcbb-44c8-8cc0-17caca2fda6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd5c694-9c22-4970-93a1-e8ee11455c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "db89f866-25cf-49fa-b5ab-4fe1e35d51c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614b2288-0641-4503-9682-43975a36f508",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904f3b53-c217-4c05-bd4c-0a41163a72ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0bab70-cac8-4f47-91de-4da209a16b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246329f1-18ae-4a34-a36f-f3a111f99926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0d2a4c-5789-408b-a98f-dc3bbcc3d8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b372d5da-104d-43be-85c2-506fe08b0889",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88869ceb-ce97-4232-abd9-a45abd14e94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28244b29-bed1-4d3a-b058-7bd54472bc76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8c19cb-4a78-45e1-a218-c08acfc2a4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c586137-b1c5-4989-918f-de88eba246f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7d03ad-03e1-411a-b478-26d1ce1c6c9a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2de1d3-67a6-4b5c-932f-d238570d9ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0167d227-c080-487a-a1bb-d2bbcb438ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748ca140-3990-4d4f-9869-d2717c11bf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5841466-b35c-48cb-ae74-f2d38dfb4eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7731dea5-38cf-47cc-b615-449ad5fd10b1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ca52e1-d62f-484d-9acb-09847a7144f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fca47a7f-08e6-4fb6-9451-5aac30b6075e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d12a83-648e-4236-a084-14358d698316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0de028ac-edec-4850-b528-d71225071422"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b9f67107-e743-409d-b296-25279f49f1ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cec7bad1-ffca-4c66-a864-ae6e06289de8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1e5a02-3660-4dbb-af8c-d281685054af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cf0dd3c-713a-4f24-a8fe-008bef40339b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db24b92c-d905-4bf5-99cd-e40dfd30c980",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bbfc18e-5c49-42ce-ad3c-89ef1d430b3a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f7f47da-1f1d-4c07-b2af-3da6959888e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c78991f-24ea-4230-9c51-84a6389a7eb1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e2ea78a-d25c-49fa-8737-c05f2f21a7bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffc1c2d9-af33-402c-a809-4767572ff920"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a76c7e6-73d3-4b31-aeda-4eab5abcc5ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0feefabf-b062-470a-9e4d-dec35749b844"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d2a69b5b-2f8b-45a5-a3f8-96ade953f71f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ad0e18e-3f5b-42ab-a6df-fb409336b043"
                }
              }
            ]
          },
          {
            "id": "ef928437-30b4-4bed-830e-d76db1468f4f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "960809a4-2fc7-4b23-bd23-60b6cd96a137",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "68f53068-04d7-4e4b-8802-3c25036c0abe",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfb2014-0c4c-49d1-96eb-b2c1283853be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c7a35d7b-481e-4adb-b0e2-02c5982edec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5651a5e-61bf-4588-a197-0f73ad40dc1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5feddf3d-f118-4064-9ac0-f4be09f461ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "397a67ca-ff38-45a7-9ddd-e3ea4bf291db",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "332c1bd2-b7e9-4b36-9cd1-dbfadfb94200",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cda7543e-5be1-4152-bdb8-a03316f86ade"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc12dc91-94f1-4415-a7a0-03ecaa610220",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a079ba21-e388-43d3-8189-ea997eb67055"
                    }
                  }
                ]
              },
              {
                "id": "58e1cac0-9500-40eb-ab49-dd89f102e6d1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58904bc3-010b-4b4d-8217-d0486413d4a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae1b9dd6-e0fa-4e6e-91cc-6ab68fa0638f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "347477ae-f8df-434c-8917-506010ac4967",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0680e92d-62bd-4e2e-b880-36927fde6b91"
                    }
                  }
                ]
              },
              {
                "id": "02eba0c9-06ed-4f7c-ad67-8b957dfbe1a7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "337bca61-1080-4dd9-9c6c-c2b1f1f58111",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37f2245a-25a9-45bb-920f-6c3b7025d492"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a62124c-faec-4441-a1e3-cd0270298c94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6de2ae29-250e-40dc-a02e-ef118e3fd866"
                    }
                  }
                ]
              },
              {
                "id": "170fdbe1-673d-4389-864e-56b9cffd73a8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef13e89e-808e-47a7-b0fb-d67546de3996",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55280b15-8a24-47cb-a8e1-e1c118de5744"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24c0c667-d92a-4fbc-875c-009f4a992a57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8b60d79e-17d9-44ec-a2bb-4044664030b8"
                    }
                  }
                ]
              },
              {
                "id": "7d86bb02-a9bd-4e3a-a3f4-d857286c2ac8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3cc9366-63e7-418e-b3a5-a9774803d5dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0acb298-756e-4bfe-98b8-9a8ba85f6a2c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c29848bf-9b04-4a4e-8144-2f51b61cf421",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "133598c9-a266-438e-b307-e7545aafd5fe"
                    }
                  }
                ]
              },
              {
                "id": "cc46a22d-2420-4694-a54f-784971d09a38",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4188c35c-a089-4e74-a147-01fb4a89f892",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8bf10f65-74be-4719-a31b-dbf3bd7f07a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbbb5a00-9b74-40e2-951a-fdf3dfd04941",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1041752b-519b-4b7e-8d12-622bb7382c34"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bcd8f16a-e86d-4b9d-a474-cfd54ccec3c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1bec3828-d5b4-4bf4-a4e6-5d329b717432"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bb213c64-ff1a-46c3-952e-7831237ceff3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d3dca6d-e4fb-4154-9b9c-d8c2f7a2da2c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a7dada3-b83a-4bf9-af88-553249b15885",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7e07afca-29b4-4c34-ae00-ad33848f79c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "370a007d-abc4-4b5f-b441-1b781891a392",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79cc2d3e-0707-4bf0-978a-1c60fae50585"
            }
          }
        ]
      },
      {
        "id": "44a51050-20ff-44ee-8872-a049975b89a7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0a1ce046-c7fb-4641-988a-dd7044e7c949",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20e8af72-e5f4-4c2a-8400-8979d71fc80a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b507b486-6aa5-4c0a-8514-a44203625f03",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa212e6-5872-4e8c-876e-8e00489c8f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b212a3f-4635-4eac-81aa-eece387e4bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c4134f-e8a5-4c22-96b9-2d373fc76804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8553bd9-55ce-4ccb-861c-ea57fb88df50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b482d31-2f65-4474-ac28-f0875e57896a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543c9ef4-f9e8-47e9-817d-678d265f623c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9eb515-63c7-4248-b24d-3c1286724cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1cbd88-7a2b-4eb9-9967-9d2a74707315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b518f0e5-b822-430f-a705-0543b10221ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07f5b64-0f37-41c8-89ac-29cf39a01645",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5087661-411c-4b75-b35b-3309f15b1163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70779bc-3cd4-4414-bedb-e7efaae2f44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ade450-5bbf-402f-8c01-60c60d3a1993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afd4d584-590e-4829-a3a5-fb546300fa4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2ca097-ab31-47c2-8db3-750839e46fff",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c89552-37de-437d-af07-91b0ccfdd39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f451d3-9e7f-4daf-9120-6354d5f59761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190bc66b-3239-4be1-baea-6a3dd2ea0b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d1f5e8-f441-4ffa-8b21-2afa8d4fe11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c992b9b-150a-4b4f-9adc-6d8fcf8c69fe",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b76a6b6-63e3-469d-9b4e-ebe26922721e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32482cbd-abc2-4837-84f5-23d24648041b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9ec338-2a23-474b-86b2-64eb9e431b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8bbafb6-e7de-40ea-9f25-53356acbf594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44f144b-ad7c-4b53-bc77-97b78fed59a5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1231225d-d7f2-48c3-907d-681dcf6a5a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690b0f2c-82bb-42b1-91da-76ade4f35806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9530f01c-cce4-4480-8eff-d4dfa238b053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f722104-611d-4f53-8d94-4c1cc2e3703a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347bb98b-3c3a-47dd-b01c-e22a756d7f34",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5e80b4-3ae2-44a6-8f35-57f6af26c23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4563cd57-90a9-4710-9c6b-4dc10490fe70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a803a5ed-4e65-4c1d-9629-2f6fd9d48b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1a58ed-7306-4a9b-af19-33899a46d273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48532d2-0c4b-42d6-92b4-05f60b99b696",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5559724-e717-46e9-8294-d425e12e9203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f8d410-c770-4de9-b114-9662a58427a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c6cbb1-dc2e-42d8-8b50-a4cd958bbf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6606587c-af33-49e6-9b03-3677a8d02cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d92099-1699-4699-8e7e-a278b8a1c3ae",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed88b795-0f86-40cd-bbc3-883ea3933065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84eb1856-3c03-4e65-a00d-400e6d1c7977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbc756c-1ac8-4bb6-96ce-b2e472ce3089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c5fa87-379c-454b-81a4-7872f6c86f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e272830-c328-4eff-92a4-00eca39afe38",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4237abb4-369a-410e-8509-dfda3c692e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8b7c81-727f-4e23-8246-e0d9c699872e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9ab688-90e3-47dc-9a60-40d06f8b055b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28bde5df-a188-4c03-b9d5-354eac7d12cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571440dc-f7e9-4726-aa57-09de8fa61327",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b710dc9-4a81-4c72-aeb9-9543d8b01adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9a8799-53dc-445f-99b5-9e5eab1b7fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c1eda3-d4ae-4aa5-91b1-d67dd96b7ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a0620c08-e3fd-4c5d-acba-d2bb2e00f151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c1cc3c-bbc3-427c-b15b-c7e1c1898e2d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702d7963-0944-43ab-9536-2b94edb12223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c562d28-42e8-4d3b-aaf3-3b32c5a93c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3af16df-550a-4a33-8f11-3ffd8f8560d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b54fc5-bf88-43c7-b35b-8a56684b0a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76e7d4a-7667-4082-a08d-7b490d18f090",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81da7c3-2fe5-47f9-927c-41279a652eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8490c2ea-68ac-4d43-8231-2d735de2a438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1db0b6-1fb1-43a6-a233-9139e4a1fa91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aab398bb-9f4c-4434-9107-8c72919e83a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefb5bbf-b8d2-4a81-9534-7f83e045e5a4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcebfb9-a867-4d47-b62a-37202c0ce4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07bbf600-e0da-4915-8311-e0fae35b37ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfc0823-0c27-45ac-b734-f774dd2a669a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef51d5ac-a57e-4038-8281-d42f40bda4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc46c9a-ef64-458c-89fc-1c10d0fe48b9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ef6abe-2e83-438a-b068-1bc582222c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b388fff-f6bf-4bc5-a65f-1913c29eaa17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3ecb24-f07b-4e84-86a0-447df00e3ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eba2a16-fd8b-4a6e-b1df-08212f0d959f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5656358d-0cfc-4764-91e2-21fb04a5f001",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cb8e69-2ad2-4b94-8e99-0e6b554ce070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35774203-99c9-4054-937f-4dd88b891232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44deec55-af76-404f-b49f-5276cbb09871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f31fce-5484-4df6-9365-e2d193a8f885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3e1f32-996f-44ca-bb6f-894381e8a850",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fb1c5c-80db-4af0-9635-3f2c07706348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1e54d8-50bc-493f-a295-d6f605d0de91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9654d18-9078-474b-a098-8323d8f801f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "61d42620-d09f-4425-806a-1612f4525fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e11736-6abc-4866-95a9-8ceadfb74654",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50f3433-b7a3-4017-a2de-eca97277fb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16698f44-e508-4d00-9b24-a6103cecce58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c030bdd-96ef-4406-a3aa-4dc8fcfb0a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eabd988-d9ca-4384-9903-f6cde7636ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cae95f-cce6-4b2c-a3ec-5075a4598bfe",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cfb2f2-81e8-4c66-8a2c-dba25d6091c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645e8db2-a44a-4e2d-9105-85af557bda04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d916223a-beef-4c79-b991-bf7c56b8a85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c94f0882-c115-4a3d-bf6e-a0a4f91edabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0d9433-e9e7-48ad-a0df-f2b53008c9b6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a2e5db-3f06-4d73-8c80-50dbc072d711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3350184-f2dc-4bba-800a-415428af60b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a86a675-a87c-4460-9240-c578aec3f7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50c62805-fc5b-472a-9ac7-0b4bc16b0641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5878e1-8450-4cc0-956b-71c4341f3ea6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f3a7b3-5ecb-4790-af2c-b780273c2631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1aed3c-50c1-4927-8aa7-f9f78c3de071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594b70f5-ac06-41f2-9c85-5d8b6a677a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e4f297-3c03-457a-8f32-aba4df8311ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3481541-f951-4a30-b815-666dd694634e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e333a3d2-c527-4b86-b4db-93087b9d328b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619e5a6c-3913-4591-923f-3be81540c919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb28f92b-364f-4cef-924d-498fa6e62f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25cf6040-7808-4deb-85b0-68c4b791c655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642e1932-c731-4645-b7c8-34f20e849c9a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9bba83-31ce-4aa1-9d2e-2633b0c43b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aead323-da4c-408d-bbdd-d78f85ff4c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0769cd5-4b29-455d-86a6-8b548ff6bc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30a7203a-9649-4aa5-a0e1-05fa040e0d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310065ac-731f-426f-92cf-c270a2c5285f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb21dfc-dc61-4bbf-81d7-cd0b003b33eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8d2941-4cfb-4cbe-8452-f1c47f50147f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5267e32-1a83-4385-8dde-2d519246cfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32db1aea-1d35-4aee-9132-59a15b395754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e84a3a7-d373-4e2a-bf5d-4d5cc65487d0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699d7225-7713-4c27-a6f7-0c79052147a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50730f6-687e-41ef-986c-75a2eca40fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2497c673-2f3e-437b-8c22-57c97c952c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b28d66-e780-42b3-8c98-04191b42ab0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5af4068-7d36-4764-97ac-6ba6ce1f6b8c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19347c33-097e-4696-9497-73aa991ae5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3732ae3e-eb1c-4dd8-8334-5a605be50965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e465d1-f21e-4932-86f1-3383f09fb5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6772787-79dd-4bab-87e1-9698af2bdbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a021ac5-3609-4590-ac5a-09d7a6e82bf5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c52edcc-bb30-4306-aae5-3d7fc6966992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63748196-b606-4a28-950e-17d91a23e17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a0460e-ef06-40bf-b4b6-485bf8ccd5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "506076f4-04e2-403c-b3b7-8d085f65b1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cb82c7-f17b-40bd-9e16-a73b88fdb926",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfaace2-c98d-4c24-a53f-0d006747f265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337f800c-4427-4631-a662-fdb77d2c9833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f483c5-5aca-4d82-8a5d-51e125b543d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "140c1a48-bbb1-4fde-8def-8d43f4cefaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56175e16-0167-4e8c-81f4-b216dd0b8766",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0476bf40-105c-46e8-ab92-10343b1b195f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c6609c-9cab-4e2b-b481-0fa7cf0bfc60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb94b49-8587-4146-b054-7ae3c5d4bc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e05425-afa4-431e-9130-47844432380c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25e700b-3d8d-4142-8321-979858c1bb72",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dca14cb-16c3-4209-a5dd-c315f2803739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a551046-e1d8-4a50-9481-7e5fff7982e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0cacbb-fa50-41fe-b954-a262800eaca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c43808c2-5795-4595-b6eb-ffadb2ba8bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78da8336-cfe3-4557-a8bc-0a393d60f472",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9f8adc-ef8a-42f0-9bdb-5b54caaa2623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df5151a-924a-4b55-8511-dc18f0394118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa4e217-10f5-4382-80ff-037d2553229c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48544144-f2ed-4298-bdff-ef9384e03678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf63d0f6-14e8-460e-9bdd-02c8fac9a8d7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbede41-5ddb-45c0-af05-518366635165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7380d907-0d16-4460-8cbd-0ad7adf33cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af61bd68-63aa-4551-a36a-6e1aec295353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b476189b-ee28-44d9-a2d8-02c8871b3192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2577d712-8c4b-4a84-b13d-a49a45b6f50d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574ed9bb-c238-4934-a510-a542bf670c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e828f683-bfb4-4ecb-afaa-cba52f5f91f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a5baad-e4f9-4106-887e-ab7f6abaccc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "199205fb-d81b-4a56-b4d0-e5249b9524f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7705ce-3234-413d-ab79-ffa0a984325f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9ce2b4-f531-46b6-88fe-eea18a02106b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fbf1d27-352e-4ccf-98ac-469f7f16290c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a39209-c59f-467e-93b0-3af68bbd6c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9db1425-2f4c-4fb1-8abd-64b40bb10639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03c9b22-ee24-4032-b60a-b09e6f01f413",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00f4e92-ab82-47c9-a8a6-b860df2f4c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daaaab58-29f0-4087-a672-badb258a4750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d24765-171a-475e-915e-9d70c8927e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25dca518-ec2e-48e4-b7ee-4c79e6330800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b927ae-bbc9-40cb-8e05-edac4d2d0b7d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c7af59-8d0c-4e56-a253-0b43d84be5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fabe6e1-afcd-4cd6-a521-9b009acdddb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089b9a55-d047-4756-b7af-2f895711e0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3f8b5e-23a7-4a08-a6d4-e1ad1a0491f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fa3bdc-b1e5-438f-9587-04eea19a3ee3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7913fe58-0804-4554-9429-f24fe9dbd50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9423ca8f-9b12-46a2-bc4e-ebbb05789865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea0d65c-c8d1-4911-ab40-cc12be7d1222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceae93a3-1e38-4d55-97ab-3607bc0aab87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a44bb649-8093-4dca-bc96-6234ab2ec207",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9f7afb7-5d14-441a-81e3-f3b544d22cf0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1ae20d-ebb0-4209-9f91-e2fdc34ecb54",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "eebb1130-79ed-4406-9236-0b3cef9af604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18911e2-eba8-44ab-af61-a07aee361016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52cdbcf1-0ce1-4541-8bb6-01701442e24b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7d01dbd-ee79-4e37-b538-8c75cb18632a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d48f6544-ca74-494d-81d2-dd6d07a93271"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7bbce43-10aa-4ba1-b58a-3dbaac476209",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b50369be-0aeb-4b4a-b2c1-1d87b3b44fba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc012da4-2d92-47ae-b347-cbc4c3f8b2a2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9c53c1f5-ab18-40f5-a068-949fbbb51d43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88c67dae-ac4a-493c-98e4-1d03eebe7bde",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06689dcd-f86e-4413-9651-0c7b522d7881"
            }
          }
        ]
      },
      {
        "id": "07290c4a-c569-4571-94f8-4a1f5158f051",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4264b6fe-f8d4-4dd9-a35d-1ca7f0b67cec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e1a02fd-58c8-4126-948a-5c473d2cc7f1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b0a18759-be57-4e82-a74f-7cfc62a5c0e1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48c0933-6936-45bb-966e-8b1326aedea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299cb43a-6f0c-486d-81de-1365678ff553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d805e0-e4a9-498a-bd48-960195c6881f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f299e744-f85b-46ba-a4f4-c412b4f2fa25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb5dad4-1bfc-4b21-bf24-355793655c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986d058d-f977-4fb9-a420-ce3b1b9c333a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be82eb8-cd71-4fb4-9792-6945a4c4e6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920ad8c1-3db9-422e-bd5c-a5d27cd42772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d614385-9e6c-4bb1-8780-c1c3d998ff1e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80943e6d-0cc5-4e18-9d67-f38238349cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d315a1-36a2-4fcc-84cb-921256544b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61200dcd-5a9f-4ab3-ab89-38fd1325d2f8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdaf66bf-d203-423f-9170-6e9941995a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78f582e-1d61-4ecb-9324-5b28df629fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749a6eef-f51b-4a92-a725-71770c262e3c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45770ac4-61ba-41da-b97a-a8616c7cf672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04008f06-087a-4a99-9642-4821b673a93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c565b7-e83f-4580-b848-cdc9ddf12779",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872039c9-faac-4030-a3a4-06df39ba5781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88445086-c563-4ad9-97a4-68efa4a2b7ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e8a927-5566-45e8-9857-7cf5b7c88f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff015b3-2c19-483a-853b-fc24db616fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0227578-0f1b-4104-9da2-53f003b1fe64",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4829debd-af8e-44c0-9ab4-f5285133f551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb02fe48-f778-454b-bf10-965c3835c018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fabc7db-600f-488b-8913-80dd5ced6d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce0acca-89ed-466a-9581-8acfe80c85ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8ef298-6912-473d-9fcd-189c6a450cf1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2298788d-c446-4b7b-bfc7-81bf346c1c7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24aceacc-e5f0-4eed-a45b-2aca6ce30172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c4e473-a9a6-4f6b-9f9b-1b51ed72c6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb99464-fe4d-4f20-889d-1a239f9274f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863f47e4-2be7-4bd9-8b3d-097e1f83c261",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1067def0-0ebf-4ef4-a124-1c25e49e89e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "897f1132-a998-452c-9229-46decd5e16f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7cf347-c7ba-4c1c-b349-f86a4fadc12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a93b867-52b7-4f34-a368-1041905a6be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ab5ffc-1fdc-4e95-9866-c17948898eb7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f9aeb0-1a44-4dee-8eb9-c62e3c0e598f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184ff080-a2d1-4b67-bcb8-d2e08e680bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d0c873-c82c-4357-9c82-c81a48311583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dcff32b-1b00-4adf-ab80-0cbe9ef5775e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dc74c6-f967-4912-a8a8-6b316e3ed282",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3cfba21-99d7-4858-9c83-b6f7b22a3cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c7995e-6001-46d1-a769-4eb1834a67b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9fa4e5-8a08-4389-9d91-84c9eceb6942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053a29fe-6011-41a8-8e25-325e113cd981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7acd93-dae3-43b7-8bc4-a2816d9edcb5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f06dac3-f50d-4197-af2f-48ccee37d651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d1bf413-71dc-49a8-919f-6141c3ccc300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a939a84-e725-46e0-8e8c-1f2567c5cccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084d744d-aa01-4c27-906e-103559e0c573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ec6950-8410-44fd-85eb-de610d65355b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f706ffd-51d9-42cf-b5f2-ab9ab18f16cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31f93404-7a8d-457e-90f9-e8d16d1af85b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd3b7f4-a42b-43b4-9fbb-0018af50a3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa366cb6-fcfc-47da-8eb3-562d61fbe9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b96f23-e4d2-4653-b58f-7cb896d73b57",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c523391e-3671-46c3-9950-b7b272687295",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70319dad-fb81-4a84-992d-913cbe188304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2807ea3d-8678-49e6-9507-b298c8e4be92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf4bf02-badf-48d0-a7e2-9dda25b442f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d34f2c1-7b03-4a42-b0a3-afd6874195e6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b3b926-fdb1-4734-8d82-8653d9404a20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fc4953a-2d22-4bbe-8f4a-e4eab7808b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c765f5f-4df9-4199-ad05-9a451e7f138e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecaca75f-7878-4484-9819-1f88b434862e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079cf385-43c6-4a8d-ae60-74d0e2a5fd23",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0e7ecd-79e6-4a84-acc3-3b8598d39ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f6cce0-d624-4dde-bac5-4a7362d19a7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2130f46-4e9e-4544-b561-28dadeefbf3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d183a3-75bc-49a5-88c2-7c9ea41f04f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db84dfc8-fee9-4d60-98d3-8bc07fd6fa74",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d1689d-da1e-40a6-bba9-a76aae347019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141c7442-bb5f-43e2-b5db-0254cab779f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb5a569-e5a3-4e9d-ba4e-6de6fc21ca28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da2f84a-8c9b-48e3-b309-77c5e8941743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7aaece8-fd2a-4c8c-b50e-789babdc1c93",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8710de99-22f3-4870-8640-11d5988be898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17009158-74dc-4e45-a4e5-e6c679320e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78bae56-e90a-4784-97b5-acc15a9613d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e164b59b-f690-4d27-a013-b7496771c6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942b0d2d-5ca3-48c4-9bc5-1e2108061fbc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73de3e27-755b-4aed-bd74-d80c0e05c87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a9d644-c490-46c0-be70-65b8a4771514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fb4f02-b929-4587-a219-e05782f3de5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639f5046-d76a-4fbd-bef5-8a569fb901c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac87eb0-fbc1-404d-bd62-e15f12881e5c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841f5d72-1ed8-4cb3-8bfd-59db022113b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7134351b-6b1c-42da-ac49-0da9536ef008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5127abdc-545b-4fbe-a97d-d33f4e26829b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26f4210-e8c1-495a-a3e5-769315222f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34c3971-ccef-4c46-bb7b-00391c0519d2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774c0e2d-68eb-4b38-9906-7049ee45d76e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edbd62a-9489-4cbd-8054-11ec1e97b477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f50247a-2bbe-4882-bab7-e33573b54f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0de050-b317-47d2-8f64-23a24ed515f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cb624f-f8fb-4dca-a439-9a96d6102778",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341edfc0-1b07-43ef-9712-3a5a0912669d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941cd208-d77b-47d5-8f15-03a16c9873d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e8de4e-99ff-4ca0-85ee-55f21fe854b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20da1f65-85d6-4e29-a969-ec9d4f8f697e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da00c8f-9bcd-4a9f-a93b-1a4dc5d65fcc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b657bb98-9896-404a-bc97-ab0972ee8eca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ac8e64a-01b3-4ad9-a36b-2178215f5bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5e6215-7eee-4a35-9f51-ae4ad7732ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e992b782-e934-40e8-96b8-59f365de0f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d069a76-584b-409a-8c99-f84340613919",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a033cd1d-5454-4c8d-bf38-c1c0fd7c8a51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc47ab9b-ba31-448f-bb13-49f45b14289f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8545dece-6d6a-47e9-980c-a328993a2aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc21a671-124e-4c7f-877a-acaef843e811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b50ec14-2822-4972-8b1d-74a22f0f1644",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74f0536-12b6-4b81-a184-737f1b3ade31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52c11565-1857-401b-9520-ed396e607a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa3cca1-8bd7-4d58-b601-0b9fa3188f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7dc934-f782-42c5-a9fb-075059263b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67152c6b-14db-4d71-af5a-16defe5db89e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77513f8b-3cbc-44be-8bcd-28a941d0f5aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5aa815c-e3ed-413c-86bf-3c9294ea09ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba78ce3-7ac4-44ed-9f19-1fe5cdb4f83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58bdaa1e-4d49-42c3-80cd-f3c5a3671930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca59776-5a1a-43e2-b771-76fabfa2c1b5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fbe4d8-eb9c-4dfe-955b-d97442bd319f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d7a37b1-6840-407f-a27c-e05a2e6637bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a88f9f-0b19-443b-9817-e4dbef73ce81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d69e08f-3f6e-456f-8d52-a1ac69fbeb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7dd38d-2756-44b8-9e58-9cc07f2714cb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7a33f2-2d0a-4f01-a7b7-b3a918fefdca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acdaa073-8822-486b-bbb6-4d13ca9fef58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67dc6a26-409f-42b2-959f-aa5e1a316058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61ddb83-18ba-4483-8080-2f6e13788b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e20d86-f869-4e26-964e-4091ece8591b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aff7a0e-d86a-4506-848c-50feb1f1cfac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a682f54-586f-4189-bc22-2583dcb4ca37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22afcfc-77d1-444f-89a5-752f25155a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d2855e-149d-49dd-a564-d6ce2a804193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98c3112-9524-4a11-ad3a-cff22fa083fa",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f2474b-31b6-48bd-a9cc-c85363697358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c806a96d-3ad8-47fb-9d00-72b07ba9417d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f05285-692e-4954-b238-d98d9c357f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b473c5d0-09eb-49d6-80ab-17c9c24758ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c29bcc2-fed4-4a9e-8469-6b78cf10b4fa",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fea9cd9-60f0-4be0-8f4b-aba11b904926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f01e367-dc52-450d-aab7-0706b132d335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cacc60-9140-4dd1-b5af-747396165000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99d3ed2-6873-4756-be87-6da491fadd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6236f083-e5ec-43a2-af2c-59cbb461b3df",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe939497-fc8e-4508-b8c0-58fa5e76c1ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "828617a0-0c44-446d-a815-fcb1f7767de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b917cb6b-4af2-43f7-86b0-31e2ef62d8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73ba703-df9c-41e8-9220-33effe4a5a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94756b9-f8c8-408a-bdfe-33da776a87a6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965ce37a-4f94-4ad3-90cc-59230f46cd66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5514800a-708a-4928-820c-f0aa26a3d0f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "181c214c-e29a-4181-bf88-9e9dfd8819ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3158579-4cde-4cd7-8670-5b42388e5413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de7117f-7258-401b-a497-65760686bfc1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3436d96e-8d50-4c4b-95c3-cf86c513764f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6139ef8-fb3e-4edd-a3c8-17d7b48de72f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee19417e-e4be-400c-8a5b-fb2fa5f6eda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46265538-a3ce-40bb-839b-2b8a89dde243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56a911a-649a-4d43-9892-9d97c67aa33d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f40db0-5b38-4ae9-a7bf-28eb9014498f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59b68e5-efec-4504-a154-b7e2308c6496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286b0a63-a906-4437-a2bc-0004f766230b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e87d3f4-aae3-4d47-9679-24d9ac5736f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53055045-e6d9-4117-b8ff-36f2693b419b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b12db2d-715b-44d0-a7ca-6034bedfabb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b393b70c-964e-444f-868c-c80aa49ec5b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b72cd8c-3eac-4f6b-959a-1deb2c6be523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79f2fac-5159-4e2c-a234-523ca9b98d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fd754d-5327-4570-badc-90ee6e5b9a21",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8383065-5734-427d-acfc-e065951861a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb4aeab-114e-4f5d-9bb4-6720db9aa92f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4054c9ae-09fd-482b-8a36-42fbb9d0d224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83141e6d-fe9d-4571-aa0b-ef831a7f5408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce41af9-7cb0-42f8-a726-cb83a92c0de8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a64896-f419-42f6-ab99-aa4a04cbda4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff742e8-262d-4b19-acf2-c468d839a5d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a98c5b-f372-45b3-87d1-78b53212118b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf52d79e-04ac-45a7-b3c1-f2199014f0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb84d299-ab08-4d3a-97e3-658470a4f1d9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856663cd-783c-4e74-894b-42f493ae8e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a834dcb2-3eed-45c1-a731-01f7ab72a13e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af74fbd1-f421-4d25-864e-4f6fded08dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da1833c-b500-4d8d-b18e-37f97aeaa1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfe1004-805a-40b4-91d7-a75fa3e2ccc6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6c17e9-c884-46cf-871e-0bb1b7248734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d11aa4e-52f1-4338-97c3-45f3d8be344d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5892763-68b4-4d76-be36-1b6ea7b396c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a05ae7-afc4-4a6b-b791-c3e6d7aada9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4d85a0-8016-4b34-b631-74cc6580dca5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc35530-db69-4120-af68-0c4c0e6d7351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ff2cbb-97a6-42a1-8c15-30b2931384eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54002de-bf93-464d-959d-8ff342b77a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27a822f-75ee-4c6b-8fc2-1429e41c2770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18b6c5d-27b4-4735-9e8f-50666057593f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e830f6ea-2de8-4ba5-b2f6-2e631bdfc832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d92fe29-b987-4462-8c13-9ef060deed50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd6853c-27dd-4e88-aef1-d529cd99a172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e71683e-ddca-4195-b074-9df4736567b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1deef4f2-b414-479e-8010-20331946315d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1ace2d-1f18-4746-824b-57749dd1335f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ba4eb1-8de6-4065-a413-ac8cc31ee2a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd9ce19-7d0e-4620-bc58-732097c4df2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9bdb365-b875-41cc-b6d2-602b5f354c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6a20a2-621a-40e5-a5d4-3955a5288764",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4932c0ff-f021-48cb-bec2-8adda67f27f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84a4141-545b-4b9d-8c3f-898705c1ed55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fefbad4-449b-45d1-8c06-1b6d93cdd6f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14d242a-2bbf-45dd-bae8-c9040b924dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e36c946-acce-4371-9684-72a00b9b43d3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba12250-e6eb-4e91-b4d0-fc5cf8091397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a37b2e7-125f-4962-ba8e-b3ec0f3ee89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aebe3ed-30a1-4dec-977a-9ee77bbd0016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58225cf2-eba3-41f2-b78d-348c23573dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06b5c61-c1ba-4460-a32d-36eaf77df01c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b0c0bf-389d-4d38-8c9a-2055884e3634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728cde3d-48cb-4572-a59f-97a062eb32b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf5bb63-911c-41f8-bf90-ca4591065027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8a1398-7a53-498f-89c7-7677a11918e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9170e524-13d6-43ca-a748-c8bb2973c0f7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5cfdac-7202-4620-8806-fa7492f7716b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9186b26a-9392-430b-b196-5adc1c5e260f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0eee6f-7464-4c8c-800c-d016f07dbd13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9370b96-8aed-4a51-9398-fcd020165e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7598ec61-eb1d-4230-9df1-0e3b5026cd59",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1f54d4-d7d1-4b4b-818d-05f55d158122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63334e2a-243c-4bb4-af94-09ef483a93de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2abce7d-536c-4498-bebb-4221c5e415bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f150b57-cf91-459c-a80b-06f240f3030d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b27c604-34fa-4b8a-b517-67317602c25f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5e8e84-7f94-41ac-82d5-348954d7e534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "defe97ec-c1b0-4f1b-9203-2074e0395fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5e3fd8-227e-4e39-a5b0-894f908bc419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0019298d-fb3c-46ab-bb5e-dfedfe445f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba8e4df-6ea1-491e-89f1-24ad8b726965",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c904f2-3af5-49d5-b6db-305aa62b2875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946be29d-d2c7-4e4a-8fa4-1bab6ceb6a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2590f7-2589-4356-89f0-3ab1d582faa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4bf158-ee59-402b-8496-6b9f652b1df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffc3c20-5ad3-4a38-861d-5e6bf993bfb0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6760f0df-959e-4a8c-b136-f8b4235cd600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a635a9bf-2ea6-42d1-943e-979f64b7ee47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7867ec9b-1175-479a-827d-0722e1602cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbdcbb9a-7a84-4bc4-8042-5addb76f81d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01639fd8-f1b3-44ce-8079-0b73b341b4e4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdae895-eb2e-419c-a715-13569bc1150c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb7e524-70a5-45ab-9951-27d98a000c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ced3fb6-11b3-4f0c-bc69-d8ce247efb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af250986-490b-43e8-9d98-6cc8a6e820ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048bbeb0-6fdb-4a06-9b58-bc4ea802ea28",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29670ac-e5c3-40ce-a98d-dfc17933cac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67174c0d-c606-4e21-9971-9ce5f0f715be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7bf1a8-b60f-48e3-8220-aeee147b716e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fce1fba-511d-4e6b-9916-2604f13dd14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400517d5-b715-41de-b90c-0a94409434de",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e7b362-8ad1-4aa5-8eaa-387b53217e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b561130-c86c-4e8b-89e5-c8178b523b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f910f6-383a-471c-95c6-6173aff7a46b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc7f2ec-adb8-4cf4-be3a-8b16bda13679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fece855b-94b5-4cd9-bbda-fc5f64cb68cd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebe60e3-2192-4bbb-8046-cb44eca67620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bafac5f-7126-4dce-b721-9346a884cb17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477c73bf-8ae2-4cb6-b4cf-c95537e1845f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85feb4a1-4b50-4562-bb2c-96b7fba538b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09edaeed-77bf-495e-9f7c-cf6d26520cd9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589522f8-9b5f-4ec2-8285-f45c3db508e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "924c5c5d-a373-4b60-a8f0-11e53f70ed22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2059a6d5-2213-4455-bbb5-b959f986d451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0e10ed-07c4-4c49-b91f-2fe30372f88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6350dd-ab54-45dd-9194-3ac94ee648b1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19409b5a-9015-4d64-a09c-dda4543a233e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb81fd1-2e19-4a88-b4b9-0128ae783051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286808d5-4b1f-422f-863d-27ee15021fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb26be1-a85a-47c2-9ba7-8dfad24de80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fe46ca-a153-4c4a-8f11-195690b49b0c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65ab339-1148-4559-8d4a-596faa6f412c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d742fd-1fc1-4da8-8b25-135e7007d3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3425a6c-1a58-460c-a962-6cfdf122a4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a642dfc0-ccbc-41a1-af42-218021558f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641a0c94-578f-47e3-b3b6-7ecb57df5891",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632646ca-3b8d-43ec-93ff-1e62eff83623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a58a66-159a-4bcb-956c-ac0646d423c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0149bf-23a3-427e-9785-57d3ff969514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab77633d-f4a1-40ca-aed1-0b196091f910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9deea4e6-4caa-4275-8982-731ccda5c7d1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e663d72d-ab92-4ef9-b51e-e7efc71b0200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ae552a-9c90-4017-beed-7c0fb9d07caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d5fd6a-c7d4-4ee5-9d88-e9131089af24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a3f103-1754-41b7-98ff-d1200e0b9f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54804fd-babe-4d87-a680-bf68905cc269",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a3164f-9b56-4cd3-bb21-f2a6969adcfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06164f9-942c-46d6-bfd1-5becd260441e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be1291d-7313-475f-9c35-4aca4e8ba8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a1c04e-7377-4997-8c1b-30c0580593c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15fb90c-c7f5-48e1-88b7-cbd19d0e2dda",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c949925-1c4a-44d8-b326-d67201a77d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa36c0e0-4ea9-46fe-a4f6-1f9c4d2d6edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ec9c61-1abe-445c-bf91-ac37f2766a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486b8a8c-4449-4cd5-9631-40ca110e79d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a700bc-3def-48fb-9e6d-05806066b99d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f240cac3-8d38-4ce1-b4d8-d5ae9f6d2436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de7e8f27-5ae2-49c0-a711-781408d2c7db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46547c26-4de4-4b51-bc11-fa8db4792083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7599004-a926-40fb-b639-41571990d3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a299b10-5b7a-41d8-bc29-2fb442929350",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3a8787-2300-431c-96cf-f809b7eaee82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "383222ea-9e50-4ca7-971a-7d886a5a9834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd476ce3-430b-467e-9acc-9344ba31ddd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b195559e-aab1-432e-85aa-0bc6f41b087c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bda83e-f43c-4832-badd-cd0f7ff42488",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e74dd7-4b18-4367-89b5-14d72ff753c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a3b054a-c290-4bad-8927-f4c70ea13f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9e2279-7512-4848-afb3-caa4896f2255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f3732c-ec58-4f79-9a66-b167c79167ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee11a68-82cf-4c9b-b652-d36d0c76b814",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f010f4f0-673c-4d8c-b7b5-d1f794379112",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bdf05a8-2b78-4727-ba19-e6cf55b6bea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7539a0d-5735-4744-afb8-a5e9d7e9764a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281ab4ba-bd9d-4816-8166-d2f979eba176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baab3ecd-e3ff-475c-9d6f-4f3da73388fa",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77857edc-5662-4553-82a8-6dbe5aeaf1f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e185b1ee-86b6-42fe-9894-7fd7b35e6ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d06177-3d7e-44ed-a7d2-8fbf0eeedb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c0f595-5dc7-4644-a98c-6649c8bd7e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d05a93-9da1-4070-9a28-0a8bd5d70f15",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd13b31-cf09-4728-9229-4fc5b3bb4f70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "812e3788-fe9d-4c5c-9645-35ae512b006e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5fad45-c435-42b1-ac11-b3ee5bd42cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fbf4c17-3a5f-4126-b436-cacfcdf57fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca3424e-dc64-4301-8960-53c83b946ae6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8841e29-8f8f-465d-a5f3-83370c273d1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdc8b6fe-4f9c-472e-a8d1-59567f895e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ca0dd6-7202-48ea-b015-05d84d6fd5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c957561-da14-4b7a-bf0a-8c1ed1d108fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69470524-1754-409d-8705-61056fb813d3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4a590e-89c4-4f69-bfde-6da5d30fe6d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4bccd1c-416d-4a05-99ef-a89af8f7bb15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428a82d8-8338-45a4-bcb3-591e3ab9c281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c933b0-5e62-42c4-9c86-d457c4b0428d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca0d090-bbbe-4672-ae45-7fed92aec703",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8446acee-fb4a-4cc4-86ac-728f52d189ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cfbeaaf-9800-4d67-b4ef-1919e08c2c2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a83c95-d0df-48d3-b46a-264ba43073ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea88875-0e53-4b98-beeb-6c52263279d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a08383b-3b4b-4f24-8ffb-8d1320d688c5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883d422e-853c-4ebe-bd60-b80b514b8d76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b25c7b0-e730-419b-8892-b2c60d8bb88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bc8796-ff26-4f7f-949f-0ea77eb881ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0ae13e-d33c-48b4-bfba-a6df2fb6b600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d0cb56-2aa7-4ee0-9185-5dad96996306",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb000417-a142-4800-a7d8-c204f025410a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1f87da4-fa3b-41b9-b901-f152c6845c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18de3f6d-ec51-488d-a03e-a4dc0d0ba512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88bdbb22-6a2b-471b-91aa-eef3839ff375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27a9f8a-1e0f-474f-a833-8825bd723e76",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb53c43-1a9c-451e-b6f0-54f19f125be5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dfb5fee-46cc-4d59-ae3d-1a449b61d314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b000d74-cca4-4ecf-b845-86ac13b1438f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c35c865-19f3-4440-86b3-0cb1b6895aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06793cf-1ae4-4468-b6e7-aa3488c3710b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f97a4b8-118c-4876-aae5-53c09987fc73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6610bc21-c390-4a5f-8d7e-efa9c08c3d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eede8b1-a1ff-453d-bffb-6fec0549789a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74d075f-75ad-465e-95c6-bf9ca3cf2bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55566898-d06f-4ff2-806f-b4b9d4e18439",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebbc132-cad7-43d0-8382-a19c96768d3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a34ff01-e9c3-4868-8a42-888f33a12221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa41cd2-9543-486a-a6f9-66fab011899d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b6becd-d3d1-4ce1-bd52-f89f2c783fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55417eb4-f495-40b2-bb4b-06b78dc43eea",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a1b1e7-758f-4166-bd3d-65b0d2d924ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47628ed8-9e51-4263-88f1-5b404b904ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7282bb-ab45-4660-8b41-eb0a83b94494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96decae-370b-45c1-a6b8-33f9b04439f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ae9149-e86b-4fc7-a49b-56435753e5fc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542f383f-fa15-48d3-a0a1-0523622aea4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6a2af9d-51e3-4916-9788-cc3d5602fc44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffad137-be9e-4514-89a2-e31a4a5f541f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d372927e-21a2-4845-ac67-5e024bbff20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd3a247-8f5d-454c-867a-ded6d75ec354",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce491b18-8a9f-4501-9595-595dfa4f8b17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09ee68c0-2c30-4b97-99ee-4d0ffb8da0af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bfdea7-ae0e-4d47-9122-e39a5148ab91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb63756b-3681-4f17-a272-25d9ba4774f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7634e35f-c220-4f7d-bee2-b1fb56737d73",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a998b92c-b795-45fc-9860-cc92acfab414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2657863-1cf1-41e6-91fa-8ba0b8bfe900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da281d6c-bc33-49dd-8e3f-4fe531957bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2daeaab-5739-4a19-8e3f-88096b567988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7655128-9051-47e1-ac06-6a62cc1d926d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35788025-0541-4ccd-ab9f-29a91f13eba1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13701b13-1218-4b37-aeb2-9d717e6b8a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4bb193-571b-4b36-8b10-67d396745bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a467fb3-0286-4cee-94bf-449fc6653966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b35502-c1c2-450f-956f-c2f653030b5c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3fd3f0-d30d-420d-9cf8-5f7ce213d160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bacc1339-205f-4eb5-9c24-ba536caa7f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a92f6e3-5241-4a6b-bbaf-9c903d83a3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4352bf6-c6e6-4f9b-8083-6939e00ca36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c094297b-dc70-4746-9dfe-6f5a8a6a076a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0678f2dc-8c79-46ae-b65d-adefb9789132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e867c9e0-0247-48e8-8a4c-86180f45dcaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a2c14e-b9b1-4db8-b58d-2e7498baa64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ce045e-c1f8-4de0-83e8-15267e68914f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffec6ae1-726e-4664-a6b5-0603730bd448",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe17b04-dbfb-428b-9727-9961f03aa2b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efd5ab31-2206-42d3-b282-d9af167e1943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41202c98-28b3-429a-bfd6-9b347e75284a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ce4425-7af9-411c-999a-2ad5928a8af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03600ad5-acff-4321-a478-849f9ee2d526",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8f4a2c-a439-42cb-b767-d9ab3a8f5b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a929c788-fc80-488c-80cd-f0ac617eae1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4ca421-c8a8-42b3-89d1-385d51969fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e62cac28-99fa-4bb9-84c1-ff4479acc58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19cfebe-1ac0-48c3-a1c7-2fbc33237c77",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26775fc0-9a8e-4d7a-b07e-fa0699ba6d56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "308c0a90-ad8a-47bd-b563-9d1118735112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ef44a3-fad9-48c3-8a84-2daeca14722c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7f1a1e-18ae-4e07-86d0-ea776160becb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a528a9-5db7-46e2-a132-8eabd271e85a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11420e39-b0b6-4f63-9605-72b4e374c3b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ff442d8-d893-4ee7-a6c2-627bea2066e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587c7663-3aeb-4788-a448-fe96697e8c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454535fb-b97b-48f3-a977-17b5edec97d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733a7111-b546-4a41-8d0d-a83a03438ce3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c62d57-70c3-4ca7-a77b-26641076f7ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1f634b7-c862-40cd-8868-fd7cdce95c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f26d4a-b01d-4e67-ae41-2d9d8d8b197b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea95165-3731-4e2c-b47a-41d32db69254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859eb693-07dc-4f0d-9944-008b71794d0b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffdbf39-0367-4e1e-b9ba-086e7a82c385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a51eeada-8c34-47ae-93d8-e4b117281a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e600f4c4-5605-49dc-8e45-422fe0803042",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5c9722-3a41-4fad-a824-4c1e3cf23fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa53826d-c74b-4b3b-a868-952b7d00a45a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcb68e2-3c45-4894-ada6-550f7dec625c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "586e7702-fdbd-4f38-a0d6-451add860ba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33844304-6dec-4471-a8ee-638f15c2f58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7931621e-59bd-4dcf-aa9d-d818078b1302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cf43b2-bea5-4ba8-9f8a-92d3a6a2f655",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0850a611-b8a9-4b3a-b922-5b4306bcdf7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d700ccc-5df4-465a-9c14-6b9d3a050f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "245aaaf4-f80a-44e5-a6a6-0e0cd0806b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c4c710d-d11b-4874-a857-ddf4cdf9022a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99929146-6733-49db-bb60-3eb596e79a9f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde98785-07fd-4a15-8ede-5e417ae05097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7a5eae5-2755-4bd3-a12a-efd260e6d962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2c5db6-c835-473a-a938-fc75ac9d78ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5eca1f4-1f26-40c9-8b8d-4e0978819a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956c5fd7-35c5-4555-bc12-7afbd844e7cb",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c51fe5-fded-4850-b2d9-6c5cc174a582",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c178a91-360e-460c-990b-defd10f425f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7d5c48-df34-46ff-92b3-b86b0f2560cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5334fd99-99fc-4143-8518-311878298006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbd641b-f63b-49e3-b605-5855e1f09734",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b720d8-9b5e-4071-9d0c-2f34cb84d3a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16102b7d-97f7-4b5c-846a-b244e35b0467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c9433c-cea6-47c4-9475-c1914ac86e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6593bb5-f27b-46ec-8aca-e10ee97f1d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe514bfc-9a9f-4db9-a528-6999b225d8c3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb48eea-4b98-4f74-a968-1ffa826e6ba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "668595fb-fe8f-4bf2-9e18-74819366b440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd5d144-b7ae-4dd5-9843-553c6b7088d4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676c916f-622e-4226-9135-6de00b8981fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d683516-a134-495f-8de7-9320cc3a986d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d495d88a-cd28-4ed8-8c9c-2c9ca8e6c1bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37cbd9dd-e86f-4bad-9a86-157401495dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d45685-87b2-4432-8495-9e2059f18611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0437b52-2e97-4c76-88bc-3afa79cd68a9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c07d2578-9f87-4c50-8821-683d4479121d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d2450f6-5c1c-415c-bb3a-b21e87f5043e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f33c6cf4-6337-4f4b-a296-2d43906f1224",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70e6f092-b2c9-4457-a899-228a2b0e9edf"
                    }
                  }
                ]
              },
              {
                "id": "b3f50bd1-f43b-478a-8ef2-682c0cdbdb29",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b216617-0fd5-4395-a161-2d52da83f90a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eff86c9-0b64-46c4-870b-791bf0cf9c62",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "687ffdc4-eff5-4703-a673-50c9050a33fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8ba59e-3d91-4c90-b09b-d027432fd727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e56f38fc-9938-45c5-83b5-f4a10a011c16"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e6cee49-b88e-4268-a187-5f7b2b5c193a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "596ae20d-fcf7-464f-b9a7-82ecdacde782"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62bab299-2877-433c-aec8-a97138c7d70e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e5448d5-e8de-4762-922a-8dbc9999bfb5"
                    }
                  }
                ]
              },
              {
                "id": "35bfaeb3-87d2-4176-9c5e-d30c15ee817b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5b21f49a-9195-4e4c-baf7-dc5b66694aff",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807bf58d-87a2-4ec0-afdf-1577c0a2dbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "25bcdcef-726e-44f4-aed6-06ee200ec35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81524e42-be75-4ac6-ac80-0cbbbae7f37e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9366c8b-ce65-42e0-8bfa-2b776efcf61a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6f02b636-b42a-43a3-ab5b-828a80f68cc2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "29fd5226-6cc3-4abc-9991-4177ac19546c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c08e65ef-d71a-4e33-a16e-b8e174edc7ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9c12558f-ffef-4ff7-803e-da80fb7d04ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "208bc9e4-52d2-4a72-a5fe-07075157b715",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5035b761-8fd8-4aaf-b156-3e21181e5f8b"
                    }
                  }
                ]
              },
              {
                "id": "79efa437-f401-4dd5-a5bd-1134039a1cdf",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51fd5f58-e73b-4e6a-915f-1376ee5271f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "622415b7-1944-454a-83cf-f11b8a4a0653"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4f86b8f-9dfc-4ccc-b642-ff5ae2cc2da2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a31a8e2f-cc1a-42b2-986e-a46987b9576f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "804a439f-20e1-4514-a65c-d18c815bd668",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8e91ec5b-528f-4552-935f-7cd21d570807"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2a3af30-0c68-4f8a-89d4-f98930b6251a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cfda0461-19e5-451e-86d5-cb2abe1e7890"
            }
          }
        ]
      },
      {
        "id": "b9fee8b0-c6d1-49ce-84c7-220e5cae87e2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cb84f0c2-9129-4ccb-8953-d833e79358ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b299aff-fc0c-415d-9733-1ca29c2ee555",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fcc0c157-733d-4b22-8b9a-0ddc5867f93e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e4d6e9-28db-43bc-94f4-9189ed4a1e50",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b6a4e5fd-d150-4961-9c40-8448f7f8b69e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb24147-4d1f-4855-9f6a-63f24048fcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8be9a26c-4c67-4eea-a1fa-bcd953cec3b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13bf6f45-328c-4d4e-a10e-42dbd0502bc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27c9d3ad-4c2c-4994-965a-28994459832f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfd77490-0f78-4906-b69f-8ad4cbd235af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dab35289-de17-4e39-89d8-f86371f0ffbf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "391321c5-658f-4260-a5fa-31474066ce06",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6ee204a5-7bac-46dd-849b-1531f7ad5ebd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45a5594f-86f0-433e-99a8-e2ee1affc031",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "423c7b8c-b824-424e-9ba2-ad2055238518"
            }
          }
        ]
      },
      {
        "id": "8394be3a-3af5-4e96-bd2d-80de69b36a40",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e7a96ed4-648f-498f-8a0e-d541c6bbaa22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fee3e9d1-6a26-4f6e-8b7b-6b47fbfcea6c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5bd10bcd-2f73-45bf-8afd-7c605b8680ca",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203205cc-c613-423a-9d7b-9d453466b156",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "512d40ff-485c-4b8c-a7cd-c49b3dcb22f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff41c427-e947-4a46-a9d0-adac10cdb1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8861de74-ac9f-4801-a047-a6d7875aca87"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cbc0e26-0373-44ce-8818-7495119fcc05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96fbeb8f-b35a-4741-a841-d8e96d9938bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7770ec81-a8fc-473d-a212-8b36a6853e56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "882914d6-dce5-4ea9-be15-904446cf5e4f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eccad348-02f4-4ec2-be01-525cf3843e90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5073ac3f-8318-4be7-8702-4ca090e1f9ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e9f1963-13e9-4209-a619-c03c61dcd8bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80c30a89-1295-4458-be32-129f92a1c470"
            }
          }
        ]
      },
      {
        "id": "4487de64-12f0-4128-8910-f6300c7b0677",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fbb9ac76-6b4a-4486-b49d-77cbca636368",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa49dca5-5709-4576-9ebb-c14aaf710bd9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0590cb52-72ed-4a51-8e0c-da804d9dfedb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8684a141-809b-4528-b18e-4058458e75fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "007139e4-1f6c-4df0-ac1e-ae6bb11c8b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be5fbcd-45fa-41d4-ab7c-8427ea163f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d37cab3-a68c-48d8-ab87-be72ca82c3b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7486566-1c4a-4f24-8013-e325f0c4bbe6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "830346f8-a167-4430-b251-c14d9c4b0739"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f0f69ce-6cb5-441c-a8a5-6603a5180c88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c37e125c-26a8-435f-98a5-e8b5f2c884f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1083708e-82a1-425d-b011-1ed00944b448",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3b8cfb36-92a5-44f9-8705-b23ccb6ed4b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b782b043-9b7d-42db-bcd9-6e2dc2bc2528",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d131cda-449c-479b-b855-51c787a8ab83"
            }
          }
        ]
      },
      {
        "id": "e621961e-2707-449c-9890-650adb8f3ee3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53ec8c1d-6a5e-452c-9bcd-77774e126e8f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3212de3-811b-44a8-9044-93f4e4ae298e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ed363f5c-277b-48da-bccf-e2f6dd4c4bdc",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30c37b29-38df-4cc9-99f3-2034a3056287",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5b89e6c-c9ec-41c5-81ab-1bc944e23fc8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 80.61904761904758,
      "responseMin": 3,
      "responseMax": 6120,
      "responseSd": 446.429012063275,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719967120683,
      "completed": 1719967149288
    },
    "executions": [
      {
        "id": "19f65bc6-076e-4e25-b4ea-133a9e4a2195",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "343abb2d-6601-4a70-b44d-fe3a8ab30751",
          "httpRequestId": "e764caed-ad51-4171-8c13-78a2e776fd05"
        },
        "item": {
          "id": "19f65bc6-076e-4e25-b4ea-133a9e4a2195",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "caeea3dd-6d54-491e-8e1a-5d2d2220bcfb",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 0
        }
      },
      {
        "id": "19b9cf20-4fea-4fee-bfcd-39787b0eaa8f",
        "cursor": {
          "ref": "d35c5938-868c-44af-aeba-44070493c6f2",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "328ec3af-ce7f-4a04-bdeb-9b60e6fbdc75"
        },
        "item": {
          "id": "19b9cf20-4fea-4fee-bfcd-39787b0eaa8f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d67306cf-eef5-44fb-914a-48b3c87fe572",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "e8303aa3-fc13-4f49-8f05-fd7e9afd3faa",
        "cursor": {
          "ref": "7f8146bf-f482-474a-aa97-03f2b0d2336a",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "aa43de9c-2ce0-4e7c-a20e-b1bdaf295125"
        },
        "item": {
          "id": "e8303aa3-fc13-4f49-8f05-fd7e9afd3faa",
          "name": "did_json"
        },
        "response": {
          "id": "2bd2ab4d-0294-49ef-8827-c0bd3921f851",
          "status": "OK",
          "code": 200,
          "responseTime": 203,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc21482-1bd5-423f-b244-50264ea9e9eb",
        "cursor": {
          "ref": "0ce6fd98-b936-434a-8e2e-7ca81f11bc35",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "da007969-9d13-4302-9002-5305b2661875"
        },
        "item": {
          "id": "acc21482-1bd5-423f-b244-50264ea9e9eb",
          "name": "did:invalid"
        },
        "response": {
          "id": "0f6dbff2-a0ab-4d21-b0f6-fe487167c401",
          "status": "Not Found",
          "code": 404,
          "responseTime": 336,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc21482-1bd5-423f-b244-50264ea9e9eb",
        "cursor": {
          "ref": "0ce6fd98-b936-434a-8e2e-7ca81f11bc35",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "da007969-9d13-4302-9002-5305b2661875"
        },
        "item": {
          "id": "acc21482-1bd5-423f-b244-50264ea9e9eb",
          "name": "did:invalid"
        },
        "response": {
          "id": "0f6dbff2-a0ab-4d21-b0f6-fe487167c401",
          "status": "Not Found",
          "code": 404,
          "responseTime": 336,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a060195-ddda-4c5e-a568-a12c99806db0",
        "cursor": {
          "ref": "66e5fa83-b2fd-41e7-9c71-24724cdcafa2",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a0042f70-cbfd-41cb-95e1-865aa59022de"
        },
        "item": {
          "id": "8a060195-ddda-4c5e-a568-a12c99806db0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c5b3d29b-94ba-4bd8-9857-31561b7f0bc6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 19,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d70949-3af7-4452-9e5d-6860eeba4bfe",
        "cursor": {
          "ref": "d072975a-3e61-4042-aa5b-2583a3d6067f",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d69060ab-7765-4f57-8be3-dfc0945f3ccf"
        },
        "item": {
          "id": "70d70949-3af7-4452-9e5d-6860eeba4bfe",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4433c663-4db4-4caa-a00d-c8285be3698b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 15,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672ae626-6d65-47ef-bff5-556384d054ca",
        "cursor": {
          "ref": "2399fb76-088e-4a4e-a53a-74cdd222d6f4",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1fa1e368-2944-467e-bb8b-651ddbddaa20"
        },
        "item": {
          "id": "672ae626-6d65-47ef-bff5-556384d054ca",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0d95f0c2-2b47-4606-bcf2-0ef9ff1b5ecc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25f4e31-a9f1-459b-8019-1bd3f9a13555",
        "cursor": {
          "ref": "12d54de0-d38f-48c3-bc67-1b5b04c4faea",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cb03edfc-0618-4d70-aa0a-1429084efeae"
        },
        "item": {
          "id": "d25f4e31-a9f1-459b-8019-1bd3f9a13555",
          "name": "identifiers"
        },
        "response": {
          "id": "dd7deb60-c413-48ba-80ba-bfff9b31592c",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11db9b6-1008-4189-bf46-1d99a9afa4bd",
        "cursor": {
          "ref": "71b4df86-1c5a-4987-8b54-43b7e287d7d3",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fc69128b-e063-4a47-8074-574af4e73241"
        },
        "item": {
          "id": "f11db9b6-1008-4189-bf46-1d99a9afa4bd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "96bc8a6e-272e-4af3-9b59-467e5b1fc737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614397f9-456e-4559-a4a5-334612a54ad7",
        "cursor": {
          "ref": "db858ba0-be21-4f1b-a167-c8a62a14beb6",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "18ed1143-8345-4627-8a63-51746dc7cf5a"
        },
        "item": {
          "id": "614397f9-456e-4559-a4a5-334612a54ad7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0e09ba03-ec5b-4ee7-99ef-4bc6d2c91cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da238d3-c90a-41ea-9a55-135d16d1779f",
        "cursor": {
          "ref": "075b8949-e247-46f0-b96f-05cf7bcde4d7",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "598e34f8-3ebc-4e93-84bd-97ba25da9048"
        },
        "item": {
          "id": "4da238d3-c90a-41ea-9a55-135d16d1779f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a203a1fc-3080-4905-90ec-ea8870d3ca8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633b8dd3-d219-4f30-bf43-26582763a8b1",
        "cursor": {
          "ref": "7617e4bc-1d3e-434a-a95e-8fd6e0782cf1",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "eb3d5a72-49bd-436b-a7ea-11fcdd4c1068"
        },
        "item": {
          "id": "633b8dd3-d219-4f30-bf43-26582763a8b1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c664b982-bd3c-4a0f-a23e-56445d2d5338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab8db0d-8358-4f0f-b3c2-adb6fa794afe",
        "cursor": {
          "ref": "a6bbb13b-4c19-4b78-aab0-889d8261182d",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "452d3e33-3b62-4d8a-b51f-e8892d4a1dd6"
        },
        "item": {
          "id": "2ab8db0d-8358-4f0f-b3c2-adb6fa794afe",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2d94d0fd-e946-484b-8af8-f64dc6ac9aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aca4265-8aee-45b1-810b-1b1e1b939cac",
        "cursor": {
          "ref": "04fe7e16-2490-404f-91ee-7f30ce9527d9",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5bba8bda-1b0f-4c10-9edc-e1c25085b357"
        },
        "item": {
          "id": "4aca4265-8aee-45b1-810b-1b1e1b939cac",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c5d79d6d-6c0d-4115-b444-04a5bd7d23c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6df71c-c5ca-4059-81f2-c9e975a21ed8",
        "cursor": {
          "ref": "ae72d626-6e20-4b09-aed3-38a8ab3d2043",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "84d90275-51b0-407d-a029-205b2fac2ca2"
        },
        "item": {
          "id": "0d6df71c-c5ca-4059-81f2-c9e975a21ed8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "44884d90-b815-4a24-9355-22567261364a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f2640e-da7b-4265-8a10-1b1a025be280",
        "cursor": {
          "ref": "8771a83f-1e37-4d9e-8462-7e2834dda127",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cfd14d85-3d40-4b8e-a190-fc8a678881ee"
        },
        "item": {
          "id": "30f2640e-da7b-4265-8a10-1b1a025be280",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7bedbd5c-817a-4ccb-baf5-686ae152a3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9810444a-f952-4f9d-a7ed-7f76084f9f44",
        "cursor": {
          "ref": "01292dfc-fcbf-400f-9039-dc58f2db5996",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "29491cf1-55f6-425e-a061-78b16bcb29e3"
        },
        "item": {
          "id": "9810444a-f952-4f9d-a7ed-7f76084f9f44",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e2c40445-3a1f-4918-8c9a-8273dda40f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311ae4c1-1670-4143-92b8-709d520f49a0",
        "cursor": {
          "ref": "d6d71420-ad67-4730-a438-537d65818c22",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9b61241d-1b44-4644-a078-5e009a721867"
        },
        "item": {
          "id": "311ae4c1-1670-4143-92b8-709d520f49a0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7c63ed32-b6e1-401b-8dd7-7a27888a6588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d42b17d-53b7-4813-80fd-627008bf9d80",
        "cursor": {
          "ref": "39c02bac-a2cb-4571-bc06-af954c927456",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "24993841-c6d1-4c24-9278-3f9c680e6723"
        },
        "item": {
          "id": "1d42b17d-53b7-4813-80fd-627008bf9d80",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4f5ed92a-15f6-4ea9-b22d-88aff0144b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbb5837-65b0-4a91-b864-d7c6f898b585",
        "cursor": {
          "ref": "b336f2a0-d07c-4242-8bfa-377376d5158a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1555fb3b-def3-40a6-8732-1c14154a4d09"
        },
        "item": {
          "id": "3fbb5837-65b0-4a91-b864-d7c6f898b585",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "396d66b5-0803-4bb8-94c1-a1141b94696c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f131f8a5-6661-44d6-a8cd-2ce692fa668f",
        "cursor": {
          "ref": "20c13dab-c8f4-40be-849b-95de4d8ef198",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "13f3ba6a-f66a-4710-82bb-61d2f89bd09b"
        },
        "item": {
          "id": "f131f8a5-6661-44d6-a8cd-2ce692fa668f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cd4babe2-f288-41c9-8aa0-5bc2c0f9c9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae22364-392a-4d4f-9494-28af8a60e292",
        "cursor": {
          "ref": "907c7e35-449c-41e4-80c1-89e397aad6c0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "efeb1313-3f51-45d3-90b6-39d0ef25efd3"
        },
        "item": {
          "id": "1ae22364-392a-4d4f-9494-28af8a60e292",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "855c0630-3ac9-47ce-956c-9b3741c1d010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a2483d-bbd0-498e-b22f-3f31fa0dc4af",
        "cursor": {
          "ref": "6f5436b8-fb48-4c73-90ee-c29a03e82657",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "25a3ca70-7c94-4a4d-b168-b4a7c40a7a2a"
        },
        "item": {
          "id": "d3a2483d-bbd0-498e-b22f-3f31fa0dc4af",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ce74f9e9-f757-4e73-80fc-05c85f000360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cea8af-9f81-41a7-b70a-913a052be61f",
        "cursor": {
          "ref": "933e4dde-752f-4fde-9a76-d41cbe4296ac",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "517f0f54-8068-4a02-9b6e-c7695ece06de"
        },
        "item": {
          "id": "c8cea8af-9f81-41a7-b70a-913a052be61f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "788d8bf3-0fc6-401c-886f-7bdf9efb1cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6694c265-4b7b-4729-b80e-835ceaf1a8bf",
        "cursor": {
          "ref": "7e40245a-071c-4c51-84b0-115bc8e8ff17",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f1d8a98e-136a-43e9-89fc-a37b5108c60b"
        },
        "item": {
          "id": "6694c265-4b7b-4729-b80e-835ceaf1a8bf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "81534989-3545-469b-bde0-4a15a4f2204b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da58a8a-b145-4021-90e1-3311598db3d5",
        "cursor": {
          "ref": "0a4221f4-acb2-49a6-b5b1-67d24f1a4187",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cec1e383-7394-4b4b-b826-c3689f96a3e6"
        },
        "item": {
          "id": "6da58a8a-b145-4021-90e1-3311598db3d5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3dd8700a-cfc2-43db-ae73-06a7b665391e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7d489c-81be-4389-bc71-814445f035e4",
        "cursor": {
          "ref": "267678f6-8c10-40d3-a6ea-52c303ec0b07",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "30404286-6676-408a-8ea4-79257924ffc3"
        },
        "item": {
          "id": "ea7d489c-81be-4389-bc71-814445f035e4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d2942e3b-77cd-4d5e-b0cd-2336bc05254f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ac183c-bf05-4924-ac2e-8aac9590f2d3",
        "cursor": {
          "ref": "0e95d94e-bf5c-45cf-917c-0ab6d7d00244",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "65f91b55-1349-4a91-a343-fb893a167fae"
        },
        "item": {
          "id": "e9ac183c-bf05-4924-ac2e-8aac9590f2d3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a8d1c856-931b-4414-be7f-152c13411f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bce714-23ba-4fb8-914c-93ba76510439",
        "cursor": {
          "ref": "c622c4a7-a1b1-4aeb-9cb7-ecf99d577c9b",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6d97c67a-8ba5-42e9-b2e4-99242a3a7833"
        },
        "item": {
          "id": "64bce714-23ba-4fb8-914c-93ba76510439",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7610950e-75d6-437f-aa40-a770c54de022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e866fb-5132-4d24-8542-ccc57d4a4d4a",
        "cursor": {
          "ref": "ce102993-ff10-4083-9e28-21c78383a410",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d9e80e79-6bc0-42c4-be48-48e815d6aab6"
        },
        "item": {
          "id": "91e866fb-5132-4d24-8542-ccc57d4a4d4a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d11260b4-972e-487d-aef6-fc517ed44459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84424233-6797-4fae-ab99-8f6cce3d8838",
        "cursor": {
          "ref": "7502f618-7cf9-45bb-9986-60f404783347",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d191e6bd-cdc5-4b6c-879f-aac7aa578b9a"
        },
        "item": {
          "id": "84424233-6797-4fae-ab99-8f6cce3d8838",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "918073a2-6ff3-4231-b2e4-92459996fdc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d54722d-2949-4e95-b390-90f5af984183",
        "cursor": {
          "ref": "3712e008-7125-4c43-ab6a-93af845de9c3",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b328f917-c962-4b3b-9de1-fe8d54cca186"
        },
        "item": {
          "id": "7d54722d-2949-4e95-b390-90f5af984183",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "689c6857-4e47-4b8c-b864-4ba2ddd18d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689df2b9-9fa6-498c-9d2d-bdc951491d22",
        "cursor": {
          "ref": "5f046df8-e740-4be8-ab07-82eccc42e38c",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2b786f42-f120-4156-a372-71efbcd17fcc"
        },
        "item": {
          "id": "689df2b9-9fa6-498c-9d2d-bdc951491d22",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e1ab2f1c-1c22-4201-a1e2-7b8a548a45ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662dfb0c-4e61-4960-8429-0b0487c47c6a",
        "cursor": {
          "ref": "ab10b1fc-e287-4564-9135-d10621b02590",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fa9c8751-d6c3-4c9c-82fb-dc695adae3dc"
        },
        "item": {
          "id": "662dfb0c-4e61-4960-8429-0b0487c47c6a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "85c9bf47-47a0-477e-9d19-747a5ec6c261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7f36a6-e4cc-45b3-baf1-a16b6a42d250",
        "cursor": {
          "ref": "520a925a-e1f2-4df8-a737-efac83cb554d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5bd1409b-1656-4049-a222-6b4e6b7038be"
        },
        "item": {
          "id": "1f7f36a6-e4cc-45b3-baf1-a16b6a42d250",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c8b38979-e772-400e-a682-f1b9a76906cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a732303-35b3-47c7-a5aa-52ae7d43c790",
        "cursor": {
          "ref": "df319b1f-5ae0-4520-8a4f-1e44b024bf26",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4a507f00-1263-4e58-ab08-c2456684259a"
        },
        "item": {
          "id": "3a732303-35b3-47c7-a5aa-52ae7d43c790",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d32457fa-b24b-41e6-9823-375e0043c4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f94969-9661-42ef-8319-ba3a2db135fe",
        "cursor": {
          "ref": "8b461ec4-f357-4760-a496-0e3ff2b21942",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "47785e32-f542-422a-b9a1-5b8a03567760"
        },
        "item": {
          "id": "f8f94969-9661-42ef-8319-ba3a2db135fe",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ebe51946-e5f1-4898-9e24-3f866000b36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10447689-44b6-4394-8aa4-20af56524054",
        "cursor": {
          "ref": "da9c4857-08d2-4a16-b05d-12cb3027df8a",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c30ecaa1-3086-40e2-87a9-50561cb94ec8"
        },
        "item": {
          "id": "10447689-44b6-4394-8aa4-20af56524054",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4ab3d7ab-e1a9-4590-802e-b99c895f955a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823d2c37-11dc-4635-974d-5bd105c2d8e0",
        "cursor": {
          "ref": "c57658a3-85f0-45de-80a8-89da9f92679e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1e4af770-fdba-4e34-ab81-6894b6244a53"
        },
        "item": {
          "id": "823d2c37-11dc-4635-974d-5bd105c2d8e0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f94b965d-bb87-45f2-8725-5e8c9ceb01a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516d941a-d703-4367-8ad9-ad201580913f",
        "cursor": {
          "ref": "c73b2892-b965-49a6-86bb-d2bdb2f16ddf",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "53f58052-bee7-4e9d-989e-0eb182e9b0b3"
        },
        "item": {
          "id": "516d941a-d703-4367-8ad9-ad201580913f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4cbfac4f-f7bd-482f-8259-680de55e3be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58c0d8c-beba-4885-8b16-6775c7769a28",
        "cursor": {
          "ref": "7a50007e-e261-41ef-9c95-c7807b3a3ea5",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3b99ae03-8a6d-41b2-aac6-bb19928e55f5"
        },
        "item": {
          "id": "f58c0d8c-beba-4885-8b16-6775c7769a28",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cd5287d9-3bea-4433-9003-cacefcb399dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e5416c-4169-458a-8981-653410cddbdf",
        "cursor": {
          "ref": "fe1296fa-7b62-4f06-8669-c4ad31a1ebcf",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8cc93457-8e04-46a4-af82-8f8c26c9cf0d"
        },
        "item": {
          "id": "51e5416c-4169-458a-8981-653410cddbdf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fb6459cd-a2af-423e-abbb-2244696ae452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17cebc7-6822-4880-ac85-693a8bdfac78",
        "cursor": {
          "ref": "c8358f3d-1968-4504-9b15-f0d33294320d",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "930dcbf4-b772-4fee-9046-bbfd63b03040"
        },
        "item": {
          "id": "d17cebc7-6822-4880-ac85-693a8bdfac78",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d93e8d20-0e5a-40df-8cff-584c54b6be40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cac5a8-94fe-4395-88fe-d18a09b51e53",
        "cursor": {
          "ref": "2765025f-9aa1-4c7e-9fee-c5bbc1014153",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f02d9fa4-804e-4100-9a41-915b5a462e78"
        },
        "item": {
          "id": "c1cac5a8-94fe-4395-88fe-d18a09b51e53",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a6d04fef-0596-4045-afda-267f35447e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c27c831-79fc-4541-b7a0-034962d0677c",
        "cursor": {
          "ref": "78a828fc-5114-4209-9723-8c93065679a3",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b76a320f-3c9f-48e3-8871-b961da4bb68b"
        },
        "item": {
          "id": "5c27c831-79fc-4541-b7a0-034962d0677c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "766f7d6d-f29f-418b-b070-54ecfbbfa396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80fd35e-3e34-4c47-8aca-45d2f300728b",
        "cursor": {
          "ref": "6bcc4852-5063-4f54-8499-00660c9be602",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5e93018f-932d-42e7-aea0-923bbbf0d932"
        },
        "item": {
          "id": "c80fd35e-3e34-4c47-8aca-45d2f300728b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0b3ff73a-d591-4c6a-9e7f-d9fd2ba6d532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c7c904-c434-495e-a04d-138ce3102c21",
        "cursor": {
          "ref": "5338cd6d-cce7-4f63-8ebd-f5892e936699",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0e92c59a-903c-4ee7-8242-b65f7f80d8e5"
        },
        "item": {
          "id": "e9c7c904-c434-495e-a04d-138ce3102c21",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "05b5aa4a-80c4-48d1-bcbf-37e5216eef25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9247c0e8-939e-40d9-a2b8-7ba0cb2a6b26",
        "cursor": {
          "ref": "d22cbad9-4b53-4cb3-9734-5acccbc96c80",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7b105348-5aee-403f-89d9-4ef5c5ee6ea6"
        },
        "item": {
          "id": "9247c0e8-939e-40d9-a2b8-7ba0cb2a6b26",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e5e8dc13-5b8f-4e5f-af7f-8c92f53411cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175694c0-6612-4012-bd8e-3ecb6b7c8955",
        "cursor": {
          "ref": "54c7018d-2d21-4b79-99e3-fbd3083ae889",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ee77a92f-7b37-4253-98b9-6f761aa4bf27"
        },
        "item": {
          "id": "175694c0-6612-4012-bd8e-3ecb6b7c8955",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5086d868-3330-4534-a461-6074173d93c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f5987d-27ad-44b7-a78e-90ce7a7a2e5b",
        "cursor": {
          "ref": "5d4c15a6-f5ae-4685-85ef-26864203136f",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "58d9c807-7e5f-41a8-848e-f009b065d16c"
        },
        "item": {
          "id": "b2f5987d-27ad-44b7-a78e-90ce7a7a2e5b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0f3ee4fa-9c7f-47af-afd0-e0dece9a7800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356124d6-dc5d-41c2-9cad-029fd27b6856",
        "cursor": {
          "ref": "253aa689-869e-4102-88a6-8a12baf16198",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "628eb87b-e963-429a-bf1a-7473c15eac06"
        },
        "item": {
          "id": "356124d6-dc5d-41c2-9cad-029fd27b6856",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4117d221-d7ea-43f9-aec8-0622e4c5ec5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be4dd89-3ef8-4122-b54d-62616832d833",
        "cursor": {
          "ref": "ef2318d1-f482-4a51-9746-068eb6f42846",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "76821e6f-8a72-4dca-8095-6e0803ebe881"
        },
        "item": {
          "id": "0be4dd89-3ef8-4122-b54d-62616832d833",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7a037a49-625d-4280-9617-1f3cf7b43462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ed851a-84a2-421e-9ffc-d2658c7753eb",
        "cursor": {
          "ref": "3fccf2fe-b633-46d5-9877-173ccb0a4df6",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bd05cb73-29fa-4453-aa5e-2bf1b5673016"
        },
        "item": {
          "id": "49ed851a-84a2-421e-9ffc-d2658c7753eb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b433ef17-858a-4fa9-bd00-2bab2f0aa750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00883a7-6be3-43f1-8fac-6ddd3edf8083",
        "cursor": {
          "ref": "443b4262-07b2-47c7-854c-896417ea77ea",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ebc6e239-e8e7-4ce6-b2a3-c2e3c60b5f1e"
        },
        "item": {
          "id": "f00883a7-6be3-43f1-8fac-6ddd3edf8083",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3c0009e8-cdec-4d47-afa0-86c39a257c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798dd43a-b045-43b7-b67c-a21753cec64e",
        "cursor": {
          "ref": "4a1c7b24-e043-47a4-a362-5a8776e210f4",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7086ab2b-bfaa-4000-8e6f-535bdead170c"
        },
        "item": {
          "id": "798dd43a-b045-43b7-b67c-a21753cec64e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d6d53776-02bd-4bdf-92b0-9368722a01c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd7b14c-1ad5-4d30-b554-b185907cb694",
        "cursor": {
          "ref": "f587fd00-ee08-470a-91c3-ae78e7c1c450",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ecde193b-56a2-4a24-8d00-5ff0abbcdaaf"
        },
        "item": {
          "id": "9fd7b14c-1ad5-4d30-b554-b185907cb694",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0890c904-77d4-4bf1-8b76-df22e6d253aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb72d64-070f-4de5-b014-a82dcbfea8e4",
        "cursor": {
          "ref": "a3bdf659-fc47-440b-aab8-6b490371b072",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "09df011b-2a48-4822-854e-e0892dd515c5"
        },
        "item": {
          "id": "8bb72d64-070f-4de5-b014-a82dcbfea8e4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "31179514-57eb-4e8c-9966-e8790a80d521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6793b10-671f-4dd1-93ec-5691c0994494",
        "cursor": {
          "ref": "ac39056e-d872-4fe1-826f-a666b6aaea0a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4c39795b-50a5-4ae2-9f34-8263313be4a1"
        },
        "item": {
          "id": "a6793b10-671f-4dd1-93ec-5691c0994494",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "640eae7d-2965-421a-853d-51324adecc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1402dbda-e13d-48e8-88a2-ba6f1cb1ea6f",
        "cursor": {
          "ref": "8316557d-f5e4-4959-9d5f-6f8f5e302eb8",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3f4cf5b3-1e55-4f03-9886-46a271b19dbd"
        },
        "item": {
          "id": "1402dbda-e13d-48e8-88a2-ba6f1cb1ea6f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "30ab0931-9ab8-417f-8941-aa81b9b41f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac29bd1-c652-4b86-8d6b-399899d11472",
        "cursor": {
          "ref": "da7fe76e-9031-47c2-ab32-4d23fe31bcec",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d41e5034-6360-4646-949e-f0c1d14c6526"
        },
        "item": {
          "id": "fac29bd1-c652-4b86-8d6b-399899d11472",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fe93925a-3aba-4257-8805-fd6c02680422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9683dc40-fd6a-4d6c-893b-a60c0548c5c7",
        "cursor": {
          "ref": "6e6684d7-51bd-4e06-9ecc-b2a981a0aae7",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4b4d208b-2058-433e-ac4b-fde106ed3170"
        },
        "item": {
          "id": "9683dc40-fd6a-4d6c-893b-a60c0548c5c7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c265562f-9839-4ed4-be8b-b6fcea01d012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2a4290-559a-4d91-bfb6-11f974c53cbd",
        "cursor": {
          "ref": "7da071b3-e7e6-49db-9340-0412e74db898",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ebd4e5ec-e3c8-415f-997b-af81db686b5d"
        },
        "item": {
          "id": "7e2a4290-559a-4d91-bfb6-11f974c53cbd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "92ec37eb-29f5-4ce2-a796-430c8b2cc5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f0197c-8429-4342-b3b7-e1dbb229e7a0",
        "cursor": {
          "ref": "2bf65b65-d0a3-4143-9963-88cc3a684ff6",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "79bd55c2-f3de-4286-8474-90449fa014bc"
        },
        "item": {
          "id": "03f0197c-8429-4342-b3b7-e1dbb229e7a0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5ca1b2b8-29f8-43cd-a68c-e94055bdfed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37560827-f2e5-491a-bd06-949a6815890c",
        "cursor": {
          "ref": "899f2672-024e-4184-bade-3df8df9e47a7",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "84d5220a-1b6a-4b8e-8069-d5a2fd3355fa"
        },
        "item": {
          "id": "37560827-f2e5-491a-bd06-949a6815890c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2a803184-91ae-415a-8876-03ef96b756f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f97a52-4ad6-461f-be1c-a22efe1199a5",
        "cursor": {
          "ref": "5a286dae-0567-4544-a219-d739601fe7e4",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "045b52e9-0fba-432a-9c59-02dce0dfc81c"
        },
        "item": {
          "id": "f7f97a52-4ad6-461f-be1c-a22efe1199a5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "aaf8878f-8189-4724-add2-04a8866d4230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c439c890-2ab7-40c2-a8dd-9529d080d68b",
        "cursor": {
          "ref": "259ea6c1-60b6-4340-8967-a84b4f282186",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2b11e484-ec65-4a57-bcc5-7eab1496ff21"
        },
        "item": {
          "id": "c439c890-2ab7-40c2-a8dd-9529d080d68b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dcaca79e-0714-42ee-953b-a3d40b4c212a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269374db-64c7-44f1-b40b-005850791117",
        "cursor": {
          "ref": "65fee2b1-6f7f-4cc0-9869-360989a7f8cd",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "da0a7fda-21eb-4884-b25c-49d21eec3687"
        },
        "item": {
          "id": "269374db-64c7-44f1-b40b-005850791117",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "aa5c2f90-920e-486f-bf5f-307581f9017c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a15729-ca53-45a2-8440-84e7924b7a60",
        "cursor": {
          "ref": "069e5343-8a56-4a67-b768-0df66e95037f",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cd5d0b32-5b81-426f-a200-39c291feb9ad"
        },
        "item": {
          "id": "a9a15729-ca53-45a2-8440-84e7924b7a60",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c508ddf1-6276-4d6a-b6f2-98f575e08123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef1c6d7-137e-4daf-8d6f-e6b650faed40",
        "cursor": {
          "ref": "b346d324-79f2-4387-98b9-9f48ab88b8c9",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "20c324cf-13ba-4a5f-8e35-5b4d97ef7389"
        },
        "item": {
          "id": "aef1c6d7-137e-4daf-8d6f-e6b650faed40",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "235ca7f3-0130-4145-9d80-eca61f120a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bee0321-05ff-4325-aa53-1ce1c8f78864",
        "cursor": {
          "ref": "e26e59b7-e408-4c49-bc8a-f4c3a2b70407",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "15f8c9e8-9a48-46ff-9af0-e5b72f3581fa"
        },
        "item": {
          "id": "1bee0321-05ff-4325-aa53-1ce1c8f78864",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e6f85879-87ac-4ee4-9d8a-eb370d9250c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6733fea-3f42-49fc-a3aa-d5bfdc8697b5",
        "cursor": {
          "ref": "51a0d49d-565c-44a2-adba-b8d61620d427",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7b1f0949-dae8-460d-8b63-7b8e4754508c"
        },
        "item": {
          "id": "c6733fea-3f42-49fc-a3aa-d5bfdc8697b5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a48de065-b7c6-4d54-9f60-18c3a7f5f7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa2bbb4-53be-4203-b925-f722c57a30b9",
        "cursor": {
          "ref": "f4129ee9-d8d6-455d-a930-497a2420e116",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "46d8f656-963f-4c01-99fa-42ad2c02b0ca"
        },
        "item": {
          "id": "4aa2bbb4-53be-4203-b925-f722c57a30b9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7d75c6a4-80d4-466a-bf5f-48d7feb3d1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d9ed59-4efe-4f61-880a-34f55748cf37",
        "cursor": {
          "ref": "d99bc8a7-6fb4-40ac-898a-512682421d16",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "602b6798-8545-4f5a-8ed3-0caa8c29d152"
        },
        "item": {
          "id": "37d9ed59-4efe-4f61-880a-34f55748cf37",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "12b6d614-8e2c-4764-9804-81aa074c22ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb4d155-08e8-4591-9e1f-14a88adf0e65",
        "cursor": {
          "ref": "74c09710-f38f-4867-9e79-366e6109fcd5",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0f3cdaf9-744d-4364-af07-8db397716dbb"
        },
        "item": {
          "id": "ccb4d155-08e8-4591-9e1f-14a88adf0e65",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7ff51299-8723-4003-8ba5-cb75112b044d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fdd8d8-6e28-4027-ae07-9c07f9988200",
        "cursor": {
          "ref": "1516129b-cac5-4712-86e0-6b6c062fb517",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ac985832-d159-40cd-aa9a-ae6efb04e3ad"
        },
        "item": {
          "id": "02fdd8d8-6e28-4027-ae07-9c07f9988200",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c5aa9956-74ac-4843-b45e-41612a2168bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a0b099-5d30-4e30-9b99-c1eade844e84",
        "cursor": {
          "ref": "0b171e8e-c6c6-47be-a947-f92f2ccba6ec",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "da0a9c45-9342-48ad-a706-4c23b93f5303"
        },
        "item": {
          "id": "e7a0b099-5d30-4e30-9b99-c1eade844e84",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ee179e7d-097b-4a37-a17f-9fa39e0780f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cac4bc-a6fa-4465-845a-2d1204d48599",
        "cursor": {
          "ref": "1e060b80-1033-4690-98e6-819741ded46a",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9d1e71bc-2672-4282-a812-9025badd6e9a"
        },
        "item": {
          "id": "46cac4bc-a6fa-4465-845a-2d1204d48599",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6b6a7275-b483-4fa7-bc1a-0c0c99992a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649a7b9c-a981-4d02-a729-a258213ef33e",
        "cursor": {
          "ref": "c299d2d5-edfd-4fe5-bd85-a0a6b734dcda",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "18f74cf4-235c-41e0-afbb-241da5206ce4"
        },
        "item": {
          "id": "649a7b9c-a981-4d02-a729-a258213ef33e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8bb9c577-6975-4917-a5e3-9323f5a588ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb912b7c-bf9b-48c2-8e1a-4a7aa0f6554b",
        "cursor": {
          "ref": "351cb33b-9a1b-4e2f-947a-cca1839c21a5",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1426027b-3455-4ee5-8377-48a4d27df5d3"
        },
        "item": {
          "id": "bb912b7c-bf9b-48c2-8e1a-4a7aa0f6554b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "af3ef528-f01e-46dc-8b6f-7bdf2d2c4916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7205ddf-13c6-4766-9001-f3bf873b23d6",
        "cursor": {
          "ref": "182a57fd-e96b-4cd8-830e-88efe91ecdb0",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "36ded617-ccfd-4104-92e0-aff3357e15b9"
        },
        "item": {
          "id": "e7205ddf-13c6-4766-9001-f3bf873b23d6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "54dde5a6-4404-47ef-a374-74bb2b28f2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830c64ca-adca-4d2d-9a46-9f7dfe4552bd",
        "cursor": {
          "ref": "0e2a58d2-001d-4e9d-934a-39fe830a02b7",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fd41c4a0-3af1-4b59-b3c2-4bad706d69ed"
        },
        "item": {
          "id": "830c64ca-adca-4d2d-9a46-9f7dfe4552bd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "328f3217-c670-4aa7-9ae3-ccc68c6471bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f217f7-eed0-40d8-8a3f-505416c08f8a",
        "cursor": {
          "ref": "09f94e2c-3644-485d-8ce8-9c292efbf7a6",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d2c74d16-a3ce-41bc-a59e-30141d3f44f9"
        },
        "item": {
          "id": "07f217f7-eed0-40d8-8a3f-505416c08f8a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e06b150e-628d-4c0e-862e-b1b368462903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719e6ef2-a14d-47bd-a519-b4a678356fae",
        "cursor": {
          "ref": "276749de-b208-4639-98c3-1326f2b7ce23",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0961154c-29ef-42cc-a768-d25d2b411209"
        },
        "item": {
          "id": "719e6ef2-a14d-47bd-a519-b4a678356fae",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7dfb84dc-8df6-48d5-8dd8-7c8256bd8847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0021aff-8d5a-4550-b0ec-445b2ff017d4",
        "cursor": {
          "ref": "749bc4e1-bf82-4580-8584-da6aa76a3b9e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0d8d11fa-a3bf-4f4f-819d-e2cdb33413ab"
        },
        "item": {
          "id": "e0021aff-8d5a-4550-b0ec-445b2ff017d4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "283ab03b-c81a-46d7-bbaa-db4d57fc5dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a308b52e-24e1-4ef2-b41c-f394fb9f883e",
        "cursor": {
          "ref": "d49d5310-9914-4695-84e6-8c9b76c33d50",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a3c15fa2-fc3e-4574-aaf1-1e09df354a84"
        },
        "item": {
          "id": "a308b52e-24e1-4ef2-b41c-f394fb9f883e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "24f935ff-29c6-493f-9d96-3907396842b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552c133c-61d3-43a9-b0fb-14db4f036d0c",
        "cursor": {
          "ref": "455271dd-741a-44fd-aa41-3eec4836ea12",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "81fd72d6-4743-4f7d-b413-763e1060a04c"
        },
        "item": {
          "id": "552c133c-61d3-43a9-b0fb-14db4f036d0c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8e14899c-51a4-4141-90bb-d52d85de2adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d31ed54-26e6-48ce-8398-e35917f15617",
        "cursor": {
          "ref": "f6115f6d-281e-49fe-a576-20bee145afdf",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6536191a-4f04-4484-aafd-c8cb57683ab3"
        },
        "item": {
          "id": "9d31ed54-26e6-48ce-8398-e35917f15617",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ac29a431-067f-49da-bec7-bc9fa3f356cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8011168-9e4e-455b-9b6e-6989dc23f82e",
        "cursor": {
          "ref": "f0958807-5073-4fdc-9c7b-178f5eacab96",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "22c46d2b-a54b-4c08-999c-3371e73972c8"
        },
        "item": {
          "id": "e8011168-9e4e-455b-9b6e-6989dc23f82e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d3f1865e-b83a-4d93-9fd9-d83a96707b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef0ff2c-513e-4616-8138-542fe2196db6",
        "cursor": {
          "ref": "6874e03f-e7e9-46d4-b934-80b0bfd9b66b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9e26c10a-238b-4dcf-b517-6366fc91d81c"
        },
        "item": {
          "id": "6ef0ff2c-513e-4616-8138-542fe2196db6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0adea9e3-48e6-4f67-acd3-4fe19f08c4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf43699-12b1-4b32-a70e-401ddcf86177",
        "cursor": {
          "ref": "d9ca378d-0a94-426a-8dd6-52c6be3e651e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6f30eb56-6191-4377-8b70-56c1b31d6ec7"
        },
        "item": {
          "id": "7cf43699-12b1-4b32-a70e-401ddcf86177",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "40cb103d-ef1b-4f8d-a5f6-0ce87d99504f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b7d0e2-64c5-4182-b1e4-91ab142589fb",
        "cursor": {
          "ref": "edcc4f3b-c6c1-42db-942f-e440d3b3e069",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "74bfed5f-b401-4a53-ab3d-9966b97189e7"
        },
        "item": {
          "id": "51b7d0e2-64c5-4182-b1e4-91ab142589fb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "596b28d3-5aea-409e-a7fe-2488fb8bfab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77999abc-7193-472d-81de-4bca0e4ea73e",
        "cursor": {
          "ref": "11d665d4-d4f2-46de-b335-102dea9a3c8c",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0d6696c6-2704-41d2-9430-7c065e5e3e5e"
        },
        "item": {
          "id": "77999abc-7193-472d-81de-4bca0e4ea73e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a0af71da-c382-4257-94de-f46038d76fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1b070e-692d-4e8a-a4ed-598940e54300",
        "cursor": {
          "ref": "ca65be3e-efee-4927-8f32-fb5068f8864b",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1066c081-6324-4708-be62-a2e64cc47051"
        },
        "item": {
          "id": "9b1b070e-692d-4e8a-a4ed-598940e54300",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "49a96bc1-7a22-412d-87e6-a88f4a9af980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f493131e-fce0-494a-8abf-4ac3ebf4e53b",
        "cursor": {
          "ref": "46744e86-7d60-44cd-b793-fe3278311251",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5c9413e9-b807-4ce7-8190-2849fdb6542b"
        },
        "item": {
          "id": "f493131e-fce0-494a-8abf-4ac3ebf4e53b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ed89d9df-1201-4fe6-8e6c-aa354fdc251f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b277e7d1-4bec-4114-82e6-9969f6c23471",
        "cursor": {
          "ref": "3c8d6ff0-a505-432f-b1b9-ab026bfb7e13",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d6d95be2-668e-4e13-a3c1-a4a709d734d2"
        },
        "item": {
          "id": "b277e7d1-4bec-4114-82e6-9969f6c23471",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "015447ad-e193-42a2-9cd5-26f862ecd724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40a55f5-4641-4367-b15c-bb83e5539bf6",
        "cursor": {
          "ref": "152051b8-5e9a-4049-802e-0b0e9b8b98f0",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fc4054d3-a407-4a1f-a5cd-4f8f4975970a"
        },
        "item": {
          "id": "a40a55f5-4641-4367-b15c-bb83e5539bf6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "05f702cc-575e-4332-9439-bf4ea470d993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614b2288-0641-4503-9682-43975a36f508",
        "cursor": {
          "ref": "9b64c795-9e1a-425a-a838-7f8933e37d21",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0bdb860c-717e-42d7-af9e-63b9f218e03d"
        },
        "item": {
          "id": "614b2288-0641-4503-9682-43975a36f508",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "81f5f764-a0ac-400d-9e6c-862bbaddbf94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b372d5da-104d-43be-85c2-506fe08b0889",
        "cursor": {
          "ref": "063d6ade-4943-4269-9daf-ccd8f62c2a86",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "917639c6-4cca-47a3-80f7-26eae797d488"
        },
        "item": {
          "id": "b372d5da-104d-43be-85c2-506fe08b0889",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ec9fece7-ab74-4aba-b42b-62358ce62f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7d03ad-03e1-411a-b478-26d1ce1c6c9a",
        "cursor": {
          "ref": "a1fbf51a-65d7-4725-ac88-cc765cb99f89",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6c941b73-0413-488e-a812-6cf5547c3ae1"
        },
        "item": {
          "id": "9d7d03ad-03e1-411a-b478-26d1ce1c6c9a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4d0e7f75-e063-4da7-96f8-c4fa85ec3dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7731dea5-38cf-47cc-b615-449ad5fd10b1",
        "cursor": {
          "ref": "3043d154-c6ec-4faf-8ea5-7ca9bafa77d2",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fd9dbbcd-4343-4fc5-b954-ba7df4689933"
        },
        "item": {
          "id": "7731dea5-38cf-47cc-b615-449ad5fd10b1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "94fccb3f-379e-4607-9f19-610d170e08d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec7bad1-ffca-4c66-a864-ae6e06289de8",
        "cursor": {
          "ref": "8779b87b-2779-4c01-a985-1f992e66d5ee",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "deb03102-5798-4ae5-bd61-dabb418c86f1"
        },
        "item": {
          "id": "cec7bad1-ffca-4c66-a864-ae6e06289de8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ad27337d-77f4-43a5-a226-9f24fff6a340",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f53068-04d7-4e4b-8802-3c25036c0abe",
        "cursor": {
          "ref": "567266eb-6804-4a9f-8275-08cf03bc006d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7f74b9fb-6513-4c45-a273-08045a995fc5"
        },
        "item": {
          "id": "68f53068-04d7-4e4b-8802-3c25036c0abe",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "637f16e9-6681-4fee-80fe-97cab7d172a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "397a67ca-ff38-45a7-9ddd-e3ea4bf291db",
        "cursor": {
          "ref": "126a25f2-b54d-4dfc-a2f2-7a7105fdfa06",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "619dd63e-53f2-4ea2-bedf-05bdd629dd4e"
        },
        "item": {
          "id": "397a67ca-ff38-45a7-9ddd-e3ea4bf291db",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a390f7e1-df45-4c80-b9c6-446d822158d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "58e1cac0-9500-40eb-ab49-dd89f102e6d1",
        "cursor": {
          "ref": "3d459645-7b3c-44e0-9b1b-65c4f3a63423",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ab921606-11c3-4b22-b9c2-5388e107a381"
        },
        "item": {
          "id": "58e1cac0-9500-40eb-ab49-dd89f102e6d1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f0ea42d9-fdcf-4363-9da3-3ab281cb7140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "02eba0c9-06ed-4f7c-ad67-8b957dfbe1a7",
        "cursor": {
          "ref": "79bfc143-a3fa-4919-aa96-1a29955a9861",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4efc1ef4-ccbd-4165-b24b-c1d787956947"
        },
        "item": {
          "id": "02eba0c9-06ed-4f7c-ad67-8b957dfbe1a7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bf1229f7-1087-476c-a1b3-328374a64370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "170fdbe1-673d-4389-864e-56b9cffd73a8",
        "cursor": {
          "ref": "baa2b627-f42a-4211-9c24-5dcfad390079",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "412e072c-70ea-4464-a79c-c6d644f4b40e"
        },
        "item": {
          "id": "170fdbe1-673d-4389-864e-56b9cffd73a8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b9ec22a3-ee1c-43c2-be4d-7604e13236be",
          "status": "Created",
          "code": 201,
          "responseTime": 6120,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d86bb02-a9bd-4e3a-a3f4-d857286c2ac8",
        "cursor": {
          "ref": "3f10dd6f-5445-4d58-94a6-a13ba3f94ce7",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "57bac073-214e-46d2-8854-70c22ce5107b"
        },
        "item": {
          "id": "7d86bb02-a9bd-4e3a-a3f4-d857286c2ac8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4ad791ee-0799-47c9-9380-55125a2c35e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "cc46a22d-2420-4694-a54f-784971d09a38",
        "cursor": {
          "ref": "e185e002-9129-4db1-a3ff-8d45d27c06e2",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6c448a6d-c3ae-4c5b-aa77-6c2d301b7023"
        },
        "item": {
          "id": "cc46a22d-2420-4694-a54f-784971d09a38",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2ec41a5f-b792-4792-a423-d5858d988243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b507b486-6aa5-4c0a-8514-a44203625f03",
        "cursor": {
          "ref": "9de4b205-fcc0-4e04-bb89-76b1f9d79ce6",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "310d7c22-1328-487e-87fe-875302b7862e"
        },
        "item": {
          "id": "b507b486-6aa5-4c0a-8514-a44203625f03",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "18f8b713-8111-4c90-9cbe-030928a83ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b482d31-2f65-4474-ac28-f0875e57896a",
        "cursor": {
          "ref": "d9422458-18a8-462b-bea4-f462c6f4de1d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ec90de5e-6ad3-43de-934c-0c3531ac1118"
        },
        "item": {
          "id": "9b482d31-2f65-4474-ac28-f0875e57896a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "79c3c02c-ac97-4a15-a34d-da8b5c044692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07f5b64-0f37-41c8-89ac-29cf39a01645",
        "cursor": {
          "ref": "a23eed34-4e33-4093-800c-80dce26bf217",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7bcc9f5e-6899-447f-b34c-fde658c32bd8"
        },
        "item": {
          "id": "f07f5b64-0f37-41c8-89ac-29cf39a01645",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "47f45aec-fec1-41d5-ac89-56babf1e6c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2ca097-ab31-47c2-8db3-750839e46fff",
        "cursor": {
          "ref": "a26e66fc-1d48-43f8-a585-a8ea38894347",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e42d7d94-1fab-4de1-a45d-651dd8d7b755"
        },
        "item": {
          "id": "0c2ca097-ab31-47c2-8db3-750839e46fff",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b4940c73-6d55-47bc-a7d1-57104011b303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c992b9b-150a-4b4f-9adc-6d8fcf8c69fe",
        "cursor": {
          "ref": "0a072204-aa7e-4084-a52a-14616c1bf880",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0f2f165b-f339-4916-8127-c742f113f319"
        },
        "item": {
          "id": "2c992b9b-150a-4b4f-9adc-6d8fcf8c69fe",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "41800143-d781-4d8e-a47d-347a9b64f0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44f144b-ad7c-4b53-bc77-97b78fed59a5",
        "cursor": {
          "ref": "9153bfe2-c3d5-4986-a498-a02e9f20aa21",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "20d0d0a1-e961-43f9-bf44-aae6c2a27306"
        },
        "item": {
          "id": "f44f144b-ad7c-4b53-bc77-97b78fed59a5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "25965636-3bf5-428c-8935-715409664b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347bb98b-3c3a-47dd-b01c-e22a756d7f34",
        "cursor": {
          "ref": "a281c3e5-5f02-44b8-b48d-e556e115cdb2",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4598b39d-7d2f-4812-bf0a-91cb60139a84"
        },
        "item": {
          "id": "347bb98b-3c3a-47dd-b01c-e22a756d7f34",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cd353c46-838d-4752-84e1-3e36bcf381b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48532d2-0c4b-42d6-92b4-05f60b99b696",
        "cursor": {
          "ref": "c400d246-443a-43c9-a1b6-8337bf18fb85",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d63d2e83-29e3-44bb-b100-25f036396870"
        },
        "item": {
          "id": "e48532d2-0c4b-42d6-92b4-05f60b99b696",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3de31ca8-db31-448c-94c3-a14c7eb74ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d92099-1699-4699-8e7e-a278b8a1c3ae",
        "cursor": {
          "ref": "230e1645-65a6-495e-9f3c-a739531c8099",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8ac1612f-338f-4b09-b866-10eb158e56dc"
        },
        "item": {
          "id": "d2d92099-1699-4699-8e7e-a278b8a1c3ae",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2cfd6e93-e635-4f11-86e4-5608651dde89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e272830-c328-4eff-92a4-00eca39afe38",
        "cursor": {
          "ref": "0bf3fecb-3b31-464d-9700-b6a7b842f910",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "447426f3-7d8c-4684-82d7-0f3fbcd26b8c"
        },
        "item": {
          "id": "2e272830-c328-4eff-92a4-00eca39afe38",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4f410bd0-74f8-47ec-8882-1a349c42de31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571440dc-f7e9-4726-aa57-09de8fa61327",
        "cursor": {
          "ref": "99842ead-b627-46df-998c-8d421d0cb328",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "32ef4715-fea7-4f0f-b257-ffe75da944f5"
        },
        "item": {
          "id": "571440dc-f7e9-4726-aa57-09de8fa61327",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "938f4777-4edd-48d3-9451-050547bfae6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c1cc3c-bbc3-427c-b15b-c7e1c1898e2d",
        "cursor": {
          "ref": "2990103c-9b59-40bf-aee5-21d59392e79d",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5470999b-2781-4f70-80d4-c16d0a00c867"
        },
        "item": {
          "id": "58c1cc3c-bbc3-427c-b15b-c7e1c1898e2d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "96a232fc-e5cc-48c9-93f8-9191a1bd0acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76e7d4a-7667-4082-a08d-7b490d18f090",
        "cursor": {
          "ref": "50346562-2738-4ab6-9f84-8580a666e296",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a09949a7-91a4-4c78-8362-5bc410c13766"
        },
        "item": {
          "id": "d76e7d4a-7667-4082-a08d-7b490d18f090",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2fe4d20f-d234-42a0-b153-e341c583e95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefb5bbf-b8d2-4a81-9534-7f83e045e5a4",
        "cursor": {
          "ref": "21671540-7232-414e-9ac1-4fd76d7aec1d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ca6ab858-2d2a-46e1-b5e4-2b7bba6e8f3a"
        },
        "item": {
          "id": "eefb5bbf-b8d2-4a81-9534-7f83e045e5a4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "38b6ea66-37de-4fc7-b277-82c0b4eef452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc46c9a-ef64-458c-89fc-1c10d0fe48b9",
        "cursor": {
          "ref": "774e54d2-18e6-4f7a-8745-7380dedfe640",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "92128c66-3db6-4500-8995-04ad2ccd98ad"
        },
        "item": {
          "id": "ecc46c9a-ef64-458c-89fc-1c10d0fe48b9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c2d114a0-842e-4cf0-9a61-fa73d45acdd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5656358d-0cfc-4764-91e2-21fb04a5f001",
        "cursor": {
          "ref": "2f6cd13a-5214-4334-8524-bda554b1a04e",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "33671410-f3ae-4822-894e-aa61cb6a717f"
        },
        "item": {
          "id": "5656358d-0cfc-4764-91e2-21fb04a5f001",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3d3fcebe-fd74-496f-883e-776eaf3a43e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3e1f32-996f-44ca-bb6f-894381e8a850",
        "cursor": {
          "ref": "5d73c24a-b579-4e4f-b4d2-3a75873fc19c",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0a39a5fa-edd0-43dc-b907-806d5c604437"
        },
        "item": {
          "id": "5c3e1f32-996f-44ca-bb6f-894381e8a850",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2b8768b8-9ff0-43b9-99a7-b296e336452d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "50e11736-6abc-4866-95a9-8ceadfb74654",
        "cursor": {
          "ref": "4793f606-7867-4c58-9934-d86e0ff694e0",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4043c7ca-440b-4e36-9f9a-fb4c961c2ef3"
        },
        "item": {
          "id": "50e11736-6abc-4866-95a9-8ceadfb74654",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5cd9d3d6-7012-4f2d-877b-5c9e4da85042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cae95f-cce6-4b2c-a3ec-5075a4598bfe",
        "cursor": {
          "ref": "e7fe21af-0096-44c1-88d6-3ea2c94b5598",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5b5569e5-716f-4573-af9d-92eb0c5149e1"
        },
        "item": {
          "id": "15cae95f-cce6-4b2c-a3ec-5075a4598bfe",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "77261cb3-6646-4122-840c-16edc05de281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0d9433-e9e7-48ad-a0df-f2b53008c9b6",
        "cursor": {
          "ref": "cf666094-30e1-478f-af96-59ee7e5e01d1",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "914ca176-b121-4f86-82cb-a18ce7fdec8a"
        },
        "item": {
          "id": "bf0d9433-e9e7-48ad-a0df-f2b53008c9b6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7243b0b0-fe09-4433-b466-f0b02ddae277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5878e1-8450-4cc0-956b-71c4341f3ea6",
        "cursor": {
          "ref": "de2288e2-2eef-4098-9293-8f157aef4345",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6acb270b-56ad-4f00-ae10-109f609f3492"
        },
        "item": {
          "id": "0d5878e1-8450-4cc0-956b-71c4341f3ea6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6498d608-e0ef-48df-ab9e-fe77325aab7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3481541-f951-4a30-b815-666dd694634e",
        "cursor": {
          "ref": "7b6a891c-efcb-4126-be54-f9144f8e100b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "37c4c4a2-d06c-4efa-a8ac-447e69f02df4"
        },
        "item": {
          "id": "e3481541-f951-4a30-b815-666dd694634e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "422a37ef-3dbf-4505-861c-5178dad6efe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642e1932-c731-4645-b7c8-34f20e849c9a",
        "cursor": {
          "ref": "db953dc1-9fa1-429f-b45c-3cd9880e9433",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8e152db6-d56f-4704-a57c-012d39807edf"
        },
        "item": {
          "id": "642e1932-c731-4645-b7c8-34f20e849c9a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b1cf01f1-a233-4c79-b3f2-35fbcb3ce61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310065ac-731f-426f-92cf-c270a2c5285f",
        "cursor": {
          "ref": "b627dcfa-185e-478d-a937-aa8d573028c1",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5509abe0-f25f-40a1-813e-424150135bcb"
        },
        "item": {
          "id": "310065ac-731f-426f-92cf-c270a2c5285f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0911a14f-d794-46db-b6e8-672187db3e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e84a3a7-d373-4e2a-bf5d-4d5cc65487d0",
        "cursor": {
          "ref": "0fbcf222-a9a6-4c87-bc4b-99c9b30a25e7",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "241c7419-b5eb-4f1f-ad97-ad51fc78a24f"
        },
        "item": {
          "id": "8e84a3a7-d373-4e2a-bf5d-4d5cc65487d0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3e9d0446-fb9b-445f-bcf0-4365cd9510ce",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "d5af4068-7d36-4764-97ac-6ba6ce1f6b8c",
        "cursor": {
          "ref": "c7d9e5d3-4b10-4f64-aa7f-1dab6a8d3899",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "72454ae5-c286-4e12-9611-57311ce9aebd"
        },
        "item": {
          "id": "d5af4068-7d36-4764-97ac-6ba6ce1f6b8c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f5922800-82dd-4d40-8595-2a3e6bc4c9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a021ac5-3609-4590-ac5a-09d7a6e82bf5",
        "cursor": {
          "ref": "d4ff28cd-0e0d-4f21-bd8c-0d57988dac6a",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4bd91f25-e3ef-4ee7-883f-3a35d01c0f8e"
        },
        "item": {
          "id": "9a021ac5-3609-4590-ac5a-09d7a6e82bf5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e5cafe0e-5ff7-4a36-976d-3baaca71123f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cb82c7-f17b-40bd-9e16-a73b88fdb926",
        "cursor": {
          "ref": "de59f5ff-593a-4bb7-a14e-996e2de46ceb",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1e23d0e3-3c1f-4cac-af76-44ac231fbcfa"
        },
        "item": {
          "id": "56cb82c7-f17b-40bd-9e16-a73b88fdb926",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "25bd04f4-0133-4bed-b72e-100f6e61be39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56175e16-0167-4e8c-81f4-b216dd0b8766",
        "cursor": {
          "ref": "4bb99422-9935-4dc0-841d-9ab79f3fc8e9",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9dae1e5e-9e6f-4c28-a8a6-961dfb72bbfd"
        },
        "item": {
          "id": "56175e16-0167-4e8c-81f4-b216dd0b8766",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a3de1bd6-f9df-4cfe-8c4c-7c596e7181b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25e700b-3d8d-4142-8321-979858c1bb72",
        "cursor": {
          "ref": "dbb84c56-c915-4498-b0a6-b6ac5eeab337",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9eaeac01-a327-4ff7-976e-737b482e43e8"
        },
        "item": {
          "id": "e25e700b-3d8d-4142-8321-979858c1bb72",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "33577f3a-3128-4cec-98a4-acce522187c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78da8336-cfe3-4557-a8bc-0a393d60f472",
        "cursor": {
          "ref": "a2c604c8-b1d7-4923-9da3-528875dc3759",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6bc3a7bd-8407-4789-a7ab-8105c5d7222a"
        },
        "item": {
          "id": "78da8336-cfe3-4557-a8bc-0a393d60f472",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6778946b-40b2-4dae-9ca4-e49827e365e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf63d0f6-14e8-460e-9bdd-02c8fac9a8d7",
        "cursor": {
          "ref": "a9d9db06-c0e7-4c00-9e08-9a6c3dd8a7a4",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "878b1936-7dba-4ab8-9c69-a297fe56564b"
        },
        "item": {
          "id": "cf63d0f6-14e8-460e-9bdd-02c8fac9a8d7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "42aee279-5f1a-446f-8957-91f9daad12b6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "2577d712-8c4b-4a84-b13d-a49a45b6f50d",
        "cursor": {
          "ref": "fd6f2444-9a32-4443-8c4c-ed7b20e56a1b",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "58f62639-2be3-4492-9e90-d427845f6453"
        },
        "item": {
          "id": "2577d712-8c4b-4a84-b13d-a49a45b6f50d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6caef387-3187-4341-9e9e-58cc417b9a44",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 23,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "1d7705ce-3234-413d-ab79-ffa0a984325f",
        "cursor": {
          "ref": "0000ab1f-c1ee-4bfd-bdc8-b73027cb96da",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "92cab11f-065a-4bd2-afb5-2e1408472417"
        },
        "item": {
          "id": "1d7705ce-3234-413d-ab79-ffa0a984325f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "398fa2d4-929f-4874-becd-178d4b9410e3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "f03c9b22-ee24-4032-b60a-b09e6f01f413",
        "cursor": {
          "ref": "6a54d949-fb96-4ac2-9883-5aabaf84cadd",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e37ad2d3-b279-4fc3-be1b-3335111c8095"
        },
        "item": {
          "id": "f03c9b22-ee24-4032-b60a-b09e6f01f413",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "94b45bd4-d7a3-4a2e-aed4-7a0b072547f8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "f7b927ae-bbc9-40cb-8e05-edac4d2d0b7d",
        "cursor": {
          "ref": "bd86351c-dd4d-4eda-8386-24e7eeb444e8",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b39428e6-b7bf-433b-ab0e-c88f19042e00"
        },
        "item": {
          "id": "f7b927ae-bbc9-40cb-8e05-edac4d2d0b7d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "500350cd-abd0-4cbf-b1ad-a8d11f65f50f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 28,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "40fa3bdc-b1e5-438f-9587-04eea19a3ee3",
        "cursor": {
          "ref": "9f0b471b-e757-484e-bab3-241be8223c85",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "20ce757e-658f-4a8b-b594-c923dda49d4c"
        },
        "item": {
          "id": "40fa3bdc-b1e5-438f-9587-04eea19a3ee3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bfd0d3fc-ed8e-4f33-8297-bd7e26f535af",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 11,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "e9f7afb7-5d14-441a-81e3-f3b544d22cf0",
        "cursor": {
          "ref": "b19370e7-bac1-43de-aeb9-fbc85dbfbe28",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8812d3d4-9f04-4af7-b791-2553877929e0"
        },
        "item": {
          "id": "e9f7afb7-5d14-441a-81e3-f3b544d22cf0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6691cc46-475e-4768-8527-a3f8d5f7444b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a18759-be57-4e82-a74f-7cfc62a5c0e1",
        "cursor": {
          "ref": "9dcbfb5e-cfa1-444c-92f9-7e591274fab5",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3f2822b5-e4fb-40b6-bcb6-4a050fe4b203"
        },
        "item": {
          "id": "b0a18759-be57-4e82-a74f-7cfc62a5c0e1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6aec3296-700d-4a28-a56f-3ab05345bbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d805e0-e4a9-498a-bd48-960195c6881f",
        "cursor": {
          "ref": "848c44c8-92ed-4f9d-b9ed-cf0c1e4df756",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ea6e7841-5b6b-492b-a2e1-4491267b6348"
        },
        "item": {
          "id": "66d805e0-e4a9-498a-bd48-960195c6881f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "36498acc-fc28-41b6-be3b-10dba51adbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986d058d-f977-4fb9-a420-ce3b1b9c333a",
        "cursor": {
          "ref": "8d4da205-af9c-409e-bea3-f428e94de4c7",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0479ea3f-4cd2-4888-a10e-e3ce5f720077"
        },
        "item": {
          "id": "986d058d-f977-4fb9-a420-ce3b1b9c333a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "69928521-884d-41be-a66d-efd3982b169a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d614385-9e6c-4bb1-8780-c1c3d998ff1e",
        "cursor": {
          "ref": "bd8d7c45-bccc-4170-bef9-7f7f6f930651",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "10ff7b5f-b1fa-4e5d-a9c7-5cb92f9984c1"
        },
        "item": {
          "id": "3d614385-9e6c-4bb1-8780-c1c3d998ff1e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5ad3a0d7-28ca-4bd4-8553-126547d4a801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61200dcd-5a9f-4ab3-ab89-38fd1325d2f8",
        "cursor": {
          "ref": "529afe6c-0ac7-459c-b450-4777e5aab005",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ee583dbe-17e9-4075-b969-8af0ae099b3f"
        },
        "item": {
          "id": "61200dcd-5a9f-4ab3-ab89-38fd1325d2f8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "654a9e86-cead-4b82-a704-22c6c06869f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749a6eef-f51b-4a92-a725-71770c262e3c",
        "cursor": {
          "ref": "5458fa28-ef5d-472a-bc79-27c2c78ac396",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "91fe6eed-081f-4871-a200-33e27cdc25c5"
        },
        "item": {
          "id": "749a6eef-f51b-4a92-a725-71770c262e3c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3be2bc18-f22f-4c86-9c55-05ef905b0047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c565b7-e83f-4580-b848-cdc9ddf12779",
        "cursor": {
          "ref": "f242365c-1348-4aaa-85e7-c96744340247",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "190ac40d-95fe-4e88-9a5a-cdfa529d3db3"
        },
        "item": {
          "id": "60c565b7-e83f-4580-b848-cdc9ddf12779",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e7a79ffb-96de-4bf3-80ea-573d6f2eb4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0227578-0f1b-4104-9da2-53f003b1fe64",
        "cursor": {
          "ref": "f4157653-62d1-45a6-8850-cd20dd402049",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "080c34ed-c244-4b96-aa1a-ca89d300e923"
        },
        "item": {
          "id": "f0227578-0f1b-4104-9da2-53f003b1fe64",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2fb867c3-463e-4324-8235-d1796105d6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8ef298-6912-473d-9fcd-189c6a450cf1",
        "cursor": {
          "ref": "487dbd1d-697a-4ad0-8d16-37d514087e9a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "71814304-50c7-4032-93b8-865f448378f6"
        },
        "item": {
          "id": "2a8ef298-6912-473d-9fcd-189c6a450cf1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ba8b1dc6-2fb8-41c2-bfed-8d3866ed9f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863f47e4-2be7-4bd9-8b3d-097e1f83c261",
        "cursor": {
          "ref": "27076fe4-b142-4117-9149-6be68a97aeef",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "11bc0fec-9661-4b9f-b2dd-e033ec0a5575"
        },
        "item": {
          "id": "863f47e4-2be7-4bd9-8b3d-097e1f83c261",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8b4b4bd3-b668-4b10-a4c7-cbef051d1c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ab5ffc-1fdc-4e95-9866-c17948898eb7",
        "cursor": {
          "ref": "34808647-ff00-498b-9787-6d41edaaec2d",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "48683b9a-c0d6-4150-bce4-eebe89caabb1"
        },
        "item": {
          "id": "77ab5ffc-1fdc-4e95-9866-c17948898eb7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "be57450e-d823-4dc9-bf6e-08505c67ffac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dc74c6-f967-4912-a8a8-6b316e3ed282",
        "cursor": {
          "ref": "9221e473-311f-41f5-bed7-74ee8a550157",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cebbcdb9-2433-4bc4-894a-1340592cba84"
        },
        "item": {
          "id": "a5dc74c6-f967-4912-a8a8-6b316e3ed282",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f4f2948a-1c5a-4478-8de3-8d982f1ff0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7acd93-dae3-43b7-8bc4-a2816d9edcb5",
        "cursor": {
          "ref": "a83fd31f-23af-4ffa-ae42-86a1e72ddd0e",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "653fa70c-9096-4910-bc28-a57d7aa94bbe"
        },
        "item": {
          "id": "9f7acd93-dae3-43b7-8bc4-a2816d9edcb5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5cd953ef-c647-4342-a6ae-5d16bcbf76ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ec6950-8410-44fd-85eb-de610d65355b",
        "cursor": {
          "ref": "dcb636de-58bb-45d3-b0ad-8d0811cd96e2",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e0567689-3dcd-4ff5-a98b-d3893ab66ab5"
        },
        "item": {
          "id": "34ec6950-8410-44fd-85eb-de610d65355b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "162e9941-aab3-42e1-80f7-903ee4707a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b96f23-e4d2-4653-b58f-7cb896d73b57",
        "cursor": {
          "ref": "9f154880-af72-45e7-8f64-f5b66d98198a",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "07cf9ff6-dcf2-41b4-b181-a76dda49cc0a"
        },
        "item": {
          "id": "d1b96f23-e4d2-4653-b58f-7cb896d73b57",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0f425bd2-1f6e-43f8-a631-ac452a8cb496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d34f2c1-7b03-4a42-b0a3-afd6874195e6",
        "cursor": {
          "ref": "4190b167-df45-48d4-85cb-8a710cb11514",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "03c70132-9a59-4dab-8653-886d618d1bf7"
        },
        "item": {
          "id": "0d34f2c1-7b03-4a42-b0a3-afd6874195e6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "eb6337ae-331c-4e3f-aca7-f9c10d6f738a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079cf385-43c6-4a8d-ae60-74d0e2a5fd23",
        "cursor": {
          "ref": "d4fa8643-c075-4d54-924a-5df66a3aa234",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "858ef53e-d719-4f3e-a762-bfdbabc3df3a"
        },
        "item": {
          "id": "079cf385-43c6-4a8d-ae60-74d0e2a5fd23",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ecf507b3-f1e0-4ef2-976d-2cf24898f085",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "db84dfc8-fee9-4d60-98d3-8bc07fd6fa74",
        "cursor": {
          "ref": "60182b44-9a95-43c8-8edf-8aa8a9efbfb4",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1f4a41c5-1675-477d-b93e-39e8d6daca94"
        },
        "item": {
          "id": "db84dfc8-fee9-4d60-98d3-8bc07fd6fa74",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "79edbc70-d412-4470-ad41-680c67dd8f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7aaece8-fd2a-4c8c-b50e-789babdc1c93",
        "cursor": {
          "ref": "6091ca49-2658-4377-9413-8c6537244760",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bb7a4ae2-1dac-4338-aba7-cb3687b05c3f"
        },
        "item": {
          "id": "b7aaece8-fd2a-4c8c-b50e-789babdc1c93",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0a3325bb-48a0-4d27-8862-e8d4196791c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942b0d2d-5ca3-48c4-9bc5-1e2108061fbc",
        "cursor": {
          "ref": "fb5fb67b-582e-420c-83e7-6619cafeb08a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "22cff310-29dc-4902-8027-e324e80a336e"
        },
        "item": {
          "id": "942b0d2d-5ca3-48c4-9bc5-1e2108061fbc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6d567570-132b-46cc-95ba-2c98b0c2582c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac87eb0-fbc1-404d-bd62-e15f12881e5c",
        "cursor": {
          "ref": "445ce869-d114-4e1e-a189-610a67d01c77",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "da000b6e-b5a8-4a7a-958d-695bd609b176"
        },
        "item": {
          "id": "cac87eb0-fbc1-404d-bd62-e15f12881e5c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e5ff712c-5268-47db-81e1-4432639b8dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34c3971-ccef-4c46-bb7b-00391c0519d2",
        "cursor": {
          "ref": "f04308a6-a916-4438-b7c8-ba53101d8707",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ebc5014a-051b-4988-a4bc-868463263aca"
        },
        "item": {
          "id": "d34c3971-ccef-4c46-bb7b-00391c0519d2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "70a7c6b6-0787-42b2-bdf0-9e6017ef66f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cb624f-f8fb-4dca-a439-9a96d6102778",
        "cursor": {
          "ref": "6cbe2628-0d5b-47cc-964c-94d7e974055d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "eb5433ea-295e-4723-abd1-502c167f1a3a"
        },
        "item": {
          "id": "b7cb624f-f8fb-4dca-a439-9a96d6102778",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "eae69dfc-b6fd-4084-8c6b-f02f7b4b0f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da00c8f-9bcd-4a9f-a93b-1a4dc5d65fcc",
        "cursor": {
          "ref": "42766d93-024d-46ba-9546-a71aef1c91f8",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b299d245-857d-4ff3-8e5f-533cc5a76d0b"
        },
        "item": {
          "id": "4da00c8f-9bcd-4a9f-a93b-1a4dc5d65fcc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "707b2850-ba6d-4f46-b93d-60137a1851bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d069a76-584b-409a-8c99-f84340613919",
        "cursor": {
          "ref": "27fe0db2-b5e1-4084-abcc-608aa9f42287",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a66fc905-ac57-449d-ab5f-dde5f3944cca"
        },
        "item": {
          "id": "5d069a76-584b-409a-8c99-f84340613919",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c8c4ba9c-c34f-4094-9493-a952e9bb2eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b50ec14-2822-4972-8b1d-74a22f0f1644",
        "cursor": {
          "ref": "e6311008-1312-4f46-aace-3419664a3592",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "772a6786-c278-4954-af83-83c6f3670a80"
        },
        "item": {
          "id": "4b50ec14-2822-4972-8b1d-74a22f0f1644",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7211b164-96d4-44e3-9540-a01ad880d512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67152c6b-14db-4d71-af5a-16defe5db89e",
        "cursor": {
          "ref": "721e5642-c253-464b-b928-c94d80d520f5",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "52c6e799-1555-4468-8368-b99599aeca1f"
        },
        "item": {
          "id": "67152c6b-14db-4d71-af5a-16defe5db89e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ff5c3d28-1003-43e1-a6ec-e9b151dc3688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca59776-5a1a-43e2-b771-76fabfa2c1b5",
        "cursor": {
          "ref": "79a19dfd-1216-4d24-83a8-96a08b72d3c2",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c74a1627-212d-473a-9758-45652d65e143"
        },
        "item": {
          "id": "9ca59776-5a1a-43e2-b771-76fabfa2c1b5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "68ba8923-27e4-4e4a-a32d-8b079595c18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7dd38d-2756-44b8-9e58-9cc07f2714cb",
        "cursor": {
          "ref": "a49ceb49-c713-49ff-8e37-f58a0ea64eb2",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b94e4cc3-6a2e-4d80-b1f8-a2d73c000ae5"
        },
        "item": {
          "id": "ee7dd38d-2756-44b8-9e58-9cc07f2714cb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bb9cf6d5-62cc-4373-bc8d-8f776bfbc0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e20d86-f869-4e26-964e-4091ece8591b",
        "cursor": {
          "ref": "6a00e7f9-9d0a-4838-91da-171395bb565d",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ecc75994-badc-46c6-9f46-8ea8d72bb6e2"
        },
        "item": {
          "id": "57e20d86-f869-4e26-964e-4091ece8591b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9f11e659-851d-4565-b9a2-98bd9881c299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98c3112-9524-4a11-ad3a-cff22fa083fa",
        "cursor": {
          "ref": "e2cffc08-f7f2-4901-890e-63ffd953f2a9",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5eb72471-ae6b-4361-b882-c0007d5ce4ff"
        },
        "item": {
          "id": "c98c3112-9524-4a11-ad3a-cff22fa083fa",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b68052c5-0430-4a2f-a8f8-ef7597e2c499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c29bcc2-fed4-4a9e-8469-6b78cf10b4fa",
        "cursor": {
          "ref": "20bb349b-c8b6-4e2c-b0ed-9987f8020453",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "706aa875-446f-4527-a6c5-a45b389d08d2"
        },
        "item": {
          "id": "6c29bcc2-fed4-4a9e-8469-6b78cf10b4fa",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "31c55c8d-22e8-4167-a0c5-c98f26503655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6236f083-e5ec-43a2-af2c-59cbb461b3df",
        "cursor": {
          "ref": "36ace9c9-475c-4cad-89de-061516381589",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "39533d24-86d7-4a83-91c5-40cf264fedce"
        },
        "item": {
          "id": "6236f083-e5ec-43a2-af2c-59cbb461b3df",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "be55f2b7-4ea5-428d-bd44-1cb20c4d786e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94756b9-f8c8-408a-bdfe-33da776a87a6",
        "cursor": {
          "ref": "bf31564f-da44-4c9d-a414-e43daaebfb54",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f722fd11-43a2-4bc8-b5ad-126f1af33ffc"
        },
        "item": {
          "id": "c94756b9-f8c8-408a-bdfe-33da776a87a6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a78ef228-f11b-4397-bdf1-e44d17b72aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de7117f-7258-401b-a497-65760686bfc1",
        "cursor": {
          "ref": "df9682a8-cfa2-4f48-b57b-4ca5967fde61",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7f28b92b-2174-4208-b39d-16e513260293"
        },
        "item": {
          "id": "4de7117f-7258-401b-a497-65760686bfc1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9cc6a8f5-ddc3-432c-a275-3810b2b93b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56a911a-649a-4d43-9892-9d97c67aa33d",
        "cursor": {
          "ref": "a24cd42f-8344-4408-acf5-0802ede1f259",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "861c102e-a09f-410c-93b3-9a0062678bbb"
        },
        "item": {
          "id": "e56a911a-649a-4d43-9892-9d97c67aa33d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4a33ecc9-aa9b-429f-b2b4-1bfc7fd22c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53055045-e6d9-4117-b8ff-36f2693b419b",
        "cursor": {
          "ref": "bd90f093-fb89-4c81-b1b4-f07226f907cd",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a38cb994-a0f0-4a22-a49e-0fc7e7373d5a"
        },
        "item": {
          "id": "53055045-e6d9-4117-b8ff-36f2693b419b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c25a1a1f-2807-40db-989f-89d9fb2049ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fd754d-5327-4570-badc-90ee6e5b9a21",
        "cursor": {
          "ref": "fb3ab1be-0552-4a0f-bdcd-4f55056a5f9f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "32b12ba2-91d4-4ee6-ba79-03bb27b540f3"
        },
        "item": {
          "id": "b2fd754d-5327-4570-badc-90ee6e5b9a21",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "67b45a65-f544-484e-bbc3-adeb4c4f78c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce41af9-7cb0-42f8-a726-cb83a92c0de8",
        "cursor": {
          "ref": "8f7fa3ed-73b4-4024-8397-1220439f6f00",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2cec559c-b6cb-4b95-9150-a2ab8b31cc41"
        },
        "item": {
          "id": "7ce41af9-7cb0-42f8-a726-cb83a92c0de8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ed4daa6a-48dc-4e0a-aaf1-290b92b9e28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb84d299-ab08-4d3a-97e3-658470a4f1d9",
        "cursor": {
          "ref": "9726b54c-7382-445f-9930-6343fad0b71a",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7dcc254e-bc15-4af2-8423-79a2c2f0d764"
        },
        "item": {
          "id": "bb84d299-ab08-4d3a-97e3-658470a4f1d9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c8c31aea-c6a6-46dd-b6a6-8c2e840b370a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfe1004-805a-40b4-91d7-a75fa3e2ccc6",
        "cursor": {
          "ref": "a5c51dce-4a23-44c2-ae84-dfba75941844",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "34908df2-3cde-4e82-9ecd-d6ce7c7f1695"
        },
        "item": {
          "id": "ccfe1004-805a-40b4-91d7-a75fa3e2ccc6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fad96937-a7b9-49f7-879c-e621543298eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4d85a0-8016-4b34-b631-74cc6580dca5",
        "cursor": {
          "ref": "927393d3-2081-4489-970f-02d7e3728d4e",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e325cba3-b267-4c3e-9053-8ebc1e1d7b79"
        },
        "item": {
          "id": "ac4d85a0-8016-4b34-b631-74cc6580dca5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fa0badf0-9d21-40d5-aa65-9e614475e34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18b6c5d-27b4-4735-9e8f-50666057593f",
        "cursor": {
          "ref": "c2d5506d-c787-476c-b565-5c696efc2e94",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "90385b02-18e8-4c2f-8113-3c201f440b93"
        },
        "item": {
          "id": "f18b6c5d-27b4-4735-9e8f-50666057593f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7b093a88-5ac5-44fb-8a5a-c710d5fdaf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1deef4f2-b414-479e-8010-20331946315d",
        "cursor": {
          "ref": "8d62353f-1cb0-4333-8403-6ea01cf5f34b",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2eedd766-614d-4bb6-a0c8-96e9bece511e"
        },
        "item": {
          "id": "1deef4f2-b414-479e-8010-20331946315d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c75f9136-ae38-49e2-99a0-dea9370bafc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6a20a2-621a-40e5-a5d4-3955a5288764",
        "cursor": {
          "ref": "6173dfa5-170c-4445-a4ce-23841b95aa8a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f6797df6-e6c2-4338-9e02-048addca6ff2"
        },
        "item": {
          "id": "7e6a20a2-621a-40e5-a5d4-3955a5288764",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "374a5cfa-8ed0-49c4-b464-2478e1fa06c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e36c946-acce-4371-9684-72a00b9b43d3",
        "cursor": {
          "ref": "ed920c6c-dd60-45d1-ae67-4025aeb1beab",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2eb25ad5-6be7-4a44-81cc-b3fb68d7adbe"
        },
        "item": {
          "id": "9e36c946-acce-4371-9684-72a00b9b43d3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2ccabe57-752a-4b5c-9da6-13fd9b510236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06b5c61-c1ba-4460-a32d-36eaf77df01c",
        "cursor": {
          "ref": "760c9ea3-ccbb-44f6-8689-72f88b1babed",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c609ad94-8ad2-4331-907f-5fa7ce0940c9"
        },
        "item": {
          "id": "d06b5c61-c1ba-4460-a32d-36eaf77df01c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6baf2244-8560-4c4e-8428-1b7aee82e722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9170e524-13d6-43ca-a748-c8bb2973c0f7",
        "cursor": {
          "ref": "424d13d3-14fc-49e9-9b5c-64a3e419d2b4",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "25c4d03c-49b0-46ce-947a-3b57f107e827"
        },
        "item": {
          "id": "9170e524-13d6-43ca-a748-c8bb2973c0f7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f5ad480e-18ab-46f0-90b4-de409d0cd871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7598ec61-eb1d-4230-9df1-0e3b5026cd59",
        "cursor": {
          "ref": "b0731468-c073-4e13-a2e0-cb13fb0b6616",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "743b5e4c-ac97-4adc-ad0d-3c4e972b59e3"
        },
        "item": {
          "id": "7598ec61-eb1d-4230-9df1-0e3b5026cd59",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b4fe58b2-dc5c-4196-996a-ba3082b01c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b27c604-34fa-4b8a-b517-67317602c25f",
        "cursor": {
          "ref": "7ecbc4a9-cea4-40e6-8822-cc76e4530ecb",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d66a9f24-a583-4792-8f67-86e19f794ad8"
        },
        "item": {
          "id": "9b27c604-34fa-4b8a-b517-67317602c25f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "07c54067-fd1d-4420-8272-3c28cdd608b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba8e4df-6ea1-491e-89f1-24ad8b726965",
        "cursor": {
          "ref": "ad61e47d-5510-4ece-a587-ad9499ce193b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e5056762-6ac2-4c8f-a973-537616ba25c2"
        },
        "item": {
          "id": "6ba8e4df-6ea1-491e-89f1-24ad8b726965",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "143e6571-3635-4cf7-94ac-4844c7f35411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffc3c20-5ad3-4a38-861d-5e6bf993bfb0",
        "cursor": {
          "ref": "030b2138-61e7-4b3e-91cc-6115d0a16c33",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "edf7b77b-bdaf-4380-b0aa-a9861f30c167"
        },
        "item": {
          "id": "bffc3c20-5ad3-4a38-861d-5e6bf993bfb0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "38eef803-9bbf-4a37-a9cd-b073abfcbc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01639fd8-f1b3-44ce-8079-0b73b341b4e4",
        "cursor": {
          "ref": "29e32421-82d9-480b-a044-0e525649ebdd",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f653869d-9305-4280-8204-813f06de2dfc"
        },
        "item": {
          "id": "01639fd8-f1b3-44ce-8079-0b73b341b4e4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a222eea8-4e9d-4875-be55-4a0f8ec4a332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048bbeb0-6fdb-4a06-9b58-bc4ea802ea28",
        "cursor": {
          "ref": "e06aa6da-629d-424f-969a-2f1f8dbf1c7e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "82a2b070-1ab3-4b85-a909-945c7e69da68"
        },
        "item": {
          "id": "048bbeb0-6fdb-4a06-9b58-bc4ea802ea28",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "222d10f4-6b3d-4f90-a52f-628933122965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400517d5-b715-41de-b90c-0a94409434de",
        "cursor": {
          "ref": "3542449a-e5a1-497a-bf5f-3e41e2f87869",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "70639b96-c9b4-4219-82d5-20c12b4abf63"
        },
        "item": {
          "id": "400517d5-b715-41de-b90c-0a94409434de",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fc38d636-1034-4d18-97cf-3c84d06b4b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fece855b-94b5-4cd9-bbda-fc5f64cb68cd",
        "cursor": {
          "ref": "f21776d8-453a-4cdc-b615-b61d0936e140",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4141de37-e4a9-40cd-9036-df634c1ef6fb"
        },
        "item": {
          "id": "fece855b-94b5-4cd9-bbda-fc5f64cb68cd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9a754989-6540-41b4-a1bd-e4a3851a3735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09edaeed-77bf-495e-9f7c-cf6d26520cd9",
        "cursor": {
          "ref": "1e3809d0-aaf9-479d-9feb-1fdbc4795e83",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a9c55493-319e-4373-a1d7-366dbfc40d76"
        },
        "item": {
          "id": "09edaeed-77bf-495e-9f7c-cf6d26520cd9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "32636d8d-b777-4707-a56a-34f025ab53a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6350dd-ab54-45dd-9194-3ac94ee648b1",
        "cursor": {
          "ref": "e6b6ac2c-6fc5-445b-ac4e-a77ad00bdccd",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a6866314-7eb1-46ba-aa11-7199c142db41"
        },
        "item": {
          "id": "3e6350dd-ab54-45dd-9194-3ac94ee648b1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c34cfd42-bb9a-424d-8c67-509616f79c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fe46ca-a153-4c4a-8f11-195690b49b0c",
        "cursor": {
          "ref": "418673d0-b6b7-4582-b487-50e1251f210f",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c70c27fd-96ce-4c91-a99b-886989f9dfec"
        },
        "item": {
          "id": "43fe46ca-a153-4c4a-8f11-195690b49b0c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f47127c9-3e48-48bf-9be2-2308aa82328f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641a0c94-578f-47e3-b3b6-7ecb57df5891",
        "cursor": {
          "ref": "d7aad8ed-2040-404b-8bb1-a4730daa809b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a0b9aa14-9f6e-4ab7-915f-e5f98ad5e6d0"
        },
        "item": {
          "id": "641a0c94-578f-47e3-b3b6-7ecb57df5891",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a9e71c48-12f7-497c-983f-d0b0378def5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9deea4e6-4caa-4275-8982-731ccda5c7d1",
        "cursor": {
          "ref": "d63d062d-eed5-4063-92dc-900d5d6023d2",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b83d44cd-9cb0-4975-9f0d-9f80aabd393c"
        },
        "item": {
          "id": "9deea4e6-4caa-4275-8982-731ccda5c7d1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9fc7e6b1-f24e-49fa-9432-738eaf25e9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54804fd-babe-4d87-a680-bf68905cc269",
        "cursor": {
          "ref": "8d2e728c-6dc3-488a-b816-0287add87253",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ab18624d-abfd-4476-bd12-46db78b8b2cb"
        },
        "item": {
          "id": "b54804fd-babe-4d87-a680-bf68905cc269",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "035bef0c-62ec-45e5-bb71-01bc9c2727d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15fb90c-c7f5-48e1-88b7-cbd19d0e2dda",
        "cursor": {
          "ref": "d7f70397-4e1e-440c-91c3-e16bde0b4f2b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2bb06298-ada2-40cf-977d-36a33762d213"
        },
        "item": {
          "id": "c15fb90c-c7f5-48e1-88b7-cbd19d0e2dda",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f901879a-31a3-43b4-84f1-572ce50e5054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a700bc-3def-48fb-9e6d-05806066b99d",
        "cursor": {
          "ref": "e541a586-f59e-4106-b078-553ab3187a9e",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "65966e92-4301-4c23-99f4-579429905f79"
        },
        "item": {
          "id": "57a700bc-3def-48fb-9e6d-05806066b99d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "093295d7-a9be-4fe2-9e44-a6058093b54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a299b10-5b7a-41d8-bc29-2fb442929350",
        "cursor": {
          "ref": "831bfefb-b014-4136-93ff-7c8b178931c8",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f212731f-94d2-4927-88d0-6d61bd442eab"
        },
        "item": {
          "id": "0a299b10-5b7a-41d8-bc29-2fb442929350",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4be59e75-cb16-4ed1-aa8b-c17b98f76239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bda83e-f43c-4832-badd-cd0f7ff42488",
        "cursor": {
          "ref": "e15c3e99-854a-49d1-8717-4ad57f40f1b9",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "16ef3f5e-af2f-49da-aa66-84eb7f81cba7"
        },
        "item": {
          "id": "95bda83e-f43c-4832-badd-cd0f7ff42488",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8d286614-f898-4b53-81db-dc3958b654fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee11a68-82cf-4c9b-b652-d36d0c76b814",
        "cursor": {
          "ref": "92c97516-6780-4ab1-80d6-51c64b15f337",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4982a80d-a18e-4d3d-805c-e55b0205d520"
        },
        "item": {
          "id": "cee11a68-82cf-4c9b-b652-d36d0c76b814",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7c183963-fca6-4c85-8667-e5eb5523bafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baab3ecd-e3ff-475c-9d6f-4f3da73388fa",
        "cursor": {
          "ref": "a712218e-265e-4977-8a5e-9178e3d4b81e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f140ce3c-fbb3-4b7e-975c-ad0081b9a996"
        },
        "item": {
          "id": "baab3ecd-e3ff-475c-9d6f-4f3da73388fa",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "797b183c-4553-4c1d-a8f1-eeef65e726b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d05a93-9da1-4070-9a28-0a8bd5d70f15",
        "cursor": {
          "ref": "d31a37b3-008c-4f88-a4f3-66a48ab0496e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "76e106d3-b263-40f6-b42d-1e80724517df"
        },
        "item": {
          "id": "d2d05a93-9da1-4070-9a28-0a8bd5d70f15",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d006ec24-8415-4bd3-a98b-6b9423569a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca3424e-dc64-4301-8960-53c83b946ae6",
        "cursor": {
          "ref": "88538125-2ee8-4f26-9f98-880a52cd15d3",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ace82fa6-9b26-4783-8096-696a56201976"
        },
        "item": {
          "id": "3ca3424e-dc64-4301-8960-53c83b946ae6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "08057597-6a4b-4c64-8538-773fd08a8a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69470524-1754-409d-8705-61056fb813d3",
        "cursor": {
          "ref": "74a7a9e3-e2ab-4cec-8164-e0b24fad8b2e",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "68f44558-a299-41f4-819c-c0609a732307"
        },
        "item": {
          "id": "69470524-1754-409d-8705-61056fb813d3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "27b0a981-56bc-48f4-bf1e-fa7e6b44e9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca0d090-bbbe-4672-ae45-7fed92aec703",
        "cursor": {
          "ref": "a2200a9f-983d-44b7-8af6-089b4d5342a9",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4901a46c-1036-4af2-bc24-5882385cbba1"
        },
        "item": {
          "id": "4ca0d090-bbbe-4672-ae45-7fed92aec703",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d23f1b2d-eba6-4b1d-872f-4df2f2f1beee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a08383b-3b4b-4f24-8ffb-8d1320d688c5",
        "cursor": {
          "ref": "ec62abf7-66eb-4d8b-b246-3d053d7b5bf7",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "055879df-085e-4728-94c2-b2503f634e34"
        },
        "item": {
          "id": "5a08383b-3b4b-4f24-8ffb-8d1320d688c5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d9761d40-77ba-427a-ba27-2fde8e41020e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d0cb56-2aa7-4ee0-9185-5dad96996306",
        "cursor": {
          "ref": "1ac11bed-88cf-4118-a3d0-60a4d6748646",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0ff864f3-cfe8-44a2-a412-776edf44de5f"
        },
        "item": {
          "id": "e6d0cb56-2aa7-4ee0-9185-5dad96996306",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "038ccd6e-6e7d-4caa-98f7-4f49b208c8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27a9f8a-1e0f-474f-a833-8825bd723e76",
        "cursor": {
          "ref": "0b528635-ff24-4400-bbfd-6a9d91dee693",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a4f5fda0-7fd6-4919-8bfe-607217c3e9fd"
        },
        "item": {
          "id": "f27a9f8a-1e0f-474f-a833-8825bd723e76",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8de90a05-d1c4-4e22-a159-65326b96eaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06793cf-1ae4-4468-b6e7-aa3488c3710b",
        "cursor": {
          "ref": "af210b30-9c41-4a47-a088-ebf0d0600a60",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "44a07e1d-4e7c-4047-9606-0eeaa308e492"
        },
        "item": {
          "id": "e06793cf-1ae4-4468-b6e7-aa3488c3710b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6409e076-78fd-4364-b2cb-8db1decf2be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55566898-d06f-4ff2-806f-b4b9d4e18439",
        "cursor": {
          "ref": "0913f855-7d6a-4c70-98e0-1dde8d7d17e7",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6d26b9d1-e7f4-494e-a15c-e7237f839494"
        },
        "item": {
          "id": "55566898-d06f-4ff2-806f-b4b9d4e18439",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "049d41fc-0b9c-4709-a701-1364271f7ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55417eb4-f495-40b2-bb4b-06b78dc43eea",
        "cursor": {
          "ref": "d1c0e718-4d60-4c62-ac56-c833169e446b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e5e354ef-23f8-422c-b249-539bf2316a3d"
        },
        "item": {
          "id": "55417eb4-f495-40b2-bb4b-06b78dc43eea",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "41a2c31e-cfeb-48df-acff-cf58d43a2504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ae9149-e86b-4fc7-a49b-56435753e5fc",
        "cursor": {
          "ref": "3d7761cd-6b16-4857-b44d-6be13f785b34",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "21a495c8-e541-482c-be49-dde122cc17ac"
        },
        "item": {
          "id": "b8ae9149-e86b-4fc7-a49b-56435753e5fc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "58305430-7f2c-42e8-9b35-479df15e5d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd3a247-8f5d-454c-867a-ded6d75ec354",
        "cursor": {
          "ref": "c2124c71-30c5-4834-ac80-f432934e6639",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cd90a9fe-6fea-4ffa-aad6-c88d9ca6ed29"
        },
        "item": {
          "id": "cbd3a247-8f5d-454c-867a-ded6d75ec354",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "14f7a546-c7e3-4b7e-9d7f-8d4124963492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7634e35f-c220-4f7d-bee2-b1fb56737d73",
        "cursor": {
          "ref": "456d0945-67e3-496c-83cc-e5b510af57e9",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "27cd42f0-3dda-48da-826b-6f56ce1a893e"
        },
        "item": {
          "id": "7634e35f-c220-4f7d-bee2-b1fb56737d73",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "bbdf26a2-e732-412b-989d-407858dd8485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7655128-9051-47e1-ac06-6a62cc1d926d",
        "cursor": {
          "ref": "a1c6e57c-b033-44ae-ab40-81fbc3b7ac5a",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "833f3911-1a0f-4498-88f0-985cd9ba3cd4"
        },
        "item": {
          "id": "a7655128-9051-47e1-ac06-6a62cc1d926d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7ba7d2d4-9202-4de6-907c-88d874ad6ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b35502-c1c2-450f-956f-c2f653030b5c",
        "cursor": {
          "ref": "305dc52b-1425-4d28-8155-ec9cdcf6cb4a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2a43ed2d-4eed-4292-aadb-6ef0e95204ac"
        },
        "item": {
          "id": "c2b35502-c1c2-450f-956f-c2f653030b5c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "606f819c-a64d-439d-9f0b-e2f0398c15b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c094297b-dc70-4746-9dfe-6f5a8a6a076a",
        "cursor": {
          "ref": "c479e5d5-2edb-423b-9dea-62ad3d7cba9c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c53d764e-0e42-4275-93f6-b0f67714a22a"
        },
        "item": {
          "id": "c094297b-dc70-4746-9dfe-6f5a8a6a076a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9c0102f2-1f44-4c9d-9f4d-8268b5f5ef9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffec6ae1-726e-4664-a6b5-0603730bd448",
        "cursor": {
          "ref": "8ea735d4-88e4-45e4-a926-49274068349e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4be82a1b-0381-4621-a5af-8c9510336a94"
        },
        "item": {
          "id": "ffec6ae1-726e-4664-a6b5-0603730bd448",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "33ed85d8-c07d-4770-9fbc-78763203ba00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03600ad5-acff-4321-a478-849f9ee2d526",
        "cursor": {
          "ref": "c1972b0d-66a7-4f9e-80a0-29e14e883b59",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "647af171-988e-42b4-8297-54c12666c599"
        },
        "item": {
          "id": "03600ad5-acff-4321-a478-849f9ee2d526",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "affbb042-5c61-47d8-96ac-89a5526dc924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19cfebe-1ac0-48c3-a1c7-2fbc33237c77",
        "cursor": {
          "ref": "c5fe63c2-2d90-4316-9a1e-e111f066900d",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "69dc0d4d-d6c3-4ca9-8791-c19cd7ad1d3d"
        },
        "item": {
          "id": "f19cfebe-1ac0-48c3-a1c7-2fbc33237c77",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0d932644-dd41-495d-819e-491f8b9741f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a528a9-5db7-46e2-a132-8eabd271e85a",
        "cursor": {
          "ref": "561f36db-2950-437e-a9c5-e3dbb1990d6f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e1f264f5-814f-44c9-be5f-080415e89baa"
        },
        "item": {
          "id": "b0a528a9-5db7-46e2-a132-8eabd271e85a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9e1f4c8f-7fed-45e8-924f-54800b8f86b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733a7111-b546-4a41-8d0d-a83a03438ce3",
        "cursor": {
          "ref": "b5b56136-c6e4-46fc-826a-e9755266509d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ce761af0-5256-4b1f-a39c-30a2d06cbaf3"
        },
        "item": {
          "id": "733a7111-b546-4a41-8d0d-a83a03438ce3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fd1ebcd4-1080-4e5d-9caa-190f89d60f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859eb693-07dc-4f0d-9944-008b71794d0b",
        "cursor": {
          "ref": "d0913430-6731-415b-afde-6e634e3cfdc5",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c12d3d4c-f0e6-4cc7-a8ac-dfcd0d695f93"
        },
        "item": {
          "id": "859eb693-07dc-4f0d-9944-008b71794d0b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "dacfc4aa-58f8-44ad-a20f-7644c7b82f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa53826d-c74b-4b3b-a868-952b7d00a45a",
        "cursor": {
          "ref": "10dca77a-08a1-4252-a77f-8ef39438263c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "53ce4608-0406-402c-bf76-1557d61ca860"
        },
        "item": {
          "id": "aa53826d-c74b-4b3b-a868-952b7d00a45a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "650d82ac-63bd-430d-9e4d-0c8272f25982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cf43b2-bea5-4ba8-9f8a-92d3a6a2f655",
        "cursor": {
          "ref": "ef9442fc-68cd-4d0b-866f-ec59a634041b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1166af97-6697-4545-9134-b203dae70eda"
        },
        "item": {
          "id": "c4cf43b2-bea5-4ba8-9f8a-92d3a6a2f655",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "bd3bf266-b2f9-4d9e-969e-169626387452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99929146-6733-49db-bb60-3eb596e79a9f",
        "cursor": {
          "ref": "5f9e5ffb-85e1-478f-940d-ea2226e948d5",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "522fa4cf-40fc-45f9-940a-fb91ff9e1a34"
        },
        "item": {
          "id": "99929146-6733-49db-bb60-3eb596e79a9f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "654ff0d3-04b3-4e77-b711-21d58dcb67e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956c5fd7-35c5-4555-bc12-7afbd844e7cb",
        "cursor": {
          "ref": "2d7af47b-3e36-48e0-8b6d-62c0e65549a5",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4fb34406-5ef6-4017-b250-dd0b0051a57e"
        },
        "item": {
          "id": "956c5fd7-35c5-4555-bc12-7afbd844e7cb",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d6ca2a9e-1ad2-4603-82e9-e4b8e5323856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbd641b-f63b-49e3-b605-5855e1f09734",
        "cursor": {
          "ref": "b51542df-247b-4b17-ba2d-fec21466bfc1",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4ba8cf66-bc8a-41ce-87d6-b96781113227"
        },
        "item": {
          "id": "ebbd641b-f63b-49e3-b605-5855e1f09734",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d9c6db6a-0ade-487e-bbba-56ea2da757a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe514bfc-9a9f-4db9-a528-6999b225d8c3",
        "cursor": {
          "ref": "a7593d6d-d875-4105-8231-6c450ccbcfb1",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "508f970d-6b27-4a5e-a041-1755f80df4fb"
        },
        "item": {
          "id": "fe514bfc-9a9f-4db9-a528-6999b225d8c3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0849729b-17e8-4a43-ba27-b934f1ad02f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d683516-a134-495f-8de7-9320cc3a986d",
        "cursor": {
          "ref": "7343d18b-7c1f-4a0b-954e-53647a27e6f4",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9f19ad60-2243-42e3-bdcd-31a9c20904c4"
        },
        "item": {
          "id": "5d683516-a134-495f-8de7-9320cc3a986d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9f741612-bc6b-4f04-9949-c6c872967688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b216617-0fd5-4395-a161-2d52da83f90a",
        "cursor": {
          "ref": "e20a9e76-d1c6-47b0-9680-49c485ef8bb7",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f16a01cd-9fca-4d6a-8385-b2c4461896d6"
        },
        "item": {
          "id": "8b216617-0fd5-4395-a161-2d52da83f90a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5ec4c547-135d-41d4-9424-429f62d2842d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b21f49a-9195-4e4c-baf7-dc5b66694aff",
        "cursor": {
          "ref": "10353c04-5e9f-4d09-8708-b1a60d542502",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cc4468c4-cb4b-4c97-912b-9cc4010d8094"
        },
        "item": {
          "id": "5b21f49a-9195-4e4c-baf7-dc5b66694aff",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "01fc11dc-48b0-44a8-a32a-ea2604adb9df",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fd5226-6cc3-4abc-9991-4177ac19546c",
        "cursor": {
          "ref": "e4901f64-02d1-40a5-b56b-5d4ad1ffd5c4",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4945bf1a-44d7-42dc-8b5d-5ab1fdf9243a"
        },
        "item": {
          "id": "29fd5226-6cc3-4abc-9991-4177ac19546c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "686250ee-dea2-45e9-8aa7-acc390326385",
          "status": "OK",
          "code": 200,
          "responseTime": 2734,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "79efa437-f401-4dd5-a5bd-1134039a1cdf",
        "cursor": {
          "ref": "b12d875c-2b30-4223-93e3-773de4578ad7",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "778006be-74a9-4931-b509-e6c10178c1c2"
        },
        "item": {
          "id": "79efa437-f401-4dd5-a5bd-1134039a1cdf",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4e747203-e120-4bb3-814d-1c541ab1bdae",
          "status": "OK",
          "code": 200,
          "responseTime": 2191,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc0c157-733d-4b22-8b9a-0ddc5867f93e",
        "cursor": {
          "ref": "51cca980-fbb8-43b1-8811-33aeb3af046e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b8d855c5-ec19-4c33-aa14-3228a77d7c64"
        },
        "item": {
          "id": "fcc0c157-733d-4b22-8b9a-0ddc5867f93e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e1b8890c-d3ee-4cc6-afd1-1d129dc1026b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc0c157-733d-4b22-8b9a-0ddc5867f93e",
        "cursor": {
          "ref": "51cca980-fbb8-43b1-8811-33aeb3af046e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b8d855c5-ec19-4c33-aa14-3228a77d7c64"
        },
        "item": {
          "id": "fcc0c157-733d-4b22-8b9a-0ddc5867f93e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e1b8890c-d3ee-4cc6-afd1-1d129dc1026b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd10bcd-2f73-45bf-8afd-7c605b8680ca",
        "cursor": {
          "ref": "b40d31f0-ded6-4e8d-9d1b-b73fb3a1823d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f9146e91-1954-4626-9ec0-967197605a62"
        },
        "item": {
          "id": "5bd10bcd-2f73-45bf-8afd-7c605b8680ca",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2aa7ed72-d7e1-46b0-bbe0-fdc1d41cd566",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0590cb52-72ed-4a51-8e0c-da804d9dfedb",
        "cursor": {
          "ref": "d37cf962-26fa-4803-ba39-722a652b6276",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "22ac3a21-d3d2-447f-909b-766f74d4a344"
        },
        "item": {
          "id": "0590cb52-72ed-4a51-8e0c-da804d9dfedb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cff6d7a2-cf14-4132-8250-aa479a32d222",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}